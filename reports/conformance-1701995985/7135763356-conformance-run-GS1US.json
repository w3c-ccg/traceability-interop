{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9950d7ae-f27e-4c9b-9492-1d3120a62804",
        "name": "Clear Cache",
        "item": [
          {
            "id": "edb5b0ec-0ea9-4e23-9ff0-a32a6c487760",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "64b1aaf9-e05c-46bf-a5b6-d21fe322211b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2de74fd5-0a9e-4cfa-ae34-ac60d096a529"
                }
              }
            ]
          },
          {
            "id": "741c0127-acf2-401a-9e45-8456ed5fe4a5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "69cc4ad5-f9c8-49c6-acbd-6af44179da85",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "55ebdd72-9afa-42a2-9354-7135e3fe5c52"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "16dca6d1-e20f-451d-bcce-4f2b585005a2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d4284e86-8452-441d-9d81-169ff1cb4590",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e0d315bb-7dc8-490f-9345-f21c9f440f53",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5781446-626e-4450-a2d0-7c3f27c416b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d7e0d168-2b6a-4169-a172-acaa11b9f76f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f5268060-d1ec-4f0e-a26f-a6928857d395",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3c2e5d35-ce0b-458f-90e3-733895c7720f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3441c10a-f4af-45d8-a34e-8ba3e7e481e8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b5258585-f92b-4cd0-b80f-bc410660b1a0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f5c5dc0-b5c7-44ca-b1e9-e186bbcf98f7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2dd6c2a4-a5b3-401c-a049-8f3a7b6dbd26"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7234e245-5e01-4dbd-bdfe-e4e001944456",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4f6d585f-42ea-46a7-8c57-cdb74aa2065d"
            }
          }
        ]
      },
      {
        "id": "9770199b-f3cb-4eb1-915a-91759014ef3a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "201e4734-8701-4c89-89ed-b7d204f82320",
            "name": "Negative Testing",
            "item": [
              {
                "id": "705feabe-f323-4177-a78a-d33f0b55cb58",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "66108a15-9edc-434a-b113-834ba4a57755",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d802c9c-fa63-4844-a5ac-323d4b8b5b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "850177ce-06b5-48f9-a478-4061ee4a5426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddd9575-6ea1-4575-97e6-14edfac391e5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0220214-7e68-49f4-b037-74a12fa67f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d12399c-46f6-4363-82bd-0a2a106c4b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae7e122-3490-449e-b225-aef91f1184aa",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "585e8dca-a755-4d44-a006-0d64a3c2d2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6365f71a-8e3b-45ba-a7d8-03b2989ebfc5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a9fccf19-168e-4ba5-bfb2-312ed6bf0756",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7590bbaf-14b2-44b0-bbcd-75481be32626",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925f9d3a-92d0-4e69-8082-0fb7c181b8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97df399a-b185-41db-873d-00c94f53336d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8acda7c7-473a-4161-8e99-0c7853dd487e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce909e57-eb7b-42c4-b6bf-78fb2c9892e8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bc25d027-fd14-4ac3-bb4c-936d137ae37c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "587500d5-23d2-4ab7-b9fa-cefaa02809c9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e009d74-8803-40f7-b2dd-652e54cf4c4f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "22cd153d-4018-4df4-9176-80a775f14ebb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82749c4b-50ab-4783-a045-52f394ae238d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7e079c9f-fcb5-4347-885e-d3d427ae9bc8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b1a999e-dd14-4d3f-85c8-019ab55bd914",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f3fc0d3-805f-403f-8515-782dcfb60a9b"
            }
          }
        ]
      },
      {
        "id": "d0fdcabb-02e0-4e38-8e65-18b6920f5123",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d81ef519-be7b-4ee7-aff5-e860988e5e9f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e3ece92-9961-4813-a303-8daba948987e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "17e3bb5e-0b33-4541-bf5e-ccd0d89e5a94",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "227cf988-9f4d-416b-8965-1d5d902f6ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f0378db-b851-4436-8e60-00c6a63d58ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9022388f-699c-4fde-bcd2-4755da8d7c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "006469e9-51d6-4be8-9f0a-4df09729f8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c45aedde-3ea5-4e95-81b0-3b22746d819b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a9ede0-6157-484a-9326-bd866f337dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93c2832-4253-48c7-bdf6-3596deffb255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96377d75-8dd7-43ca-becb-56ba14d06eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8ac9267-8fcd-4069-9230-e6860dfc88bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5089f4e9-3e39-4934-8810-6ec36cdc8bb7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27cc9a12-8438-4180-a017-55d5836c2393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b7bc7b-afc2-4832-a5f2-1997b17d1c43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32661fc1-9492-4208-a2d6-a8f125622b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6857ce04-3b01-443a-9d20-fb27453daee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96da92a5-6b77-41a9-b3aa-444dc8e1f36a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de14dda4-5e6c-4df5-a930-318460e261c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "011035a0-45b4-451b-9a54-85335e5ccf79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d6a8f0-5ec0-4b2e-81c2-03354cd116be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6defcff-bd72-4734-b12d-41e6702c0da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8974c4-3d40-4d88-ba2e-954ce7d04793",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ffb0294-c921-4b4f-9e29-2214d757a25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b04bc01d-fecf-416a-8611-871c69134b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c66b94-0fe9-492f-a1c8-a2aab7fc8a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "668ced98-7449-49e5-bc33-9a3e657ed816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df98fa6f-e377-4063-8917-64a5385425dd",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0cb32af-7ae3-474c-9ff3-581c6bebb424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16e3146-cde7-4f60-9e1c-063655fa5b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e454f45-2ccb-49d4-8007-c6eb6a7d5525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe8cdba2-0c57-4f9b-b000-aa698146d504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece6b017-17a6-43a5-8b0a-92def4ad34df",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50eb9ee-7ec8-4590-8e1f-496a220e4acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88b8f709-ed3e-407b-8c01-4dce6db24ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c958530-4c7a-4ef0-a7de-f111daf7ba6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d5db4d7-fb9c-4283-a756-b6c2bd8d47cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4d5763-0b16-4065-a31f-106b8f1f4443",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f8bb26-b5a1-48e8-bbff-55d766080755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb1a2df-d223-4d44-98a9-6a6d93bf12f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba70e57-f5f3-46ca-a81d-5bce08b8db46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7462338-77e7-41c5-8be5-cd8909d799ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab7bfe8-2bb6-41e3-aab5-ca7fdc2217ff",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a63adb-bb32-4a88-9492-f59b3bfb45a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "733e5746-18b4-40c5-bd0b-088c626a78e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ff3eb3-70e4-4108-b5d2-57d2528ff802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "126cfbd2-2c6a-421d-bbad-4e05e6341db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72da1e7a-a57f-4bbe-aa5f-c4f604c4c35f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf58b35c-5269-4d72-a3ea-4b1fe73f24da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "676de6cb-587f-4abb-8749-390c8ca89341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d826dc-aa9a-4c3f-82fb-85c66fec628d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4806245-6b78-4464-9142-8059d940f90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea150da-7af2-430a-8431-1cfb655ab494",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a8ce08-3ce7-4163-8706-9dc96a53fee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebce4595-f28e-4e06-87f4-da5f8b4a1073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c89cbbb-dcd8-49aa-b5ee-d956cff2d8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba7ba258-3820-414b-85df-66114d1cca0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed13e78-3c65-4678-894c-2f7bf1aedf8a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "859fb998-1e2f-4c12-ae57-ece28685555b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a93203f-dbe3-410d-9dfb-1ffaaf78d996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246d72e0-c583-4f7a-963f-5b59cea8f439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b63ab60-ef9c-48fd-a723-5e0f00fd75d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b834d7b-a67e-4e63-a526-5cf239d22569",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32bd123-4799-44f0-b140-c77712ca4d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45419e45-c705-46ca-9f3c-ea731b002c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb3c3cb-3d5a-4008-a982-56b246dbc2c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f4a6aef-8282-408b-befc-be781da6443e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defa8787-25ca-4b40-8884-232c08c12994",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52a8e8a-916b-40d0-92cc-e59e9b1c20fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02523c81-a5f7-4931-9422-21c957a77c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53da568d-75d5-42ba-9a8b-38d63d447ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9af36907-cad8-4b9d-8a20-f39730e44ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ac6a3c-9a35-4c4c-aab1-21297ef9ce3a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89072564-ea07-496e-a842-d43ef098cb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db67d7b4-01fc-4572-ab4d-56b3a04f443a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f57cd7-7fe3-41a1-b9f2-2ceb4f965202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cad96b0-ccf2-4b0d-b1d4-9edbe86c0c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06671d2-9997-42b1-80e8-8746b1cfe115",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "022b52e0-3587-4307-b071-c5b430b643ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c402bc2-8283-4b75-8d43-e27fc6e65776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399c5d4e-56e2-4493-82b6-177e1acc6c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "286745d3-227b-4d80-aff5-f13f5bfee8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26372be-6b4f-4d8b-a748-c0e3c63b9085",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b96d07-4b83-4957-b0f8-9144aa63ff73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "344c07aa-75f4-4b8f-8621-4d7ef2ccd27d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7460714-0a26-475f-b476-5a7cad4fee34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5364add9-f10b-41d5-9892-4a76ff8d64c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0180c8a6-9f2e-4287-b92f-8148612a6766",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcee2fb9-62e1-44b4-964c-a33e42f471ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e7962d7-992b-4842-aec0-3b4ebbcc5b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3836afd9-93df-41aa-942d-8d5efe1dbb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7216e6c-1d1a-4c5e-8cbb-36efc28bc286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4c047b-6a9c-43c2-b5af-9851c15bce8d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad064153-4e45-4c1e-a175-44221181e31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff2aa9c-1459-498c-8a0d-e641e30e358a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626892d9-2b2a-409b-a337-7d52c3c7e1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "971fb03f-5203-4d72-84cf-1f3194d01913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16cb7e2-2983-4c01-b05a-89f2533c6cc8",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fefd5ffd-0cdc-43ec-ad10-9d0055e5f64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2156d052-614b-4779-bf84-ea98cf5bb6a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81959677-c58f-4e6a-959c-9a3aef1b1299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4371d0a9-1f28-4bba-affc-1e31f5909dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3eb522-2ca0-4937-9e16-fcf1d4408689",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e72158-5392-4f32-8030-771356054fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f5c0f69-d643-428e-9fa5-b5c50b7becac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0807f7fa-b94a-47bd-b017-b145f76e76c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3efb05b-48a1-4d76-b68f-e9b8b0e66103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4475c9a0-6229-47ef-9f4c-b29100073d56",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb77bfc-dd2d-4f69-b326-0130f31dbfc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bce380f-41bb-439e-ade1-e3ad1c5fa9e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a61686-f997-4ce3-9dcd-8af3f72e65e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5540f4e6-f733-4f24-8e15-b9b4ae303477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48539902-58e8-49fd-9ca0-2531a1911ad9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "958a3303-aae9-46b7-bfa3-72cfd96d315e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa04c7af-0eff-4477-b66e-391de971eea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d758372-6ae1-4e8a-bfd8-1a18ef2d958b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "051e5a39-a7a8-45e5-a061-9bf165b96328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fdb331a-4887-4282-8f84-e09646fc2372",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "348a1490-4194-4ddf-aa9b-316480f3fc29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6483dc58-fc39-45e8-9dd9-a88bb4ba349a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0844761-7bc7-4e4e-878c-b797394beafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e8ce0b5-46e7-48cb-b76c-bb429873d4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549189f3-5765-45c3-909b-ab73c60d7904",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae35b144-3bfc-492e-adae-5443ce7b5f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb1e182-55e2-4e75-b667-c21fe3af3408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd9186d-100b-4f5e-98e6-e9a1f6f43b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "780dc516-7038-4219-9e08-a5893dd3fff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623bd2dc-f179-47f4-a70d-67c6a7359601",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed390394-4d13-47ea-85bd-a0cceda4f67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a0b1768-3e8b-45b9-b8b2-87325fa0d7c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c906b98-eef5-4233-b96d-42cff00d9895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f828342e-c034-45c9-bfa1-f3d9297f4f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8c02bb-e133-4f24-ba32-859707ec2fc3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ba746e-c1b9-4d12-8434-aba25e05a48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "955dbc95-ae9c-4ee0-baa1-7ae2a78c41ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be443fe7-4a0a-4ac4-84d1-8be77b28196d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "802eb760-f362-45f6-aed5-3fc331d6dc8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4d815e-a069-4fc5-bb0b-3a8b8989f1cf",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0514baaa-bae4-4be5-ae8b-25ae8a798a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a9e4fa3-ce4b-474a-a9f3-d9c9aae161d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673e2220-a043-40ab-9f08-a7a2e59d737f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d6d4db8-e979-4dc5-bedc-4eb26bbb3147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39829676-f756-4cbc-9234-23a46cd79746",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be9df96-43e5-4155-893c-1e8f649f7fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97d0c899-912b-4746-b64a-2e58ad9ac36c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad4afc2-d31a-4851-80e3-12f663befae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "636dfb0f-4f8d-41e6-8524-9f7af4b24230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d1bf09-ba80-46f1-abc8-1f1d6dc9f98f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dabbd1a-df11-4498-bb16-2aca6d5cc83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac4daf4-8b37-457b-b09c-024b2e721b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea63283-b44c-4996-b36e-f812ee3fba44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1365d682-5e50-4447-bef8-04d53962923a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5409484b-0646-40a3-9408-7a7c63366fa2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc5b292-2118-4705-8673-5ee096dbc937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54659e7d-2c33-4131-b291-d5205dcc1c6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4ddb02-4ec8-4cfb-b89e-c3815c297860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f69e3327-85c4-4de5-8a53-2da04328b235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2996c04e-53d4-4daa-affa-6f2d0941ebf3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2956ad61-efc9-45fd-8b06-f1218fe04204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d906dd6-c4fa-42e1-9406-144b3f72514f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c615a8-fe7c-4819-a880-0822ae62f11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c31ddda-a92f-485a-bc61-a65a0561936c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3157b492-6b49-4a89-9626-5ebd2b7ba89b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a683de24-a520-4821-b7ed-e7ab55ea62e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c138359-d011-48ae-8826-c6c19ef57eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327b2fe3-e078-4557-97e1-3092397aaa21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "94ba4e28-d4e4-4748-99bd-c7000b6c03c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce82d035-fcea-4d6a-93a2-944b8c1355e4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b09e7d-47ee-407e-ab22-c851f625c91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd3ad72-000d-4cb0-9f3c-9778cec779bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1dd3f76-2706-4788-9c57-eb09d14a28d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8fcdc99-910a-4963-9012-26a84ab9b71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a7bdcc-9097-4004-bf56-0a3e2c198dc4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9975660-b4a9-41b3-9908-06c6265959e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00a2139c-b545-4712-a49e-e1006a227cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c78c831-bea5-45c9-91a3-b3ee9ac25cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "502266aa-da85-4d23-8973-87fc993eaa8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77544eeb-f124-4f00-b48b-80ac74dbd6d6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6801caa8-f9c8-47ca-9132-544ea96a0ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f7a35fe-66b0-4fc8-9c4a-bb1d9dbe9439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b410e3-c7c5-4e9c-a963-d09808dfdf77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c8b1c8f-6d51-4e3b-bbd6-6e2000057a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4e94a7-ce0a-4d6e-8485-30fa026134bf",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66662487-f097-4a21-90c2-c49024e56649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2d05e6c-62d6-491e-89b2-0558f9aaa7a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22d7b1e-7c3f-4f26-9c18-07fff06f3199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bfd1649-40c1-438b-9254-54b6d81a73f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23e4a1f-8e1a-4d91-a4f5-5f56abe2503f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bcee54d-65d7-439d-8e95-87a5c3a13590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3568f7ae-287d-41cf-9bd2-d330212847aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c46d3a-f48c-47fb-9477-3efb13ef80db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5eac1281-6074-41ab-b878-54e5d7a760f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf722c86-00ea-447b-baa9-4f576a6a1a96",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c376b2-430d-4ed0-b11a-ef7151855741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9986c5c5-c6a2-4e49-b4f9-c4b6ceb2f75c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92bf310-fa7d-4ac9-ba5a-09bf4d70e4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "308b9411-b8ab-4c6f-b21c-80d69f127f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67493e14-211d-4880-ae45-e95ff3b93569",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9467f822-ee9d-428d-b7c2-c13e6d833220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f799b5d-76f1-4024-b543-d01bebade938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba219ac-2ccb-451b-982f-98d3f45876d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a2a981e-5599-48b8-a7a6-4774576a0ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae801173-be41-44fc-b2db-33397935ed09",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b09b3a-36cf-4c5e-8835-efbb78ed62b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33081551-d405-40df-b7fc-c3bb8fc6066e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75db2042-10a0-4d5c-9159-d7019cb6b53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e3f83a2-8cf3-4b19-b820-e3b94fcb74ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8edab3b-6f7f-4b18-ba95-d07558302987",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "476a32dc-49a6-4554-9b8c-277ca2bec710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc341fd-6c7b-408c-9498-032d3f44e0ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0163b768-85de-47df-ad79-8d90bb81b8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "69a8dac7-5638-4765-8178-9541cc4ff5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd644e26-21a1-4c14-9198-38668dd5de9b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3661d57a-6193-4230-aa7d-68c52f1969ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82178220-09e0-4862-b831-57c1c7943cca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9250fb-8bb8-4db0-8339-fb2d04174410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "312bc141-52b4-4e94-8b46-8e291cee5168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a122b1-e3f9-48aa-b39d-7504d8ff018c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6938628-fba4-426d-a687-927022f07c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f145715-6d0f-4d7c-8c2a-221d0c5e777d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a15faa9-d534-4b51-a611-51a4609331d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f96e6dd6-2926-409b-9c6f-76572ff298a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94d30ad-6257-49a8-9db1-c68cdb37f2bc",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9f17c0-da2c-4b87-a76a-41d9a71e4b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e19b75b-37d0-4965-9891-7e5900cd2a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8122d935-7ee4-4702-b7b4-6752a782237d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "441070e3-1eca-4f86-ba33-fc6d3baf8922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a215f7-ec27-4425-a2a4-7808e621028d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa547d1-4321-40cc-bb97-50ce0b93f69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14efd19f-e7bc-441a-acc6-458e971c3fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1701e1d5-d1e3-42cb-8660-02c75f781876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9249ff8a-fec2-4d7c-aa4b-2b16b99ae5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20a3ae0-266b-4a3c-bef3-2f3555f5123d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b6ab5a0-78fe-49d7-aeb0-8a12b5269c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d21705-d536-4826-ac25-1c4269890801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07f73a2-8fac-47a2-a22c-a5511c37abe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27cc6e50-3952-42b9-beaf-60542355f5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce14b8c-87cb-459c-9f0e-6ade8b6b4ca3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cba8aee-28f9-4aba-8e8d-ef887455b677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e9b25c8-39a2-4307-9319-80c575f57809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21278ddf-85fc-4bca-810d-b12246df48e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "16ab620c-9821-4ec7-9fd9-e9d92d777aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f51b669-1490-41bf-881a-231909774cbf",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4015fa11-b800-400e-99c4-45c4bb5129e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa2c39d-f11e-402a-ba67-04da2b829923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76decb94-4baf-4485-b819-def02ab3d45c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d9aa13-fdc2-42e4-b1d0-8ac38d504031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a218dfe9-fafb-412d-9347-5c35b6eb7111",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced369e7-a2fb-43cf-b9b4-9e390f7f2f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09cab2a-2e44-4e38-bfd2-56a4b34f4411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c2eed4-551d-408c-abb0-1ef41316b19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df9946a3-c808-4afb-802f-d026309a1bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f098b9b5-2021-4ee5-af20-f95391e9e894",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8830c73b-822d-45c5-a8e1-3caa3461e3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b92a3db0-b013-46ae-b509-ee42352f8eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c5a2ba-056a-41c5-9464-2f7b38184377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ba93452-61f3-4a60-8418-1d352466b0c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af623f04-bdaf-4cd4-9a6e-e79c4e8115c2",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bba9ebc-fe8f-4410-aaa6-70739c4869c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57bb08fd-5072-4576-b42f-0828d0a59646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf22fb7f-2967-4ff6-87b1-4463ecfa7da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "12e46856-1ed7-42f6-9c6b-92d0deb5b5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726ff630-66b6-4bac-ab16-0d8fd026f94c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a469e56e-377a-4531-a380-5c3b82fa6f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e528812-05e8-480c-bad0-0647fa9b6c43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67bf0011-1452-4822-9f79-8f91c030da17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d915f73-a5a8-41f9-abaa-8a70e2be3b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954ed84e-83cb-4e4a-8a10-6a8c025c67c1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea6d1d7-2200-44fb-b6da-cbf6600f896f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e4f201-8496-473e-a818-52250c7d07d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac98bd8d-e806-4448-a21a-71160f7e03b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc0d96ed-9cd3-4ba3-bbe2-03ef02195c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f73c34f-724b-4dfc-ba72-2a2949f079c6",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6331bf31-8dc2-47ac-a2ab-5611822b74bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d836ab-cf94-44b2-8db2-5a85215ca8da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3929dd0-fc31-4414-ac0e-9372f9594421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbc73a62-df31-45e0-a66a-426df2016194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2f8fd0-f8c8-4f53-b2f9-3a5c25b7bf51",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebf9ae0-eb92-49c6-8ae5-a0e82f480aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a94459-0796-4af2-8c55-cd096f74f6e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175b7677-e715-496c-8c6c-4129ceb08495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "97750e12-e90e-4a2f-bdb2-b36d7a779706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dcc6b60-af91-417f-9ccf-7a702118686a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d1045a-1e7a-4fe8-84ae-ab361ea634cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c7e4001-3c8a-4d29-bddf-b9a8c64c4f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a43ac0b-f78b-487c-8b13-2512af2fb375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd5b4888-edb2-46a1-907e-ae8b0eaa3d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e834e7b-4fc4-445d-b685-768ff814c738",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10e23e0-978c-4bd5-8c2c-77d3e5b9941d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e470c1ab-94e6-4c9a-89e7-08dbd12d8019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b64e27e-5811-4100-af96-e8ec3b970e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "89666404-5485-4e56-8d52-ffef6c0dded1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924df272-9aeb-400d-86d7-e8531b692da4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2106cd-8e9e-47a2-8fbc-8d93f1463f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c5c9ea9-fce0-4d11-9511-71dc227fd8e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27ae973-ed77-42c1-95a4-357dbbe9165f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6eeec88-a49d-4e9a-8637-b3a814196a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de7bdeb-99c9-4e6c-8e0e-3de2de05ad72",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ada9b34-e138-4940-936e-ac69b899133b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84a15438-a216-45f2-9eb1-6ce931a64bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7811e88-8926-4ccc-ae88-b7b4297dc7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "27549fb0-d14f-498d-bdde-fc25edcebad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d04d1c8-faad-4676-828b-440a24bf646c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a03bd0-fe39-42e7-bc14-bbe001bc318d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e446b1e-6be5-4711-866d-6345478251df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38696a8e-1448-4eea-aaea-7bcde1ab6dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a78e0239-f70e-4ee6-9434-b48f3cb362bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db88bb8-eca4-4962-b8a7-b4b8af9c04cf",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f827ee0c-5c1d-4156-9a54-40ba746b5c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e26270b6-68f8-4df6-ae11-e1c214f4a3b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf8bc7e-bfec-4bdb-8723-167a24f9e5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2beada80-ba54-4540-bdaa-b0edc03856a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f5d7d91-2c4f-4b74-989a-c1f8a5117833",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82cb930e-a1dd-437e-89ae-2c9951bf62b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7d3d1c3-ea38-4db3-a75e-c50bec1f1c40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452fb1d0-a755-471e-92d2-5f3a5d36cf1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f1cc49-f49f-4f9c-9f14-03e2134944fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64bb99c-6139-4e67-a87a-50ccceae1537",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b358c989-17b3-4e8f-943b-fc5505374194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a66870a5-7947-4b71-9667-c86dd216b915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628fda31-002a-4605-bc1c-986ef3b24a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "94293dea-b8c6-487c-8889-2485014cc834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967786e2-e507-44a1-828a-e85f3dc2ec2e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bf6c95-6ac4-43aa-839f-f829489fdda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16ccef83-38f2-45e4-9bbe-1ff0804585d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86604456-30f5-4981-9e50-0f4e53eddec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06d3a8a8-3877-473e-abf6-324216d32550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781f3285-5316-4809-ba99-202cbbce0d01",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6267354-777b-4b44-8351-9df5e53732e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a6ab74d-a1e2-4ddb-b57c-463f2b72f749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb5001f-3872-4432-9e9f-5068420ade7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69ed3ca7-e4b0-4b61-948e-748cd8a89e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3452b276-e56d-4ae1-8f94-fa90719b2f00",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "990cb630-4c36-4141-ad92-97a0da22a79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff17b1e7-bc2d-459c-b1bd-cd02c289d842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67c0683-d034-41a7-b523-cac5b55893d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f96b78f2-5b82-47d8-9d40-166c9e4f9161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034650ef-3f33-4488-ba19-ae501ea2937f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "485a581c-2437-4b37-9078-ced460727ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a522c36d-498b-41b1-95b8-f02442c2152c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c52bc1-460f-452d-bd63-683ee72e5111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffd9dce5-ce81-40dd-8032-eed44bbaf7ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dca5f68-6af9-40c4-a47f-d221f6a35b8d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a86a693-cc3f-4e37-9a2c-98c0ef248fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a92c2ab-6567-43c1-bef2-7cbbcaa290b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b25ba6-de79-49e5-9fb9-55c0ffcc2272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "27b52fcf-1564-45e4-8669-c840eb8bc443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2383f590-f85c-4eb3-bcba-53773e69e569",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b470858c-af25-4914-9874-e37411d8fa21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2608a241-9865-4028-95e2-ad3f824724f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3875bf1f-d1de-4152-969f-89519b577013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "245fc711-f8fa-4c47-9f83-58c5b042a162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66fa6c6c-4d71-47b2-9a12-834b3e8aab81",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e915900-c5b8-4ae3-9b24-4407c1ff6dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "006242be-3309-4c73-9d28-caa714cba0dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d43b16-6cb9-4f94-959e-1894cf9db459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c956665-d161-4ce4-bf68-c36594c7ec8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0855c2-7f7e-4151-a59f-1ae3557e46a1",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c4e8d0-07ec-46a8-95fc-4df4dfa9479b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1026bc9a-6ccc-4901-b296-2c8f71896723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dff57eb-7816-4c88-8c43-afc692e9e48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85ef94e0-5a57-452d-89df-3091ccfb2233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ccd939-4ce7-49cb-913f-eb6e2c20e618",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98cd8722-fea4-43a2-bbce-bd1a1de6037e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "347a83f1-bac9-4a75-8d65-ee27b73eb5f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59fa952d-8537-44d7-8916-f4a7e6f03ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa25d0f0-2b60-4eaf-a485-17ae071e97f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc8072c-cde6-4982-996d-8790c2a93019",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "090c2bd3-b339-477d-b91e-1a377a2469c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46113303-9254-413f-b9cb-51ba6837cd7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b634720-115b-44c1-84d3-6d6d5c1294cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "499b5f79-17a4-49b7-a40f-664d48ecdee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c8885c-c9b5-4800-bca1-92701844dfd1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47616e16-260b-4f52-9677-569b5f462b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "914cd862-acd1-4245-bd77-ef7f0ba2eb05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e167258-1280-48e0-a1f3-490f99ed927d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "92d895e3-b1f0-4142-909a-722dd6cef55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a70a240-3994-41a9-9bb0-e49c04273b1f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4d0836-2670-43dd-a41e-2e620f98fd8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a283da-9003-4e3b-841e-a8de08558778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8fd95d-f0e9-4191-963d-22aaba774e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82d07c12-35a6-4384-9225-2b91c56d3c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a730ed3-d429-44a8-a667-89471992ddb6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "528a21e4-e2db-4217-96e8-dc3ce9048bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2679fdf9-ceab-470e-91ae-d8a1cbbad7a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc274cf0-7b61-4ab5-9b3f-f8074e3ded7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03cd6e4a-ca82-4350-be1d-7d2c99cdf174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f690e3be-afa9-424c-90a1-a2d76255a6e4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f3499a-2f27-4960-8fc3-fb0608abf592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1557a897-7e68-49c4-bb69-e72d508546f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7603cb-c48e-4099-81fe-13cf120c9b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e134ba55-2985-47f1-a0f3-3007121d7d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c0ab76-9d13-4116-a5a8-a85e30d62165",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f950486f-c695-42db-bde9-e49979730996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a963545a-9759-48ee-9934-a976da323b33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde20c4b-725a-4be7-b691-0e13f86d3a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f239da0-8758-468d-a181-fb393427800c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99284932-d902-48c6-a0dd-8f791c752237",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d00e29-965a-467e-8286-6fe2004c4032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b11c3fea-30fa-40b9-99ef-6c619308edf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe6929d-3d61-40ae-b6ee-62b3dc478315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4829b251-655b-4b95-b9c0-660174122638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1ec39a-3498-4606-9832-13563fb65518",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94b2102-f15a-4ff5-a6d5-3378106375ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "254c2333-a1f6-4d0c-8e5f-1cc10b079939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30daf4a-4ffe-4b07-8085-d16fc4a3b7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "20fd621c-f9d6-43d2-a56c-44bf0a99a425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5202dae-2a5e-4de7-a985-7219f6b21b33",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0055e9-29f9-4c00-911e-521a04bcecae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "229220e9-57ab-4b7a-b768-43432887e79d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef134302-aa31-4c6f-8468-bbe22c86f261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45a43815-709e-4e62-8726-d50ddfa92775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553009b8-dc28-4a00-9559-037799936517",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b978f8a5-3915-40bc-ae6d-803bc5de1f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26439a1d-af70-435b-8ec8-2e11aaf7a927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0450e6e5-dde9-4ee1-b999-c5f466cb9c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d52a2a81-9adb-40b3-ae9a-b1f4317fb3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983fa200-1a35-40d2-a8bb-63617f1be370",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5868068-e3e1-40ac-a15c-b5b2f9a43cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f1f745-2ddf-4df9-9794-afc3efb6de8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c9db11-30dd-4c82-8d85-a689284b0cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0322cc02-1537-423a-9636-ae1e8b191734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f1e391-69dd-4d37-8f19-9993f76dca5e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d2968f-85c9-42c5-852e-5dde0dd1a1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3565e65-94c2-4470-9825-b9af9c1fb4e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939e1c52-74a2-4b70-820f-4235fb53a1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9c9d3ff1-66bb-4f1a-9852-a301d5901247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc682e8-6c39-4b9c-b7e5-9f0618f9f3f4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f061ccb-4168-41c0-b8db-b2aa2c35f027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af88c72e-3c24-45ca-95f6-59769d991c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb79f79-850e-4888-a830-f8a85b18d11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce6a437a-c780-4798-b4f3-69310b7cc7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7503c456-06e9-4494-843a-3661751244b1",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42661156-7836-4f81-bb6c-ca609cd7bf7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75589de4-87ef-4171-8003-95f5da8b3c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18346890-a2ad-442d-baac-2c1dc2940411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8bda3b3-91d3-499f-9b9d-292889e1c155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f29aac-16d8-4618-89bb-13dfb345076b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b0aa82-3b58-4c5c-a41a-d4aad3322f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a54d45b-8e07-499c-b382-0ee2e9ddabc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9dc91e9-13f1-4be0-888a-0aa419547bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1496e3e4-a94e-402f-827c-361be4a95d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3ada11-94b9-4f89-a849-dff147af7214",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3811a3-62c7-47bc-b721-bf579698d527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9daafcd7-fa5e-4d9f-b808-c2e3407d760d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed19e3f-be53-47d6-b245-4d4c71acf7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef4d919e-9088-4595-ba39-e41c1fd60680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ab355a-e65b-40a9-884d-bee5aae01de7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28beab92-a578-4920-b32a-0cd9e009543a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acc4462e-1284-400a-9ed8-4d3be31c379d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85917586-c8a4-401c-bd6c-e52d1f6c5397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2fc764b-cc6a-4825-b7d7-5b490240c000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c137d8-3fbd-40e0-b1c8-47fecf8add5a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "781f3f25-0fc8-4f20-8af3-87530a3bc539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e41da07-7684-444f-a069-220d68d83f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37e79d5-e3a4-4569-8857-f0b1c15c95b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "25c2f4f8-4c55-44a5-b718-c7877a7d10e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f54509e-9bde-46ae-888e-5bc64104c451",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a9b35aa-ed59-4778-809a-6048b8b6fc9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c3e24a55-6dea-49a2-a4b4-7b66396bee6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c756cfb1-ac30-4b89-9fc0-f9cd85a9d012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbb9cf56-b30c-4f4b-a81d-377947182453"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ba64844b-2561-4020-9d11-b6c446566569",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2a72936e-fa5f-4d25-8c07-478f67d5c512",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc31fdb-07f0-4eaa-b12b-eb2733790fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "631ff6c5-be79-4fb0-afa2-cd08e7c4b221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9715344-0bfe-4bcb-8043-ed06726c2c04",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "581ac931-592d-40e8-a78a-6f09aa320b2b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c4d483e-6eb0-4c9e-926b-39a885dbf30f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd40b552-947b-4d14-8a9c-4fcc19d7889a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "69d84554-db5f-44cb-b4aa-fa5ae387ce1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e2dbaed-6f76-4aa4-bd06-d538d157d08c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e0458de8-387b-47c3-a794-5f016ec934d4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "825a75d1-5926-4e96-bb51-376fd326073a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2a8633d9-a348-499f-a38e-db89295b33a6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a4edd7b3-8129-4e7a-8d25-961d30985c75"
                }
              }
            ]
          },
          {
            "id": "c785a02e-b77e-4b37-af86-5f45a3bceb10",
            "name": "Positive Testing",
            "item": [
              {
                "id": "390488f7-87a6-472b-8bb8-0a3a9155f7ef",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a55cb917-34b7-4bc3-9f2a-502f6e049168",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09264f74-22b7-4a57-96b6-76abb9f9bd0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bfb68706-c141-4725-b523-ab08cf6e1591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83589d4-2881-441f-a5de-0eaa90b0a8d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c65766d-a259-4315-819d-5d1dcdec7503"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "97af4b2e-79c7-43aa-813e-e1546fdef906",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb95eb43-de18-46c4-866a-55d3d9ba7d1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "542204fc-f8f5-4c0c-b884-dc3597a1c635"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90f25c30-3c75-42c5-83bb-95e6a224aeba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2df17764-8072-4703-9b79-930e20a4ffef"
                    }
                  }
                ]
              },
              {
                "id": "9eb3872c-45ca-4d36-af69-e4caf51ed236",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ebfbc9a-0e9e-4a78-a3f6-d853b0b152a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a292d8cd-5bf4-40c7-9a70-8ab81eb4ac4f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d29f77b9-3eff-4905-b0ff-656519f8ee4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5d008565-d94a-4a21-bed1-331e1654018a"
                    }
                  }
                ]
              },
              {
                "id": "cf74980c-bf5f-4f8f-a5e1-eb9b02ad5478",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2621b50-c3cf-4dd9-8d95-fa7279a62419",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "838bca55-45d1-422c-b3ec-c9b978b88378"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e617d44f-92aa-48f7-8b80-ef5853fcb902",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "27a7e1a2-7e01-429a-b429-6dd489ed9de3"
                    }
                  }
                ]
              },
              {
                "id": "5e5a2ae0-d3bd-4bdc-bca8-33d48ced78b7",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a969b8a-e76e-4654-b141-d7f171161d1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c0271ae-b33a-47bd-9f36-4ce4df4896be"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f67893f-903b-4319-89a4-2ae1a4a0d1e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "dd28bdfd-1263-4c81-b7a4-0a4f879d5ffc"
                    }
                  }
                ]
              },
              {
                "id": "90e1b860-dff5-48e1-ae5e-eb1e5df7d6c7",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c0efc6d-9082-4722-adb5-5aef14ef001b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "beb09544-dba0-4c89-9974-5233f451efa1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a47bdea3-d234-48c7-b959-9916b14ba02c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6f83cc26-8d47-4f84-97b5-dd133c345a74"
                    }
                  }
                ]
              },
              {
                "id": "9984bbed-ba53-4caf-a616-3b3cc66192ca",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b310ab5-bd18-47b1-9359-6f67806ad2a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c5fb67b3-9e93-4ec5-a833-59d31c422c46"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c91ba6d7-6c57-477c-80fe-dad7b3f781aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dcc68e4a-949d-4ad8-85cc-ab9404a1dffe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "86329b8f-518b-49fc-867b-9219e951d170",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "07d85784-f25a-452c-8903-525f30180914"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "844287e1-ef7e-4cb8-8db4-6f77d53a68a4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1dd3aed8-fa27-463d-b741-3b3dda20a3b9"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b19ad81e-27e2-4c5f-84d6-3e52c75e5896",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "dc077a9d-94b5-444e-95e1-5c6a36faad03"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "75bef5f9-66cf-4d25-a947-a380d0c5994f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aed89e1b-fa75-458d-8e31-da464e7237d7"
            }
          }
        ]
      },
      {
        "id": "629af1f6-a0d9-47a9-828b-b25b3236a753",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "223bb86a-8f9b-4caa-a57b-df8d02dab21a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "41863bd9-ddac-4dd5-a94f-b6b2e49abb5e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8fe4a18f-e582-4a96-876a-6f2d76057f82",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "140c42e7-1162-4899-b25c-0f265b77f48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de2f351-c47b-48ed-a0c6-2a82e8ccc25d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92e7989-d821-454d-82ab-4ed1656842d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "26c909da-5437-4d37-8933-a4539a145a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38cde2b-25c7-4df6-85ac-b00c6ded5d63",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c128c202-3c68-4413-ad57-0e874976b80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ff68311-f29e-44bf-a29b-9ea4942f5023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1d711c-13f1-4576-b7bb-27fd1bfa9497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "68b10f26-af1e-4ebb-9c0a-e9cd426fb234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7068701-bdd5-465b-b889-6d2eaf8dc1d4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "314888da-45d3-4df6-b3c3-ab3005389281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ff526e-2ad8-429c-adc7-a9b911b1a890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d2abb7-15cf-481e-943d-542d0c6f6798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9281205a-3c5f-4df4-b676-8df5ef6ef512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cccc7b4-b8a9-4fc5-b113-69462b4b38ad",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b222b7a3-4fac-48e7-9f36-776edf38e20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21035fd3-29f8-4cb8-b880-211f6d20ca26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f63a48-6777-4893-b91d-42a0ee8428e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20ed1ea1-55c0-4b04-aa6e-af613d7979d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77964b86-6718-4ca1-a971-1cacd9577d6f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0be2815-ab1e-4d0b-954b-7626838588b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e8663e1-9a7e-4a87-872e-91e8b727db81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52bd0e20-753f-439e-acb8-795be3b155c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37c0b5f0-0a11-4cc3-9646-081ce9668a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ad5676-b616-4ef1-8898-dd849fa87600",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8529e796-6730-401f-a5c4-26c778704832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0be160-15f4-42aa-9d8f-7e3e5b083617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe09115-a30b-4533-b1be-989b0beff8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c984d898-f690-4b5d-a9ae-b854ef178e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706355d2-0a37-4ba0-acd2-edc9da7345f6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1b7989-3d22-43c0-bdb5-c2ba382a7b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3eeadab-4ab9-49b2-b6a2-9349a5877d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207a1c02-733a-4756-b6d0-4ced7375dd53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d67f766f-1a16-4151-b52c-1aa7edb486a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b47104-2ff4-463c-9818-d475bc4cd965",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac327a6b-8141-4904-83c6-b0246ee357c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ecfde22-1801-4fe0-9e78-cd6a6696860e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbe99bd-8a6f-469f-aeb5-f672122fef02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "55547371-cf37-43d4-a4ec-c6c7cd8ae985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5295ca71-6607-4b63-9eff-83d216ccf662",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f18ae11-1d81-4cc7-96d7-c350f2d2470a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43441447-cbc0-4b7f-83a6-dfb9f4502409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72f4579-bcbe-4a46-8076-fabcdeb6524a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b186f23c-d882-4512-ac2f-da3fe89217c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1390bffb-d09c-417f-b916-c833f293cfea",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335ba8a3-bd8c-4a05-bdce-bb5643639f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5901655-a489-4166-b615-3eb831c443e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "407aaf5e-c000-4ab7-aae1-27aac852d020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da2c77de-9295-4b69-966c-0a775e66d9d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe99ce9-c6db-4c9a-9753-a8c264b0e455",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3756b842-800d-46c0-8d09-4bba1f040074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c23d09cf-355b-4717-a515-620dd0570821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13e740f-3684-4b90-b1d5-a370b3337ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a2406956-c4b7-43a8-92d1-9641aa98a815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603c24a4-d1e7-4190-ba0a-c39b757b9bbf",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf8182a-6536-4d3a-98c0-2787ac7083c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de6569bb-8f30-48b6-817b-e23d02059394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73079819-56a1-4186-ab77-18591b5c99df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b93e9958-0671-414d-b885-c6acdf27cace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b8a770-2e48-49b0-a5fc-9bc673c63260",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef482726-a498-416c-a38f-160bf11ff526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e995c0d-9022-4747-bb86-f03b1c5e3504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c493d06-2053-48f2-a17d-67429e0d1abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8454e47-666e-4833-8c3a-8148c1d7a350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f85512-0d9f-4d31-ac52-b99a6ce28e66",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b98f256-e6cf-433e-92fb-d26a5d0fbb7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a35c0bc3-16af-47cc-85f0-6927f4ad6206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f85b60-7a9b-4d5f-91e6-3dfb29503f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "081b0fa6-15db-4ded-87d1-2b4a720a4092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09eb481b-106a-4ebf-ad16-72961bdb56e8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece694c0-40fc-4df8-94a3-fd9ef3c575fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f556aeb-bb9b-4c7c-8cf5-93ca6a7ce482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a34771-068a-43d6-a95f-4fb708c7ad3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8575dda9-776f-42f6-8994-77780f5548a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda8cea2-2000-4691-bfae-6b228342b2c7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4a4457-0029-47ce-b86e-5d49da83fc2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "505481a1-2444-4873-a176-48d8f6639ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f9dc02-cbc7-473f-94d8-e732583054d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a683d56b-2d46-43b9-89a8-be5cc6d0abb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b151c3-7dc0-454a-bfff-323c4355711c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9391cf3e-fa09-4670-949e-b38370ff0fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c1be8c3-521d-412e-8334-5e651ce04ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498cc289-4c16-4890-9b19-98f9b33ff28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d62761c6-c9d0-4eb7-b534-1f411d8aff97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9361a6ba-1b8d-44f2-8033-1d506f8d3456",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5403a459-8cf9-46ae-8e12-8da8ef401e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b655033-c115-4dbc-af99-aeae5903e66d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360d89d2-722d-4638-ac77-0a2bcd17458d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "61e0cb70-ebc8-4e54-b131-813c47e1452c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03aa149-b6e5-4354-b5e5-d69dc243a83c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47dacfb2-bc15-48f8-8643-3591ea0cbe20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c199baef-83e1-4ec1-9bd5-87663228c9b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd09ea73-ef9b-4799-9773-bf8517030fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58ebd337-8d51-413e-9ff7-0cca3a161bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a2d317-2f65-4ee7-9cb5-b239de045fd1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9957b9e6-d57e-4a21-99cf-9d32e33161f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42931e4e-aca0-4239-9831-a00f5ba3ad64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f491542b-63d0-4101-96bd-8b8fc2c7ec7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec42ae5f-56df-476f-bac7-d67a0ae07b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24e0dbe-5fac-44b7-afa6-430a3e5319cd",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "418159df-854f-49aa-addd-8059eeed2dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acbd98fd-0d4d-4495-b0e8-5eed7ae2bdd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa84632-d2a1-41fa-a00b-2271b00f9fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b64d230-465d-4553-be7b-478fda3294db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a487dcf-b835-4901-93b8-9dbce3c68e2a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db985882-5e17-4d4e-a7ee-60e1bca05345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abde012a-c53d-462f-a11f-741786e8528e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109a4445-d636-4597-b8bc-3a3e30231900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df25ef83-d9c7-418b-94be-47ee1f133277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b6e43b-7226-47e7-92ec-cdf39f10c281",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2424e9-f0a3-4c5f-a446-6463b6a7b648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f2c6174-261c-4185-9641-861b01e4f486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f28615-0979-4c6a-ae30-97436a5e3c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68dc03e7-c4a3-43ce-bed5-adf83cc99ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efdbc06c-f949-4a85-9f0e-f460d00bdd8c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c48dd9-95ba-4079-9997-0e53775edd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a69d6f-e574-4b29-823c-f9e2acfbbaaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb01ea90-7f69-4e1e-84a1-c6212f3bfe62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9556f81f-a0c2-4ea5-891a-eb8546bf4dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b6d729-059e-41d6-a4db-cff8a7cd9ca9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b4c158-91fe-4634-8d37-21bf06c45a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0be7cf3b-fe3e-43d9-8a97-ee590923a7d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388bc689-33d2-416c-9e89-22e3431e7462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51bcd515-fed1-4429-b205-904f926c39b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372429ba-74ee-4783-98de-a84a127f27cc",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f686156d-eafa-4824-a86b-f666a7d74a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce623ec-9191-4fa0-9041-6ffacf3f6d8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5a3433-6d69-4efd-beb5-5cb1bfa1de71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f468ce3-2762-4209-b39c-25230ffca055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9d548e-6edd-41da-8ac6-fca503eed02b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1aae44-a716-43e9-b56e-ab81428605ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4ddb86-70c6-4e66-bca9-f0b47ed964f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2a35fd-3b76-431b-90b0-82e623c7bf89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db39de2b-cade-4ca3-847f-958b83bb95c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65070348-a190-4edc-8045-a75f514dffa1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d4bdd6-eb7f-463b-9ff9-f8e7ccecfcdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9af31208-8da3-4065-953c-adfacdf98441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a94d656b-7aa7-46a0-892a-1f7c251390f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1816d32-c26d-4fe5-8d6b-32de9a0163b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6389bec9-3d9f-4bbf-8f67-dc89d09da992",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d9e787-9715-44da-92c0-a9abe1df2130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc9bf83-0eb2-45fc-a90f-bf1980900aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad4c891-70f1-469c-b8ba-d49e62644b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dcd8784-3a3a-4c15-a26d-966c88b75441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59c28ba-4418-463a-9b8c-e181ca51217d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62c9d32-84ef-43e1-8008-0f559cef0128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "432f2f9e-16ca-4b77-817b-81ca404fcdf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ecb0a1-adc1-4d16-8f19-2a7023898ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21a49dcc-f8dd-4b50-967e-7db129657040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d81ce40-34be-4909-bd5c-e320575196da",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "415fa568-c15b-486f-8365-114c57981237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a425afb-42a7-42b9-8989-66daf6535de4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e695f0-1e35-4f40-9990-d8bda3fe440d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1db1f42-82af-4b9c-8c1b-2389a61c32d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a1ecb9-beaa-4176-bf66-ea90661f27f0",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1bc43b-2123-4cee-b97b-7e1aaf52197b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf946890-6c58-4a02-8d19-cbc24aacae13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2edff174-c22e-4cea-aeba-227ecc9dc394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4051973d-dbc7-4437-9324-0d878e49e804"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f10bc810-8e1c-4336-a617-b23acdb0be63",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cd35dedc-77ee-40a4-aaa5-5f5761d17a68",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576fd993-8104-43f7-aa29-6ae08cc6bc48",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4ada7734-597e-4ea7-874d-93b03c75713c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "218a95b6-14c3-47e6-aff5-00e515d0fa49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "345d231f-9c23-474a-93d5-ee5c5f499996"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa48c048-c229-4cbd-8209-effe1149f6f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "510d618d-c1fb-4a84-8c6d-f38312772e20"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eed3ada2-664b-4c2c-9c15-bdf21e286954",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5710fca-37cd-4272-afd3-b4b394e59cdc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "55811759-67e7-4bd8-b5a8-599ec8fdcc97",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "16273fc5-a008-4f5e-af1b-28abada3be87"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19db36e8-6e5c-4a6b-aec0-23de8b31b143",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1769a165-e512-4e4f-9b06-e232e1f44da3"
            }
          }
        ]
      },
      {
        "id": "4df620b7-3e62-4d2a-97fc-020917df1ed4",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "743fdec6-b4c9-4fc1-8a39-1612dcba2f75",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9f649966-fb4d-4fd0-9782-9d28b5760103",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "364cd15f-7bdb-40c7-b0e1-b60827b0f338",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c3bb6a-7c27-44fb-8963-269771f6f04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cb74919-089d-42ee-924a-730cda25554b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c6cb94-1102-4337-83e9-82c0d7d23178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1928e630-bf69-475d-9b9c-5f8c4106b4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4695c059-d9a4-4526-b3f5-40711d210180",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d2df05-34a1-4afe-b87b-0cb8306bb799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a11fcb7-df58-4609-baef-f094a38a4108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8125ea8-9618-4b09-8066-1396f064471f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a985071-c1c6-44fc-bd7e-99396408169c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4808f9-13b3-4a71-bcba-dc02101055da",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34ea341-b164-40fa-80c0-f2471648509f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd980ae-2a2f-484c-b35f-c943aec220b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0626fd-69b1-46d7-b05b-b43446390655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "504ba534-f882-49fc-9b2e-3adf876d7927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f922cdfe-f8db-4c58-ac43-d50f696b12e3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fd5ff9-645e-491a-b512-f825383897b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f06ad57-7c5a-4ee3-825f-2d1b0c16bfe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80eb44ff-feb4-4652-adcc-41235770945f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48d395f2-fc20-44c8-90a9-12ea5bd820f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a6bdf4-3153-4301-8b47-e802e7ec5832",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb8fab4-3e39-4a3e-9d70-1f22fd4fd217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f35d6a-fcaf-4033-a9d0-1df708e272b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cff8090-7403-4f9f-bbb6-5740322c0073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c80d7553-fe07-4065-8ead-84771289da53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5cfa4a-f3c7-432b-8ffe-08cd359f5a79",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "800532c7-bfb8-478e-92e5-2e11bff21e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c5b900-10ba-465e-9e41-88ee87542666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2036598c-3b4e-4bd1-a8df-b5dca8d3b353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c110669e-b773-451e-a3f9-fcca5eaeec7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d456797-437f-4def-8b78-33f554565965",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed4d224-3d8f-4140-86d6-87bd9f254235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba252721-1279-47e0-804f-71ac62f4cb0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba523c9a-401a-46ac-b898-edf299995f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ff235e-c33e-4e03-8a48-049ba38792b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bdb3aed-f344-465b-a203-b0f0fac4f984",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50110d21-10ae-4611-ba17-8c78de49a0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c493abc1-1575-4e27-9252-2075768e7260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf73c924-2bbb-4f45-b066-3ef6614517c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "28ef65a4-9f1c-4a19-8818-526dfbc3dcde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32402509-d35c-42fa-a622-d8aeac3386aa",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4afc73-f72e-47aa-a249-5caee881be56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0ba3f06-5a33-4c33-a2d0-9ba0732ac48c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019a2bb5-1c37-4fcd-a0c0-8f5307200c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac07bfe1-d08b-4d40-9db4-06f92c86979c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8448e207-b220-498e-bdcd-51c9b2bcfb6b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef080258-47d4-45dc-98e6-d1a956ef3c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "236c354e-b141-4259-a3e7-b75e791bdee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4259de-17cc-4539-aa59-ce2db0551394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf6e34a4-ba49-46ae-888e-4bed1cfda31c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac3a4bd-0179-43a0-942b-a9d07b25b9fb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d07c649-ff9c-49a8-b46f-fa058532816c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02085769-7f63-4a7b-891c-e7eb4510e10f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1562221-7cd5-4c69-9834-74d877e19073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7effbd6e-5ffb-4325-ad49-b50586768e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1c8eb2-31d8-4a1a-b036-07e1036e406e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef41daa-2333-45cf-8fc0-fa4272c62f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c6f8fd5-185b-4680-90d0-06444457c85e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d547764-8705-473e-8766-ddd0acbaf57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b5410e90-820f-4a10-80f2-0df62a6b78db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90963e60-4862-44b1-b586-286dbb7dafa1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5aa5d9-364f-4205-bde8-5de1023cc4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dad1784-85e4-4047-83d4-94062308f378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c40d516-625c-4f22-a046-46e344e70666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3f6bb9b-79ba-4a3a-8241-391a037453c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f037de39-b841-412e-88d7-74c731170ef4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d41dc5-2e2a-4ce8-b6aa-11a1d6116296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10658b9b-8719-4f4d-a496-5f91f96db701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00761ab-c47e-4a71-a175-a77de0c29396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "883e9f51-7718-4dc0-8ba0-ed572f9cb92d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee2a49e-517d-4889-ae27-49001baca62b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7038825b-16ea-4b24-8a47-108c4d7da7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d3db685-cb80-4883-bb41-583c882cb9e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28ce9cd-879f-4156-8a02-448fc20592e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "faca38fc-d3c6-4604-b911-30c10e82d165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a32ea7-255d-4419-809a-9173ed1adf01",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b14d094-5e85-4599-9d8c-9828df6f5d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea365df-0679-4533-8b2a-0332579e9f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69059f7e-59d4-4e5f-8012-8efc8048bfa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a908af4-2b4f-4974-a61b-64c3f1b7a21f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5da3a5-828b-40dc-ba7c-d36dec7dfbbe",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe29b25-b1f2-48cc-ac0d-964c3d6e13ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f370eba-068c-4fa2-899f-4139c1ab3bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6d8fdd-2a46-45ff-9f2a-6b38afcb14a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9eb301f-4ec4-4c77-be18-bf5b7e70f79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d90cab4-8cca-4fd9-b8d5-37f7af0a2fc7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5e3450-538b-475e-b8a0-37614c313385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b8617ce-1cf6-4280-83b1-2cde2b262e73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc92b359-baf7-4bad-a768-29cd21488e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5ad40f6-ccd1-4592-b3d6-8bdc0e899b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca83aee-5994-4101-ac1b-8e5a907a0643",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50d104e-6876-43a6-a937-84fd7eba5de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a1b3454-be30-4311-817e-e6b3d86aaa9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36536e70-895d-476b-b2d5-a76d607ce502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b15ddffb-12e3-4c02-a114-aeeaab2d6d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116af0fe-5dfc-4734-9e66-92ce5ab9e8ad",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dbfe0f8-f549-417d-9ede-a6faf5b398c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab63feb4-759d-42fd-8e47-2994e6c00c7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9923f0-2fcb-4355-b7f5-628f17c93ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2091b57-8db1-44d6-99f2-f0989af07c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c714122-926f-4b87-9534-3d60cd5e164f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a4749b-c733-40a5-a381-c00bb96e1b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e241e34-e427-447f-83d5-3621df570d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51924af-1c9d-4f93-b31b-80a1bdd49f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40ba0f79-9a42-4cdd-b595-3d7f6090389b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53dc7d16-639a-41b8-9061-bc0113ef63bb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e22c6e-d093-4c8d-aee9-797afe8f181d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b30d8e9-28b5-42c6-a094-9b53807b2ae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec748ed-dd41-4b6b-b19c-6e950d220acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44f0f131-69a1-451e-8a87-cb1f78c781cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22bb293e-3b64-4698-a699-2d7bef3c1100",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb58df48-42c6-4605-b512-1fa460c26b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a8cb968-fa01-4ad0-86ce-258893aa0d86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60666c5f-abc2-4d0b-9140-6825c188eb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b2233d-146d-4c7f-ab53-9077da297f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c3bd2e-fe23-415d-a34e-99d6b2e54d6b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19685b8c-36d1-4168-b7e3-b9c7f52b75b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33587396-478c-4763-9236-8ace948fc20d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fd6489-32d6-4b01-85ba-52133bda42fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff9ccb80-83c3-4389-9b01-4389e9327962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4503337b-87cb-4b31-b455-6e440ab4c2b5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0cd399f-561d-4fa3-9bc4-48f8806efe6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fca9117d-8cdb-4432-9bfa-0cdcdd9b5c8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499b84af-210a-4d52-85a5-0486bf81f8b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42f62b34-28b7-4dae-b855-cba8e3616f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64ffe4a-5736-42f6-90b9-a3280c8a09f6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df73310a-bd88-4ac7-a0af-34766744df46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d953e044-e899-4c1a-acc3-950f198f23d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dcb6f9c-0c27-404e-8a0d-d01d1283bf78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94c31197-e16f-4be0-b54a-816ff0a30d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2bde101-182b-4c7b-a3f6-82d02203b1be",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebf238a-203a-4eed-98f5-3ef731e9efd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad57a82c-d950-46e4-9608-52bf5cd7565c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3695f2ab-7922-4d12-adea-08aa4d535990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "997e9ebf-2dc7-4989-a028-4e31617ba9c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55dc5a8-6d26-4e03-84fa-371b19b5ba82",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07302b3d-3219-4e55-ae42-928186eb8b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc75588b-d26c-42cc-9a77-2752769a0aa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36ad066-f12b-46e8-ac25-d347b576d317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "851f4bb3-bc85-41b4-bc23-65f9849c3dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7059492-4a8e-46f6-891b-87c5f89839e0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a27dd03-90b1-4e61-b871-49bad19401ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f60f27bb-4dbf-4587-ae2c-3ef1855d949b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7aba4e-bf86-4057-bb1c-365fae457dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c821e1dd-f87c-4320-be9d-3644aadd31ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63faf881-856c-4761-8713-8dc5414dcff6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d500ecf4-3688-490c-a4bb-9244f28db920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04215bf4-1711-4d86-9c52-290bdcdd8422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9647b4fc-98fc-4de0-b000-c378acd9a5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1cd6928-6dd3-4de7-a902-b73f7bbc832d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a91819-4b51-44b3-912c-2bbd0b2aa2e0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0248794a-441d-4d95-93bc-fb5de95c0624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2edf6405-3077-45da-ab21-cc9dea4d1a57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ba55e0-8c12-43fe-a913-61ce2b87deca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62b0bd26-ea34-4d55-925b-05c80c186348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2220521-78db-4da4-bf15-09d6d79e2beb",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99f0121-4415-4cd3-b8fd-f22465720ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d407b591-6cd9-45b4-bcbe-c3e680608692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a341cf78-ce4b-4d21-ab55-e9407e569528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9deeeb2a-878f-4199-8cdc-8b2158fa2251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784b9f67-724c-4330-8efa-9030d674bcf0",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4da9a6-6ac7-45a6-8377-ce64b7e78ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b060013-bfe6-4331-b7c9-cd8bcd13f235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c321ca-7205-4d90-8f2a-ef523961341f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "977da9de-2ffc-4c3e-ad86-bb65b34f389b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48a460d-4436-4606-9d6c-81606d0be5aa",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46bbb94-335d-473f-9ab6-b00b43a0a677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27306287-12bc-4b7b-bd31-65e46e983590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75148659-8817-447a-ab58-c768f73a146c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6074df1-554b-405e-b134-25b56f1e9976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2858fe52-e642-4893-8b95-c2c005916931",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "961dcd23-b089-4497-8aa5-dc35cdcc6d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8274e518-6876-4d49-b62e-3bfa256b1c44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab8a298-c73b-445a-8295-3828e8611c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98ffe168-8e13-4775-8fa5-da03738377d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba7935e-f651-497e-aded-c626192d1e14",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abaac058-fd3b-4276-a28e-d107d9b789de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ab3081b-9777-4b82-9234-46d2cb6b170d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4579e492-f979-44ba-a1f7-6eaccf856b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6350b255-2018-4afa-b4d9-2311dc097802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89e0ca4-cb9e-4000-8ab6-23752e4994f8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddce554d-b2ba-4145-975a-187f3cbac76b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bdf57d7-e5f7-4cf0-a2e4-908f21897561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed43c4b-d6a2-48be-9b5c-e0d4d538657e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e92c1bd1-7135-4fc7-8253-8ae0ac9df851"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "94eda156-5cca-4ab5-884c-ecdb5dc6bd60",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0527cf86-5412-49de-8cf9-35cf8c2f0293",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea420971-3f9b-42c3-9ec8-0aabf6180e68",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "72fc8a9b-a300-4f0a-ace6-2f415ab99deb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1a4157-ff10-4768-913a-2a5d0a6113c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65283b36-0e60-4134-b8b6-decc641c2957"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5d29156-3dac-4049-afa3-2207285caef6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9d72107-f0b8-4350-952a-4fdc9c2d3740"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "296f13d3-59b4-4a66-8c5e-1f2d37bb1467",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8dca5e0-6a8b-4e17-a3b0-b8a01529c538"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16a52ed1-5421-44b0-9beb-15642a6970e8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c473aa1b-af71-40da-a798-ae59c31c2ee4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9e1af45-d921-45db-9479-4fe3e1d41dd8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f0dec004-cd72-4345-aa2e-34546724ec2e"
            }
          }
        ]
      },
      {
        "id": "98e82702-25e8-41cf-b000-8e7fa8078c6b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b69cbf12-0489-4916-9a5a-90ec63b2cab2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9ceb3253-e2b4-43f9-abeb-22f9c340f8cf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a99a6dd4-87e8-4b82-b4c1-63c976ff3018",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "983da0ce-ba58-4841-aa8b-052bda5b6b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da611157-6e29-4f14-8e31-dcb6e5b24d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c3759c-9b56-4f8b-a8c6-add67d105e91",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a092cb-5c14-4c97-aa50-f6b56c04c224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd6624b6-3b54-4e79-bc92-4878330eced4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681f55a0-68b5-48d9-bc82-c4b2bb732d69",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5323f0f3-45cb-487e-9acc-d7717a0d36e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e2e04c3-035f-4b9f-ae48-372bab2ba878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66d6364-b856-4719-b01f-96c1ee12359a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9663b34-cda7-43b7-aa7c-fd3283b15031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89501197-6a23-4679-909c-a0b90253fcc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eca0d99-3def-4665-ab30-4689919f0bc1",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7dc6242-2497-43d2-b2a6-59f566053e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93580261-39b0-4f3c-9154-7c3902a86353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac22695c-c8b1-41d1-89bd-bbdd39febf5e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "455c70be-0412-4d91-a7d5-b2b6d9aae3ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2abe715f-a603-40b7-a460-42a3c05c8221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ecdacf-0a71-449a-a9df-bdcba496c268",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0367af1-0ef0-448d-b67b-193be2e32cda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf495fc-c2c3-4d88-9230-781336158ffa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaece7b4-7ff7-49c2-940a-a285e2a70dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf61c43-fb79-4188-b937-c71d3bd4bc1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3d2807-543b-4df1-8153-15c36379825a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83404de-b16c-40c5-b17e-5b53fb09068a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7a6f3ba-2db6-4fb8-8d9f-e9544e25369a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "418f8fe9-ee71-46da-bf88-8f64e7fe721a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab3fc4a-f73d-4dcd-9c2e-e901cbbb25b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568bea98-b11a-4068-8002-3f5af7dab26e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f90c31b-4ab9-4add-a9ba-5b4fa2757c23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99316f09-f2d9-4e32-9601-5d727bb62e59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd9de9d4-c9be-44b4-b0db-bb22658c71ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "440de8bb-31d2-4b6a-a67e-c7acfaacadee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5c572e-4d85-49ac-bc22-b1b8cffe6b67",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60daf913-a689-49e9-8a0b-328a9bfa130e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22eaf40e-af34-45e4-a4f1-74490df79a06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39c071f-13d7-4d4a-a040-2b16edd09f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c7ae915-5fbe-4494-b640-9f499e075120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d109f7-a564-48d7-909e-0150e835ac7a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ecf9a53-d2b5-4d5f-9041-1ee37e135617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13e11f25-7e08-42f3-b455-28b8a6a15e6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09689d85-9fd2-4f2b-81c8-73f51c4c7cb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e05dda00-6e2d-457f-aa65-ed78523bb6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d738f49b-e0b1-40a9-9d27-7a0b3a61735d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c417c4-aa72-4f3c-b8e8-94a9f2f60e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b600721f-4eac-4260-8c5e-2573868862f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7f1ba5-1504-427f-b2ae-4bd4f3f3e52b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd178b88-3ff0-4b81-95f6-63a57950a331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88941cf7-e61c-46c1-a1c6-9d3ae0349cca",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc4cbb5-6e9a-47bc-96c0-89718ac1ee00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dcaa5fc-1343-4cec-84d6-04365c517d8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd52b4cd-a46e-4a9a-ba08-f18ca5f48337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07b3c81a-a7a5-4f6a-9c00-d73662c47562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9157cc-638c-448f-8497-1e04621b3779",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e031fe-66e6-4f18-8206-5e32299e1ce9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "920deace-a735-4fb5-8add-a7e006dd86a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0be9692-d8b4-42a0-bc23-9f84281f9c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "926deed9-6584-4ad7-afd2-15661c708ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66454bcb-7ba5-4f89-8f7e-9ff581e4a1ed",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41b1a8a-7457-4208-9687-9fc6f83b8fbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff987b84-839d-4f27-a41d-62264ff1cecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b6c272-6762-46e5-93e3-3c87d5ed1ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acaf27b7-b26b-45f9-b67c-1ffd8c2c3c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3ad12c-c97a-40a4-8d40-9046cac98c1e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9018d87-69b9-41a7-a2e9-1c21e11c535f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48ad5741-3df8-40f3-a70e-9ef8df057079"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf3befb-92e1-43b0-84b9-bb9429d432e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52764e4f-1d61-469e-8de2-88bb2233acbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b9445c-b31e-4031-85a9-15d8a569bf32",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175a727d-5673-4768-8307-4f8ac55e716e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9781f69e-129f-4866-a6b4-707c7fe531d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "139687a8-8b52-431e-8aea-262660ea68f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7266399e-d1a3-4c93-91f8-8145735b2064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3bf9ea4-e0c3-4a3c-b56b-6722dbbfa000",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1f4d22-c651-4b77-a829-055cdb4625f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5459de9a-8eb7-4c36-8be9-4448681bc356"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc076eb-a826-4107-8384-1008be39a61a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1d25027-5fae-45c1-9c86-018c3e2cc681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c6ffc8-aceb-4c0f-88bd-0a32cb0a2536",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85bc7b0f-1740-437a-8743-d1bd15eb5fa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1852a047-933d-4902-8c59-525209ff03d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b45f34-a886-4644-a685-c732d1d65aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb9b862c-4408-432a-8583-205f81135a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb7824b-c76c-4bce-b06b-15a793b3f5f4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810a312b-df32-4ae0-acea-096972a23591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1fa941-98d9-419c-9cf7-791a07b8e9ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d54e313-9b83-4dc5-a833-fa01eb138e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35e5e636-e052-4bdc-8689-7c55657bd284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8ba6d2-6af2-413f-9d56-a7f0898d4144",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780206a1-5465-4f8d-b563-dee9cf9d0502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8dc4df7-5c44-406b-87f7-c1727f5c5238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf1ab47-f665-43f0-b82d-bcdec59b8d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24d0e47-6990-4582-b809-c7ee9cdcbb10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df858bf-fec3-486f-a246-300623b381e7",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e79294-5ab5-4eaa-b783-6fccc5cab3aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cedc06c-54f5-40d7-b592-bf65304d153d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c624c30e-af53-49a1-ac5e-9dafa1738699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ccb979-322c-4b21-a06c-753f4fa1e9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce76f68b-7e98-46d0-b35d-a80829f84064",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225183e6-134e-41df-b2d4-94c652c4dff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8028e462-c792-4812-923c-91d4d1bddcde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd9c0e4-fafb-4e45-92a3-c7dc5b3fb91e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aab3ccc-b027-447f-b411-1fd4b174971e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d1b309-8402-400d-b9d0-e34f84f0a380",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e067fb-62eb-4ebd-858a-650694dcea56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d09ea60-588b-4318-8a11-474e96c054a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab26db06-f3a9-4fce-a332-2b6d38c844ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca3b1f96-fbbe-4997-897d-e1950f4322b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a51e2a-6dc4-4032-8123-01e68043463e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4adcee-477f-4cdc-b6fb-1b457da442c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "205b571d-1254-4749-a622-96d1c43a1007"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f36b86d-199b-44b6-94f5-8abd12b020e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a55def8e-8acc-41d2-a55a-b3798178cc97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6debed-e9c6-4074-879f-28d6382dcc55",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2e3e4e-da10-4292-8f62-78b890394ce9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dd19e5d-1c2a-4c1c-b6ad-9ba986e81fb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "350775be-f66a-4639-bd36-e04cb9658876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6af50419-5d46-4d6e-93f2-b35bf41ca53f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e545b09b-14b5-4b03-adb3-29971c0f9fb9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2723b52b-0ecf-4d2d-8799-e5287940a5fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5d11581-77be-45ab-a64e-cd47078c3ed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c67149-75fb-4532-a09d-79e852080f98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e6e84f4-cfc3-49ef-ad24-06c53e5f6dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2379d2-4c31-4b67-9097-c7ed41ca5602",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3102b1a-8924-4270-ac70-7170efe7c6ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71792c6b-bf1c-4090-b427-5ad817fc5942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb59218-53d6-433f-baff-093d98c296f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94274a74-9c94-45f0-908f-be6ed3db79b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c209df54-bb98-414a-98c4-22fb280ecc7d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2351f93a-e5c0-40f9-99af-2edd8925fa07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb02445a-96a5-4254-8944-d2156fc57d2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f91fba-b73d-4a79-a55e-7c0c6afdc708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcfc3021-8a1a-4ce6-8045-4d7c803456e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5543a44-68f4-4914-889e-35ff17f7b0dd",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b571dced-73dc-4da6-9f17-3a09e9c82db2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0267a6c5-7e48-48af-8869-6ecf3e6f714c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79668165-dccc-4b01-891a-52d5afeeb064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "908c3ee4-fe1c-41c8-8765-f488a8beebf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ccee7ed-804e-4677-b3eb-243680d6efdd",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23130825-e6a8-4b64-af80-1452306ae019",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe569704-7f72-4130-b887-5cee9951587d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "182a82f6-4c10-4146-b4c5-4a681355f245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f787d13-6086-4a79-bcd8-f478c4c24b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d73aa0-988f-4fac-8063-fcb3a2f87726",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006f6b90-d290-414f-a1ec-983118d258cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c562531a-3ac1-4864-a64d-3174f663eadf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d753890-ec9f-40ca-a6f8-504ff3d0f356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae13392-4107-4367-8ef8-840bb236a37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c51335a-303f-485d-aa5d-cc1610bb86bc",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58edce81-914c-480a-9102-873a4fc71626",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e16fb659-0fd8-43b8-b991-dc3c5eac34f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d594b2-90b4-4c0c-ae7f-344a59122ffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81735d96-b0f4-4217-a84b-d85e01d04229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ccf9853-cf6a-4a70-992f-96ecaf53e109",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a917f0-0166-46f2-9272-6be1b81cab95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38e1a97e-adf5-4de8-a1b4-08e91c55f2a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45d96a9-d369-46de-946a-65d1886888f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df0618ad-25b4-4dc2-b8bf-550e2ec93e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4b99dd-bdda-48dd-a4eb-72b8bb90c7b6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a57f4d-fdd4-4b9c-a965-c4dd5f68bbd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c9934ef-8169-4139-be1e-2317937ccf35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "808288b1-baee-494b-b30b-c543da628fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3ce40f4-44ae-4c76-ab09-4c5b467ebe0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f51a12b-5d1d-489b-84c8-288163ed00fd",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cffc087e-8a76-4be2-b437-ece464880ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5596a810-8a44-4cc8-a7ec-59038e157b5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ccb129-c97e-4c27-9833-44163d200695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20060fea-26a6-467c-951d-69a740e7b13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37120a9e-e267-44f6-bd60-a3234618a16f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a5c0d2-1a4a-43a3-ae0b-346e97381797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf4e0921-1823-40aa-b5d0-9cfb021bda09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "244f86e0-d266-4c21-99a0-611ce125c216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a64ae78-88e3-4efc-aa61-a9381e92d48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4825990d-9d8d-4ee7-9c8e-082cc7adc53b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf90bf66-83ea-47af-a828-e24374fd2752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac48b76-c34f-4e97-8782-faa410d42809"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bddfdb1-8538-4958-bc91-cfff43cc6ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d86d63-02a0-4e66-98bb-fa829520fa6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b139c598-2a37-4beb-90db-8b21addcc7fc",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850152d3-c52e-418e-a502-5ca0c913b328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "221ea65c-3ec6-4920-914f-acc082e8f72a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0904c2af-f85d-4e77-9d99-aa8d00aa25f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e716694-0377-4480-8588-6b784c9946d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875d9131-86e3-469c-bfb7-57701f69f367",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4043a1-cdf9-43d8-a64b-89312deaeeed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb8e7d06-7a07-4d45-803c-602e324fece8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2a124f-b4de-485d-8fc4-57f8ad790d26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb8c818-cf27-4b8c-9985-5b3a8330060d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0db682-e45e-4897-af4e-aaecce65e528",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8bc691-b6a3-46a9-95a2-4afbd934751e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b66e3b3d-40b6-4246-816f-8724e8b56ac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a3746c-9aa2-4802-be6e-47a207ef9632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a3f09a-5dd1-469c-a889-bad586dbc0b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c33e32-75b7-4aca-a3ce-64997db5a97e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96ebe0b-899c-4b3a-8453-8545ff15dec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e22051-6ad8-40d5-ac4a-78ecb1c9036d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea8908c-13ec-4141-b7e6-48e0c30dc136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70a01799-705c-45e0-a071-a12e45bacd67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2051e300-d720-4353-abf7-077d86435496",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779ec9e4-2d16-41ca-907b-3b07c0d110e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5005afd-9516-441b-ae01-868a19db8019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3ee820-0d8b-476b-9e0c-c0e777d79f23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c44eb70a-1540-4d79-bd59-f62616283080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03991f60-887e-4ce4-9358-3b8c03cc7400",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2927bcaa-7eef-469f-8371-3eb3a8aef6fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e0705c6-8408-4224-99c7-c3e47db46a2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f52d668-7c25-4b4c-9bbd-1328582a6c54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18df80ac-e4b1-49d8-bccb-83bb9d99a673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7356fc-980d-4e29-8516-114f7d52419e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0723e8a6-3b16-4dbd-afa2-4b49c4f415c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46118aed-31f3-4627-9840-753e223d2dd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c00ac4-5607-439c-bb7f-b480710fd66f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9025e312-d645-4f99-97a4-cef718741d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af06c8a4-2234-4cd3-82ea-62a833c61eaa",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "827e4f69-29d2-43d4-b521-3ab4dfb758a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f87ed0-e79b-48ac-8850-3716ef9950bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2131f57-bb78-4ba9-a226-a8e460625225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5757d34-23ff-4051-bc1e-9cb7cf424635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd6dd21-7e8f-4515-b5bb-823dad4a12c1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560e2412-2c67-43ef-b621-0f14bce59cff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ab5a4e-edd2-4afe-9995-d93be1223ec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad9dd87-421c-4742-a0f0-e37a2bc67a65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f128766-2424-4a30-a2c6-f2b85c26d44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c6647c-daab-49b9-aa59-85d81c7669fe",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d135bff-6971-4dd9-a11d-6742f0cec736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "919c0b56-6d28-406f-9723-9477589fa4a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abf3497-56c0-4d50-abb8-3f4c74fc862a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9629fc4a-842c-4441-a636-3c51f617be2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31f89c9-6a5d-4f2a-94c8-0871069dfd24",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c973e476-bd20-4f98-9aaf-c1a6422da03a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "622932ba-35de-4e17-8948-c4c22dc4bce8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c8478c-9572-40e3-be9a-4bfa95fe267a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e66417-c512-4742-9c1c-a2d260edcbe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c75439b-8a6f-49fb-80f4-8ac6c35fbaee",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed264880-bdb0-4446-9b5c-01abf182ff5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c280592a-af76-4180-90db-0be801681fef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "882db366-06eb-490f-9759-207359d8cdb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dcc25e1-624f-40a7-bc64-fc914446ba73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b11a2e-61a6-49ab-a216-9a746df0ab21",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14110827-5c68-49c1-af3d-8150af03d2d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a77b4bf0-db11-4c76-8323-c0f1d181d28b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7e189b-36ed-44fe-ab6f-d4fc8cf49926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c256980-791e-467a-905a-47700882d717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d697565-13bc-4ab4-aaf0-e78b75524014",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c58f20-6802-4544-acd1-2e8ffb9c785b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "280dfcb2-77aa-4fa9-8aa7-bb2340aee2e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "489df3df-3186-4421-9c72-edafa9c8040d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62f2909c-5bb6-470b-997d-76d052887edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d01a730-8723-4d29-ad67-4b102bedb822",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387d8fe1-e231-4fe7-92ad-5857ef620c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8df5357-ed81-4c06-832f-db3e936f2608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9400d703-4ead-4025-baed-0b46ca45126e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e88e4ac9-bc4b-4122-a89b-d379c2ed2e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6b1f5f-6dca-4ddd-b449-37bc88c1807f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1bd448-be6c-4e5f-ae5a-886977d35c44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b55580c-fe78-433f-8783-5d5df15d3dc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09d1f50-8a91-4adf-ac73-36a6da5e6cac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2448ca5-a4bb-4ec4-bf17-ab7be8ef062b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f4ed3d-b3d8-4387-8017-b2211bdf31d7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a1f7b3-4f1b-400c-ad65-f9c1adbb6280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc511ff-cdb4-48b2-a57b-f7073b651460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d68df9-2c94-4a16-a13c-53b8c2267a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09635bbb-9cb3-46c9-8fd1-1e3886c72a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689274fc-9de9-48ac-a43f-1f93ea386292",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393fe967-1e00-4b0e-ac9d-312e7bc87ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32eeea47-e7f7-489c-949f-1d3a833d75b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63090bf-a605-417d-adb9-50c5c08d64c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb6aef17-d392-4585-b91c-f18f49e90c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed71dd1-e973-4d39-8cb6-d75bfdec88c6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ecbb221-0f55-468a-bf91-6448dfe26dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb9915d0-eabb-43b4-a71c-2661e799c64c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24752a69-6118-4312-bd27-4bfb77f85b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70e96c1c-5b94-4f05-a3b2-e91f119a59d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3933a8-0d64-4fb9-aa3c-0e55a049e937",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7106a679-f594-4a26-a71a-e899dee28fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c40c5bf8-fedf-4745-b345-8b62740afd58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6ed973-f034-4ae5-8936-58e98cdee849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11ea726c-8d48-43ec-8f0f-c6519b411f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0533196b-05bd-4298-bfc5-55511529ae2c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5051784c-c0ea-47d6-b69d-98937e5a434a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b80ca7f-7d2b-4f4a-92d1-f6686ca09db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "531512f6-9807-4f9c-966c-a282da8354fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab654df-4a98-481b-92db-081bef0629ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "899ba060-fcfb-4b03-a33f-d975647630bd",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8a6ab7-5270-410a-9a19-cb36b45a87b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04c59ded-2aaa-4454-ba2e-b0fcb703ee02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4375a7e4-d342-43e3-ac0a-f78bd8eb1428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc1fdb9-a9e2-4973-964a-8fd82edddea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67a670d-56b0-4554-bb56-c321a436a1fa",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50438c26-b7a1-4635-bf4a-134b16199db9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8ec6310-c589-4ff8-938b-7f4bf6a09631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f131c384-8c8e-481f-ab52-de4c9b371b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "167a13be-b98e-4ebf-8102-000a048ae47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "835ae51b-c9e0-442e-8061-f336791557d9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd5e168-a324-4d85-af94-fd37ac99d233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd34ca5b-719f-42c8-9c13-4c9dff176f53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf3c432-be8b-4981-abdc-1e5e7415d25a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd0adf1a-b715-442b-83a7-f254b4085f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4f7604-6f78-4e85-815e-84f2c89cc2e4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a157d4b1-bcf5-4b10-b1ae-6b503a5491cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44779c46-5a27-4e55-8008-912032aebb4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08764143-91a5-447b-9064-353c91580266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d078e7-d330-4e4a-bc64-3c3ad09fc03f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c98ec8-2c7d-4a07-9b30-f8f2262e502d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909b9c4d-9361-4004-99af-615abd61ba1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aeffa276-8499-4650-ad8c-c7c0af58ec96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a06ba6-5149-40a9-b2cf-15569cd84b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "679a8c12-b7dc-44e3-a673-253da8dfc9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c68497-cd31-4c6f-b129-098d1367cf2e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24529e1-6b59-4831-a3b1-2bb48a75a6ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9beda6f-c2d2-4d7f-83b1-d25059fde2ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a032ff-4fff-4854-9ea1-fc4558317505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ece0a055-28a6-4680-80ea-abc760f8392d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d321ed-45e9-4793-bd73-59130f434728",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fd1ca4-105f-4dbe-8eb3-3bff0659d9c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb55d9c1-d2f7-4a6c-a688-e78f7897b50e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f2a3f7-4edc-434c-a4e1-4a2de0fdf158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e98b6c60-0b5a-4397-9488-ea064c34996f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8f93fc-7ed0-4af3-9fd6-55328db197db",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e97fc6-904d-47f2-b000-d314528bda30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cb5b0af-aad6-4ad7-8246-c549d8688a84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d90d149-bf72-4642-93f4-07c88408af99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "486f57a7-6b5a-431d-a4d3-8e5926cb4d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b084407-542a-49b8-b9b1-3e8800a7c402",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c21005-0dcf-4639-afba-bb94b172194e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d776d0a-c462-4668-94f2-cdd7bdac87ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1004724-c5cb-476c-91dd-f70ce0769d49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1aab878-98eb-48ad-80b0-6a39d4e580e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63b8083-b5ac-4c52-b29a-ddad96583cad",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2592f2-eb1b-4726-9734-932950d7bcdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1f1061c-8e9e-42a3-b79a-e7dbd9a0e596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8f6f0f-2a79-407a-9354-d8ab75524a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "897df47c-a440-4b2d-afce-99c1870330e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647177d8-b9d9-458c-81a1-79bccf055750",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b69402-0b9a-4b2a-937d-497c55cd3b19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26028e2d-8ec9-4238-90d9-b378c5602d54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "522e5492-a992-4fdc-aeac-f0fdb8f8c115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bbfa3e0-861d-4ae6-9051-be8b1c91bf0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f9a01e-10b9-4f5a-948b-f3602f2acd61",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11834c9-2ccf-4435-971d-e40fc73b27b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80b375bb-b614-41b0-b3fc-0a31f49b6375"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4574f88a-9e3b-46b7-b63c-80c3f9c29bf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec42a5a-eb22-4ce4-8b82-42004f38c784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13172974-71b0-464b-bcc6-c8dfbcf33e80",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdcfefd2-fbee-4b47-ad39-12a89ee00fe5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0f57e69-7821-4314-be09-fca727c3b30c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa30526-7a30-449c-9d65-d02ef033118b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9ccc158-242a-46f4-8152-6533ea5a8d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491480d6-de39-46ee-927a-f057033b42a2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c01a98f-eb69-40e0-b809-1705e8f1b79c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aefa6b51-81a5-4e14-b05d-10c648335158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ae42d8-2661-48ec-94b7-258cf242d535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a1879e-79a9-43b6-99ab-bff9ae5e46a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a383701-f48f-4a64-a757-c05c1e8b0a9f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e998370c-617b-4ada-be86-5652b10c1412",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21f91fc9-a4f9-4c88-85a3-45c04cd6e74d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfdc9f48-611c-42f1-8081-811ddf675866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e420037e-1174-4262-97f1-e992dff79d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7dcac0-f4fc-4117-9824-e1bfbd93f215",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7f73fb-549b-4eed-a10f-8d52d113c9ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f57f8b7-4ae5-487f-8483-083848b451b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72764c42-5bfc-449a-8877-ae8bb2906f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c532e9-eee7-4dff-95bf-21948b95e358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef78266-af02-4db8-bfb9-28c601d8a4a9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a77ce0-331b-4d95-ae95-8a5b6142ce0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b142a1e-7b16-448d-b369-79bde4a6f876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b360aee2-849b-472a-bcb7-e0f19217f74b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b908e26-9f8d-4b64-bbd6-771073e0cc32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c10ee21-ff84-4ef0-a597-ab96d2ef2c6b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26be8262-7ee2-47ba-b355-44a11b9e8417",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67aef3d4-0369-4f08-b6c0-c8f7333f278f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "960ec200-e13b-474b-b4be-801c09a754db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a00b1e4a-0367-4670-aaba-65bf23c00fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e34963f-b3c9-4012-bbcd-c7e9917a032a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f8b6a8-91f4-40bf-adc4-edd85a72e882",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bc8f236-571e-427c-ab1e-daa007361710"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97a448e-2e37-4dac-ad60-9343f7f4c52c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed1d1f22-0a9c-4d4b-a6da-ffc5ec21ba34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779f2abb-5b5f-40f2-af28-86d2a4a40581",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b78e2ab-f040-47bb-aaa2-759d6f54e7a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91b785b5-27af-45cb-9115-0928440a8ff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f317a991-a546-4881-8f3d-8c8e19593016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc37c8f-85cc-45dd-b6f8-13851dce3dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ac6e16-96b4-4dee-8776-819a73ddb781",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c78570a-39b7-4e5d-b6f8-33b69e5092eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57789c61-cd66-4014-9314-b3e5556e59dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7681a105-d1cf-4ca0-9ae2-ec5cfc8db762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762ab8b3-4cb9-4d40-97de-d5b1a53a4797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5c77ea-70c8-410b-9de9-6601aa452182",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aeeb4bc-1bb8-4307-bc88-59cf8ea5373b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36752c21-c7b9-4ac8-91d4-4ea5027b3d75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b744b0e4-6430-4868-86e8-69340537b433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f4c172d-cd45-4ed4-bedc-b7cef024b2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b026585d-273a-4671-b9ed-9c6f031ed416",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a9b486-0a28-4c5d-8258-d6f2432bf4c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b86887ca-6e3b-41c0-a5e7-cef682fc87fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8f8228-35ab-4a72-b2c4-fd0582b7660a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5390b47-3dca-40df-9679-1378a4c222b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ac2a90-5e1e-4576-9d5d-67b1726d546b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86587822-6301-400c-93a2-a24de37a66f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8904ed5-c893-4314-b2ea-e7871f507417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53fded1a-d74c-49e2-9bc2-98d085cb2bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb979e5-94c2-48a7-9c73-dbc1b809dbc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc991c13-a4b4-40c5-a51e-bb835d348d7d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e87e5f19-463d-4d8e-b039-c22c3f8834f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05091951-27f6-4f32-96a2-07a9fee86bb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53bf1ba-292d-474e-82b7-56d74d71a1fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33e49626-0fa0-43ab-af5e-372ceba3970a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0eb052b-68f0-4cb1-aa9c-c443f5dda6ef",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b54767-f784-4b21-8a4f-f4cfe1f342ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ef5578f-bcd6-4f70-ab54-6fd760289b5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "496a7a91-76fa-4207-8687-1bb97247b73b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5bf0c6f-03c0-419b-bb39-ec2cade3aa46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6f6b0f-44d3-4d78-b785-2e869208cd9d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17220b44-91ee-4532-8ae2-39f26566ad97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae9836a7-22f6-43fa-83c3-d644ace9feb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9d6ccc-53f1-4ed2-9abf-0cf3df80e14d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d995a7-4acd-41ee-a7db-5631e88420bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0834d7ea-c854-4564-b3a8-44773273a896",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c883135c-0ba3-4a3b-ac8e-0202c7b43e0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd0916c8-c005-4ce2-ac69-585ca846abf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e63433-8826-4e63-88dc-e62d801ca700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2275d5f2-c795-4af2-ad4b-a5f8a0c068a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2904f5c9-70ea-4d9c-8568-163482087f8b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1991353-0cf8-43f9-9d54-da59c7e8357b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47bff9ff-0b31-47ac-bc41-06b973bf6e6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8687f325-8562-4dcf-8d77-8fe1b08b624b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14c60284-7225-4456-a5d0-858322db7f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c39e21-a4a7-460e-99fc-7579b4d569fc",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fdffdaf-df97-4b78-9f54-1f0b671158fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f65af308-22e7-4519-b4d2-21ea673e22f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde093a4-f943-472e-a07b-2bf3ccbdfc1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edf9f979-dfcf-4aaa-bd92-7aeb863f51ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3de45c-4ad3-4660-b115-f5f2e5c1c7a2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782e3c5f-13d7-40d1-af6e-c19adc451b20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df011bb9-322a-41a3-9f24-9ec93fd50095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7d9d98-1509-47d8-a332-b09eadf17948",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f316518e-869d-4324-8dbf-7dc6ef6673f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7634fef-599d-4a85-b35f-e4d8d5bc5267",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75dfb053-fbb8-4ab3-9ba5-0a9e5a345814",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f39cacc-80c6-4808-b570-523770277dff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb048867-016f-4dc0-960b-75f94dc8582f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91923768-2782-47d6-a4e9-2cdeca0e9deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e36375-3264-46fe-901d-9d68df8e27bc",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281c384a-565a-4e2e-bf9b-b9a5d55c00aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4040df5b-8330-4cc0-b7d9-8199461d77b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "831d4f92-ff1e-4af9-89c6-414f759998e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9ce563b-1738-41c9-bae8-b4355747e7f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f2f24b-0cb9-4e12-9f8b-3a1bc20a31bf",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d0ff3d-3af6-46af-831e-d027ec30b201",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3297021-3c46-4339-8272-f17cbfae94a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "567da8f2-bb02-4b71-8112-44fd9fb2dcb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "981dd334-4510-4514-8207-5ef0fd049465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b54eae-2929-4911-a41b-60ef1a228acc",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ff2613-cd49-4f6c-a375-419aa3cb088f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89537cce-aff4-4c57-a021-5cdfd9af12cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2fd6168-b831-4ba1-b347-973a34a02302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "930de749-e25e-48e9-8b03-6b1d7df4caa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36990693-89be-46c0-9fbf-235bea0f24aa",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b3af0d-b53f-4c2a-a181-1ef8cd16274a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22d29784-7e79-40e8-8572-be97c05e6097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9055f3-fa68-4ec0-b124-7baa2b58b899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c918d4b0-16b4-459f-85a1-28c5fd8446a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3205a8-af07-4700-8fa2-bd13930cfb16",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7415f8a7-5bb3-4c33-8144-f703157f95c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4667b472-b771-4427-9645-dd08f0df18c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9b270a-1f63-47ee-99ff-12edac19f98d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4afd50e4-cb40-46f7-ba48-cbfa4df9466d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad076e5-157b-4a07-8985-a7d24ad2ab78",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8421bb9d-13a8-4a47-be10-551b3b3e8a61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bed69ab1-be8b-4580-ba5d-14cd3076889a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8ec7ec-55ad-4d2f-8496-1b49588b29e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e91ec431-d4b7-45e8-b69b-690e2d195fff"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "100a47c5-97b2-43a3-86de-89fa3909f03d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f8ac9a8-8d68-48a0-9d7c-ab24e7bd827e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8b37ea1-5c01-4fe2-a8c4-154c7d2f3d66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "99d97023-c494-498d-b7d0-e31840ea4545"
                    }
                  }
                ]
              },
              {
                "id": "745b3c5f-2333-479e-8f3e-91bd0415f192",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d4953747-5263-4bdb-bc90-069de223fb49",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f281ef-0d4c-47da-8626-a353d5c946fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "49229350-af0c-49eb-959b-c213a498afae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "400b8422-b82a-41df-9560-7d9777e90050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb82787a-f1ca-492c-86ad-68b241951ced"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "028e3195-2141-45c4-b039-e5e9f58d242b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "797bb287-edc2-4a0e-a957-166fda2c80aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c10721a-229e-4b29-a8d6-da9db7463c46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c0dd05b-bc9f-45fd-81bd-c58b86147bcd"
                    }
                  }
                ]
              },
              {
                "id": "9fd52e55-09f2-4dc8-9436-a19d16ff981f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e35b7521-d12a-4c50-983c-9edfc70e0813",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14f57f0-e4cf-4069-bfec-f662eb001caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c8bd4315-f5b3-4f32-beb1-c3c99b3fb58d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17e818f-959e-4968-823d-04c29aff2afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7ea8d1b-fe83-4193-9793-70056066ed61"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "dd3d5d26-1826-4d35-8255-1078528c8699",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f7d3344c-b183-4e6d-8c5a-965d945addff",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f0c9c9a-2abd-4cc7-bd59-6137ed8f6c08",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "568aef66-bddb-45af-b7b6-e02adb5a5fbe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "247a1904-dfe0-48f9-a8e8-a92d6bbf28f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04ef715f-3afa-46a8-aabb-b7a76cdf61cf"
                    }
                  }
                ]
              },
              {
                "id": "ce3be2f5-769a-44cd-bb1e-643c7b62bae8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "79b5464f-97a8-46bb-9b13-1534ffd4218e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "17d8e121-1b82-42ca-9408-1fa944a17036"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da49765c-0906-417b-a447-3ffeac4a26c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e28ba550-1608-4b6d-88f3-f832a95958a4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b88dbe97-2ff8-432a-ac50-dbd440a75f94",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9ca4c1d2-a30a-4a54-ab0d-deff2677afec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ea7167d1-cbb7-4126-84a2-984bd87f97b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de0c51ce-452f-49ab-9df2-1a02007512aa"
            }
          }
        ]
      },
      {
        "id": "bd04f995-1dc3-4006-9140-6388e9d4a275",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9007a260-63c0-43be-abd1-6dca6850171b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7413ce59-a64b-43b1-b0a3-4bf7f2f71a4a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9c1937ae-5c9b-44cb-818e-d32d323c96d0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e7d875-55c2-4bc9-b07b-0e78a75e36a1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ac4634c2-33de-43e1-ab93-bdcf8a1ad1f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ec1e96-4904-465c-81a2-869e06033a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "facb1669-247b-441d-bc2a-a5b6622101d6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7fa68db8-8af5-462d-9482-ad7713257f0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5674146c-24cf-4013-a720-455e32fd8a2c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "15780de3-c0a0-4cc5-9277-2110ef3e3e5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5052c91-c32e-42e6-a029-501945c501be"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4087a25e-f9b6-4e73-8495-5155c7f315d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "18ed925b-0698-4651-9498-50917a466b0a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "614b80df-2210-409b-a9a3-356451eae163",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "822ea93d-d846-4aba-ba4f-698357c8b71a"
            }
          }
        ]
      },
      {
        "id": "e681cbc2-e056-46b2-8b8f-2edf9f01360c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2dffe742-4fd1-4edb-8ce3-2566d45db6bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dddca00f-2a7d-4a7e-b3ae-b75a7847c848",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "876b77b6-c4eb-4fce-88ef-2c8946554b90",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e99537-6bea-4261-b136-f6021fb883d4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21527119-79a1-4bda-82bb-527cd571f4e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7eaf42c-1bc6-48ea-aa48-41715390ca84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90450bd7-6f37-4c3b-b887-864aca602c21"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b03368d-5cc0-4f2c-bcb5-0c66f5fc9786",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d868b19-8573-43d8-a7fa-c0b73b17bf6f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3168adf8-62a2-4fd1-ada4-af67d546bfef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dfea5717-2632-4c41-aaad-8826a276daee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b440f90c-abfd-41d8-a916-8b1430d36060",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "66d75cd8-3085-4a2a-8e47-377779f4a96c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e865fdbe-d7e9-40f7-9c93-8048ba45861c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "176b79cf-eaad-464d-87e1-e2e4230043e9"
            }
          }
        ]
      },
      {
        "id": "85c70639-d53c-4420-a3d8-50a7c5d30cae",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d151c6ec-e193-42e0-814d-7a40530e1e32",
            "name": "Negative Testing",
            "item": [
              {
                "id": "75c2c077-18cc-44e5-98d5-f2590a5260cf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "52e94a14-3510-4237-ad81-3dca6f9201a3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590b61ca-beb3-48d5-954f-21edce8ad642",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e63bc75-c117-40fb-9acd-fdba4377c112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4bbb66-49ef-4066-a682-e8fdc4537b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec007484-4979-45f3-b89a-9fc8dd493b98"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1532f9f-26e6-43c4-8eeb-5367ccf99275",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e29b3751-270f-4e3f-bb3c-2c44605b1b68"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb714b00-d22d-419b-bc2a-be09600e4aca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32780424-543f-4f48-bc55-4e4b65ea9b97"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee0500a5-64d6-4ef3-8081-0fb0057f3b64",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "502034df-5464-4bb5-8385-a7003c00e35d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "239372cc-2160-4dcf-b83b-dd9d38aa6d21",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1855c027-71e1-4ba3-8e61-4eec02f967dc"
            }
          }
        ]
      },
      {
        "id": "b599a617-424c-4a7f-91ea-dd5f6d1ced39",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0eb36d2-844f-41f2-9c45-c87c2e27c887",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13bfec47-3a66-4e1c-90c8-59351f1bc416",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4cd1e69c-5d50-4f14-976a-095303b80078",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b1e79208-c0da-4989-8b76-5c3af6266018",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8b66114-32d4-461d-9d3b-7a57b1072742",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 118.76140350877193,
      "responseMin": 20,
      "responseMax": 7810,
      "responseSd": 508.2933459409583,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701995777008,
      "completed": 1701995820768
    },
    "executions": [
      {
        "id": "edb5b0ec-0ea9-4e23-9ff0-a32a6c487760",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6dbbb0b5-4d86-4110-acd9-7d0d50657e2d",
          "httpRequestId": "423d9429-6db6-4c51-9b0c-df73656f3a53"
        },
        "item": {
          "id": "edb5b0ec-0ea9-4e23-9ff0-a32a6c487760",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4eca81f5-837e-4ed5-88d4-b543866d6b5e",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 0
        }
      },
      {
        "id": "741c0127-acf2-401a-9e45-8456ed5fe4a5",
        "cursor": {
          "ref": "79f0c7d2-5dc2-4910-a1f3-cb974b338e1e",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "aa41d6b6-d2bb-480a-a6b4-6c93eb89ea4f"
        },
        "item": {
          "id": "741c0127-acf2-401a-9e45-8456ed5fe4a5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "efdea243-9204-483e-9499-d0d2c0f6fb24",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "e0d315bb-7dc8-490f-9345-f21c9f440f53",
        "cursor": {
          "ref": "b00251cd-e2df-4fdc-b9e4-18394964e96f",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "48a31852-031e-469a-8d80-8a7a7684b50e"
        },
        "item": {
          "id": "e0d315bb-7dc8-490f-9345-f21c9f440f53",
          "name": "did_json"
        },
        "response": {
          "id": "2f9b7449-686b-426f-b848-01de0ccbec67",
          "status": "OK",
          "code": 200,
          "responseTime": 440,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66108a15-9edc-434a-b113-834ba4a57755",
        "cursor": {
          "ref": "06be3a5d-a575-4009-83a1-a336e115db91",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8cb298ab-e60f-47d6-aa8c-3dafe2b80130"
        },
        "item": {
          "id": "66108a15-9edc-434a-b113-834ba4a57755",
          "name": "did:invalid"
        },
        "response": {
          "id": "a79042f4-2ac5-49ae-aec0-8f8bead80987",
          "status": "Not Found",
          "code": 404,
          "responseTime": 681,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66108a15-9edc-434a-b113-834ba4a57755",
        "cursor": {
          "ref": "06be3a5d-a575-4009-83a1-a336e115db91",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8cb298ab-e60f-47d6-aa8c-3dafe2b80130"
        },
        "item": {
          "id": "66108a15-9edc-434a-b113-834ba4a57755",
          "name": "did:invalid"
        },
        "response": {
          "id": "a79042f4-2ac5-49ae-aec0-8f8bead80987",
          "status": "Not Found",
          "code": 404,
          "responseTime": 681,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddd9575-6ea1-4575-97e6-14edfac391e5",
        "cursor": {
          "ref": "3f62c946-ba38-40b3-81bf-d38ad59afd7a",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0a597391-acda-40a5-ab06-7c2edb4a0488"
        },
        "item": {
          "id": "2ddd9575-6ea1-4575-97e6-14edfac391e5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "dff00f28-d53e-4375-9ef5-0b2a682337ae",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae7e122-3490-449e-b225-aef91f1184aa",
        "cursor": {
          "ref": "a8af1e82-0bba-40d6-984e-12c57d1fd77a",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f2a31c30-832d-4424-9299-efc60641e9b1"
        },
        "item": {
          "id": "6ae7e122-3490-449e-b225-aef91f1184aa",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e3090308-714b-49f4-acba-6a38a2b1ca62",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7590bbaf-14b2-44b0-bbcd-75481be32626",
        "cursor": {
          "ref": "67c282e0-27b3-4ed1-a2da-9113f05ad144",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "dca5ac34-b8a1-49f3-aad5-47228efa43f8"
        },
        "item": {
          "id": "7590bbaf-14b2-44b0-bbcd-75481be32626",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8867ae0d-177a-4bcd-a2aa-fdd6902243f8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587500d5-23d2-4ab7-b9fa-cefaa02809c9",
        "cursor": {
          "ref": "3e74bc10-a0f8-4964-98b1-51816a369076",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1727b827-2b22-4b13-a17a-559b25762a1f"
        },
        "item": {
          "id": "587500d5-23d2-4ab7-b9fa-cefaa02809c9",
          "name": "identifiers"
        },
        "response": {
          "id": "f9cc8001-a07a-4141-8c84-6376a8927a71",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e3bb5e-0b33-4541-bf5e-ccd0d89e5a94",
        "cursor": {
          "ref": "6acac697-65e8-42d1-8672-cf82d5b4633f",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c6285e19-d782-4527-bac1-9e5d915dea00"
        },
        "item": {
          "id": "17e3bb5e-0b33-4541-bf5e-ccd0d89e5a94",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "379cbc69-7e19-444c-b60e-5d1ab89809ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c45aedde-3ea5-4e95-81b0-3b22746d819b",
        "cursor": {
          "ref": "cd4c36e1-6a03-4071-9139-3aa69b98c983",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "70f11544-deb7-419b-99ad-698b3eb27733"
        },
        "item": {
          "id": "c45aedde-3ea5-4e95-81b0-3b22746d819b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5631ab16-c2ed-4a5c-85ed-850504c5042c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5089f4e9-3e39-4934-8810-6ec36cdc8bb7",
        "cursor": {
          "ref": "a4170f56-4aca-42a2-8de2-40b1863eee75",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f0f8a29b-31a2-48cf-acb2-ed9a7a5f26ef"
        },
        "item": {
          "id": "5089f4e9-3e39-4934-8810-6ec36cdc8bb7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "66982b20-c9a4-47d0-b17e-ed72b8b08bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96da92a5-6b77-41a9-b3aa-444dc8e1f36a",
        "cursor": {
          "ref": "13af9aae-7485-43fd-92f8-294cdbbfa4ce",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "85a89292-a77f-426d-8dac-4c34ffd68e89"
        },
        "item": {
          "id": "96da92a5-6b77-41a9-b3aa-444dc8e1f36a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c3412701-6084-4c20-a5fd-a6d99c60df48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 151,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8974c4-3d40-4d88-ba2e-954ce7d04793",
        "cursor": {
          "ref": "e8b57d86-f419-4b47-b3e8-713956f7da8a",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "df946fa1-94ce-4b52-ba18-071da579095d"
        },
        "item": {
          "id": "fa8974c4-3d40-4d88-ba2e-954ce7d04793",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b1e9f156-767b-4719-afb5-6ef192aaac76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df98fa6f-e377-4063-8917-64a5385425dd",
        "cursor": {
          "ref": "326f4531-ab15-4a9b-92f8-fd0dae2cb396",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4b6b2676-94b0-465c-959c-490b32a02b84"
        },
        "item": {
          "id": "df98fa6f-e377-4063-8917-64a5385425dd",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6b4daef4-c609-4fd5-8297-d3de0b65a3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece6b017-17a6-43a5-8b0a-92def4ad34df",
        "cursor": {
          "ref": "457dba28-9342-4820-a2eb-c53ed53cebb2",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "10f24591-a96c-4109-874f-4e2f300819b1"
        },
        "item": {
          "id": "ece6b017-17a6-43a5-8b0a-92def4ad34df",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ab30b5ae-5a11-41f1-9002-8c0614584599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4d5763-0b16-4065-a31f-106b8f1f4443",
        "cursor": {
          "ref": "f22d2775-ebd2-4223-ba84-a47de0b5c5a3",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "71092ae3-64d1-4926-b4ba-389dcbf007d5"
        },
        "item": {
          "id": "db4d5763-0b16-4065-a31f-106b8f1f4443",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "299309ba-50ad-4877-8c44-97e2e2ca8211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab7bfe8-2bb6-41e3-aab5-ca7fdc2217ff",
        "cursor": {
          "ref": "c8b960d7-065f-4491-9e05-1cadb2486ef1",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9f6f9af2-8542-4ad5-b500-be7c6e539b35"
        },
        "item": {
          "id": "8ab7bfe8-2bb6-41e3-aab5-ca7fdc2217ff",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c5d7a09f-aa42-4fba-bacc-22dc936e90e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72da1e7a-a57f-4bbe-aa5f-c4f604c4c35f",
        "cursor": {
          "ref": "bb0801f2-182b-4042-a9ac-07a4c2d99d95",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7558dc00-130b-499b-9ae4-bf89f87dbe16"
        },
        "item": {
          "id": "72da1e7a-a57f-4bbe-aa5f-c4f604c4c35f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "dc2cc708-3c01-4a53-9763-f042f9ac0174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea150da-7af2-430a-8431-1cfb655ab494",
        "cursor": {
          "ref": "04496af5-ed3a-4600-8ab1-3195250a11ea",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2fe2b654-d228-4760-bf47-2dde85e16418"
        },
        "item": {
          "id": "bea150da-7af2-430a-8431-1cfb655ab494",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c1cf4d24-78d5-46e4-83e6-ce9866d63651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed13e78-3c65-4678-894c-2f7bf1aedf8a",
        "cursor": {
          "ref": "f0ce7a48-0d83-4147-b695-500f1516bbb4",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "03865474-9fa1-4722-b200-7568f3ed7b33"
        },
        "item": {
          "id": "fed13e78-3c65-4678-894c-2f7bf1aedf8a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8ec4ca0b-735f-47be-bb29-abc0b540123d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b834d7b-a67e-4e63-a526-5cf239d22569",
        "cursor": {
          "ref": "8165ee98-d7b4-4bcb-9f05-eeec501ea5b5",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d928703f-74b3-4cfc-b4c3-b036af156b2e"
        },
        "item": {
          "id": "4b834d7b-a67e-4e63-a526-5cf239d22569",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "cc8b8a55-3a37-419b-902c-98dfdcf6dfb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defa8787-25ca-4b40-8884-232c08c12994",
        "cursor": {
          "ref": "0f8d8774-2f42-4a13-a47e-4cc8aa5f5b5d",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f15c60ad-9ee0-4e6b-8021-b52f3f040060"
        },
        "item": {
          "id": "defa8787-25ca-4b40-8884-232c08c12994",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "885643c8-9a02-4d9a-9008-8c358a1b14a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ac6a3c-9a35-4c4c-aab1-21297ef9ce3a",
        "cursor": {
          "ref": "55541c33-b4e8-4860-8575-7495217602b5",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "54c093be-0a83-4531-9697-9e2625dfe065"
        },
        "item": {
          "id": "20ac6a3c-9a35-4c4c-aab1-21297ef9ce3a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "bacb726d-0150-46e6-8d45-9c033294e5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06671d2-9997-42b1-80e8-8746b1cfe115",
        "cursor": {
          "ref": "cd1b44f8-d719-421e-95f7-8803434f4aed",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "40eea49d-1514-48ba-a434-fd1a20ff8dad"
        },
        "item": {
          "id": "b06671d2-9997-42b1-80e8-8746b1cfe115",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a41c9aae-de84-45ab-8f6b-6b2d84bb19e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26372be-6b4f-4d8b-a748-c0e3c63b9085",
        "cursor": {
          "ref": "e706aa1c-a38f-43b7-9b4c-c230e9d56236",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3fff9219-32cf-430b-b16a-d1c787a13810"
        },
        "item": {
          "id": "f26372be-6b4f-4d8b-a748-c0e3c63b9085",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "191d5078-3180-4e3e-b4f6-1d22143bda43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0180c8a6-9f2e-4287-b92f-8148612a6766",
        "cursor": {
          "ref": "7b2f06e1-07e4-4d3e-92f4-8b5dcede4120",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0552f2f6-d2dd-48ac-85ee-f86f59713af0"
        },
        "item": {
          "id": "0180c8a6-9f2e-4287-b92f-8148612a6766",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ae0edb7f-496a-48ad-91f5-af523ed0b6df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4c047b-6a9c-43c2-b5af-9851c15bce8d",
        "cursor": {
          "ref": "de0a3bad-297a-4e73-b4e1-42f0f026a6dc",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "de2b9ab2-76e8-4aac-8559-8898efe1daa9"
        },
        "item": {
          "id": "8a4c047b-6a9c-43c2-b5af-9851c15bce8d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "28e5da8c-48fd-4a8b-83c6-5bed93eeaae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16cb7e2-2983-4c01-b05a-89f2533c6cc8",
        "cursor": {
          "ref": "c6099714-cd06-4e05-b03f-dfad6cdba406",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9b460cdd-0697-4ae7-9150-97ca39aa0355"
        },
        "item": {
          "id": "c16cb7e2-2983-4c01-b05a-89f2533c6cc8",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d6dc140a-c907-4496-aee0-cef9a36810ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3eb522-2ca0-4937-9e16-fcf1d4408689",
        "cursor": {
          "ref": "a9bbbd4d-7c28-441d-b39d-1a4b4f5f5d0b",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "468caa52-9621-4299-9c8c-25aa728adfe2"
        },
        "item": {
          "id": "4c3eb522-2ca0-4937-9e16-fcf1d4408689",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a4eaa606-841f-41a8-a59d-5cb1d0b110e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4475c9a0-6229-47ef-9f4c-b29100073d56",
        "cursor": {
          "ref": "877e6949-7da9-4d7d-9a74-a0870c1afb04",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f508cd59-b78c-4bcb-9c30-6e71c760f88c"
        },
        "item": {
          "id": "4475c9a0-6229-47ef-9f4c-b29100073d56",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5fa1a6f8-10d0-4bdb-a849-18fa0eea43dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48539902-58e8-49fd-9ca0-2531a1911ad9",
        "cursor": {
          "ref": "35c69aea-9ed5-4107-aa53-c22063ba1326",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "3c665213-f2c5-4e2a-8b7f-42ee1608116e"
        },
        "item": {
          "id": "48539902-58e8-49fd-9ca0-2531a1911ad9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "77acb658-f33e-4a11-89dc-e26551095f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fdb331a-4887-4282-8f84-e09646fc2372",
        "cursor": {
          "ref": "6a56aca7-cc26-48b2-8c4f-b703ba533489",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6bae28e0-4f6a-4143-89ff-a9db5773e7d7"
        },
        "item": {
          "id": "3fdb331a-4887-4282-8f84-e09646fc2372",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e822dda4-eb6f-47e4-bb05-59e418469015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549189f3-5765-45c3-909b-ab73c60d7904",
        "cursor": {
          "ref": "61edd23c-275c-4683-bb4c-feff6ac865c9",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "dfa44da1-9b96-4717-885d-88b127c155b5"
        },
        "item": {
          "id": "549189f3-5765-45c3-909b-ab73c60d7904",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3381e24e-9b85-496a-9a07-8eff683e46a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623bd2dc-f179-47f4-a70d-67c6a7359601",
        "cursor": {
          "ref": "c8159b64-c2a3-4b1f-a86a-65a15c992811",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d87828f9-bbc0-48ea-8f67-4f098e19ba36"
        },
        "item": {
          "id": "623bd2dc-f179-47f4-a70d-67c6a7359601",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "dc0c802f-d15d-4a78-aba6-3bf0ab175eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8c02bb-e133-4f24-ba32-859707ec2fc3",
        "cursor": {
          "ref": "31bbdb90-3496-4a84-be88-7f9b6ab08f4f",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "974c2cbe-bdae-4d9f-8d5e-b71b29752ca9"
        },
        "item": {
          "id": "ab8c02bb-e133-4f24-ba32-859707ec2fc3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f64d6b23-6fe8-4e80-9f1d-2bf80bef5b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4d815e-a069-4fc5-bb0b-3a8b8989f1cf",
        "cursor": {
          "ref": "d18d74a0-436b-458a-a73c-75bbfce5f62d",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "06292459-9150-4763-882a-8803f1dfac65"
        },
        "item": {
          "id": "cf4d815e-a069-4fc5-bb0b-3a8b8989f1cf",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9241fc3c-5dc2-4e22-8a64-ba62fb39c052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39829676-f756-4cbc-9234-23a46cd79746",
        "cursor": {
          "ref": "e512802c-a2b9-4f65-9755-c2490aef994d",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a93d62b7-0a77-4da8-b38d-adf2a1238a18"
        },
        "item": {
          "id": "39829676-f756-4cbc-9234-23a46cd79746",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8d7a2e7f-c6db-4dd6-af34-5985dd13957e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d1bf09-ba80-46f1-abc8-1f1d6dc9f98f",
        "cursor": {
          "ref": "9607a026-8bdc-4df7-9408-812c02eccf69",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "20d5c97e-6bd3-4184-bc59-aeeda3fb3bda"
        },
        "item": {
          "id": "24d1bf09-ba80-46f1-abc8-1f1d6dc9f98f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4d91f9f7-a294-4e7c-a570-10e306d7d9ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5409484b-0646-40a3-9408-7a7c63366fa2",
        "cursor": {
          "ref": "045ab9b5-3373-4dfd-88a4-c83c2b563974",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ff4f8230-cd6c-4a1a-aa1a-e943631a59a5"
        },
        "item": {
          "id": "5409484b-0646-40a3-9408-7a7c63366fa2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b4ade354-03ce-4c27-8513-3c67b88ad8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2996c04e-53d4-4daa-affa-6f2d0941ebf3",
        "cursor": {
          "ref": "f55970a3-90f2-4356-8796-64fa6bd58a36",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "252eac66-3c23-478d-8fd5-af16781f5cd7"
        },
        "item": {
          "id": "2996c04e-53d4-4daa-affa-6f2d0941ebf3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ca072aa7-3eae-4a54-bf33-703336af116a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3157b492-6b49-4a89-9626-5ebd2b7ba89b",
        "cursor": {
          "ref": "1df97d39-afb1-4ba3-9968-d4cde4672701",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2797ee23-967c-4180-bb49-161bedf9a19c"
        },
        "item": {
          "id": "3157b492-6b49-4a89-9626-5ebd2b7ba89b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fe2a38c2-d089-4007-85b1-5938a36a8691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce82d035-fcea-4d6a-93a2-944b8c1355e4",
        "cursor": {
          "ref": "95b4651d-1979-4862-ba1d-3cc21c7ba3e1",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "754c2f88-7524-46fb-94b6-e88d96c19fcf"
        },
        "item": {
          "id": "ce82d035-fcea-4d6a-93a2-944b8c1355e4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a37ac806-9290-4871-b4f3-cae74c05731d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a7bdcc-9097-4004-bf56-0a3e2c198dc4",
        "cursor": {
          "ref": "0827ef9d-b666-4b09-a34d-6e7d297a16fa",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fce9cafe-b3ff-4163-8c86-a2863acc33ad"
        },
        "item": {
          "id": "52a7bdcc-9097-4004-bf56-0a3e2c198dc4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b454d110-c7cf-44fc-ad81-7001ea76d89f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77544eeb-f124-4f00-b48b-80ac74dbd6d6",
        "cursor": {
          "ref": "1cb70902-4756-45f6-aa1f-e63c91449031",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "57031c9b-ef1f-4d32-8053-61297d314f23"
        },
        "item": {
          "id": "77544eeb-f124-4f00-b48b-80ac74dbd6d6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0f347c97-693f-42ae-9ff2-cc9ea7b10da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4e94a7-ce0a-4d6e-8485-30fa026134bf",
        "cursor": {
          "ref": "bf6a62e5-213f-48fd-bfee-c4ea6b5e50e3",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "58d72592-aead-4e2b-b799-75678eca270d"
        },
        "item": {
          "id": "fe4e94a7-ce0a-4d6e-8485-30fa026134bf",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d7f83a1e-460f-4d13-b47e-6c32438b9540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23e4a1f-8e1a-4d91-a4f5-5f56abe2503f",
        "cursor": {
          "ref": "885f7611-71ca-45ee-be1b-8b062d94162f",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6c791916-c7ca-4bef-bc18-addd55599ad4"
        },
        "item": {
          "id": "c23e4a1f-8e1a-4d91-a4f5-5f56abe2503f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "db25681c-08ec-4e44-8e0b-c5de8735111c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf722c86-00ea-447b-baa9-4f576a6a1a96",
        "cursor": {
          "ref": "7d6b24f4-3227-43c3-8185-4cd47b65479f",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8a4e6657-5804-4055-8612-2bd0147945f2"
        },
        "item": {
          "id": "bf722c86-00ea-447b-baa9-4f576a6a1a96",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b96e3515-c77e-42c6-96c3-8e0e8a9fc336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67493e14-211d-4880-ae45-e95ff3b93569",
        "cursor": {
          "ref": "44a56d4f-e13b-443f-a0ae-5dec8e1eab60",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "928fc303-bb1c-48af-9c21-1937a61a8458"
        },
        "item": {
          "id": "67493e14-211d-4880-ae45-e95ff3b93569",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9d58d519-c551-4bb1-8071-41f783abdb89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae801173-be41-44fc-b2db-33397935ed09",
        "cursor": {
          "ref": "4322710c-6635-40d9-9fa8-dff2947f3210",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "dc4e2317-0af1-4bb6-a0d5-ce93e43ae55d"
        },
        "item": {
          "id": "ae801173-be41-44fc-b2db-33397935ed09",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5e926bc6-a266-41e8-9892-b2b9853faa6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8edab3b-6f7f-4b18-ba95-d07558302987",
        "cursor": {
          "ref": "0f345919-26dc-4b5c-89c9-7d86eaa3d28a",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e7dbd0b4-28f8-4148-ac0b-8a7541d14e73"
        },
        "item": {
          "id": "c8edab3b-6f7f-4b18-ba95-d07558302987",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "20cd4d74-a013-4878-af3b-4d4d208098e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd644e26-21a1-4c14-9198-38668dd5de9b",
        "cursor": {
          "ref": "cc99299d-7d03-4c8d-a9bd-75e551032bae",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d6f1e5e2-2edb-45a1-bb57-6855434af682"
        },
        "item": {
          "id": "bd644e26-21a1-4c14-9198-38668dd5de9b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d31c83c6-7f54-49ec-abbe-9b880840d36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a122b1-e3f9-48aa-b39d-7504d8ff018c",
        "cursor": {
          "ref": "d9ceef07-096c-4770-9b0b-72f42fe16d9a",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7f133d9b-42fd-4b86-accb-064f612ac06e"
        },
        "item": {
          "id": "f9a122b1-e3f9-48aa-b39d-7504d8ff018c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e50a2fae-37b6-4df3-8690-3cb4153f9a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94d30ad-6257-49a8-9db1-c68cdb37f2bc",
        "cursor": {
          "ref": "f95eb113-6a76-469f-b976-d765f40b8585",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0c80e76e-2660-4d45-9550-fe265cf1ae7c"
        },
        "item": {
          "id": "d94d30ad-6257-49a8-9db1-c68cdb37f2bc",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2cabc924-5d5c-42cf-a5a1-271f9f8a748d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a215f7-ec27-4425-a2a4-7808e621028d",
        "cursor": {
          "ref": "9fda4c15-75ad-4d0c-91bc-7a1245fefd6c",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d1ac6f9f-3736-4e95-a676-a80f010e9132"
        },
        "item": {
          "id": "72a215f7-ec27-4425-a2a4-7808e621028d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "331b052f-f8da-4d07-aaea-9a3511105e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20a3ae0-266b-4a3c-bef3-2f3555f5123d",
        "cursor": {
          "ref": "280d922c-0af5-4fb8-b27a-2f78dd065e8a",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "32089b15-bec1-460e-8278-1cb5bd47d97f"
        },
        "item": {
          "id": "d20a3ae0-266b-4a3c-bef3-2f3555f5123d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5255d4e2-3c97-498d-8b6e-10d435b50854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce14b8c-87cb-459c-9f0e-6ade8b6b4ca3",
        "cursor": {
          "ref": "a993dfc9-0bda-43d8-99ed-69d32b83f914",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2bcb5080-a02a-4345-b661-25dd68d76edd"
        },
        "item": {
          "id": "0ce14b8c-87cb-459c-9f0e-6ade8b6b4ca3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5a9afeb9-7d25-4983-8555-0b977419da2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f51b669-1490-41bf-881a-231909774cbf",
        "cursor": {
          "ref": "6ae59b13-ea6e-4019-9164-78004b09c9c2",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "893f9f08-54b2-47e3-b40f-c0aafa3d388a"
        },
        "item": {
          "id": "9f51b669-1490-41bf-881a-231909774cbf",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6252fce3-cc49-41d9-b897-c1c08f127eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a218dfe9-fafb-412d-9347-5c35b6eb7111",
        "cursor": {
          "ref": "60054141-9bb1-41f9-abd9-fc50f5ca486e",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7243c278-fb0c-4ca4-ab06-dca6776e09a1"
        },
        "item": {
          "id": "a218dfe9-fafb-412d-9347-5c35b6eb7111",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5211665f-f91e-490b-a546-0ee945cfb04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f098b9b5-2021-4ee5-af20-f95391e9e894",
        "cursor": {
          "ref": "99f772a3-c143-4150-9b12-9f74892b93af",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9a312efb-01a9-494b-a8e7-7ee728d97db7"
        },
        "item": {
          "id": "f098b9b5-2021-4ee5-af20-f95391e9e894",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "bfae0cdc-3c79-4897-8119-b7266cc1a478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af623f04-bdaf-4cd4-9a6e-e79c4e8115c2",
        "cursor": {
          "ref": "46398243-8108-47f4-b3f5-5f974c6db822",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a0764628-3327-4abb-9243-132d6ca866e2"
        },
        "item": {
          "id": "af623f04-bdaf-4cd4-9a6e-e79c4e8115c2",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2c7187dd-c560-4da3-938f-67c1b4a0a1de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726ff630-66b6-4bac-ab16-0d8fd026f94c",
        "cursor": {
          "ref": "c845c040-d4c3-457c-9bae-79815f0bd6af",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f9c7636a-a285-4895-b343-8b12be43d4a9"
        },
        "item": {
          "id": "726ff630-66b6-4bac-ab16-0d8fd026f94c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8cada059-8b89-481f-961d-8dc50449a0dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954ed84e-83cb-4e4a-8a10-6a8c025c67c1",
        "cursor": {
          "ref": "ef00fc79-c6cd-452a-baf9-90714dd9ecfd",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "cfb33d0e-ba93-41b3-b0bc-4453336889bf"
        },
        "item": {
          "id": "954ed84e-83cb-4e4a-8a10-6a8c025c67c1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f007e946-cafa-4188-a103-f56f195ca6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f73c34f-724b-4dfc-ba72-2a2949f079c6",
        "cursor": {
          "ref": "3ba21cfd-d3a8-46ad-a715-b0bad7516f72",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2621d0c2-e4bd-4a6e-ab33-d3c98ab2b57d"
        },
        "item": {
          "id": "5f73c34f-724b-4dfc-ba72-2a2949f079c6",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4d9c2544-e335-44b6-bff8-669116038246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2f8fd0-f8c8-4f53-b2f9-3a5c25b7bf51",
        "cursor": {
          "ref": "5b54e997-d644-4f38-9cb2-a3bbc4bf0c90",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9d529dd5-f0bd-4526-a787-4417c914c092"
        },
        "item": {
          "id": "1f2f8fd0-f8c8-4f53-b2f9-3a5c25b7bf51",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "cf8dc123-0c61-4166-9f04-e5fba4cd8359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dcc6b60-af91-417f-9ccf-7a702118686a",
        "cursor": {
          "ref": "763a24a8-c6a3-4ecc-940c-6715f2b91e35",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a5f844be-45c3-494a-9b89-bb70ef95cef0"
        },
        "item": {
          "id": "0dcc6b60-af91-417f-9ccf-7a702118686a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "11616c1a-fd65-47ef-a184-66de6ff1debf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e834e7b-4fc4-445d-b685-768ff814c738",
        "cursor": {
          "ref": "57566b8f-686a-4cd1-a944-6ff405e04765",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "34d4d391-1569-4f25-b058-70eec2145fc7"
        },
        "item": {
          "id": "7e834e7b-4fc4-445d-b685-768ff814c738",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "06b0fea5-2bcd-4dca-acdb-7f4418050346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924df272-9aeb-400d-86d7-e8531b692da4",
        "cursor": {
          "ref": "e1a5af3b-cd41-45c7-825c-74bfa434a1a2",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d561a317-0a40-41b2-b921-b838db93654a"
        },
        "item": {
          "id": "924df272-9aeb-400d-86d7-e8531b692da4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "070e2050-fe95-4950-8561-4a92dfc128a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de7bdeb-99c9-4e6c-8e0e-3de2de05ad72",
        "cursor": {
          "ref": "38f71a53-4b54-4ba4-bb8a-4f2fe9069224",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "445411b1-32df-4bfd-a8fe-17c0350627f1"
        },
        "item": {
          "id": "3de7bdeb-99c9-4e6c-8e0e-3de2de05ad72",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "472d65ea-37e1-4d89-9108-7724cd7a6d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d04d1c8-faad-4676-828b-440a24bf646c",
        "cursor": {
          "ref": "6d4b3192-30b8-4638-92a9-cde5761a6633",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9f6a1f81-ef6e-4956-8c25-e9d30c244db8"
        },
        "item": {
          "id": "6d04d1c8-faad-4676-828b-440a24bf646c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "736ecc82-4920-477d-b066-75cfe004fb7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db88bb8-eca4-4962-b8a7-b4b8af9c04cf",
        "cursor": {
          "ref": "0b2ad5cc-e466-41f4-8bc7-df3bbb59d74a",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "fb8fe927-d40f-4a60-9b66-2950d87a95ba"
        },
        "item": {
          "id": "2db88bb8-eca4-4962-b8a7-b4b8af9c04cf",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "986732f7-6c00-4a95-b772-b78bc069843b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5d7d91-2c4f-4b74-989a-c1f8a5117833",
        "cursor": {
          "ref": "cc3ddeda-38cd-4568-861e-134cf6cdb7d5",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "469bde5e-3363-4520-80d9-919f578daec6"
        },
        "item": {
          "id": "4f5d7d91-2c4f-4b74-989a-c1f8a5117833",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "503c6fb8-1598-4d4d-8d36-a305e5a2e0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64bb99c-6139-4e67-a87a-50ccceae1537",
        "cursor": {
          "ref": "c3292870-f4ca-41ec-9365-cbbc658c58f9",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "272eb065-880f-4099-ab52-a2151b3b102b"
        },
        "item": {
          "id": "a64bb99c-6139-4e67-a87a-50ccceae1537",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "dcb4fbd9-bcc2-43bb-8e1b-01fe96a15ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967786e2-e507-44a1-828a-e85f3dc2ec2e",
        "cursor": {
          "ref": "b566368b-dcd3-4a4d-a9fd-6c622712a1e8",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a9c2bcd0-1495-4441-88ec-a6cdcd86d6e1"
        },
        "item": {
          "id": "967786e2-e507-44a1-828a-e85f3dc2ec2e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "70db68da-8b41-4398-8a81-a40cde76c450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781f3285-5316-4809-ba99-202cbbce0d01",
        "cursor": {
          "ref": "d0ccbd4f-7c3b-4ee6-b5a6-4f6515171487",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "aed31b62-868d-4013-aa48-06664f2f791a"
        },
        "item": {
          "id": "781f3285-5316-4809-ba99-202cbbce0d01",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ff681889-b191-4215-aad6-192f4efc2f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3452b276-e56d-4ae1-8f94-fa90719b2f00",
        "cursor": {
          "ref": "33e1469b-fa94-4128-ad88-badeb1a3c793",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1f37d36d-b80d-48b8-89e4-79c3524eee9e"
        },
        "item": {
          "id": "3452b276-e56d-4ae1-8f94-fa90719b2f00",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "440e878a-4106-41b7-b49a-a9bf4d878ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034650ef-3f33-4488-ba19-ae501ea2937f",
        "cursor": {
          "ref": "b4b72235-79d2-4b93-9544-486ad9d5ab33",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d1c77501-22c0-4a75-b672-a569364cd0c5"
        },
        "item": {
          "id": "034650ef-3f33-4488-ba19-ae501ea2937f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b07afbbe-f4a3-437e-8986-3908116eb944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dca5f68-6af9-40c4-a47f-d221f6a35b8d",
        "cursor": {
          "ref": "e510c72d-24d3-4e9d-b38a-30b73a519c5f",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4ad2902b-2543-4955-9c27-118be0f9aea9"
        },
        "item": {
          "id": "5dca5f68-6af9-40c4-a47f-d221f6a35b8d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d6022def-df5a-4205-9c3e-0b19590c1da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2383f590-f85c-4eb3-bcba-53773e69e569",
        "cursor": {
          "ref": "03992fc9-3b23-48a7-a3f6-4028f137bf9b",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a7ba1c09-7024-4c51-8f6b-fea197491d60"
        },
        "item": {
          "id": "2383f590-f85c-4eb3-bcba-53773e69e569",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3b1c6a66-b7ae-46c1-ac4f-4460e59299d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66fa6c6c-4d71-47b2-9a12-834b3e8aab81",
        "cursor": {
          "ref": "19dce066-5cff-4384-8a5a-889bea7b4629",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "75ecf196-dde1-4009-a270-616330d1d986"
        },
        "item": {
          "id": "66fa6c6c-4d71-47b2-9a12-834b3e8aab81",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9d10c76f-dcb5-4f66-8a90-4956b6a2b923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0855c2-7f7e-4151-a59f-1ae3557e46a1",
        "cursor": {
          "ref": "7798d0e8-85e8-49e9-814a-b15f15122bac",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2c708c66-3716-4ace-8df1-e7ffb33b2e88"
        },
        "item": {
          "id": "bd0855c2-7f7e-4151-a59f-1ae3557e46a1",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "36e55ec5-992a-41be-85c4-d6161176f6d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ccd939-4ce7-49cb-913f-eb6e2c20e618",
        "cursor": {
          "ref": "4d759242-1c64-4771-b29e-3208f7071f98",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "502b507a-94cf-4b4f-a819-ec311e570cbc"
        },
        "item": {
          "id": "f6ccd939-4ce7-49cb-913f-eb6e2c20e618",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c10e03dd-c200-4975-ba09-b1f89880e262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc8072c-cde6-4982-996d-8790c2a93019",
        "cursor": {
          "ref": "5c87f3cb-5e06-4c40-be52-39fe6364aad6",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "49b6bb3c-9629-4ed0-a004-043cc3faf44e"
        },
        "item": {
          "id": "2bc8072c-cde6-4982-996d-8790c2a93019",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6a7a2334-59d3-4e6b-a662-6a9e9ea82666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c8885c-c9b5-4800-bca1-92701844dfd1",
        "cursor": {
          "ref": "9a1047fa-31bf-4118-be98-4898d8f99c09",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "daf8b97f-357e-4de1-8062-ba43a5ea2df1"
        },
        "item": {
          "id": "69c8885c-c9b5-4800-bca1-92701844dfd1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "97451c9f-cfff-42b2-a6e0-81b7294110e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a70a240-3994-41a9-9bb0-e49c04273b1f",
        "cursor": {
          "ref": "5b50c9ab-47d5-4ee6-8e68-e4f31b761c93",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7903f941-13bc-423c-856d-39f99ea36332"
        },
        "item": {
          "id": "3a70a240-3994-41a9-9bb0-e49c04273b1f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7d0b9b34-0891-4902-9917-be317f3a0fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a730ed3-d429-44a8-a667-89471992ddb6",
        "cursor": {
          "ref": "12a4e217-c085-4beb-9e32-0ea5a0385794",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "860a819d-f320-4588-9cd6-71c6335622a1"
        },
        "item": {
          "id": "2a730ed3-d429-44a8-a667-89471992ddb6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e531153e-7586-4dc7-95d7-7cf645274737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f690e3be-afa9-424c-90a1-a2d76255a6e4",
        "cursor": {
          "ref": "f70dfb80-2294-4fd0-a05c-2679297abcbb",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "59c410a3-ef91-4acc-80b4-0cc75cbf3c05"
        },
        "item": {
          "id": "f690e3be-afa9-424c-90a1-a2d76255a6e4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0e4f3257-dcc1-48e9-8f28-8ab36accb933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c0ab76-9d13-4116-a5a8-a85e30d62165",
        "cursor": {
          "ref": "72dac241-4b2e-4399-a9f1-2a3da1add20a",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "08a53c5b-054a-407b-81f6-6db899e51fde"
        },
        "item": {
          "id": "b5c0ab76-9d13-4116-a5a8-a85e30d62165",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f4eaf1e2-e6d1-4031-af1a-929eca243601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99284932-d902-48c6-a0dd-8f791c752237",
        "cursor": {
          "ref": "ef29a7c7-e78e-49ff-820e-e89e0c034964",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "19573f2c-92f6-43de-88a3-f3ae89c8413e"
        },
        "item": {
          "id": "99284932-d902-48c6-a0dd-8f791c752237",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f764e92e-5871-4ee7-a637-d81b78cf61e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1ec39a-3498-4606-9832-13563fb65518",
        "cursor": {
          "ref": "a0c8ef6d-8aec-4474-aa3e-b9558330f3eb",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "54b7d7fd-95a5-422e-8f34-a718d9045dc0"
        },
        "item": {
          "id": "4a1ec39a-3498-4606-9832-13563fb65518",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "631413ac-1abe-46bf-ac4d-0fe75f5a6a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5202dae-2a5e-4de7-a985-7219f6b21b33",
        "cursor": {
          "ref": "556a6f8e-af24-430f-ba3c-fb5d5b14be3b",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "bc5383d3-18a0-42bc-8e5e-0995a64b2b66"
        },
        "item": {
          "id": "d5202dae-2a5e-4de7-a985-7219f6b21b33",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "21925736-a3e0-49e8-8d52-09646cf5ca34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553009b8-dc28-4a00-9559-037799936517",
        "cursor": {
          "ref": "be7a024e-3004-467a-9ded-49a19926314a",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "00b858da-6f6d-497d-9b45-74388b26a0ef"
        },
        "item": {
          "id": "553009b8-dc28-4a00-9559-037799936517",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a6f13d9f-e7f7-493e-85ab-4462971b1b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983fa200-1a35-40d2-a8bb-63617f1be370",
        "cursor": {
          "ref": "3a25addc-913e-4f6a-b1cf-cdaa79f73a16",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "531e1d56-a8a4-4b54-8bf9-55e213d348a2"
        },
        "item": {
          "id": "983fa200-1a35-40d2-a8bb-63617f1be370",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "36036b5a-228d-450c-bc88-3cc9f10786e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f1e391-69dd-4d37-8f19-9993f76dca5e",
        "cursor": {
          "ref": "4cb91940-e17f-43f7-b94b-c49d06198b94",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "21a62550-e6dc-43da-bb71-82112e021e7d"
        },
        "item": {
          "id": "53f1e391-69dd-4d37-8f19-9993f76dca5e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "39968115-17e6-41d2-845a-a07e6b303b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc682e8-6c39-4b9c-b7e5-9f0618f9f3f4",
        "cursor": {
          "ref": "8589ddb5-0cd7-4d71-8224-5d129ec63b9e",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "96e3e7f2-772f-4176-9fbe-94ddbba2b8ab"
        },
        "item": {
          "id": "8bc682e8-6c39-4b9c-b7e5-9f0618f9f3f4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c4e66ffc-bbe8-4bbf-b46d-8352da4d44da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7503c456-06e9-4494-843a-3661751244b1",
        "cursor": {
          "ref": "3dfd0082-e87e-46e3-96d7-ab707f92a49c",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "13e295d4-bece-45c0-b2b3-fa88763bda70"
        },
        "item": {
          "id": "7503c456-06e9-4494-843a-3661751244b1",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0930ac61-bce6-4ea3-9f18-f84ba60f8e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f29aac-16d8-4618-89bb-13dfb345076b",
        "cursor": {
          "ref": "aa69a70c-5c3c-4b1a-8f13-a52eb60a1e6a",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "be720057-997d-4bd1-84df-d9eb014e922a"
        },
        "item": {
          "id": "51f29aac-16d8-4618-89bb-13dfb345076b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0e35e5b6-69ca-481a-8087-4e42fa6ba264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3ada11-94b9-4f89-a849-dff147af7214",
        "cursor": {
          "ref": "ea7e2f9e-2a9a-44b1-8a55-67976930644c",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "96f1ed93-2ca9-4e7e-a428-ff1a4188da89"
        },
        "item": {
          "id": "bf3ada11-94b9-4f89-a849-dff147af7214",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6006bdd0-751a-48ed-ba63-03b728c57330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ab355a-e65b-40a9-884d-bee5aae01de7",
        "cursor": {
          "ref": "df031eae-d5ab-4dcc-a57b-1cb479a85416",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6877e573-0c86-4c02-87df-cdf74c438ccc"
        },
        "item": {
          "id": "c1ab355a-e65b-40a9-884d-bee5aae01de7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f166f8b8-0938-4b2f-b23e-3df18e591909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c137d8-3fbd-40e0-b1c8-47fecf8add5a",
        "cursor": {
          "ref": "6221761a-39f3-495b-964d-0416b67c1d9e",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e2ec0977-09bb-4275-9e5e-4215b5fed321"
        },
        "item": {
          "id": "b4c137d8-3fbd-40e0-b1c8-47fecf8add5a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8e0f7fa1-782e-4be2-9e30-37488280ae59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f54509e-9bde-46ae-888e-5bc64104c451",
        "cursor": {
          "ref": "8a6b5d6f-d306-4e41-9ee7-2f7976fd3869",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f015d9e0-9434-4777-9896-5665047c58d7"
        },
        "item": {
          "id": "9f54509e-9bde-46ae-888e-5bc64104c451",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "163a43af-cd3d-4a77-8959-06cca443d72b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a72936e-fa5f-4d25-8c07-478f67d5c512",
        "cursor": {
          "ref": "a5ebbd3c-46af-44ff-aab7-62187b40c41a",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5aa475a7-461b-4cee-bc83-9483ddd70e92"
        },
        "item": {
          "id": "2a72936e-fa5f-4d25-8c07-478f67d5c512",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0ba9b315-af22-4dfc-989e-f853081018d4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55cb917-34b7-4bc3-9f2a-502f6e049168",
        "cursor": {
          "ref": "aae9cab1-2241-4c25-be18-e9cf1f13c6f3",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "39d74ddf-d358-4597-85bd-d19b1a798208"
        },
        "item": {
          "id": "a55cb917-34b7-4bc3-9f2a-502f6e049168",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "86695fe9-802c-4c14-99a6-eb30165f1678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "97af4b2e-79c7-43aa-813e-e1546fdef906",
        "cursor": {
          "ref": "5c34d4d1-e863-420b-85b5-46678aceb1f0",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "44079c80-1158-498c-a254-21b0e8707ace"
        },
        "item": {
          "id": "97af4b2e-79c7-43aa-813e-e1546fdef906",
          "name": "credentials_issue"
        },
        "response": {
          "id": "895b472a-ddd5-4aca-b24c-36a5a2b5c3a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "9eb3872c-45ca-4d36-af69-e4caf51ed236",
        "cursor": {
          "ref": "6488cdd9-6d0d-48ec-b34a-5d1f3fe3d9fd",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "18b5273b-be39-49d9-b9fc-c54eeb4be707"
        },
        "item": {
          "id": "9eb3872c-45ca-4d36-af69-e4caf51ed236",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ca4ac04f-3bbe-4afc-99b1-596cff502d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "cf74980c-bf5f-4f8f-a5e1-eb9b02ad5478",
        "cursor": {
          "ref": "13efb57d-f9a9-4810-9391-ce17272c1060",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f5ca19db-a320-45e6-a0cd-4737dc1166a7"
        },
        "item": {
          "id": "cf74980c-bf5f-4f8f-a5e1-eb9b02ad5478",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2174e1ec-bb6c-4a9c-83e7-720aeaf3e6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "5e5a2ae0-d3bd-4bdc-bca8-33d48ced78b7",
        "cursor": {
          "ref": "990785f0-71d0-46d9-9637-4fe7d2f8dd92",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "abe68d81-6295-43d6-93c8-d3864de577b6"
        },
        "item": {
          "id": "5e5a2ae0-d3bd-4bdc-bca8-33d48ced78b7",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0a7cd568-13a6-40bb-91e5-a4559b18e24a",
          "status": "Created",
          "code": 201,
          "responseTime": 7810,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e1b860-dff5-48e1-ae5e-eb1e5df7d6c7",
        "cursor": {
          "ref": "5cf0b5cb-cc28-4a1c-957f-327c878ed107",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a61f2781-f82e-49fe-b57c-41a6e2aaf0e5"
        },
        "item": {
          "id": "90e1b860-dff5-48e1-ae5e-eb1e5df7d6c7",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d438f28a-81b8-45e2-90ec-06abd7b41803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "9984bbed-ba53-4caf-a616-3b3cc66192ca",
        "cursor": {
          "ref": "181a745c-2927-44fa-847c-fcd27c060f98",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d838eb09-6974-4d6b-9d26-ce34a6e094bc"
        },
        "item": {
          "id": "9984bbed-ba53-4caf-a616-3b3cc66192ca",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ce133df9-b519-42c1-b708-11dd0449f5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "8fe4a18f-e582-4a96-876a-6f2d76057f82",
        "cursor": {
          "ref": "c7b67a84-2229-41b9-ae6c-aed3074c1aeb",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7be0dfa4-1ae5-4e9f-9f7b-2c5375afe939"
        },
        "item": {
          "id": "8fe4a18f-e582-4a96-876a-6f2d76057f82",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "921806a5-9e65-4664-a3c7-b8cada6956c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38cde2b-25c7-4df6-85ac-b00c6ded5d63",
        "cursor": {
          "ref": "695539c1-4553-402b-88b3-46431a2e3d42",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "af1288f3-58b5-40b2-a7fb-395d1af2c148"
        },
        "item": {
          "id": "c38cde2b-25c7-4df6-85ac-b00c6ded5d63",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dd091dd1-2f63-40a7-8719-7f08fd025798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7068701-bdd5-465b-b889-6d2eaf8dc1d4",
        "cursor": {
          "ref": "07a12ca8-6b0f-4c6d-947b-0be48eb31317",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "88071f65-8bb6-48f6-90aa-42c727fc10f1"
        },
        "item": {
          "id": "e7068701-bdd5-465b-b889-6d2eaf8dc1d4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "03da6b91-a068-4599-9bf5-c34ce731726c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cccc7b4-b8a9-4fc5-b113-69462b4b38ad",
        "cursor": {
          "ref": "6ed41839-ae3b-4782-b5d2-649f0428ec6e",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "cb7caa8f-144d-4a09-a4e0-b041c72aa09a"
        },
        "item": {
          "id": "8cccc7b4-b8a9-4fc5-b113-69462b4b38ad",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "617c5e38-8496-4309-acaa-cd62ef070a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77964b86-6718-4ca1-a971-1cacd9577d6f",
        "cursor": {
          "ref": "9fed14da-84f9-4094-8758-d0c7186c44e3",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "56521c61-07f5-46a4-afdb-4677778829b8"
        },
        "item": {
          "id": "77964b86-6718-4ca1-a971-1cacd9577d6f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d1830a59-dbdc-4a68-87e0-c0c1cf510586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ad5676-b616-4ef1-8898-dd849fa87600",
        "cursor": {
          "ref": "11062bcc-711f-4538-ae8b-257a60d9d2f6",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "88b920f2-ec8c-4e01-9a38-e076582910ac"
        },
        "item": {
          "id": "c3ad5676-b616-4ef1-8898-dd849fa87600",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "079cac10-5b2f-4d5e-be48-7809dad0e1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706355d2-0a37-4ba0-acd2-edc9da7345f6",
        "cursor": {
          "ref": "dce23550-c1d9-4a72-a3e5-97e8b06578e5",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "dfcdd094-b194-43e1-83f1-30eb273b3e80"
        },
        "item": {
          "id": "706355d2-0a37-4ba0-acd2-edc9da7345f6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "439c7ff8-bd6a-4d5a-b539-06c3ed2cd906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b47104-2ff4-463c-9818-d475bc4cd965",
        "cursor": {
          "ref": "908b76d4-11a0-4eab-a9b6-daf9805548c6",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3c524c05-5c15-4f0f-8702-b14d31fc2a35"
        },
        "item": {
          "id": "50b47104-2ff4-463c-9818-d475bc4cd965",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "15f4b94c-e340-4823-bccc-47fe23d2c800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5295ca71-6607-4b63-9eff-83d216ccf662",
        "cursor": {
          "ref": "43e129b2-711e-4c38-99de-e460e5a7e200",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "19c41a35-38d8-4a22-8bc0-59710f2adb12"
        },
        "item": {
          "id": "5295ca71-6607-4b63-9eff-83d216ccf662",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1e1b9727-217e-4fbe-893d-b706b754710f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1390bffb-d09c-417f-b916-c833f293cfea",
        "cursor": {
          "ref": "1a270382-8287-42ed-989a-df8c314f6935",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f6104ad1-2349-453b-9551-c2c13cd71c86"
        },
        "item": {
          "id": "1390bffb-d09c-417f-b916-c833f293cfea",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "224b752e-a1a0-4487-9c2f-d41c358fbafd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe99ce9-c6db-4c9a-9753-a8c264b0e455",
        "cursor": {
          "ref": "369f176c-d2b9-4467-873c-b8ec2f2ac78b",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "bb69c903-511e-4096-8897-1ff611ec6437"
        },
        "item": {
          "id": "5fe99ce9-c6db-4c9a-9753-a8c264b0e455",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b5adc0d5-4496-4857-ba15-7c1e3a3ba131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603c24a4-d1e7-4190-ba0a-c39b757b9bbf",
        "cursor": {
          "ref": "7f08537a-484b-478c-802b-43e756892230",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "48862957-5cca-4a04-a5ec-75c4ac6289bb"
        },
        "item": {
          "id": "603c24a4-d1e7-4190-ba0a-c39b757b9bbf",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9b655e75-77ac-42d6-847a-9fa032dc87b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b8a770-2e48-49b0-a5fc-9bc673c63260",
        "cursor": {
          "ref": "fc4c28ef-4eb2-4c76-9351-f57e5e3e404b",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a778a803-8b62-44eb-9fe1-217ae9e3371c"
        },
        "item": {
          "id": "d2b8a770-2e48-49b0-a5fc-9bc673c63260",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6871044c-da98-4a01-93c4-85a58f96ff5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f85512-0d9f-4d31-ac52-b99a6ce28e66",
        "cursor": {
          "ref": "655a42e3-16e1-46ab-b73e-5a360f7389cf",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "720cfb70-8df0-4d1d-afeb-1d937ad4e1a1"
        },
        "item": {
          "id": "d9f85512-0d9f-4d31-ac52-b99a6ce28e66",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d56b243f-2e79-4f5d-a00f-23ca63c2d328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09eb481b-106a-4ebf-ad16-72961bdb56e8",
        "cursor": {
          "ref": "84543d3a-05f2-45ef-8bbb-2435fb91033d",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "61a83fdb-0084-4057-beb2-b7d5d69acb92"
        },
        "item": {
          "id": "09eb481b-106a-4ebf-ad16-72961bdb56e8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5916eba7-291e-4814-9bbf-ec46fcb060fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda8cea2-2000-4691-bfae-6b228342b2c7",
        "cursor": {
          "ref": "1a0f9c30-9c5a-446f-8e83-82bfaa94b026",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "124eecdd-291e-46f4-bcd6-7e3c745ec99b"
        },
        "item": {
          "id": "cda8cea2-2000-4691-bfae-6b228342b2c7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c92f330d-8d2a-4ed0-ae3a-e4076c4b069e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b151c3-7dc0-454a-bfff-323c4355711c",
        "cursor": {
          "ref": "4a2dece8-3799-4876-a023-093b7112c994",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "dbf7f067-cb48-41f2-9303-8d356871c523"
        },
        "item": {
          "id": "b7b151c3-7dc0-454a-bfff-323c4355711c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "13d4ea83-3a17-458e-819c-36181693eb9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9361a6ba-1b8d-44f2-8033-1d506f8d3456",
        "cursor": {
          "ref": "6bf46db4-c47f-4b3e-8ba4-32e9c897afc6",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1d21eb22-92b2-402c-baf4-4a2665960457"
        },
        "item": {
          "id": "9361a6ba-1b8d-44f2-8033-1d506f8d3456",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3473b79c-2551-485a-8bf0-acd8012d0c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03aa149-b6e5-4354-b5e5-d69dc243a83c",
        "cursor": {
          "ref": "5b0f20e2-adaa-439c-b512-14cafaa56a0a",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9d19d855-d856-4293-8d06-baaacc552b87"
        },
        "item": {
          "id": "d03aa149-b6e5-4354-b5e5-d69dc243a83c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3202e568-9ce9-484a-8a05-801f00795257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a2d317-2f65-4ee7-9cb5-b239de045fd1",
        "cursor": {
          "ref": "4fb5854f-2bad-4e1f-9ee7-f3a69be8c2f1",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "89459ad9-f659-41b1-b5a9-3059112c7826"
        },
        "item": {
          "id": "58a2d317-2f65-4ee7-9cb5-b239de045fd1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "05d9771c-1ae0-4078-b6c7-15dd8b3727e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24e0dbe-5fac-44b7-afa6-430a3e5319cd",
        "cursor": {
          "ref": "1820deb3-19a2-4295-a4c6-bb191a13bfe2",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b202bf99-8eb1-449a-81d0-d1fb9114300a"
        },
        "item": {
          "id": "b24e0dbe-5fac-44b7-afa6-430a3e5319cd",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e1b3ec1a-8580-4b05-a43c-758f26e241cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a487dcf-b835-4901-93b8-9dbce3c68e2a",
        "cursor": {
          "ref": "691fe19c-c2dd-4ef8-a70d-c919b2dfaa15",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3798d73e-7fb8-4906-b9cb-43db729a5e76"
        },
        "item": {
          "id": "7a487dcf-b835-4901-93b8-9dbce3c68e2a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "63676f9b-ea5e-41db-9dcb-16442bc65ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b6e43b-7226-47e7-92ec-cdf39f10c281",
        "cursor": {
          "ref": "605eda52-ae27-41d4-897a-fda6e95920f9",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d9106a0d-a81a-4a87-9d33-b82701e9d724"
        },
        "item": {
          "id": "49b6e43b-7226-47e7-92ec-cdf39f10c281",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a5e2a2ae-caf2-4d88-b0c8-5b1ce42176f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efdbc06c-f949-4a85-9f0e-f460d00bdd8c",
        "cursor": {
          "ref": "32ad1226-d6a8-4f09-b557-66758314cbdf",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "cd0615e5-280d-4b74-8332-96ab893641b9"
        },
        "item": {
          "id": "efdbc06c-f949-4a85-9f0e-f460d00bdd8c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0acacbfa-7dd2-45ae-93c9-93c3a664dbef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b6d729-059e-41d6-a4db-cff8a7cd9ca9",
        "cursor": {
          "ref": "3654d118-dc21-4e81-9b11-ddf9c883443d",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "68577b89-2b84-4419-bfb6-bbac346cf67f"
        },
        "item": {
          "id": "37b6d729-059e-41d6-a4db-cff8a7cd9ca9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e4c4c23f-796f-4b46-934c-583636be421e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372429ba-74ee-4783-98de-a84a127f27cc",
        "cursor": {
          "ref": "af407f8b-bfea-4fb5-910a-0e416fd4b97b",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "834f6a05-d0d3-4645-a90b-536a95c709e2"
        },
        "item": {
          "id": "372429ba-74ee-4783-98de-a84a127f27cc",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2daeb0e0-9965-49dc-8dee-2eafb8514779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9d548e-6edd-41da-8ac6-fca503eed02b",
        "cursor": {
          "ref": "c09bcd9d-4c2f-4164-bdf5-fbb27f5d6475",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b13b8a43-3ed3-42df-b8cf-2ebff6b0b8eb"
        },
        "item": {
          "id": "ad9d548e-6edd-41da-8ac6-fca503eed02b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e8eecb3d-018a-4c32-9626-814a8a02c7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65070348-a190-4edc-8045-a75f514dffa1",
        "cursor": {
          "ref": "c3f058ee-ba5d-4174-b747-9c822e774ae0",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0b92b1e8-8c52-4237-9afd-9d61c14e2c37"
        },
        "item": {
          "id": "65070348-a190-4edc-8045-a75f514dffa1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7487a0e9-44d8-4e55-97d1-804d2fbf814a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6389bec9-3d9f-4bbf-8f67-dc89d09da992",
        "cursor": {
          "ref": "8e1b0480-0cf1-4da6-88d2-845d6d2339ac",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c5250fb8-1ae4-4024-9bbd-654672e2627d"
        },
        "item": {
          "id": "6389bec9-3d9f-4bbf-8f67-dc89d09da992",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "891dcdd8-d34e-4810-a5ca-96d6527075f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59c28ba-4418-463a-9b8c-e181ca51217d",
        "cursor": {
          "ref": "6914ab55-4912-4466-8987-c79ff4a3712c",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a17dcdfd-712f-4d3c-8c4f-1fbe8e5ab64a"
        },
        "item": {
          "id": "f59c28ba-4418-463a-9b8c-e181ca51217d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f9b7cd40-589c-4146-b627-9e093a4d2bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d81ce40-34be-4909-bd5c-e320575196da",
        "cursor": {
          "ref": "b07a2404-1e49-4f3e-855c-fe52e3ad306c",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "dd4187ca-7dc6-4859-b665-fa75ea0a6e65"
        },
        "item": {
          "id": "1d81ce40-34be-4909-bd5c-e320575196da",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7ca28d26-34da-4df6-a254-f57d43134522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a1ecb9-beaa-4176-bf66-ea90661f27f0",
        "cursor": {
          "ref": "d2e18c45-06f1-463f-b10b-5e0d8899177d",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f4475ed0-0467-44b7-8693-1a4808bfb85b"
        },
        "item": {
          "id": "b5a1ecb9-beaa-4176-bf66-ea90661f27f0",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "85bf12e5-2adb-427f-abd3-299630c6f1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd35dedc-77ee-40a4-aaa5-5f5761d17a68",
        "cursor": {
          "ref": "4454d7c5-4587-41df-b0ce-1ecfbc1bcbec",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "08d16a89-5d67-4cc4-b219-ab45319492ab"
        },
        "item": {
          "id": "cd35dedc-77ee-40a4-aaa5-5f5761d17a68",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d0f91ae0-23be-4458-b9c7-1c29fb91f0ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364cd15f-7bdb-40c7-b0e1-b60827b0f338",
        "cursor": {
          "ref": "65d92617-72e6-4786-b712-c0448748c8de",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d56164da-b989-4126-abc3-e9a9e66a8f71"
        },
        "item": {
          "id": "364cd15f-7bdb-40c7-b0e1-b60827b0f338",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "25ff8b0c-9c42-4a83-b956-93cec5aadaec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4695c059-d9a4-4526-b3f5-40711d210180",
        "cursor": {
          "ref": "23c73e52-ae06-41d5-ae91-7a03a3168a75",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7dabc58e-611c-4e49-a14d-c5156c90b318"
        },
        "item": {
          "id": "4695c059-d9a4-4526-b3f5-40711d210180",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bcf93b11-2754-4270-9f60-79960a4b0887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4808f9-13b3-4a71-bcba-dc02101055da",
        "cursor": {
          "ref": "52482399-8968-4753-aaa3-46322a2adb26",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9e0769f6-7058-48ac-909b-d1d62e75bf5b"
        },
        "item": {
          "id": "3b4808f9-13b3-4a71-bcba-dc02101055da",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "275172e1-f241-4141-9194-60096673e5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f922cdfe-f8db-4c58-ac43-d50f696b12e3",
        "cursor": {
          "ref": "0fa592b7-d3fa-4f29-a084-9a2695454163",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1a8e42cc-c968-4add-86c6-87e4a073db9a"
        },
        "item": {
          "id": "f922cdfe-f8db-4c58-ac43-d50f696b12e3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "67c35d6e-8156-4550-9f9a-92ca68e79a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a6bdf4-3153-4301-8b47-e802e7ec5832",
        "cursor": {
          "ref": "ebe40e9b-17d7-4cc5-85d8-92ffd4f40772",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3a373e34-808b-4f46-a8ac-afb9e5730f0f"
        },
        "item": {
          "id": "e3a6bdf4-3153-4301-8b47-e802e7ec5832",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c8e6c9a8-fbac-4985-944c-7cf8d81e2e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5cfa4a-f3c7-432b-8ffe-08cd359f5a79",
        "cursor": {
          "ref": "001dd5bf-f496-4d8c-ba03-1393d41135db",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "910ee89d-61aa-4155-8d3b-8de682a74c62"
        },
        "item": {
          "id": "af5cfa4a-f3c7-432b-8ffe-08cd359f5a79",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d2041015-d649-43ad-a134-45dd30318f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d456797-437f-4def-8b78-33f554565965",
        "cursor": {
          "ref": "e27bc63b-2184-4868-b22f-533971bfd193",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2e2bca84-fd03-4aef-bd99-7e0edddbfdb1"
        },
        "item": {
          "id": "4d456797-437f-4def-8b78-33f554565965",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "625e6379-e8ad-41c8-a084-ec32e162076b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdb3aed-f344-465b-a203-b0f0fac4f984",
        "cursor": {
          "ref": "c6bf6dd8-6b3b-485d-b097-e6f52a9bc810",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f344bff4-e87e-4fab-a322-581e4d444d09"
        },
        "item": {
          "id": "4bdb3aed-f344-465b-a203-b0f0fac4f984",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "56482a89-0d3c-4c44-9b60-b9f1d778fa93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32402509-d35c-42fa-a622-d8aeac3386aa",
        "cursor": {
          "ref": "ea393eaf-a974-4984-8369-6e98241454c9",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a03dc086-b516-45f0-8ca3-508c2038bfef"
        },
        "item": {
          "id": "32402509-d35c-42fa-a622-d8aeac3386aa",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "317ddcb3-8585-449f-8395-0423162359d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8448e207-b220-498e-bdcd-51c9b2bcfb6b",
        "cursor": {
          "ref": "3d7c8cec-5331-481e-9701-74493729e12a",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "80efd5db-9528-4197-8bd3-3c0cf5d65b2b"
        },
        "item": {
          "id": "8448e207-b220-498e-bdcd-51c9b2bcfb6b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6fd61fc1-aabc-4992-a7aa-e8df72fe28d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac3a4bd-0179-43a0-942b-a9d07b25b9fb",
        "cursor": {
          "ref": "1f0af0d7-6519-47c6-ad89-e33e29394601",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7c44a8f7-5a6e-4dfe-9518-b59ef009e513"
        },
        "item": {
          "id": "7ac3a4bd-0179-43a0-942b-a9d07b25b9fb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7d6288c3-0e19-4c09-ae38-0a0f9ab4c7df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1c8eb2-31d8-4a1a-b036-07e1036e406e",
        "cursor": {
          "ref": "4263c39e-a204-4a78-ae51-d3be1c883642",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d7c5b056-7a23-4bb9-96a2-ae6dcf995ee5"
        },
        "item": {
          "id": "fb1c8eb2-31d8-4a1a-b036-07e1036e406e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d4e61638-ff36-4178-9ffa-63f6453d1493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90963e60-4862-44b1-b586-286dbb7dafa1",
        "cursor": {
          "ref": "c12ad256-ec0e-4ed3-82e1-2849ac2cd836",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "de938b5a-0b2c-41f6-b9b3-6c4e58826c76"
        },
        "item": {
          "id": "90963e60-4862-44b1-b586-286dbb7dafa1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7c3cd1df-c48d-4282-b168-66134b355df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f037de39-b841-412e-88d7-74c731170ef4",
        "cursor": {
          "ref": "8be9238f-c01b-4e8c-8390-3fbc80f1ad92",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b4697c6f-58eb-4cef-93b4-4ff5335288bb"
        },
        "item": {
          "id": "f037de39-b841-412e-88d7-74c731170ef4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "368c96ec-9d67-460e-9fd5-d3375d70a340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee2a49e-517d-4889-ae27-49001baca62b",
        "cursor": {
          "ref": "e6628191-4d92-472d-98d2-75ec04167235",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9973ffa8-4c12-437f-95e6-ee9e506af5a8"
        },
        "item": {
          "id": "aee2a49e-517d-4889-ae27-49001baca62b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3f2a02ca-a822-40f1-b2db-fafedafeec46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a32ea7-255d-4419-809a-9173ed1adf01",
        "cursor": {
          "ref": "d4642063-9a5b-4415-b384-ad488d4393f9",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3804671e-7dbc-4313-8cba-a02abbc9726d"
        },
        "item": {
          "id": "c9a32ea7-255d-4419-809a-9173ed1adf01",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5700c430-309e-4c0d-8fbc-6695c5749121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5da3a5-828b-40dc-ba7c-d36dec7dfbbe",
        "cursor": {
          "ref": "2908cd42-65ff-443b-85a5-75969084276e",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "83f4c3c4-0eb5-4a30-80fb-4eb6a7e466a6"
        },
        "item": {
          "id": "6b5da3a5-828b-40dc-ba7c-d36dec7dfbbe",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9f51f600-bed9-46a9-893c-fe0f90aedeca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d90cab4-8cca-4fd9-b8d5-37f7af0a2fc7",
        "cursor": {
          "ref": "7e1283fb-6233-4fae-b5ed-f56eaf775bc4",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b9167ce2-8ac0-429b-ac2b-fa75c1d24928"
        },
        "item": {
          "id": "6d90cab4-8cca-4fd9-b8d5-37f7af0a2fc7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9f82e10a-48c4-4672-853e-b6dd2ce7df22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca83aee-5994-4101-ac1b-8e5a907a0643",
        "cursor": {
          "ref": "90658e75-fbcf-437b-a26f-bd2645661827",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2d56e526-c55f-4180-b514-8258e44612ba"
        },
        "item": {
          "id": "aca83aee-5994-4101-ac1b-8e5a907a0643",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c44cfc92-3f94-46c9-85c4-085c01fffbb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116af0fe-5dfc-4734-9e66-92ce5ab9e8ad",
        "cursor": {
          "ref": "4fea23f0-140b-4239-aca6-ef8c9018461a",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ebc94800-a8c3-48d9-924d-5fef1dc8401b"
        },
        "item": {
          "id": "116af0fe-5dfc-4734-9e66-92ce5ab9e8ad",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "74764cc5-0b95-471c-926f-5510b0b579f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c714122-926f-4b87-9534-3d60cd5e164f",
        "cursor": {
          "ref": "0b255c6a-2970-453c-b84d-9d45ff7acc53",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "10669a79-ba6b-4634-911a-263c20d38e1d"
        },
        "item": {
          "id": "4c714122-926f-4b87-9534-3d60cd5e164f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "786988bd-a0ad-473b-9e2e-51dbd417104e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53dc7d16-639a-41b8-9061-bc0113ef63bb",
        "cursor": {
          "ref": "b6aef170-980d-41cd-b966-c571b78c5312",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4f61c4d4-2421-443f-b6f5-89611d1df226"
        },
        "item": {
          "id": "53dc7d16-639a-41b8-9061-bc0113ef63bb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7fdff2e8-9963-4f82-9746-a1695d9dfc51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22bb293e-3b64-4698-a699-2d7bef3c1100",
        "cursor": {
          "ref": "ce2fd90c-8214-4930-934b-6456d922e515",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "fe9cccad-1fb8-4991-89cf-e423869fe5ff"
        },
        "item": {
          "id": "22bb293e-3b64-4698-a699-2d7bef3c1100",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8ca56054-9b2d-4a57-bc6f-75b2fb7b3d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c3bd2e-fe23-415d-a34e-99d6b2e54d6b",
        "cursor": {
          "ref": "a8aaa393-6a57-4dc2-b1b6-c6e3c7158e2b",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3aefd73c-2e4c-433d-b929-24e23d97f900"
        },
        "item": {
          "id": "c8c3bd2e-fe23-415d-a34e-99d6b2e54d6b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "371b8049-028c-4b2e-bcea-b8c3b2de679a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4503337b-87cb-4b31-b455-6e440ab4c2b5",
        "cursor": {
          "ref": "791b6ad4-7210-4b8e-aa28-42c159b01ae0",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "33868173-003e-438a-8858-781cabc8efd9"
        },
        "item": {
          "id": "4503337b-87cb-4b31-b455-6e440ab4c2b5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "42f83d2a-cbeb-485d-a785-c9268a011f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64ffe4a-5736-42f6-90b9-a3280c8a09f6",
        "cursor": {
          "ref": "4b786afb-6695-4996-b3f3-d72e12226e99",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ef19c8fe-2594-4418-9d57-9b81b71963d2"
        },
        "item": {
          "id": "b64ffe4a-5736-42f6-90b9-a3280c8a09f6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c11ec6d7-638f-4fe7-b9db-27b3028c88a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2bde101-182b-4c7b-a3f6-82d02203b1be",
        "cursor": {
          "ref": "b99fd635-ccca-48bd-bdd8-2f0374927f63",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7f450ddd-dc37-46ef-a922-82915d1c3206"
        },
        "item": {
          "id": "a2bde101-182b-4c7b-a3f6-82d02203b1be",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0f393c6b-c02d-4504-b745-fced06811ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55dc5a8-6d26-4e03-84fa-371b19b5ba82",
        "cursor": {
          "ref": "3e60ab71-c823-4c02-9446-36149855ddce",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "73884876-c00f-4583-9592-0106848565a7"
        },
        "item": {
          "id": "d55dc5a8-6d26-4e03-84fa-371b19b5ba82",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2a3b27b2-5a82-41dc-9e74-aafd508122b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7059492-4a8e-46f6-891b-87c5f89839e0",
        "cursor": {
          "ref": "1be422cd-023c-4519-8702-bb4df107aaa8",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f8842c32-0815-4a4a-a3e4-51f7efbdad88"
        },
        "item": {
          "id": "b7059492-4a8e-46f6-891b-87c5f89839e0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f337550c-6137-47a9-9240-b428dae84d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63faf881-856c-4761-8713-8dc5414dcff6",
        "cursor": {
          "ref": "34115a15-c6c2-4a3e-a075-3ef34665d8ee",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "547a6fbc-ca67-4834-9f7c-008c3c29d1e5"
        },
        "item": {
          "id": "63faf881-856c-4761-8713-8dc5414dcff6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ee5a5b11-e3e1-4ca9-a607-eb4fb4a7e59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a91819-4b51-44b3-912c-2bbd0b2aa2e0",
        "cursor": {
          "ref": "2b60877f-ea15-4bdf-81ed-72ff6ea9475f",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b9ac4bab-4f75-4607-ae2e-8f73cafde79b"
        },
        "item": {
          "id": "71a91819-4b51-44b3-912c-2bbd0b2aa2e0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3728710c-aec2-4062-9f32-9afa5d9cb8ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2220521-78db-4da4-bf15-09d6d79e2beb",
        "cursor": {
          "ref": "acee152d-e347-4710-a64b-f1a5f2410754",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "66da3a76-a63c-49a0-9f9b-bb4b36d6a947"
        },
        "item": {
          "id": "d2220521-78db-4da4-bf15-09d6d79e2beb",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "52d4d4be-eb68-4542-aa76-312b7ef3dc1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784b9f67-724c-4330-8efa-9030d674bcf0",
        "cursor": {
          "ref": "b66e4652-ac0a-4ddb-b4dd-b95e30bf95e7",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b9a3954d-ed91-4335-98f6-05c87e2c805a"
        },
        "item": {
          "id": "784b9f67-724c-4330-8efa-9030d674bcf0",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b8cf4bcd-c675-42e0-a401-5049544ae0c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48a460d-4436-4606-9d6c-81606d0be5aa",
        "cursor": {
          "ref": "4ceb9370-7871-4c5a-90eb-dd7f54d42f90",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "176e515f-9fbc-4f87-a809-656ce832d5a4"
        },
        "item": {
          "id": "a48a460d-4436-4606-9d6c-81606d0be5aa",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "91db32cd-da89-4c10-af01-1caebf498ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2858fe52-e642-4893-8b95-c2c005916931",
        "cursor": {
          "ref": "31555243-29b6-441e-b919-995c58ef0eef",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2d09fd3e-c9c3-4905-9b55-a76c80a19741"
        },
        "item": {
          "id": "2858fe52-e642-4893-8b95-c2c005916931",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d6ec190f-5625-45a0-8a58-ddb72eaaf3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba7935e-f651-497e-aded-c626192d1e14",
        "cursor": {
          "ref": "d32fd3cb-b24d-48c4-95d4-bc65b9647565",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1d5cc0bf-dbd1-4328-9d62-ef2ab6e442bf"
        },
        "item": {
          "id": "9ba7935e-f651-497e-aded-c626192d1e14",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5f9aef6c-3002-4ae7-9210-d02813f4f3e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89e0ca4-cb9e-4000-8ab6-23752e4994f8",
        "cursor": {
          "ref": "8b199601-c93f-4dd5-b25c-d9ede856e761",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "90479593-afc5-4554-8788-e00e17c17a8c"
        },
        "item": {
          "id": "d89e0ca4-cb9e-4000-8ab6-23752e4994f8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c6fc3896-0fcf-4944-b775-10a53ff201de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0527cf86-5412-49de-8cf9-35cf8c2f0293",
        "cursor": {
          "ref": "a0c7c2fe-e4ca-444c-8fe8-c045f5b26f4c",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7aed5821-d90d-4055-b727-d61458f1f2d4"
        },
        "item": {
          "id": "0527cf86-5412-49de-8cf9-35cf8c2f0293",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ad121332-0887-4da5-b623-5c4063279acb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99a6dd4-87e8-4b82-b4c1-63c976ff3018",
        "cursor": {
          "ref": "72fca012-5d95-422e-978f-3d9aa3a6f62a",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2270a0eb-819a-4cca-8d83-ecb8d318dcba"
        },
        "item": {
          "id": "a99a6dd4-87e8-4b82-b4c1-63c976ff3018",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a1fb6a72-f4a2-4ebf-9eca-ed2c1fdd920f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c3759c-9b56-4f8b-a8c6-add67d105e91",
        "cursor": {
          "ref": "5a810952-2b59-44ae-b222-c70d24715870",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c9f48284-2c4a-4d2b-ae06-b4b021ba9a5f"
        },
        "item": {
          "id": "c1c3759c-9b56-4f8b-a8c6-add67d105e91",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "110fb224-ef26-4b46-93de-81542bfb235f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681f55a0-68b5-48d9-bc82-c4b2bb732d69",
        "cursor": {
          "ref": "38bb71b5-50d9-4cfd-b5dc-8f8c23282e4c",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d6e4d02d-effb-448a-8316-300dec18524c"
        },
        "item": {
          "id": "681f55a0-68b5-48d9-bc82-c4b2bb732d69",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8a0ec1cf-c3a1-44d5-bce2-24285239045e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66d6364-b856-4719-b01f-96c1ee12359a",
        "cursor": {
          "ref": "5cc98765-d15a-4674-9a07-d9d6cefda31f",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "048f8c6d-7d48-478f-a73d-6850819c46c4"
        },
        "item": {
          "id": "f66d6364-b856-4719-b01f-96c1ee12359a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "988486e2-b02c-4159-badf-875d8e4b9f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eca0d99-3def-4665-ab30-4689919f0bc1",
        "cursor": {
          "ref": "ffeb0319-d95a-4c1a-8cc9-9b26ee68427e",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1b5f2e32-81c0-4a9b-a874-dc79e64055fb"
        },
        "item": {
          "id": "9eca0d99-3def-4665-ab30-4689919f0bc1",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f3b1f096-8058-4598-bca7-20307ca9cbf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac22695c-c8b1-41d1-89bd-bbdd39febf5e",
        "cursor": {
          "ref": "10db52df-01b9-4073-b26b-40116a03a3c3",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d3945725-92fc-41fb-bed6-554a2322c098"
        },
        "item": {
          "id": "ac22695c-c8b1-41d1-89bd-bbdd39febf5e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "27724efb-32e6-4417-af52-a65c3017d1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ecdacf-0a71-449a-a9df-bdcba496c268",
        "cursor": {
          "ref": "c43eaffa-8368-42f6-a503-ee653cd281f3",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "59fee05c-bf53-4437-b3c2-bb3ffbce795b"
        },
        "item": {
          "id": "27ecdacf-0a71-449a-a9df-bdcba496c268",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "22c4dc6e-2514-4dd9-b666-ff71c22f6f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3d2807-543b-4df1-8153-15c36379825a",
        "cursor": {
          "ref": "de2c359d-c21d-48f6-b583-e618ecbd9736",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fd3e07a7-dc78-4cf7-a1aa-ef2a36d6b88b"
        },
        "item": {
          "id": "2d3d2807-543b-4df1-8153-15c36379825a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e6a8d333-11b8-49e0-807f-a5438ba0f7fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568bea98-b11a-4068-8002-3f5af7dab26e",
        "cursor": {
          "ref": "9e9460d3-882a-4f61-ba45-cb47b49457c5",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b2abcc98-4030-4f63-b000-c55aa1639424"
        },
        "item": {
          "id": "568bea98-b11a-4068-8002-3f5af7dab26e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "18819b02-9991-48b0-9507-5d5fa093e2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5c572e-4d85-49ac-bc22-b1b8cffe6b67",
        "cursor": {
          "ref": "4a8240eb-94ad-4a2e-9f99-5da3816ceb39",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ee31ebc0-4395-4479-a6ad-9695b7bad0f2"
        },
        "item": {
          "id": "fc5c572e-4d85-49ac-bc22-b1b8cffe6b67",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "890bb3da-52d8-43b1-b6c1-f889f138d44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d109f7-a564-48d7-909e-0150e835ac7a",
        "cursor": {
          "ref": "d5eb48c1-f4c8-4799-ad9f-9947657c159d",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "080590f7-7c38-4c22-8b3d-5db8403f03be"
        },
        "item": {
          "id": "20d109f7-a564-48d7-909e-0150e835ac7a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "aeb89bbb-4b41-43fb-a3e5-ac47615a85a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d738f49b-e0b1-40a9-9d27-7a0b3a61735d",
        "cursor": {
          "ref": "fd66e5ac-ae57-48b9-941e-5eb3b5714bdd",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "bdfee5a3-254b-4fb9-8e0e-eeaabefb93e5"
        },
        "item": {
          "id": "d738f49b-e0b1-40a9-9d27-7a0b3a61735d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9737f990-a490-4cbc-825b-8a9a734de682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88941cf7-e61c-46c1-a1c6-9d3ae0349cca",
        "cursor": {
          "ref": "401f048e-7a09-45f3-b07b-5009d2936a87",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "49a5dacf-001f-4b3b-a89f-9cad075a69d6"
        },
        "item": {
          "id": "88941cf7-e61c-46c1-a1c6-9d3ae0349cca",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "218274ec-26ee-4345-a78f-3067b0a89f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9157cc-638c-448f-8497-1e04621b3779",
        "cursor": {
          "ref": "ad95f1ba-2442-40cd-93b5-87dd7401e81b",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4a57eee7-5188-45c9-a003-307258702b99"
        },
        "item": {
          "id": "1c9157cc-638c-448f-8497-1e04621b3779",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "80fd7e4a-b158-47af-b5e7-3ab6e81dc9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66454bcb-7ba5-4f89-8f7e-9ff581e4a1ed",
        "cursor": {
          "ref": "cd8a4e71-0db6-4ac3-95ec-f7551f112562",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a7814a90-8228-42de-bd0b-a6dc8677991b"
        },
        "item": {
          "id": "66454bcb-7ba5-4f89-8f7e-9ff581e4a1ed",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "edc0afc5-7e0f-4c6c-a618-f9db029d28a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3ad12c-c97a-40a4-8d40-9046cac98c1e",
        "cursor": {
          "ref": "43611198-aed0-4ca1-b08d-e9c1be101c80",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d3012db7-210e-4a53-9333-68f187689eb8"
        },
        "item": {
          "id": "1e3ad12c-c97a-40a4-8d40-9046cac98c1e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c97d2aa0-c8db-43af-8dc7-1392056e064f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b9445c-b31e-4031-85a9-15d8a569bf32",
        "cursor": {
          "ref": "37dccad5-27e4-4cf0-a8c8-f35cac7e22ba",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "980844c2-7dbe-461e-aec8-c32e8732a922"
        },
        "item": {
          "id": "82b9445c-b31e-4031-85a9-15d8a569bf32",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ed090be9-9651-4e66-875d-7c05624a8b41",
          "status": "OK",
          "code": 200,
          "responseTime": 95,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "b3bf9ea4-e0c3-4a3c-b56b-6722dbbfa000",
        "cursor": {
          "ref": "54d39f2f-ba6f-4907-ba18-77b0024be117",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "98a10d1c-725b-44c1-a84e-a52a06020caa"
        },
        "item": {
          "id": "b3bf9ea4-e0c3-4a3c-b56b-6722dbbfa000",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f683ff86-174a-4455-9334-8c08123abcf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c6ffc8-aceb-4c0f-88bd-0a32cb0a2536",
        "cursor": {
          "ref": "f184cb57-e9f9-4a81-8563-6c5e4ebfb0e1",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c792b56e-72d6-425a-b495-ba5c60b046b1"
        },
        "item": {
          "id": "85c6ffc8-aceb-4c0f-88bd-0a32cb0a2536",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "cb63bde9-07b8-4eaa-ae40-e2ea413bd11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb7824b-c76c-4bce-b06b-15a793b3f5f4",
        "cursor": {
          "ref": "4bf5f942-c6b4-405e-84bb-c59370ceb16a",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c8facc54-e6a4-40d6-a2f4-b0d2c7b96b64"
        },
        "item": {
          "id": "0eb7824b-c76c-4bce-b06b-15a793b3f5f4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ed0d45be-d122-4ce4-9def-9990b9351cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8ba6d2-6af2-413f-9d56-a7f0898d4144",
        "cursor": {
          "ref": "fec5f638-16cf-405f-9592-6c0da6c4131d",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f669a40d-862a-4d75-b122-99450b22125e"
        },
        "item": {
          "id": "ce8ba6d2-6af2-413f-9d56-a7f0898d4144",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "727d07a2-29ad-45db-9124-7789a508d51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df858bf-fec3-486f-a246-300623b381e7",
        "cursor": {
          "ref": "9a8f9e29-07b5-445d-8a2d-68365c95f8fe",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "159dbc8f-c7af-42b0-b77e-b28f7a078d80"
        },
        "item": {
          "id": "4df858bf-fec3-486f-a246-300623b381e7",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ee3cf85d-887e-4922-a916-82c9a5af2118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce76f68b-7e98-46d0-b35d-a80829f84064",
        "cursor": {
          "ref": "934404b6-ec51-4fc9-8382-e149328e6158",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "cbd94659-1c68-49a0-9543-e7b042b3a96a"
        },
        "item": {
          "id": "ce76f68b-7e98-46d0-b35d-a80829f84064",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "95ff98b5-b230-4318-ba14-0b3a297712f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d1b309-8402-400d-b9d0-e34f84f0a380",
        "cursor": {
          "ref": "434210a5-a246-49b6-a8b5-7cae57d8f069",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "13d2ac29-d185-48f4-90d9-c98cd90d01e0"
        },
        "item": {
          "id": "58d1b309-8402-400d-b9d0-e34f84f0a380",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "49f46b56-f1c8-406d-a96f-9eca007d9282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a51e2a-6dc4-4032-8123-01e68043463e",
        "cursor": {
          "ref": "f0e60308-4ffd-4d31-b52a-cbbe834b8679",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3d789c1b-1bd6-41b9-9f56-af094b4ea70e"
        },
        "item": {
          "id": "98a51e2a-6dc4-4032-8123-01e68043463e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "288c6275-aa45-4b2b-ad57-ad72ef5bea64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6debed-e9c6-4074-879f-28d6382dcc55",
        "cursor": {
          "ref": "d1d4aa60-a6a3-4c7c-85a3-9f65e9d826ed",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "037c35a2-a0aa-4f27-ae85-433f07386da5"
        },
        "item": {
          "id": "5b6debed-e9c6-4074-879f-28d6382dcc55",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1986ed51-e1cb-4940-b133-aa79816af73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e545b09b-14b5-4b03-adb3-29971c0f9fb9",
        "cursor": {
          "ref": "ec690245-d277-4988-9af0-e20b7c2348c1",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "78430180-e443-4e8c-8f23-7142db90d867"
        },
        "item": {
          "id": "e545b09b-14b5-4b03-adb3-29971c0f9fb9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9318081b-286a-446e-813a-e2093eceea2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2379d2-4c31-4b67-9097-c7ed41ca5602",
        "cursor": {
          "ref": "42466ef1-0e99-4ffb-9403-8fd603dbf4bc",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b848da8d-ee4e-466d-99cd-5dfe57d0a417"
        },
        "item": {
          "id": "ce2379d2-4c31-4b67-9097-c7ed41ca5602",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "76073bd2-d258-4eaa-97d9-a3f280bc014e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c209df54-bb98-414a-98c4-22fb280ecc7d",
        "cursor": {
          "ref": "18677e9a-569e-4a03-8871-f8bfc6f420ba",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1c3f0caf-e65e-4e2e-b3a7-7ad2b3dfa4bd"
        },
        "item": {
          "id": "c209df54-bb98-414a-98c4-22fb280ecc7d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "36462f01-111c-4153-8122-56cb4872a327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5543a44-68f4-4914-889e-35ff17f7b0dd",
        "cursor": {
          "ref": "e0823773-b766-4778-9c8c-1af7b8e1cdaf",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "bfc4e2fa-7c95-452c-80cd-ffcde4ee55cb"
        },
        "item": {
          "id": "c5543a44-68f4-4914-889e-35ff17f7b0dd",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3bb8c452-c69b-4ffe-86c2-2653e4a8d534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ccee7ed-804e-4677-b3eb-243680d6efdd",
        "cursor": {
          "ref": "993db31c-4bf8-4972-8ede-d57088ba8d57",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a0b51ffa-4f89-407e-871e-495e54354561"
        },
        "item": {
          "id": "4ccee7ed-804e-4677-b3eb-243680d6efdd",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c4e27265-8a84-4dbd-8f48-49bf8f9e6038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d73aa0-988f-4fac-8063-fcb3a2f87726",
        "cursor": {
          "ref": "a40fc2e7-343a-47fd-ae18-1d1848e9667a",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0054fe6a-6983-41a8-9cdb-6636317c8a30"
        },
        "item": {
          "id": "c0d73aa0-988f-4fac-8063-fcb3a2f87726",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "573ccb9d-1fdc-452f-9955-06f45933d85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c51335a-303f-485d-aa5d-cc1610bb86bc",
        "cursor": {
          "ref": "10b25bc2-3fc4-4d0c-8954-b7e311747a1e",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ccd5941b-3aaf-44fa-97cb-24d934607e68"
        },
        "item": {
          "id": "9c51335a-303f-485d-aa5d-cc1610bb86bc",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "16ded36e-dd66-4a9c-8860-1ebd00b96475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ccf9853-cf6a-4a70-992f-96ecaf53e109",
        "cursor": {
          "ref": "9fa11e1c-045f-47db-947f-7e52d927329a",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "350a7ddf-6014-4606-b759-e8dfe7daea74"
        },
        "item": {
          "id": "7ccf9853-cf6a-4a70-992f-96ecaf53e109",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "977d5d1a-87bd-4b97-8ae6-705d45b07864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4b99dd-bdda-48dd-a4eb-72b8bb90c7b6",
        "cursor": {
          "ref": "85d4f5eb-e85f-4d73-bef5-9b621003ceb2",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2a85f3b5-b383-48ea-95df-f4fac7e87b2d"
        },
        "item": {
          "id": "ad4b99dd-bdda-48dd-a4eb-72b8bb90c7b6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1e13b4ef-407a-463b-8edb-141046d0d2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f51a12b-5d1d-489b-84c8-288163ed00fd",
        "cursor": {
          "ref": "6782b04d-be9b-4dab-8107-034da6256c09",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ee0dd7a4-6fc4-4bb6-aad4-2f62151243c2"
        },
        "item": {
          "id": "5f51a12b-5d1d-489b-84c8-288163ed00fd",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d3253bad-69f3-418f-86f4-53da474dd47c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37120a9e-e267-44f6-bd60-a3234618a16f",
        "cursor": {
          "ref": "53cbbdc0-2dbf-4e17-9530-725d35397979",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "aec1331e-8b53-4f09-a06f-263539f47fbc"
        },
        "item": {
          "id": "37120a9e-e267-44f6-bd60-a3234618a16f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f3cb95d0-fb1b-4b38-b3f3-c5330b5e9139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4825990d-9d8d-4ee7-9c8e-082cc7adc53b",
        "cursor": {
          "ref": "9c1282d4-4362-4345-833d-467c2f434187",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9de143b3-4baa-4a7e-ac72-7085aca9789a"
        },
        "item": {
          "id": "4825990d-9d8d-4ee7-9c8e-082cc7adc53b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b98752d4-a04b-4cfd-bcfa-373164359e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b139c598-2a37-4beb-90db-8b21addcc7fc",
        "cursor": {
          "ref": "356ecd57-097a-4e92-9b22-3af6986ada03",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "377eeb9b-10ab-4a5b-a173-54ac1252ed29"
        },
        "item": {
          "id": "b139c598-2a37-4beb-90db-8b21addcc7fc",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8909841a-0b25-4645-bf5d-a67962a32fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875d9131-86e3-469c-bfb7-57701f69f367",
        "cursor": {
          "ref": "1dcd26de-66fd-4d31-b185-5b8b82800d96",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "966aa1f4-2f84-46ad-aad9-2b955b877716"
        },
        "item": {
          "id": "875d9131-86e3-469c-bfb7-57701f69f367",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f7fb16e7-6e1d-42ce-b87c-4d4125b04dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0db682-e45e-4897-af4e-aaecce65e528",
        "cursor": {
          "ref": "57f46c6c-cb9c-4f06-aff8-04333a3401bc",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8eff6ddc-2276-48ed-b784-a00930f27a2a"
        },
        "item": {
          "id": "4f0db682-e45e-4897-af4e-aaecce65e528",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1a3f47b2-754e-4a20-b752-4d78c130413e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c33e32-75b7-4aca-a3ce-64997db5a97e",
        "cursor": {
          "ref": "555497ed-fd86-4022-8f47-065fe3753d0b",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3ecaa95e-69d5-451d-8915-c72c1d6ae96e"
        },
        "item": {
          "id": "24c33e32-75b7-4aca-a3ce-64997db5a97e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0a47f933-1f66-45dd-91f2-225b93ca58e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2051e300-d720-4353-abf7-077d86435496",
        "cursor": {
          "ref": "3e722259-fb6d-465c-95f4-534ae530ffb0",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1f1c7717-0bb9-41b7-abf3-ecb4a4bb117b"
        },
        "item": {
          "id": "2051e300-d720-4353-abf7-077d86435496",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "44305849-1e4f-43ef-a0f0-b35ff29e7a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03991f60-887e-4ce4-9358-3b8c03cc7400",
        "cursor": {
          "ref": "93d25430-9cd0-458a-951e-57f1b6bd59e3",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ec0b1aa1-aa16-4a93-ab49-a2427476fa48"
        },
        "item": {
          "id": "03991f60-887e-4ce4-9358-3b8c03cc7400",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3a0a200e-3958-42ea-8aa0-24589f7410bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7356fc-980d-4e29-8516-114f7d52419e",
        "cursor": {
          "ref": "02381fd5-8c8d-4dc5-b10e-fbcde1886132",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2f11b077-b65f-4ebc-b8ca-e76182108793"
        },
        "item": {
          "id": "7d7356fc-980d-4e29-8516-114f7d52419e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0bf0c833-337b-4e6c-8efa-8fa88c81a975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af06c8a4-2234-4cd3-82ea-62a833c61eaa",
        "cursor": {
          "ref": "10683892-1361-43ea-a719-9823a8bafbad",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "12648c78-04f0-4aea-a846-c97e42520a5e"
        },
        "item": {
          "id": "af06c8a4-2234-4cd3-82ea-62a833c61eaa",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "48a229a1-25ab-43fb-bfb0-e614523db83f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd6dd21-7e8f-4515-b5bb-823dad4a12c1",
        "cursor": {
          "ref": "f1272062-b3df-4388-913c-de51a4b7ad8f",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e4522224-79e5-41fd-a526-22111daee011"
        },
        "item": {
          "id": "3cd6dd21-7e8f-4515-b5bb-823dad4a12c1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2a2e7ab7-b3cd-410b-b0bb-f848f6710765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c6647c-daab-49b9-aa59-85d81c7669fe",
        "cursor": {
          "ref": "cd8fd026-009d-489a-9de3-9abc39640003",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a80167c5-8b0b-4d31-89af-119c7f63af74"
        },
        "item": {
          "id": "a4c6647c-daab-49b9-aa59-85d81c7669fe",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "080b90d9-d1b1-4712-bb3f-ebdcbb6359ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31f89c9-6a5d-4f2a-94c8-0871069dfd24",
        "cursor": {
          "ref": "19d1411f-875d-4b59-83a3-2d1e2017253b",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d9b01ee0-5fb4-45b9-a7d3-874ca820a880"
        },
        "item": {
          "id": "f31f89c9-6a5d-4f2a-94c8-0871069dfd24",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7442200a-dad5-4d65-b1f1-175856c57990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c75439b-8a6f-49fb-80f4-8ac6c35fbaee",
        "cursor": {
          "ref": "9165ef28-4355-43b2-9c59-6514d0915d5d",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2acb548f-fe1e-41c8-9694-f73bface7b2a"
        },
        "item": {
          "id": "2c75439b-8a6f-49fb-80f4-8ac6c35fbaee",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9bdb3a0d-a035-438f-856b-7adeb753ab0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b11a2e-61a6-49ab-a216-9a746df0ab21",
        "cursor": {
          "ref": "5b5f2d6a-cfaa-4254-b1c0-2e18f4be9b8b",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3ef41a5d-f9eb-4a91-a3ef-3dc0885695b5"
        },
        "item": {
          "id": "c2b11a2e-61a6-49ab-a216-9a746df0ab21",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "91926f83-54b6-4b25-903e-4b7cbd7624e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d697565-13bc-4ab4-aaf0-e78b75524014",
        "cursor": {
          "ref": "33d8b570-6347-4200-9044-a22f2d2e79e1",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "969b3353-9542-412f-b4b2-f2036dbf9804"
        },
        "item": {
          "id": "5d697565-13bc-4ab4-aaf0-e78b75524014",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a03cc611-f779-481b-9df6-71cfbd1f7593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d01a730-8723-4d29-ad67-4b102bedb822",
        "cursor": {
          "ref": "adf54b28-681f-4ce9-91a0-49b1404a667e",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ff9913a1-59fb-4248-8098-0ec911ac2c88"
        },
        "item": {
          "id": "3d01a730-8723-4d29-ad67-4b102bedb822",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ea460a52-1232-473f-9649-7dba18fc3ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6b1f5f-6dca-4ddd-b449-37bc88c1807f",
        "cursor": {
          "ref": "2dbbd037-5af1-4afd-87b6-227ce043e766",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "243bbc58-e3dd-4407-b915-5473d28eb5ea"
        },
        "item": {
          "id": "1b6b1f5f-6dca-4ddd-b449-37bc88c1807f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e8930e33-9281-4cf8-a9b4-bccfec448321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f4ed3d-b3d8-4387-8017-b2211bdf31d7",
        "cursor": {
          "ref": "04201554-1ad8-48f4-ab7b-22e8a124451b",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "feb26dd5-2035-4572-a99b-de1d9adf1072"
        },
        "item": {
          "id": "71f4ed3d-b3d8-4387-8017-b2211bdf31d7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "03addf99-7778-4fca-a7e9-49a2682c27b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689274fc-9de9-48ac-a43f-1f93ea386292",
        "cursor": {
          "ref": "f0b95fcc-791c-4757-a86f-8445fec1fddc",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e0cf7d23-b2e3-4451-95cd-40cc678134c0"
        },
        "item": {
          "id": "689274fc-9de9-48ac-a43f-1f93ea386292",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c5d63f23-c170-4a21-b642-65916b114c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed71dd1-e973-4d39-8cb6-d75bfdec88c6",
        "cursor": {
          "ref": "0a04caca-1f06-4653-95f7-a18570fcc249",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "353d76d3-18da-40ed-a816-fa65f6fd6ab5"
        },
        "item": {
          "id": "3ed71dd1-e973-4d39-8cb6-d75bfdec88c6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7c088651-a064-4047-95b7-9b4b3bbff3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3933a8-0d64-4fb9-aa3c-0e55a049e937",
        "cursor": {
          "ref": "fb0bcc6b-071a-4e1b-812f-f550aff2ea03",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "dc313ed5-cda3-4e89-bc2e-3c458d6a7836"
        },
        "item": {
          "id": "ec3933a8-0d64-4fb9-aa3c-0e55a049e937",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e045353e-1911-44bf-93e1-b4ed78bf55ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0533196b-05bd-4298-bfc5-55511529ae2c",
        "cursor": {
          "ref": "e553f44f-2a93-486d-9aa1-61b12f22c73d",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "96139158-d3d1-4c79-b1c6-a89574db7db3"
        },
        "item": {
          "id": "0533196b-05bd-4298-bfc5-55511529ae2c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ad2bdd61-5bef-4007-b61a-38753f00a8da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899ba060-fcfb-4b03-a33f-d975647630bd",
        "cursor": {
          "ref": "1a8f21ee-6940-4966-b25d-618b9a9ccec5",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3a42964f-75b4-4788-ac62-918c1661d2d6"
        },
        "item": {
          "id": "899ba060-fcfb-4b03-a33f-d975647630bd",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e6885d17-c04b-48ff-a39d-ce90223ba7fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67a670d-56b0-4554-bb56-c321a436a1fa",
        "cursor": {
          "ref": "d178ef59-8825-457e-9177-bf5723b45b85",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "44619025-8e84-4ad4-888b-83782c871f1b"
        },
        "item": {
          "id": "a67a670d-56b0-4554-bb56-c321a436a1fa",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "34a196eb-ae68-4cad-82f4-ece1187d8202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "835ae51b-c9e0-442e-8061-f336791557d9",
        "cursor": {
          "ref": "94847a68-212e-4e77-ac3d-f42eab6caf89",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "67a8eb8a-dcf9-47d1-ba27-f83d13aadf67"
        },
        "item": {
          "id": "835ae51b-c9e0-442e-8061-f336791557d9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "625de61c-8ba7-40b0-9186-9ee39685e642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4f7604-6f78-4e85-815e-84f2c89cc2e4",
        "cursor": {
          "ref": "f203548f-1035-4f6d-928e-1accb633224b",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9c24fb3b-91c2-4a72-8be7-2ac7b3387f9d"
        },
        "item": {
          "id": "5f4f7604-6f78-4e85-815e-84f2c89cc2e4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "dbfc25e2-778c-4243-9002-5cadaaa790ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c98ec8-2c7d-4a07-9b30-f8f2262e502d",
        "cursor": {
          "ref": "0a9609da-94de-4d68-99d2-0f184f555e6b",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6283dbe8-b226-4be1-9833-043b9d202952"
        },
        "item": {
          "id": "f5c98ec8-2c7d-4a07-9b30-f8f2262e502d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "df646c38-0385-4cf5-ad2e-8d15ae2d863f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c68497-cd31-4c6f-b129-098d1367cf2e",
        "cursor": {
          "ref": "44ed17d8-88f5-43b9-b2dc-2f10dcbbf479",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3636c944-d1e6-42b3-aa93-ec92d8ac686c"
        },
        "item": {
          "id": "50c68497-cd31-4c6f-b129-098d1367cf2e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "cf57a942-e48c-4717-91aa-601920bed570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d321ed-45e9-4793-bd73-59130f434728",
        "cursor": {
          "ref": "f1e7f55f-6545-41b7-b833-f14e01cef574",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9a91da7c-500d-4d13-8d86-0ea9a83b60b4"
        },
        "item": {
          "id": "45d321ed-45e9-4793-bd73-59130f434728",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f7f17e10-fd0d-4581-9ad9-b6f70607dc91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8f93fc-7ed0-4af3-9fd6-55328db197db",
        "cursor": {
          "ref": "507e3407-0fac-493d-b381-cbde082bacbc",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "be521591-7b2e-467e-bbfc-cb5a57bb347a"
        },
        "item": {
          "id": "5a8f93fc-7ed0-4af3-9fd6-55328db197db",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2cee72a1-889b-4308-b866-7faa7ca7c028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b084407-542a-49b8-b9b1-3e8800a7c402",
        "cursor": {
          "ref": "44289e0f-dbe2-49af-9c3a-e84bc15e59d7",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8395a1ea-4ec8-4743-a509-f56d40edd9f0"
        },
        "item": {
          "id": "8b084407-542a-49b8-b9b1-3e8800a7c402",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8199885a-ce54-43aa-88bc-41a0dfa823b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63b8083-b5ac-4c52-b29a-ddad96583cad",
        "cursor": {
          "ref": "4f461502-e0fe-4983-bc63-27f2c39a397b",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7f67eec0-9f14-45a3-ba26-562a07129c66"
        },
        "item": {
          "id": "a63b8083-b5ac-4c52-b29a-ddad96583cad",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d6877b69-2d56-4f19-9438-df9d92a0d85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647177d8-b9d9-458c-81a1-79bccf055750",
        "cursor": {
          "ref": "bec7f6e3-5a5b-4bca-ab17-e2ad942a657a",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7c13b5c1-1d34-4bd2-91aa-272450860a32"
        },
        "item": {
          "id": "647177d8-b9d9-458c-81a1-79bccf055750",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a6a36872-41ea-4e91-af7d-2e6fac36ad12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f9a01e-10b9-4f5a-948b-f3602f2acd61",
        "cursor": {
          "ref": "94844216-e4b1-41df-a5d4-a7aef68117f3",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2aa59b06-123b-476b-b7f6-6fab950e9800"
        },
        "item": {
          "id": "f1f9a01e-10b9-4f5a-948b-f3602f2acd61",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a25bfbdb-0d59-41ed-b4cf-de7d4063c57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13172974-71b0-464b-bcc6-c8dfbcf33e80",
        "cursor": {
          "ref": "77d1d57a-c4e3-4824-9f66-330e4a462a9d",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "13afa8fe-e1cd-4457-90f3-9f11045b89f9"
        },
        "item": {
          "id": "13172974-71b0-464b-bcc6-c8dfbcf33e80",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8b485bc6-13d7-45f8-90c3-1ed55e65f224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491480d6-de39-46ee-927a-f057033b42a2",
        "cursor": {
          "ref": "6df4d28b-ecfd-49e1-975c-9f7a27f56944",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "5eee0b7e-df1a-47ac-a3d4-e0d11da33d3f"
        },
        "item": {
          "id": "491480d6-de39-46ee-927a-f057033b42a2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "13ea76ff-4e18-4bcc-a9b9-9a207b0e5807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a383701-f48f-4a64-a757-c05c1e8b0a9f",
        "cursor": {
          "ref": "75264993-17ac-4ddd-8353-e20498898355",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "54f1bbdd-d7d9-487c-b328-57ed28466d0e"
        },
        "item": {
          "id": "4a383701-f48f-4a64-a757-c05c1e8b0a9f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "80870e21-8be1-44da-89db-b28e80647408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7dcac0-f4fc-4117-9824-e1bfbd93f215",
        "cursor": {
          "ref": "1c8ed436-a889-40a1-99cb-6b106864029a",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "3b4bb000-f570-4f40-8e5f-5a3d0becfbc3"
        },
        "item": {
          "id": "5d7dcac0-f4fc-4117-9824-e1bfbd93f215",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "00704d69-cbc6-4e99-ac87-8ca33a600c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef78266-af02-4db8-bfb9-28c601d8a4a9",
        "cursor": {
          "ref": "c0d05582-f441-4c29-a316-bcda785fe37a",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "15135860-9f29-4edf-bee1-03020c17ed7e"
        },
        "item": {
          "id": "5ef78266-af02-4db8-bfb9-28c601d8a4a9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8cb42c04-6962-42c4-8dc0-46cf356e5571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c10ee21-ff84-4ef0-a597-ab96d2ef2c6b",
        "cursor": {
          "ref": "0a1d685f-2534-44a3-b574-9308439645b7",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "43cc35c5-f1f9-4706-902d-224f9c750d57"
        },
        "item": {
          "id": "1c10ee21-ff84-4ef0-a597-ab96d2ef2c6b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "545b8b44-5ba2-431f-9de9-e1d90529f57c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e34963f-b3c9-4012-bbcd-c7e9917a032a",
        "cursor": {
          "ref": "b253cbf4-1e6e-4883-93da-6cc96003ce87",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "1fbae70e-d172-4983-8666-746a9320ad2f"
        },
        "item": {
          "id": "3e34963f-b3c9-4012-bbcd-c7e9917a032a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "017c07ce-97ef-4846-b821-1b7913e9460b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779f2abb-5b5f-40f2-af28-86d2a4a40581",
        "cursor": {
          "ref": "e6bde767-82d5-4cb6-acf5-3e9af990a206",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "4a4443d4-41da-4040-8c56-73b014b710da"
        },
        "item": {
          "id": "779f2abb-5b5f-40f2-af28-86d2a4a40581",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "77fe7c27-ab63-4709-b460-9045bc4cac86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ac6e16-96b4-4dee-8776-819a73ddb781",
        "cursor": {
          "ref": "b2551a06-27b0-4ba6-a2a1-de51d8582d81",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "d8c60a56-80c4-4a23-b119-d3b07fa47496"
        },
        "item": {
          "id": "10ac6e16-96b4-4dee-8776-819a73ddb781",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "67c646d4-5084-477d-9a64-46f622c60bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5c77ea-70c8-410b-9de9-6601aa452182",
        "cursor": {
          "ref": "08fff3fe-f741-4807-a330-a3251bc8f62c",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "5cbfe72a-f7ab-4fe8-8cec-7e16df0af2f2"
        },
        "item": {
          "id": "7c5c77ea-70c8-410b-9de9-6601aa452182",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a0fe28c8-a0b9-4a46-8b08-4c64d54d1c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b026585d-273a-4671-b9ed-9c6f031ed416",
        "cursor": {
          "ref": "3b04e2d9-7cb2-44d9-b767-93db4d2052f5",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "4bc419b3-b737-4ee1-ba67-dcc9a1a276b7"
        },
        "item": {
          "id": "b026585d-273a-4671-b9ed-9c6f031ed416",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "23c15567-e491-44b5-aef4-9b1713baf1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ac2a90-5e1e-4576-9d5d-67b1726d546b",
        "cursor": {
          "ref": "24dca8fe-ca3a-477a-8b8f-f5596698bb45",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "500e2051-aa96-4178-8bae-42c73f4a114a"
        },
        "item": {
          "id": "71ac2a90-5e1e-4576-9d5d-67b1726d546b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2ce35bb8-356a-4d8a-8b9f-bad062a74483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc991c13-a4b4-40c5-a51e-bb835d348d7d",
        "cursor": {
          "ref": "949a454b-a8b0-449f-9057-d1d78a26c71e",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e37cc8d1-b4bc-4f2c-b412-8c6ef299cc86"
        },
        "item": {
          "id": "dc991c13-a4b4-40c5-a51e-bb835d348d7d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b2055171-0f52-4b78-93e4-d5b96ec2b172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0eb052b-68f0-4cb1-aa9c-c443f5dda6ef",
        "cursor": {
          "ref": "8a43baa1-900b-4d18-9232-5230d000ba63",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "da175f9d-9d75-4479-a0f6-c9ba53d872d9"
        },
        "item": {
          "id": "c0eb052b-68f0-4cb1-aa9c-c443f5dda6ef",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d70a0815-6bcf-47bd-9dc2-3beb2a509bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6f6b0f-44d3-4d78-b785-2e869208cd9d",
        "cursor": {
          "ref": "7757ef05-f41d-4200-a004-817b2e9c2508",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "066f2e86-c331-4a1e-9dc6-afc1b363363e"
        },
        "item": {
          "id": "8a6f6b0f-44d3-4d78-b785-2e869208cd9d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0279b3e7-7bfe-4a3e-96a7-c092a32abfd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0834d7ea-c854-4564-b3a8-44773273a896",
        "cursor": {
          "ref": "8fcb1b86-ef9b-4526-bb69-05729e095a35",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "bed4c206-6cfc-4d6c-9aa0-b02ae8e0ffac"
        },
        "item": {
          "id": "0834d7ea-c854-4564-b3a8-44773273a896",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3e6f9ddb-2ad1-485b-9330-5a567c762aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2904f5c9-70ea-4d9c-8568-163482087f8b",
        "cursor": {
          "ref": "10eeeb16-0a18-4e5b-9c2e-d8d72cb92fcc",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "f92676a7-a3f5-4e47-92b5-da39fa03393b"
        },
        "item": {
          "id": "2904f5c9-70ea-4d9c-8568-163482087f8b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "451b26ce-812f-44e4-985a-ed28eba75cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c39e21-a4a7-460e-99fc-7579b4d569fc",
        "cursor": {
          "ref": "b8e967af-8ce6-4d96-bb99-3ba2f98d4879",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "355e7af0-8c02-4788-9df7-5f7a48a25eaf"
        },
        "item": {
          "id": "68c39e21-a4a7-460e-99fc-7579b4d569fc",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c704d3a9-2821-4281-906f-e074bea89aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3de45c-4ad3-4660-b115-f5f2e5c1c7a2",
        "cursor": {
          "ref": "d9d31c8c-f4da-407c-8ce9-cfdb49399bf4",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "b11baa89-a691-407f-a3e5-6113804649bb"
        },
        "item": {
          "id": "eb3de45c-4ad3-4660-b115-f5f2e5c1c7a2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "487652d1-84be-4c17-b476-30f79161365c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7634fef-599d-4a85-b35f-e4d8d5bc5267",
        "cursor": {
          "ref": "c869e68d-b04a-4ba9-8a34-d73e3b8c1f5e",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "4717847c-dd50-4449-8bf0-fd826e17c769"
        },
        "item": {
          "id": "d7634fef-599d-4a85-b35f-e4d8d5bc5267",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ec3b055f-4cbd-419e-a778-ec2d6c911856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e36375-3264-46fe-901d-9d68df8e27bc",
        "cursor": {
          "ref": "54b3f2e3-20c8-4aee-ba95-46af44cf9b6d",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "6cc84448-7ec2-4cf2-afb2-a8506e29722d"
        },
        "item": {
          "id": "e3e36375-3264-46fe-901d-9d68df8e27bc",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9508a58b-5693-4b36-b4e6-4c3c0cf3ff82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f2f24b-0cb9-4e12-9f8b-3a1bc20a31bf",
        "cursor": {
          "ref": "4cd7df96-b081-44f3-beeb-aac2dc5ff205",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "da561291-60c4-4036-8c45-1deae1dbd5ca"
        },
        "item": {
          "id": "90f2f24b-0cb9-4e12-9f8b-3a1bc20a31bf",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "305af704-6758-4853-878c-15302d21238c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b54eae-2929-4911-a41b-60ef1a228acc",
        "cursor": {
          "ref": "464bac82-58bd-4ae3-8d31-143506bc3160",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "e710e2c7-e3a6-4123-b6c4-0cedefee66e0"
        },
        "item": {
          "id": "c4b54eae-2929-4911-a41b-60ef1a228acc",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "648fc829-d152-40f7-9b4f-625467f55794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36990693-89be-46c0-9fbf-235bea0f24aa",
        "cursor": {
          "ref": "21f1b59c-89e4-4d11-ab8d-ad565dd50581",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "03f9663b-91b3-4b72-ba41-cafc48d38639"
        },
        "item": {
          "id": "36990693-89be-46c0-9fbf-235bea0f24aa",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d006e0cc-4055-4f7e-857e-a100329fa203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3205a8-af07-4700-8fa2-bd13930cfb16",
        "cursor": {
          "ref": "39f4bf07-6a5c-4f8f-a073-4bc76a85c923",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "db6c9266-bd39-4fc1-ba55-e968f09dfdce"
        },
        "item": {
          "id": "dc3205a8-af07-4700-8fa2-bd13930cfb16",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "31447ff5-ca96-47d8-8850-f958bdf6e417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad076e5-157b-4a07-8985-a7d24ad2ab78",
        "cursor": {
          "ref": "29a12886-f75e-4745-aa6f-9ec6cc37f725",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "e821bbea-cb89-409c-8571-65120a5f5b78"
        },
        "item": {
          "id": "bad076e5-157b-4a07-8985-a7d24ad2ab78",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "bb977b6f-bf2f-4ce5-ada4-d4ab31e3fd20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4953747-5263-4bdb-bc90-069de223fb49",
        "cursor": {
          "ref": "8be663c2-e783-4ef2-b672-d7ca3fd86875",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "b24b165d-5c85-46b3-9f61-9534f2eb5420"
        },
        "item": {
          "id": "d4953747-5263-4bdb-bc90-069de223fb49",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4166501c-c943-489c-aab3-deb9e924d409",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35b7521-d12a-4c50-983c-9edfc70e0813",
        "cursor": {
          "ref": "ef5eadf1-a1dd-4a1b-b547-67614a81aa67",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "63c2d40c-d035-4e9a-bb50-e2984ed6a337"
        },
        "item": {
          "id": "e35b7521-d12a-4c50-983c-9edfc70e0813",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0b5e6014-c505-4435-875b-32136cbb90de",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d3344c-b183-4e6d-8c5a-965d945addff",
        "cursor": {
          "ref": "c84bed7f-8937-4393-aaa4-67bb823fe4b7",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "5ee21230-fe96-4fd5-a95a-216d06f5a0a8"
        },
        "item": {
          "id": "f7d3344c-b183-4e6d-8c5a-965d945addff",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b8bb90e7-a9ee-4c9e-a48e-f9943d1336c0",
          "status": "OK",
          "code": 200,
          "responseTime": 2736,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3be2f5-769a-44cd-bb1e-643c7b62bae8",
        "cursor": {
          "ref": "d2e7a510-ce81-4d15-be6f-6253a0b4f975",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "46f90b95-4733-4620-94f7-1004d0e6b2e3"
        },
        "item": {
          "id": "ce3be2f5-769a-44cd-bb1e-643c7b62bae8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "60c7a77d-9c74-43a8-b0bc-206bf5815fb2",
          "status": "OK",
          "code": 200,
          "responseTime": 2455,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1937ae-5c9b-44cb-818e-d32d323c96d0",
        "cursor": {
          "ref": "62ba5bd2-6ee7-4854-8553-0faeeae41c5c",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f82e1d64-b3a9-40f0-8d6a-6dac65059287"
        },
        "item": {
          "id": "9c1937ae-5c9b-44cb-818e-d32d323c96d0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "de88e01a-caa0-416f-bc1b-a0d0c71976b6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1937ae-5c9b-44cb-818e-d32d323c96d0",
        "cursor": {
          "ref": "62ba5bd2-6ee7-4854-8553-0faeeae41c5c",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f82e1d64-b3a9-40f0-8d6a-6dac65059287"
        },
        "item": {
          "id": "9c1937ae-5c9b-44cb-818e-d32d323c96d0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "de88e01a-caa0-416f-bc1b-a0d0c71976b6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876b77b6-c4eb-4fce-88ef-2c8946554b90",
        "cursor": {
          "ref": "7ef91760-a3c6-400a-a144-e5105e00e33f",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "052fa428-3192-499d-b069-c8f3746b9c2c"
        },
        "item": {
          "id": "876b77b6-c4eb-4fce-88ef-2c8946554b90",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "669bc526-fbb2-4e5e-8701-d12d19031450",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e94a14-3510-4237-ad81-3dca6f9201a3",
        "cursor": {
          "ref": "66900a1f-090a-4416-8c5c-eb9399b2a70d",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "6bde6309-0d45-4f72-911e-013d3085f6ab"
        },
        "item": {
          "id": "52e94a14-3510-4237-ad81-3dca6f9201a3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e1b1cdf5-58eb-45d1-81c9-e4b7886753b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}