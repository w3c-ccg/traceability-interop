{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0423fadf-9a67-4715-badf-3442794a6f0a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c31d208e-5ea9-4eb8-9d3a-766a358531ea",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7214ebb0-fbc2-4e53-b8d0-a758f89633eb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "11ff9772-3b7b-44ea-8e09-cef82769e020"
                }
              }
            ]
          },
          {
            "id": "f7a89c0a-5017-480d-bd6c-f218277c0cb0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1cf752ba-cf04-4af9-ad61-885c5482215f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "23f4abe2-338e-4445-9a66-9662a9a6248d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "55b747aa-7a37-4345-a606-b8eae7803ae0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "fbd1cc32-bc83-4c95-8631-76f9875f5fd2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b947599f-d8d7-46e2-8735-41883893a780",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "130b9e0c-2dad-4471-955e-0d8b206435a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5b2042f3-8813-4a01-b765-14d0d682b7b2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9945b259-53eb-4a22-b6f5-569f8f4df2b5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c0ba57f6-2ee1-468c-af00-6aee84a816ea"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0a1593be-e465-461f-af65-d26c7a0e4c46",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "78f0d992-40bf-4b37-ae32-6c2f855abc8d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "083c8df1-f630-42c3-80e8-7ac25eb387ce",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b692e56a-8a34-4d2b-9ba3-8b0617eb0646"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e9b08c9-90b2-4712-8c75-6dc6711065d1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a3679951-9e81-4661-8147-a6dec5718cdc"
            }
          }
        ]
      },
      {
        "id": "1913ae5b-96b8-4a1a-b809-4199a0514ec7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "be764815-17b7-4a6f-bb25-108aea202136",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c3d4adeb-e464-4db2-b779-c54bf531bd27",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "973c1ee4-27c0-40da-927c-da40fc43b435",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa36943d-8fb1-423d-82d1-c72acfad44f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2fae21ea-fe95-4465-8992-562fe500862b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e334940-5a39-4609-b818-7accf0c251f8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f74d52-50ef-4d6b-8310-57e678895e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb3a3bb0-5c92-4b27-8695-3977f422856a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce30507d-91d4-41a2-9955-7f275b71774d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f353a137-ca47-47b7-8ee1-9dd3be09470c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a65e479-9bfe-4dff-9aa0-157852bd33fc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fccea9a3-fbbc-461f-ac63-cddb7b7e9116",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "579da52b-fcd9-4f3a-ab1d-87bac1b28857",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49f011d-455b-4806-bbbf-38bfa8220ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0f282a4-fb15-4a76-b9db-bc9262366588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d009bd9-e236-4ef9-8182-75bd4a7b75d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bcb5c59-f43e-4eaa-9166-9d041c97d68b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "dd84ee20-fccf-44ba-af5c-b6f1c6db76b4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c3b3805b-b912-4508-841f-9f1aab5fcdd4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33cdc168-f22b-455d-a062-19b68f02d464",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "483ddf41-428a-4b38-9ab6-b4ac885ebc21"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae900554-3e2d-4548-b0e3-ffbbb58ac932",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "66d8fbec-7d0d-4642-a55e-e1af6a64df31"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cec0d853-5867-4c32-ba8c-b49ef2839730",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6bfca55d-fd99-48a6-a086-ee23e2a4e7e4"
            }
          }
        ]
      },
      {
        "id": "63df13eb-5b15-4e44-bebe-59483cffc942",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f16895c6-382c-45da-9d98-d29cb542fab6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4e25c798-4f9a-41fa-9a61-eb020082f2c2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "99db06d1-7061-4af4-a5b8-34468a5d280c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "463dbdaa-2448-4053-9e30-10e8cfa5a688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14fc8998-0201-4e1c-90af-a67a1e563254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce8e528-7eeb-4634-bb52-a422b85c4463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "847b5b64-9086-4f08-90b0-1a26adca35fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07c9eac-a996-4a5d-b3ac-02361ed99517",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd80774-6ae8-4ae9-bf8e-233c55fa7acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0c80546-29d8-449b-bbdd-471d1c640913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80086ea-8cee-408a-9844-6102024c1a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8a0eaa8-52f4-438b-ac73-9c45bf5a4d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef562b4-ed25-40a8-98d2-e8d3bd435290",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3962f419-60a0-4a89-b125-1eda425552d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83f3877b-6405-4b7e-838b-e63746ae8cd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519c4fbf-afb1-45a5-8c4f-6c5826321e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92811bd7-9913-4aba-be80-fe41492169fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b3d595-25da-4292-9bd6-4e2981146cb2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac61079-c194-4082-8edf-79f656afd02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "470e79d5-f3c4-48ee-a88e-ac9bd596821f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904d9c57-c2e3-4d0f-b23c-e3913c5c939c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c01f24c9-8213-4054-b9f1-0767430b2cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40df896c-0925-4e63-a5a8-1869eb880a9b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5a136b-4b36-43f4-b25d-4b9c9f743c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98554fbc-e616-4f9d-8a5c-76e63bb967e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6db3b0-36f7-42be-88f1-59790cf6803a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7437f70-47a7-4f93-92e4-9af1fcbd27e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706f9975-18c7-4bfa-aed2-67c07c4fe123",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a277976d-4033-42a0-81f9-851442395817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6fdd948-33df-4c97-8191-09a130cbc5e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67b55d0-0904-4576-9da8-e7807408f2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ece731b2-8315-4dcc-89e0-b575e60100a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9866c2-52de-4f29-bb4b-8c89911daaee",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "253ee9cc-ce7b-492d-bdb8-b81f5ed1b93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd63048-ac63-469a-93db-19eceddd206b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb8f5b8-b4d7-4917-9c53-51a8d97dfa5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb2fc7b8-e3c3-437f-bf36-282267d48a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a677732-8cc9-4361-a5fb-b7ead740f1ef",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9640a845-c0eb-4efc-adcd-cb672041e686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91c57ee5-0ff0-460b-a1c1-788c00673bae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e4237f-d9e1-4a18-9baf-90b3e5bb1851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6940ebd2-0b1d-4058-9e99-fc5f93c56ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c86613a-1e77-46b3-8023-2023f9841ace",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2439b2-238d-4d8c-9063-54f2197f40fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ce6514-5159-4640-ba96-2a049b4998ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baad85c3-bd02-4842-935d-3edb11e5924f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28e32dc3-dc55-4417-a586-2ab21543a4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1c40d3-1c8b-4610-93cb-039db2a79849",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a4dfcf-92e7-4ed4-ba21-ed5080bd3263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21bd0124-41c8-4739-a0da-294d57c9f19d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fda4eee-b695-469a-acba-5ebf56f38bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc6ef3c3-ae24-42ef-baca-9011733b4781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8ac6fb-8391-4601-9aec-c3cc510008d8",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e5d3ab-888a-4f95-952e-6a82d934c95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d68e381-6fdb-4f2d-9c62-4b3fdc0ab082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf01826a-3538-4ffb-bbb8-0b1c653d1071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01f37534-db0f-4252-a5bc-84d632ce6b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ae0cf0-e988-467c-b998-b80b62d7815b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d1c8fb-3678-4af4-8108-855665ba366f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08dbf79-af7f-497e-ad18-8991da9ea921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce39bcce-4056-4005-a3f3-836b7e2028d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2921ae1a-5389-4adc-aec7-8f7896ea0920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc75dfb5-108f-470b-b119-5aaa8b258afa",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6303cf2-f3f3-4539-9f1f-89532541e270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b431b5d6-f6f7-4b64-bbdc-cbb22d69d146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47612d4-b4e2-45bb-b7d2-20adbb6a62d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd907028-3735-4ca7-9040-0fcb01bccdb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bbe55cb-45a9-4b19-a507-197be7028814",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4015f9-310d-45c6-82ad-7de89d3746b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4656e1fd-8569-4655-87c4-c237f57d377e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a11203-b565-4862-a67f-a9c6fc9f6973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7752ea8b-59b4-443c-bccc-e7c45dad4ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbec2a8e-f0fb-4f9a-b9a9-86511200c8bb",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d17728-4c1e-4516-94d3-4b12dc72eb38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a86d3d3a-03e8-4b24-900a-a8bedd62e8c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46924243-6ae4-4d75-882e-a6d788e3e4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc3b9602-c63d-4c18-b40b-8044e3982230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6281472a-187b-44e6-98b7-75f06b5eb194",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be1aa01-b3f2-45d6-bd3a-25fbdb4dac0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c33009ac-1500-4e8d-a8a9-b911cc60bef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6cb086-1791-41cf-8e9d-51bd92ddbc12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1f376ee-5c17-4c6b-9b92-c656a340be77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b7c42d-4815-4ead-8751-b88b16fb21bf",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a073d1-e7b5-4835-8b3b-96eacb1272f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9806db9b-9333-4196-b88c-02c7e7469e35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6336fbe9-823e-4b84-823f-f7cb94daca32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af103953-a1ff-4726-b218-6d470fb00669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f872050f-8ea6-43ca-a49e-dda5e8fd9e68",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b807e997-89f1-458f-86b6-0283b4f4a51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7559303b-b992-4262-8da1-112747305d0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1f1ad4-2ef8-4220-83d2-4011f42acdf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5132b8fa-e55a-4bc3-8295-b957765c0dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ef721e-2dee-4650-ba38-2008eaf60305",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "670417d8-1609-46c2-bcb7-3b7a44aed15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f563a6-b5a9-42a5-b9c1-6a63bdd50c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1be4da-2d9c-4718-924a-ddd1600be152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f07723a8-3c8d-4689-a262-d5eb9f78d35e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942bd56a-4b1a-4680-b602-ecb152e779ed",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "895bf052-8125-4a70-b5ee-d07ba767c981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0e3198f-07d3-49f4-a96b-af4fca93bf3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f8f9cc-b832-4eaf-9f49-62de8685afb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eeefbd74-71cd-4086-976e-efc9ca69147b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff039477-f2c5-4b5d-9740-0a79d2a5c0d5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "603d6bc4-7777-4b53-8262-4de6e012475d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d5de386-4a62-489c-a38f-c6833f061c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8137904-aa5c-4065-9906-b74bec520e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "933e6df6-2265-4fc3-b5b5-ca60b82f91b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c0a3cc-b61a-44e1-9a24-7636e9a56f59",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfac6e4-a2c9-48d2-a345-688ad1e252d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55091546-d880-4bcc-bdde-818ec5d8495b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f7f22c-5b7b-4ec2-9c3e-f0e8a0991bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "805db6d5-dce9-4302-904d-abd1f711f0b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1004a4bb-78fc-49dc-908e-5b9ccd6f042f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23803f0-ad43-4136-a2b3-70c3d9d89cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e908f9-8636-41de-b11b-6975f130590f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb64dd4-56fe-4813-bbe2-383358fc0b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "390ede1b-f37f-44ac-85b3-dc02202e5287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16867c17-84f7-4b1c-ab9b-fd9384e19b3e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64c7d34-af5d-4702-b9ed-6d9faaedf3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e21ae14-8db3-4cc7-aa30-9e26f3a92921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e44067-6eba-46ad-84f6-b7db2420eda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f312970e-4284-45c4-a1d7-1b49305445bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18b513d-12ae-40f9-8ae5-656890e01404",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d388d09a-2531-484c-958e-fbf499b172d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb0fccdf-47b9-40c4-9469-a9ba2a49db11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6bce30-559f-4c7e-8532-bbc4c422c2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb7fd01b-77d2-45e8-8c4a-45a8f896b613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f18e25-0517-4408-9424-502921ace7ef",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be50f191-b3f5-4daf-af45-2b0546bc3e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "790be49b-43cf-448d-8c0b-9697b6b673b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a03872-d094-43c4-8032-be5a01b41f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c58a5695-60a8-4e4a-99aa-5653c63ef540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d770ae-d72f-495a-b56f-7f53b2997e9f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df0b7a2-e7c4-42f3-830a-7dd1f660b070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6363f9c2-1783-4b61-8d53-c276c41127f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a984c56f-fdaa-4a9d-8243-f09bcc63df02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "136d75f2-363b-403f-9753-70daad70f6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b987418-eafe-406a-9c12-44905ad98e0f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f18232b-153d-4505-926e-bd8551057983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84f520e7-f158-43d3-a82a-cd2912a4e361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7990a0-351f-4e83-959b-93b7ec920757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdef3b0b-a30d-4833-a6ba-09aca37ebe12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adabbf1e-98a9-401c-9e34-456bab3f68a4",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9620d94d-338e-45ab-ac15-d8e712c35286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97ed0ce4-58c4-46be-a33b-3211fa030205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c624b7-1caa-42ae-8a94-07e324b01741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e7d2039-2d87-4443-abd4-04aaba74b7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c75cf1-2b85-4a28-b7d4-1a330b3a08c1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99b565f-40e2-4f2b-b8ae-373d0e0d8876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c548855-dad2-43c0-b92c-fed86e840185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aab76c7-b165-4ea6-8583-6903149bf5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b8aaa55-63da-4ebe-a0d1-f56608d4899e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ef44ab-75e6-4789-9c68-1dec34ce3570",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf434c6-b4ac-4df5-8270-1ee6d8e97eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce0746e2-2860-4ea7-a988-1a94e17f8b50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95feda12-70b8-4141-8a25-f5daebbe9359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ba26fe4-6cc9-4c7b-8651-c2618970cf74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571e5d49-f540-4230-a5df-aebaa3f8a324",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806411ca-4f1d-47c3-9aed-b61cc8998fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "225fa172-b13d-43a6-ab38-bdbb32ca8651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c33e20-7ec6-4985-9336-a0ead4ff4eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a2a8946-ede0-46bb-bcb7-030b0a062320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e3989e4-05c0-4ea0-9985-d0c13463418d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78bb68ff-c2e5-4b2a-870c-bea4dfffbde8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb0e916-c12f-4bba-89b7-4c037b7e6ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3327904d-6ee0-48cd-8efd-a46553f1c5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eac9acc7-1204-4261-8667-09564880220d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5998dd-b331-417b-8e64-9cb01afc3d42",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64bda75f-2ca1-4784-8be4-bd37184282ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c3d0b4e-ad33-4cb7-ab8f-52286f0bd90f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c7fedf-6cd4-480d-a459-83916cd65be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46a4d48f-24bf-402e-82d3-242365e9841f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689df691-8192-402f-befa-149b109dca10",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce93193-891f-4a84-9b68-46cd8dd00563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea9a12e2-09d3-4029-945d-677c410a6620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17ba714-ec5b-49a6-975d-16acc97fbd70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "627fed6e-f58f-48c3-a237-e8c9215684ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff1b6f2-d528-4012-bf2f-ae596fb8ce4e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30065a2e-5b90-4a6a-90b3-a1fdcd257cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed33270d-bd16-4345-98f1-e1c18b46c91b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21775067-243b-4442-b4e1-57873cbb8c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f66f138-b2f1-4f97-b2c1-394e414e20cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e314fd53-800c-4016-bb7c-d742cc1af717",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "279a79b4-c5ef-463e-b9fe-8edf1741047e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e95efa4c-9b74-4e6c-ac21-892681e7e94c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f7fd47-644c-4132-bc9a-eadf449a6c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "198f2497-2aed-4764-80e7-779a49a8c5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882eee36-6e13-4b7e-a006-c6c92a57e8c2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77361ee2-a6ad-4390-bc3c-6c90b849d206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c02733-e328-4660-9d7b-571ff84edb5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a835280f-3e20-46c3-8b75-937c7246a2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a34eb975-d678-4516-8ca1-75ae2009e373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16462df4-2fbb-4c93-ba46-357f9aba09d6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d7c321-37e6-432b-9182-f4d0b0c47292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3564202b-41e3-4d22-8122-e37ea97ea588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b2cb8b-16b7-4be2-a81e-014bc3cd0016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc9ba552-0abe-42c2-bf1b-7bd04f11a50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192b2a0b-992b-4758-b64d-46131a0fa368",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f775243e-75e8-46ff-8551-d912f601be24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dc6284d-aecc-4959-8787-ff29d3ff2332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8d50e5-720a-4361-8301-1840d0006200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e315ad-fb27-40e3-800b-4113184fccd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ec5134-00c6-4da6-97fe-b8f041f3073a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d73ee8-9903-49d0-99c8-d665b6f73152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bc1deeb-2f60-4ac0-b25a-4d7f7efda00c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fbfc43-4ade-4c4f-8068-5c6fce9059c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad0e20d3-41bd-4469-a4ce-b72a9e8cbc74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c60f8b0-0833-4e9d-8b81-4dbc5ab123b9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66018ad-611c-421b-afae-36e29f48f036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27cdf442-a845-459c-969f-72383899bc06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e6ecce-cdc1-4e6a-91c0-9d67dd857a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8cfbfe63-d5ef-4374-82dd-a2583a76d81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af71bd6-5461-4eac-a57d-018b6383488b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87694d04-5697-44c2-a42b-0ce36c234ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc6b845b-86ca-4a54-bb03-53a133d06ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebfe0ecf-f19c-4049-b37d-c0fb41b7d70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e1b9d7c-899e-4c1e-bf2c-6ccfb9fea093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b760686-063d-4104-bde0-284463198d1b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b497af-e530-4ad4-95ee-03363673bb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d850b0d-6511-4064-97f6-4131b57530d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81a9c12-03b6-438a-8fae-991f4d5f1bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "67140897-c743-4c36-89ff-03e9bf465868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c7e3e8-ff27-4057-92ff-14cc76750de5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "697fc98e-a82d-436f-a448-98e486e9ece4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "169f5b3f-7650-47eb-90ee-a7864a01267a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75c1ef4-1334-4150-a3c3-9a6499d6ff08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ac62201-ebb0-47b2-833a-d4b64de14c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf7346e-ff49-4343-88ea-9dabd5d3edf7",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6e8051-8511-4abf-82c7-ec45e4ef25a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5811da17-4a1b-431a-876e-7d9e1e789151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f9647a-d103-4bbb-8d35-a631f3c941aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1acbf00-1880-44a7-abaf-700ce81d5d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8edf32-cc1e-427b-892c-64da3583130c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d18c806-0b2a-4228-a565-02a915fa9680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77c3853a-5269-4695-bd37-baa47441043c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dac211f-ba36-4e02-96c7-e6c68150806f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "00c180b8-5989-4558-8a36-95b3fd5463ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8313afba-c180-4975-b37b-d4e17f0ccfa4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a973ee37-9acf-4c08-9d88-58adaafd67c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a532b2d6-d488-4d23-8a1f-d2f3f6bccaa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab1a261-69af-4234-8d24-52e0c446045b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e62909d2-acca-4a04-81fc-ac5b3c45736f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3944b00f-3a66-493f-aa59-8119aa1c8ed8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd89befc-f2f4-4829-a6c8-429fd0611ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11bbe60d-3fdf-457c-89ab-ce4c7d107cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff5fbd7-0252-4d26-bba8-c1a60d4f45e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99d61cad-c1e0-4493-b840-fd05450b77a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6ad2a5-0916-437a-b3ce-e737751e6acb",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289acc30-bc37-4d31-a2b8-52c5f2e3fb54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a92c045b-6f5a-4613-bb98-9976a470976e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306002e3-b10b-4707-ac99-b974ce00e833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bb07a6ae-2e48-48b8-b510-ad8272afbffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3872b2fb-9a66-402d-bf49-f5e5d460592b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ece58a-8f98-4d9a-91fa-b7ccda942d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cecffaa8-a0a5-4bc1-9dc8-6cebc5564b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc108b41-bd4f-42bc-8ab7-872534b9e862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc43c60-21b8-4929-8336-b2d7a78f225b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f1d3a0-929f-46fd-b3a0-75d2393e0e40",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "358cc721-c12f-45e1-b5f7-e4d4b4b5aed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29f79b84-4bae-4a73-8308-cdb436e7edc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3348a9ef-b4bd-44de-88ac-5bb78063e9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddc4eb9d-35b8-4eee-b2e5-ec1a79f82dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5b5683-072c-43d1-b7f0-77fa5b37574f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c062cacc-451e-4ffb-a269-276e6126f122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cd8f28f-84f8-4fca-b88d-d5d2906fe766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a8b3b9-4c88-411b-a2c6-e97c30b3f926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b95487e-9178-4d9c-9166-061aa6a23faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b08cb2-d5c0-4eca-a698-587b3b1c2150",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c1f33f-3074-4811-81f0-2f5db9635805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "071d6caf-16a2-4149-9ec1-05870192e38a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d18f43-35f0-4a76-b12f-057dad7d1135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6e4081b-fab7-4134-8149-ed0e90c39c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bdab181-6b01-4df5-a016-0b57649032af",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0062a825-f7a5-4952-ab1e-b3e6d257d6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c34f08f4-52fc-425f-98a7-bf1cbab5a617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3b5213-2273-46e8-9331-f805ac9fa495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d6078e9-05df-4700-a37a-da967883729e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c894c83f-a8f4-4f99-8acf-ca100c3102e7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b494911d-cb5a-45e7-8fdf-cb846becc030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f2951e4-bd2f-4b4e-8f9a-3ae5c04865c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08be6b4c-547a-4da7-9635-1626b33d84e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e6ef26a0-e0cd-4138-a6be-d417a1111d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661d806c-e334-4eed-9e2b-bb1949f9993b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a590f1c-321e-424a-b652-282f0c583c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e023cc84-b6b2-462f-9424-9eb68b09ed76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d05ac21-9560-4e38-a6e0-e3f8806b118e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c77ae5-c4fc-48a6-aa57-bf29347cd098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d401010a-6988-4da1-913b-79ec0fb73307",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1c0e50-68d1-4249-906c-44ef0a13e3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aaa6613-851c-4f35-8401-d8f49a6db00d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b2d8b7-00eb-484c-bac0-f388721a8053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "86de24c0-157c-4afe-a198-13053bca47f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39c3628-fb3b-4570-9e36-607ba64146c4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c78603-2be2-41fe-baed-2de001caa27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0ee60aa-c1d7-420a-a6ad-4944da7bbc3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad377752-6276-446f-a512-196deb5d3c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "525eb396-13f0-4570-969b-e3a539794fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4d1c3d-9992-4449-ae95-29dedccbde07",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf1a039-9517-459f-aa61-28d6249ca85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ff58fd-401f-4931-af7f-b660e9f74e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a2072b-db35-4e34-a58a-98871a076cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b69f41b-0fd8-4a81-9c96-0cd46b5eba9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3579192-0b74-4a1b-ad16-b8cad50ab544",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aed5a8c-f126-4ea3-8d27-77acb2a65a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5001f9c-7b2a-4325-9411-0ae818aa3659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc9296e-cf18-48bf-bdeb-d399db2ba1af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ddd9774f-208c-421e-bab0-e8d2f685afec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a475e0-7d86-429d-9542-62f6b4908d0d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "841fb481-b8ce-4a81-b7b8-fe370adc0e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed1336df-57ae-4b28-8326-42cd0f3914fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4235e6f2-e452-4571-9514-e850efc7ad4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9fc1d29-add5-4070-8f58-9732b137c88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0140d98c-4b1e-43af-8128-d67ffd108128",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44368f47-0e10-4517-bdf1-034741352a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e578b1-7658-432a-b3af-c9d74ee440e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8515c861-efdd-4090-8d98-8c4d33e18768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1081ada7-1634-4d3b-ae83-6c0528e8b28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72220f45-b33e-46f6-99bf-dd3df95d7db0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "047bf8c1-8aef-4528-ae24-37cd99f752eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be7413e4-536a-4b45-a853-4377652ca674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1cc0c3b-a1d2-4aa7-a1d3-d7934bfeeffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d308bb86-30c4-4fa9-bd1b-4d9a2bd6e394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce26f96-b402-43fb-bb1d-1ef0a4ac08ae",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74cd8823-5318-4eca-bbb1-483dca58e9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4188bc1a-5e81-4b63-b4b7-17061538c396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042e7eb2-9334-4124-8bea-29831169173a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f351d652-45b5-461d-9649-190cc0145174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f09b552-7adb-4c92-a868-edee41758e43",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0669ecf8-c659-4f73-a292-5112c94b9215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bafe7f9-0f63-4b31-bf96-560dcbc6d6c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec8a3d2-663e-4d2a-9c9b-c2a76945eebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ddb821-6a1f-4b63-a944-9badb81bdc7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec12fd4-a964-4750-bfae-abbc5a819c19",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50a2ab6-e806-4b00-be77-669f89855fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da89a50a-ec22-448b-99e0-9a49ef8abb50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e1a957-f950-46ca-bcd6-e79c8252bf18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eb66e3c5-4da2-4e83-bd5b-76819d00eef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9ab23d-29f9-41e5-8afa-76ab03a746de",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc53415-2c83-43ae-9394-92c36b79da88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbec6d2f-4841-4a95-8668-b38fe262afa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f86e3e-2d38-4ca5-823a-feb932eddd2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff88ebfe-3b29-4a15-a2b6-dd2b9496b697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deab6023-8588-4c22-a54c-78867b09ebed",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c4eed4-2721-450c-beb5-10d15b1ea440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e381e56-5cd9-4435-bded-0d5131bd5800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8002c3-0d14-4a6d-ab1b-7b7baf836355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "de4de12c-e1d5-4440-8af0-822b3f72ce43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed3f2e6-b958-466a-8e3b-d57e6287e15f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44eac1d8-fae4-471c-a67a-ad63c0bc6b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "362be07c-ba69-4707-bbf1-6ff25cbfd6b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d9ebc7-4ace-407a-bd9e-597b471a14c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7df280e-61a6-4148-bb75-4750d8ece85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a594b0-aa4a-4334-8ce6-64805a8c8f84",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07cddf90-6892-40ec-9866-6a01f02e6ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23073a77-319d-46e4-a3c0-80e3f8c46d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b9bee3-cb69-4462-93e6-82790e806384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a042253e-b231-42a9-b121-6545156f459b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d58e09d-f326-4449-9ff1-48111011ace2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c0170f-ddd8-42c5-ab5d-01ce004351f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8704a26-1c81-4b19-9508-3485b070c601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dab0156-a119-4f2d-853b-a0fdabd18425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "00678b86-7143-4240-b7a2-4c833fc9985e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0887080-9b1e-46dd-9eaa-6a6b71f9ca7a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bae11b4-e5a8-47da-bd9f-a8a060957124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a2e6401-87b7-4d4d-ac7e-4a586edc59cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d100d3a-4741-4abe-ad27-0bc9c4bc56ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "116b2358-ce92-4284-bf7a-bf20202a7253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca51b50-7c47-4675-a58f-384e7649c5a4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f111e3e8-e888-4073-a7e0-cf47aae33bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5282c0d6-3199-45f8-b840-3e8c04009499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade984dd-336e-486d-8fd3-1e91035a183d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "62a44489-8732-4933-b0fb-f99f337ec7b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e234d32-b52a-4c6e-899b-1ea74b0fb1dd",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06fe6a7-1124-4a0a-8530-2cc9088018da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba2f92bf-dbfc-4664-8e9f-fc3a4422acf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19e4c1c-2a11-4c9e-b773-0bbd265b98c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "077ff65e-7971-437b-b322-92c53f45f178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9304f19c-364b-4076-b76a-a38a1d520f1b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61031b1e-5600-4537-89d4-9f13f1ebf633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace7cdde-abf3-437c-81fa-6aa8c5279bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770edf23-5cb8-4574-93f9-e750a51bf4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a38c1013-638f-448c-9345-24dec965f69e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66720f9c-06d1-4060-b749-fa8c11d471ba",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f43a83-9b8b-4d22-a042-72a9ad44fabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6bf01ad-8b33-46ec-80f4-42a5682ecded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4445b614-7f57-4569-8e5e-5ad54ab173a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "77b32c76-e607-4e57-a451-dc449236a4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96018b57-b23b-4824-99b6-54df9a3075c0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b37844-315b-45a7-ae05-0d625bdcf29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8449e79-5919-40b7-889e-166dd669a1f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f00ec82-f178-4f8c-98eb-686393df2895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "63a7c9b5-c027-4623-9907-b1fd6e975079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe26948-7b19-4ee8-8f35-32f656120491",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "779d0b96-e032-4b26-9a49-7c97771f4a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe20427-8c2f-4423-8e00-93374e6a8fe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69a440b-b052-42c2-b93b-332ebb44957d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e5d50a5-d95d-48c1-ab11-bf05cca32c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51be9901-0794-434f-87f3-2c6a01ecee84",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eaa273b-adb6-4efc-8686-462d8156df77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a11cb1a9-1ae9-401b-bfce-3ed340b1ed89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621482f1-0b7e-4c26-abbc-b9b7e74bc599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1eff1a55-5ba5-4bf0-9bfa-98e65f2134df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1d566b-0ae9-4da2-a248-0930b2ef39db",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc98bf8-acad-4ba0-afa5-88f527d66ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e314a0d-023d-44eb-aca2-ae4602344b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79034e9e-1bd7-4109-8d32-4ffa2fe11021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e052a86-9e7b-4847-a4b4-676b18b73ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b33412-cc42-4843-a2db-4ec11cfb3017",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d914ed15-f7b7-4da3-a32f-fda592aa131b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3f8e42a-d0a5-44ea-ac05-fd6f490bb0cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45f49be-8fa7-47e6-9768-80e6829a7a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7d41bdd-0fa8-4265-a71d-c1d95b7ecccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb28444b-027f-4427-a1fc-f04163c78705",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5750f5c6-fd98-4988-a12a-c604d89bd23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e1b405-0b7a-4323-96d9-a8b882f609af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39269763-d0ac-4ce7-8a28-e7592dfcfd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8db4544-bd1c-48e3-8282-92792992bccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9bd901a-b5e8-4053-acf2-9bb630cf621e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5355a5-e441-41a2-ace8-19c8e335d75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a30da8d6-0b49-4e16-9319-da3c20b68f40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413fa906-29ef-48c9-a052-bdb4af600eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca812670-8849-499f-abcf-f91128e005d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd88fdd-6757-49f5-b361-70e43b510bd2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b27975-32de-4d02-a604-528c5a041678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a0221c8-49c9-45cc-97bb-5789f9d54d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b991609-dbcf-4f76-9c8d-861abfc26fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4fee5e40-8095-439f-bf69-cb379f73f3f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c191819-f3be-4965-b533-5840fbc18fda",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd9a2e3-32da-4c3d-b46f-77aede226172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba5e517b-149e-413b-a7a8-b4d3d8cecfd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d08d217-2203-48d6-a8ed-3a1757ce1bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab9f3b3d-3555-49a0-b354-098414a05694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac259a8-a9df-482e-9021-d8dff6fc5c49",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51519ab3-8762-4187-acf6-0e1506da98ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e98502-1509-4b2d-b1df-4ff119bc12f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0ab23e-9d70-422e-9355-05b8888eb924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "55001b28-9145-4b26-9310-4cae3d9903e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec14ea26-d00d-48bd-8656-3738bfd69d3a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd46e60-4614-4058-ac97-76a85bf78a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01621cd-064a-4606-938b-50550ef81e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e1db6b-8b6e-4ff4-97ad-77ce356de664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b9d4678-79e4-4316-b2a1-577fea9d3db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cdeb550-5bc0-4069-9097-f78ca5ae18b6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db584844-0cd9-48b4-99c2-02d0f7974df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed674861-e0b5-4876-ab53-9e731e56573b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd48296-8e45-4917-8183-4f6374f01463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "970a48b8-214d-4914-b382-c02448675b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32503aa7-945c-44c8-9bb4-1d33ae12c05c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7bf95dc-a9df-4581-bbb5-ccbc96972a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09c39a28-3132-465f-8132-640b500abbc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bcb5d9-8dd3-4c1f-ac15-e679e73373e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f086168-5a41-4ead-a49b-febb1dc01bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84ae047-fe0d-421d-9445-ad610cccfbac",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a801de-a295-41a0-888b-a3abc6988dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03044fec-c571-4154-ba1e-485654a8fa0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe123a03-2e23-4c53-9a0d-af8045b68a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "49c294db-e95f-45f7-942b-c69dbfebc7ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645d4369-a330-4d15-9db8-a827fc7a3c69",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6ca75b-77bf-46b9-937b-f214754eed7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d9dd15b1-ce6c-44ef-aa34-9e202564326f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d577a33-8060-4647-bcc7-41625640c621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "265d1529-e4e1-44bd-87b8-a6f6c42af847"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6893581e-d20b-4088-b307-07c2497be363",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bd4bb2ad-4bd9-4df3-889a-0dd728b67b21",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46a8996-d0dc-4bd8-a1aa-e81f33fcd57c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef1f6d4b-9215-4320-84a5-7cdbdcd7de89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ab3544-65d5-4177-95f7-eeda69765de2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b453cd1-0c96-499f-90ce-221e3577b852"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "065e87a2-00b1-4d7c-beab-a108c2f8e6c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74d49bd3-c4c8-4c0b-abda-c866d3b03fed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a038e63-51bd-4d1f-b77a-1323a7bc53f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "027a642d-f81b-4c28-b4f9-bd0459b64a00"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f0555e01-8f5f-458b-aad9-bdd4812efb72",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8811f052-7111-4660-9f15-10174a8dcac6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9e8ba78e-dfe3-45ff-abaf-37164350d952",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7f5af537-4b34-40bb-b90a-25ce3895bf99"
                }
              }
            ]
          },
          {
            "id": "19b70645-fa73-4cf4-aa55-b9d603eac622",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e3c30a1b-ec93-4fc6-bd32-35461af5dbf9",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "caa7b4e3-99ea-4d3e-b9e5-3fde3c7560b8",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0f17a5-1f5a-4e37-808d-99c817e38c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d72531c8-e890-4f72-a600-a6bbbbe007a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13e474e-f4d9-4d26-8d63-8751722c49a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d327e82a-5365-4ac1-8f7a-3f38f368cc3e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "98bbb107-f8b7-4067-bfcf-808683320504",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e4a3200-7227-4468-b6cd-74660d52a697",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3c16e21b-acfe-4c35-bd01-910a7b63b90a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b63fa068-eee5-4d5b-bdd9-2aae62893933",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "de6926bd-d4a2-4c93-bca2-a6ccfdb59076"
                    }
                  }
                ]
              },
              {
                "id": "7ba49497-9ad3-487a-8746-ac853d996267",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6dacd153-4a84-46fe-ae07-23f8e82ac463",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "13163bd0-18f6-4bc6-a135-efb393d52c4e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "777418c6-c450-4d69-a5d2-7d03ce80c4bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b7392aa5-0788-435c-b50a-a19dfac191a6"
                    }
                  }
                ]
              },
              {
                "id": "8b83be41-2d16-428c-8d8c-df6ec45d988d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64c20acb-0ed1-40b9-a209-528891418b7e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f6807d67-53a4-489a-b04b-58c0fad7228d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb336c92-b537-4497-bbe2-0f4a8d2dcff5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "69611814-454d-4e07-944b-01a66bd11f98"
                    }
                  }
                ]
              },
              {
                "id": "802b7c1a-33f1-4195-99b3-94a48519f76d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7896014-42ea-4192-9363-47b2c8805dc9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f638379b-60bb-4ff8-8f98-26387a9a6fff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58c098cf-3ea1-4aeb-8a5b-57900390eea0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ecb2de3b-6c5f-4f24-8a7e-19913ab9a977"
                    }
                  }
                ]
              },
              {
                "id": "6e33f2bc-ae86-4b14-ac10-466667c8ad93",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2fb85cc-8b24-4582-9d77-a697b8c1d16f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "afbdd5b1-c650-4856-aa65-060764963a68"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2946a39e-b187-4ad9-823a-4d87f8d09878",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "47aa9bdf-9bbd-4e66-a0d3-e299026d61ba"
                    }
                  }
                ]
              },
              {
                "id": "019eff0e-2bd2-450a-b4f1-cd98aba768b8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4253171a-5bd2-4702-a7c0-40493b9871fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ef4128ac-d4e8-470a-8c36-33db194ac285"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "627dcf01-9528-4565-b013-cf312cf33490",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a91f673a-f6c0-47cb-af1f-299774ae1e97"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "27cb6a2f-1ba1-418d-9e97-19da348a20e0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "640df13e-6ea1-45b5-bb74-f3b0779e7638"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fd6ad520-003e-49a8-92e6-da992b24a2a1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9eafeaef-3537-4611-aa34-762d5d8eaad8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae8f5a6d-ce54-451c-8ba1-e795fccee1d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "20835cac-4fc7-4ab6-9000-9ddc3bd2cf0c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5dc58d5-8e35-4bd2-8c69-59e38ecc9da6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b13880c4-1cf0-45e9-9a78-51605f22e476"
            }
          }
        ]
      },
      {
        "id": "82fec25f-4d09-4398-abd6-900e30ba3e3d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "408730e8-d2cb-4aee-86c8-886422bfacc5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "18f3926f-0b99-4b9d-a8f3-e102e075dbf3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f67c04e6-4274-4dda-b860-92f34e0ab48a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "788d385e-cd76-45b1-aafb-7a2622d88a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8302b511-fc72-4ea4-89e0-dd48f7e0afa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e210704-ccc2-4e99-b3e5-a99d0fbd1552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cb70bc5-d0cc-494a-9abb-2ad86e8e884a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235ced16-e9c1-41ab-9555-e5fb732b60d4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a62cded-780e-4942-be9c-80be239cd6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30e783bb-4293-4b1a-94d9-8222b2174600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8307be83-42d3-4f37-82fd-73c822d1ed07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae35c85a-146f-4944-b88a-2837d5d2cc97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e996b6-4dad-4133-88cc-1ce46ba04e28",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4727835e-ad9e-4baf-8fe2-884a96fe49cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce51d432-0aaf-4282-8f81-09c9870f13e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c569c5-ea7c-41f9-9a97-d48efc4adf77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75c9246b-e9a6-4bb5-bc9b-10e4e6d394ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e7c9ae9-5e46-4cb4-ba14-c779a93db4aa",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d15a8b-098d-4ae5-a830-5008494a287e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59fe4be1-37db-48d3-9150-bfeed2bd6c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8366d3f-1d48-499c-a4d7-f717bc50e233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7e1de1a-fdac-48a2-a6f4-af903f44a5ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795fac66-4735-4e86-94bc-8fe71c08ac10",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72903e4-cd84-407a-9324-6cb7069c1e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc505ec-e3b5-4bb9-869c-233c348eda73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dfaa4cc-a447-46e3-b683-335f59cfa104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c097db3-9804-4076-9a76-b4d9666725db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6b3a1f-e715-49e1-83d2-086ab56cd41a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960e88b9-4def-4e78-82ca-ac2cd8f922b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cccf9bd-c690-4c73-9775-18c2faec639f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f41827d-3cd7-40fe-92f4-1b89726dc2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "16951bab-9f40-4135-9678-b4183cc25773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b47f40-7fda-4373-b971-681c51988b13",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3d8bb2-509f-4d6c-a75b-1105afb76f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a682f527-bddb-437a-85dd-013e8e97928f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee160c1-ee96-48e3-8e34-12fae6eb76ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "64fc8544-506a-4595-b849-512a6eb59e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d8585d-cb00-4f7c-ba4e-0b156514c04f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec62dc13-cc35-436c-9921-42aa8586e34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "147529a8-e002-4228-afea-1c929da0f26b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb676d22-54fc-460f-acb2-63e29a61d70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "807c03a9-c40d-45e1-afa6-d5d02eb0d065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0698657c-3432-4d2f-8a03-2c3f03645e87",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "617a05a1-4771-4129-8d0d-1b10bba37ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22737a75-236f-46bc-9bb5-2b47ef69cde3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b9c203-4dcc-4e54-b986-2e278bf4fdab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af503f14-b5d8-4542-9b03-fc388fa63a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651a1911-464a-40cb-85a1-f0b61fe7bd2c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a3c747-143e-42c8-95ab-c8f14eac2240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56efcaf3-2893-4ed8-8822-ccb840b5cc2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fb36ba-8f1c-48aa-8f14-89d26eab1e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df887007-cee4-4d5e-b5b5-c06b17ec133f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3d2ebf-af77-49dc-81b4-f1a896e20714",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "659175b9-3f21-4ab4-89d1-3405cb4e8037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3a77d9f-86c9-42a7-9281-45e9e8a8782a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b95da1-da79-409e-8a25-8505c5622ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3ff897fa-bf3d-4269-bf51-45df3d785b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d3e439-5d09-4985-8592-bd185a014df1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea92274c-0f43-4a01-a6cf-a5bdfbc55b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304a31fc-a09a-46ce-b597-3438abc545c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb41eada-8e87-46cd-b9ad-c57cb5b9b03e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8e2eac6c-c574-47e4-94f0-0735e4cef87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f351db0b-1255-4cb3-bf53-01a112aee682",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f73216-e711-4145-bccc-da581aff55db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b99bf38-6080-4d77-8700-e98befe58999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b267967e-5175-4d84-aa63-f8ec57d91c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5713778-8c78-45e3-8520-a71e25f1259e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31a7607-5359-4821-b780-dbf32ed145fc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69579759-91b9-439b-ac13-9fcf09edd95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6bea369-96cc-4f84-b832-0a09637d5237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715ede87-a59e-4108-aadd-ae6eb70a6f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b08be89a-ac08-41d0-a1b6-a279f0204c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b171482a-3737-4d15-999d-cde085644f9b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15aa463e-a1ee-46e0-9245-b17e2e25166b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a6548e3-c5be-4f9c-ace2-44ac278e1ad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4edebb03-aca5-49f9-8877-2df15e9cd3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c6481d1-e85e-452e-8291-14f53adf87d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0534dc9f-c540-4c43-8822-ddd6288931c4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53662262-2db9-45ff-8d52-06aa3a79e2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5780ac2a-789c-43aa-bcbb-9ed33b26bb82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4915a899-e395-4117-915b-48c173b92e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9492d185-7946-4529-9a95-14f3f9b91f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b0589f-b13b-4ee3-9645-dba8f93e986d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31aaa80e-b876-430d-8702-4c76172599ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a5f781f-e834-4ba0-a564-d42f587be76a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5e802d-9989-4c54-98c8-097ce4a01f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d997d7f7-f842-4410-bc51-b8988db92f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06771191-d13b-448b-8c33-875edd9f886d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e03818-e5cf-450c-bd3b-5853c121ca40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2b6317-babd-4086-83ba-e484d81b44c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c82130d-3d29-4fda-a0f2-0b917efce25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d603525-9a9f-47b0-8f32-82d34c667b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a80222-18d6-46d2-b170-acffe3dab59e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8a37d2-06dd-47cb-907d-09a956d84263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27db2e9d-3119-4c28-9142-0b981338b8a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4882b1-1e08-4edf-bf20-ba47e1be41c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddeb864a-b1d9-4b4c-a828-0eb9acbe9baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c776ca4c-74c8-4028-8b49-9385054301b1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6708cd4c-6d0c-4ce5-829e-aea3f2bb6d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3fbb3fa-923d-4e21-a803-cad467b58203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c014ecec-2e58-42a5-b66c-b9dfc5f506cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a85bea5-7af2-4dba-9ee0-7130cda945ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30aa2075-228a-4bfa-87df-7779425e528e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8668a2c-93ba-488b-a0e8-4e4859264139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abd90287-12e7-4c92-be23-f016d387639d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b077fcbc-c1b1-4ece-8320-3b5efdc0d6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b624123-0d04-422e-802c-6535fa43ab70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51781a1-96bb-4ce8-acef-25e7342a324c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "defe3e81-ba12-4b08-8977-ddda8c61bc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d006c8a5-7d52-458f-b43f-76c87d459e66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c7b0e7-5e1c-4811-87a6-42767fa56c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d471609-4ae4-4169-9c7d-a78c9d6476e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353cfaf7-03e6-4eb7-9d40-b14ec5c9fac7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6021a61b-0de4-4c00-9709-dfb1d1cd2e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8230210-94f2-4162-a0ae-350fb7c39f11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a12cae-f40d-467a-b451-56771234e58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "924a2807-b23f-4acb-952c-6ef9c24a2357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49347fc6-b99d-4f1a-a888-1ec33cf8e7a2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4db9b24-68eb-4d51-a2fa-49351891375c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bc4e578-93ad-43e3-99e5-7d09b30ed6b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d442d54f-cfbd-4fac-bea6-c7cacc824934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "361e7a11-89f0-45d6-a587-632ed61af7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07548fdf-3af3-49c8-89d4-c42581b812f3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c443a83b-2d40-4180-a087-7803421703e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8e9a662-73fa-4ea9-b67a-16dbd396f223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e181f8c-c301-47d6-859a-ab3d0536e075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07d67ec7-09aa-42b0-8ae6-36bbadbc908c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d69a0fd-cea3-424c-8e51-0f09b4cd3e76",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2c790c-7bf0-4b93-8d51-e811280f8ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "162f017f-c9d7-492c-a511-4c90975937da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b83115b-e57b-47d7-b3d3-eea1fe6deaf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "371338b8-2ece-4c9f-956f-fa6ec9709935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87bb3ac7-c1ce-4846-87a1-894065af5bc2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc7ea63-f443-45f5-9673-d47026441fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "750c096a-3719-48b4-b113-d61e4dd932cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af988cb-bed9-4150-a8b2-a613df3c9e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f34289f-967b-46f0-a22a-5e8a49d81e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a9e7c1-13f3-426d-94e6-6ed574b48ae9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70752a0f-5472-44c9-9670-0ecc5310b1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d53055-7dc2-4995-b7c7-7ee54d6779ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4d1a89-e0f4-4802-91cd-c770e821d913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21006863-962e-4d48-a6f4-86c614fb8ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80969cdf-d43a-41d4-a9cb-025d3494e926",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58aebf84-490c-4049-aa0d-12c70abc6efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "405d0410-85d9-4811-9efa-c8407f5b1128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34287b07-beda-42a3-b5c6-3b12459d080a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a88c45-dd53-4f9d-92bc-95ff3d090335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a19b5e-5cf1-48a6-a1c6-c41933564b6f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db418a9-2b10-41ef-8765-f33c4627ffcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3bbd0c5-e270-4bd0-a633-d3319776c669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8f35f2-9a83-45f1-bab3-bec30d7e7c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5992914c-d3e1-446c-8ef4-0afcbec715ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632f8393-17c1-4caa-99c3-fbc3af55f3cd",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b3d354-03c0-463d-bafa-099f4cce0e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0468d566-7c8f-41f3-b81d-68da920bf998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3814f84c-f5dc-4863-a42d-06f397551624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad94a16d-b1d9-4d42-b7fd-3ce256952cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d8b9b9-72b9-4402-91ce-df365077cd43",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da87b71-26e1-46e0-a96c-c426137e90f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b8d815-271f-4e15-97b8-6c962025f94a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73e33b3-ef76-4369-98b1-43714f28d3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7448672c-81ec-4286-afeb-5be819226f1a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a90dcdbc-6720-4f94-9541-b1792e1aae14",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7f3a5c8d-cf33-44e9-958d-6a9c5db4214c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c070f0-5faf-405a-98e2-51523e64b6dc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a6a8f1c7-6597-4907-8f35-14ae5a18c131"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9cc984a-65ef-4621-805a-b8aaf604eb46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19476806-137a-4f70-b7d5-0aa4c1db5cf3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c1f6b36-270f-4363-8a1d-ab36ffe76d55",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93faecc7-87c8-4fe7-8bef-51859f78f2b0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c159650-7734-44ee-a9a9-e580ed2557e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9fe1348-2867-4ac6-8bea-392eef5fa725"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b1174c60-a8c5-44fa-910f-1a405749b180",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "034dd3c4-6f49-49d6-a198-c1d42690d6f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8b791f6e-0fdb-422f-b822-17fde7ac9acf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f0d25e54-573b-4025-9b47-2d6bf8f126df"
            }
          }
        ]
      },
      {
        "id": "ff1b0de9-096c-4342-98ac-3d1cc702bde5",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "b47ce406-1642-4d90-a632-14bb8781372a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "496c91ea-5fa7-4486-aad1-84fceea22f03",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9da45d50-6d13-4753-a41e-52b9e46f99fd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f6e1c2-4379-4458-9eba-0758e9b192ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ff3afb-3779-446d-aac7-7527d45513bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a070f15-62eb-4185-b001-2e19f7561e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "26d503d3-788d-4b24-a555-b79731c9e70e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d71bb7-17fb-4c28-bbb8-885d62dbb178",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6044f8-a5e1-4c0f-b3ba-2955b01aa29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f995fb0-87a9-4d7d-ba52-d875ba80918a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f6b11d-7667-4450-bac8-fa9c0d006a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6be91c6c-16d0-4b9a-bacf-7b972e9eb342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42567d70-783e-44b1-af53-92934c9e819a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabea570-3499-4d03-8d6c-0dde9be30213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d26ce0e6-035e-4512-a24f-7395a0bd3e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548d44e5-2fc4-414c-b526-e90545340ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e17093db-abba-4c8c-8a56-c91a7102bbfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9a7ced-4dca-4ed0-b8f7-9238c2ebf6a6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2960ba97-c071-4606-a486-5043b42d8303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08df8d88-059d-4eaf-8efd-ce278eeea067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40185745-376c-4cb3-9b11-27dea444e21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3785e109-d6ec-4e24-b0b4-9c340ce0c9d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1178f9eb-fda6-471c-b9dc-fb89096dffa7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2270cbed-1038-492f-a2a2-2035757c06fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed7e3798-ef3e-4164-8689-6cb20b01b0cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252ccb84-0344-422b-80f4-2deb8c9926ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b45767d1-eda4-4392-8980-a5a0dcc78fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8315ae-c600-4167-a863-2cdf58de03f4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b70426d-01ef-4f2c-9844-609babb11710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53dce437-cf1a-4d2a-acc3-d00ea6703e7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c809af5-e7c8-4119-906d-55a64f4cce0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "61124bd6-a471-4c2e-93ea-3655e450b14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc285be1-641b-43a2-9bdc-b6ee663a9d76",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd75d0b-649d-4d61-9cdd-69557974f4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aca052f-5835-4f1a-9671-c2a6892b7890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30882fd1-8c6d-4ad9-91b1-6fc10c24ac16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "04f9f365-7bf4-44a7-a202-810dc25c4438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090c7ca7-1417-4ce2-9f96-90617bdaeb07",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94f4180-97d3-486c-9ea3-178f54d00bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f3dd1f4-64da-4be4-8795-de7cfffeba9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85cfe5cf-256f-4716-9afa-127862696eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03db9854-f1d2-43d5-b83e-abad04cdd439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a502dca-6ee3-4758-b8fb-2546bef71799",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d7f6d2-54e6-4252-9238-7503641ce4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90d1c0ed-18a1-4f76-925c-d360ed345cf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d097b7-bdaf-42b3-8190-883b6c26031f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e3d1f0f-0ed2-493e-892b-c19bf41ff4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99c4a96-69f0-46d4-bbfd-be42f5cede9e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e412755e-223f-4c10-9bda-d2f266b9d83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be2ee67c-51a1-4345-8072-fb4452062c40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ab98c0-2ab1-48f6-be83-24d01950f08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ed1b85-c516-42bd-9d01-7aa66abf8c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9e9aad-52ca-4bcd-8fa0-bee0ef87f1bc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df13ec1-05a9-4c89-a7c4-b01cab0383f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a046278-d855-4d3f-8270-9774aac6ef4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad6d121-0092-4bf2-9135-ebe1b59930c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "18acb03e-e4f7-479a-b31e-116ab8a33c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d8c064-f413-4fe2-9a14-fead21acf77e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bdd8e67-f6fe-4d13-accc-9138c4161ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7ae7f66-affd-4198-893e-8c8d95e8215b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ef76ad-51ac-454b-9d81-63981f106cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "85d999fa-173d-419c-bfb0-c345251be665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121682c4-2177-493c-9791-66d1db017bd5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde244c7-f397-41ba-ad66-75c04746729c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76ea65c3-204f-4bdd-8a4b-829b254c11ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512fcf48-46cb-4bb0-9c60-06fc3c08b320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5f91477-9cad-4a75-895a-42b37dd5ac8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed05a46-7e7b-4fcd-a4a6-20505c22887b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf53fabb-59a7-44ec-9976-bb5ef56a7445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a4f1d51-c26d-4c54-8fba-22b0c891d36b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c540f1cd-44c7-47e3-88c0-c38f2affdb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "748a0e6c-7b70-4cb6-b5d9-b2617533f335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90ba134-4564-40ae-ba24-59b328edd8e6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0608bea-e953-4030-baab-8535efc12fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e996d450-63c2-4ab7-a6ce-db0c2763bdf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4c4416-898e-448a-bb57-7532f81d049b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "896fbe69-dfd2-4516-bbcc-1671da9e0e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4568b2a3-8417-4a0f-8bfa-c4a89be08cde",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1ffad3-b52b-44c1-9428-f993ec5e6409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf6ac5a-77f8-484b-9d3f-0be90eae833b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c06e9a-90f4-4322-a276-6eb809a75b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "835b7468-ac7a-441c-9331-8fee6debc78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866f4fcd-55bc-49ae-b0c2-b6cbe0073bd5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef839c6-5bf6-4360-a0b8-ce59b589d3d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d40f394-5ef9-47cb-9fd3-c5c56d10fa3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a636f30-6924-4bc3-adff-3c78a035ab93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc8aff64-7fbc-42e6-a2e2-f6737e2231ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e655a14a-b854-4992-b20d-4c196cec390c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7809cac-c764-4909-b570-2b223479cf10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c038af06-3fea-4cc2-b8b2-0e9bc58d258c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "665f69a9-3977-4c7b-b0b4-52c587bb532e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "56f9a3a4-1cfa-48f1-bcef-059496d0e153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30737de-d710-41c0-a344-6d75af0d2296",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c137ad-3d49-48c1-ac48-5f94764cf00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "098b2fcc-da94-4387-abe1-f8139ad447ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350455d7-1be4-4fa8-b208-1619f9efd8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9128595f-2ed3-4386-aab0-95913a2de449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e55a8f-de5b-43cb-8d6e-f589852c2896",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "748b25d2-0162-4cad-9fe1-e8d458fccfeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f1c1e12-9fbf-4ae3-ad9f-837665e3e4f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0ea7c8-ef91-44d0-908d-c0393faa6e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3829a61c-79b9-4877-a8f8-710865e50d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd6ee46-a3cd-4134-a4c1-2bb04a7c7dcf",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ec574f-f6ca-4745-904e-5a49e1bb8ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44d27f95-1074-4d62-8240-f087b3c20a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94258149-ac65-4c4b-881e-5188993d9c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31698e8f-6ce1-4a3e-9b4b-9fbfbaebbb96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b1d077-f546-4c29-a4a3-ce82655a3e1a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82b5b87-d71f-41a0-b14b-d18be818f2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d17d172c-421c-446b-a732-04bb0624eb85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53592f54-cd37-419d-903d-4ea4096875e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d697a77e-d0ae-4734-bf2f-c3b81f21afbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e3ce2e-ee25-4d87-b231-610b57971b19",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e21eaeb-25a3-430c-ac4a-7093621f4cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa9aa95-388d-4a73-837d-dac10077c108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ec2c6c-47a1-4e50-856c-c4f310597aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "341ea951-7d4d-4283-99d9-b63b245181b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36131470-a407-42e2-8ca1-9a01bda4c561",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c80545-d398-45de-812e-86a3d32ec225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b3ca53-e84f-4e92-9717-848cceee1bb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f997815e-b410-4501-9515-f92c4f795402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba8000a9-efa1-4cbf-ba99-3024e3c7b16b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9033dd-4bd1-4ee5-92dc-9bdfce7de30e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f049aa-3c11-45a5-9626-39c62b747be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5103878-5df3-41d6-8e0e-aedd75622320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd07862-7f87-4dbd-8d98-51f44f2122db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4806e344-38ff-4871-835b-9bf026ffdde7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28201440-a985-434b-8bb5-ae6a9df79d7d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d79523-3356-4301-b47f-a323882cbf4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70931490-2dcc-4d4e-bd1f-3c358d831bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5f3ed7-165a-4fee-bd94-56ee7a402dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a074a93b-57ca-4720-ad3d-cfe0cd54eefe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee67a2f-215b-4281-bd15-ed0f05895881",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b774bdba-289c-4eb5-a6c8-640897a00c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc9f61cd-abd3-494a-a343-49dd3a0eac4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677e9287-3874-465a-9534-c95accca588c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7922319-981d-43e6-8a38-03de265714aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8852ac-5874-4ea5-8b10-c59e5f6cdefe",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa4f0f6-bd2c-4ff8-8e22-f469b47d2a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f5bd86-03fc-4750-9dfc-bb9761c45416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beebdd8e-b451-43ed-8b67-dd5e6835145c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bd8480b-d35b-4855-b61c-b2d50563cd41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c190a2d4-f476-4420-9e2e-0290fd2f47d7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de26ca1-3eee-412c-8b00-52386bd94b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bcc41ee-0c70-4fe9-bea3-4c0777dbb709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9794a840-aea9-4270-93fa-432c00f11593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bdb96d0-636e-4558-9a16-be06077edd5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713952ba-e3a0-442c-82dc-7303bd4fd677",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f5b460-684c-4002-b807-ca3f1ba2bff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d437a4cf-710e-4afa-a6de-1963e067b6e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef9931c-98d1-457f-a76b-e5fc89d3d4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc67bd54-9555-4a9f-b9e9-84b48b23853c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa41be7-1ef4-488b-a539-22ead846ab81",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5966d31-7a71-4d4d-888c-dd3e957408ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e451ea3-48f9-4766-93a0-d4d6fa79d660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1134316a-33da-4d57-94f2-8601a05067d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d4f47b1-42ae-449e-b73d-cec556e34358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b55966-51a4-42c5-8e6b-d17680cb44ce",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8029ec53-510c-4e42-b864-0dd1ca19e551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bac91bf-7221-409f-a4a0-cfeeaa8a8b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "760a63a5-2781-4376-aa17-b8754e2a3e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4bba28a-af91-4f8a-bb09-a49100689e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14df608b-6886-476a-867e-b1347158ca87",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15d8d80-0490-4f7c-bab6-44e9dfb2cb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d7f14bd-02a8-4d1e-b3b7-f6458a7b4106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93939982-3506-43d8-9ecb-945a13641313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1f934c3-087c-4d8c-86de-1b89ff792c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3937ea63-4962-4b15-b7c6-59e230be8c53",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5204d6ee-45ea-40e4-82d0-adf2ab588241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7864285c-84b4-4181-87ae-8e51923f3342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53b8324-0c05-4683-b65e-02e8601ef169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "faff5647-22d8-4654-b719-e3a48e59bc40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d0d1cc-df3b-4d8e-b69f-888d13c511da",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6be4cb0-9d0d-474d-8721-2d3c3277c3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda78256-b917-477a-91c6-c190084c4201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c1ab19-7474-4c8e-ab5e-aac37c71cecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "057a3577-f69a-48c7-bf0e-69806d64b3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb763e7d-25f2-4803-9d3f-514906b71366",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72de927d-17d4-4c88-b8db-31bd6474d2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d5e0669-6276-4074-9554-f69f74ffee25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ad2de6-c922-441c-acde-f0ae9054a6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9cc071e-a3d6-42d1-88e4-ee20b7f7f835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a2f19d-65e6-4045-a44e-c63f6d674ff2",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df34012-3777-4b32-98d7-bb195f86bf63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85abc698-276d-4588-a073-12a4d8af7652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0c5f83-7816-4feb-b758-991b6ed0648c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3866774-6926-4a8c-a9d0-a90f7fa912e6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ca1ba455-690a-4af5-b46b-d564ca83669c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d1fd2b76-4c9a-477e-b759-822aa2cf3784",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a34d74-e5fc-4ea0-8840-179ffd2c3e0c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3c1c4044-2e67-4790-830f-e94a954a8d9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "428f6b13-1832-43c0-99ac-872b673b19a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cff3e31a-d106-4d95-a247-880d98459629"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92f9c495-e544-43f9-bc29-2961a4f41205",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43a556b0-58c9-4b4b-a6b1-deb7457d7655"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e30d794-1ae0-4890-9760-b45961efa341",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8011145-c552-4760-a1d1-51a933c22418"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0bd827b-11ee-412d-a34f-43e2e1c7d238",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5f2e216a-425a-4fd2-900d-d3dcfea05d25"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b55208c9-f42d-4923-9d01-a93f54bf2b19",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2b93ca2b-1964-4121-a350-fc3cd5716cff"
            }
          }
        ]
      },
      {
        "id": "f2b35239-c72a-4bc2-b1bc-28ab5babd953",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c4dc2007-3dc7-45aa-80c3-6b15a885f2ba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "63eb6c3f-ca63-409f-ac36-df1aa8192a2d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7d81f149-f449-40c4-80f6-5bc7ff795722",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c7ec4b-8467-4fcd-a675-859c17e142e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aa14b21-df92-42bc-a144-37553ff656d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c94a16-234d-45ae-8e0f-2c1b93c8206f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0244db4d-57d2-4172-b5bc-52c9c1639f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a1aca73-13b7-4611-9164-b4721c062a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46ec689-dc04-4c84-aa05-89bcb3181197",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c4fac1-3944-4288-9525-4840bdd1815d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa5d8b3b-b2a3-4a4c-8bf5-a39846730696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aedc9b97-52df-45e0-9f5d-6b4b3e917958",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "750eb052-32d2-42d2-8251-9a618558de5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9948644c-8384-4374-82cd-a64c8df331af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93196647-5c27-455b-85d6-a00da9d745c1",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c72c10-4e15-4cc5-93f5-a4962eee6707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b8a42e-ffeb-4a9e-8aa8-c766a6638b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8464a71a-f3a9-4e7f-a83a-e291014d9460",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2efd6c-d3a5-4344-8861-9d5125c4ff85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6cf2094-3907-437a-b01f-023b051d3e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44619910-e372-4d07-8fb1-6463d67beda9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9bdb83c-f864-45f0-941a-a336f01cd3d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37283cc7-daf5-413b-a34b-c61c30868817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "565e8582-a696-462e-aa99-c58625511998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53d06864-8a7d-4ee5-a3ed-2949b36e8c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9389f0b3-5cff-4ac5-acf9-36e1cb015376",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3231ef9-09c7-4105-8bd4-4bb81ac3bb02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dc02636-ee3d-4451-8ba9-c9096bfadf68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb012042-e9a4-4aa1-a1f3-6f9fe3831374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b0e51c7-f70f-4d01-b927-fb2ad25d72ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd3615b-803e-425d-8891-c771193a9820",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8375a5-0c6e-460c-a769-0178748d749f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f331911-e200-41be-a2fa-c060d47ad9e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4059a89-e956-4216-9b47-439cc37a94bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef51840-3c2b-4e90-b01a-a39f59641f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4276cd-3199-4530-9f25-ce483fd5e310",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b84a4de-1616-4eb4-9c23-69116a7a80b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "121ae65f-dbe1-401c-bfd6-afdcffe1563d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50dab05-0510-49c1-afbc-8db169dfe0d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0af114a4-fb80-4899-ab41-67cdbc7493a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26c2602-5239-493c-8456-0c2a421f2f58",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b10f407-c353-4d09-9175-25c5946f9e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb5d29fe-64ca-4a67-86e9-ce1845e8113b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75498eef-7bcb-4671-a93b-4f9d6a1f117e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "303e8ce5-9a3f-45a9-a9c8-13129a4a6dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ff4723-4830-43d5-91aa-d3b2baf77031",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0fe199e-b144-4a59-afaa-0473cc88747f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48b11278-13d5-4624-b64c-1177632ccfea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3929be1-c9b8-4385-9711-676f815efe40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a40bea9c-2476-4930-b7fa-34e020984f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ada908f-a2ed-4b3b-ac5c-816736bc5ecb",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4eaa17b-4bec-4e63-bd4b-1b3d846e9fba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6c79a10-ad9e-4afc-b1f6-4ef2bfa1d0fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3a4319-e4e3-4b77-81a7-299aea6e142c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c879ae6b-2c27-4054-8e6d-5eb3d6bd121b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c0dcd1-d6b5-41a6-84e4-34eb469ad918",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04dfa099-f5c4-4c6f-9956-5dc1cd92fab5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6455e35-4974-4ca3-8e89-be07d3c32544"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3eb0ae1-431e-4bee-bedf-68ee91bbc738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceab39b8-f834-4950-89b7-1f379c47a8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ee4a80-280f-4699-b1cb-29d5646a23a5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976e8f4b-16f6-4ce7-aeb0-31c5fb13f9fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bca15885-1668-49af-83e1-64182603384d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b71cba-65bb-4d1f-a977-3315c01d3526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f231ef7a-948c-4d01-ae1b-f05115e28678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803e94b7-5003-4f5e-9d47-d2885bb82ac3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3498edab-a880-4733-a408-d5a9dc929819",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e27a055-e32c-44fa-bed9-80770994194a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eeec780-8384-44f1-a09e-792297579faa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df6d6cc4-85aa-4c80-a16a-a54e31b50210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d05a0a0-bff9-43b8-a375-af0fbb4426f0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1833700-d092-4329-97df-f374a4fe6831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc4994a4-42c5-4c31-8a9c-9c836bc13294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec4b198-d21f-47fb-8b60-148825a50fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f0916c3-12d8-4cb0-9e38-cd1f5e6dc1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "510ea468-6970-4e86-92ca-9973ecf59e60",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac4db06-7fe2-402b-b2eb-852113adea38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db744811-36e5-45a1-8eb7-cf6455cebd75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2a3fc1-ae75-41ab-8f59-bc69ed0ed417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea3e868-ec30-4190-9bd9-89cfc5f616a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d8cb85-c492-4907-a06a-2ccf2cbf02bd",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4294db95-934e-40fa-8a82-4e6af0a76289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73cb9ffe-094d-4377-a7c3-981dbb735bd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b792ab-a20f-4b66-87e3-31b6505880ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59695b7d-5b31-4b71-8699-48a559471fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c44fd2c-ddbe-455c-8d90-87f6fea567af",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3c7d54-8273-4f99-821b-6fa5b4e6f1c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25810314-dfd7-4d10-87c8-4e7c7543c155"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "243c8ed5-d70b-464a-b7ac-c7a038612466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12218021-ce68-45ac-91c9-9c03375d90e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c7e9ff-e7bf-41dc-90bf-1ac961832114",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0bad394-40a6-466e-bbbb-4e15fbf1f5bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5789ed56-4bbc-4316-95ec-eda808a9919b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82f605b-4385-4873-9f9e-d34872ce2c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d57d0969-e0ec-408a-bd11-d1779145fc53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6974b1a-2671-4126-973e-e537bca1dde1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396756f2-005b-4fd5-978c-a3ac9a120190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7ac24fd-3279-4bc0-b126-8365e73a2506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5723866-a130-4c17-8f31-ebf13f29d092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b9ff869-f7d0-4d38-adb6-bec85b92e67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c66be4-a4fa-489d-a81a-282c479134c8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ffd0b9e-455c-4b57-9ef3-8da21727f041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e759fb81-ff48-4f49-bfa3-72f36e4589e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28b3955-f1fa-4950-af34-14e8c3af6555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed7e989-b167-4590-b7f8-15a3cd53ede1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d833cedc-77c7-4f2c-ac3d-1656ebac92bf",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c0f2eb-4c66-453b-af48-80edfa14d7ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd0c1226-823e-496d-82ab-9040d65af699"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf1af71-2b65-4a73-9881-a2197bcc94f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba0cab85-b1d4-4e40-abe3-02ded26eef79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b6600d-ade9-4019-acd3-741e23931668",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80919928-b3d5-4e1e-a3b8-1ae9f36b2831",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f35fe19-4676-4b10-9dc1-59371f45e725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "950b508b-bdb8-4633-9250-7dbac9454c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee3853c-ee51-4b1a-9d5e-92cb12ed08a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc741b95-80d4-4f60-8f98-798794488bc7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d96317b-6617-4aac-bf43-60a9d57dbd8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91bf2705-82e9-4048-ac05-c0918ddb47d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb83bf7a-db49-422a-ab64-6dfdee1923d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81009d11-034d-48fd-9d7a-86b78d8f5482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e7a827-0a4f-46ab-b459-be0774bf8221",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0045b597-0e7c-44ec-8a87-c2bcf2e4f208",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed818708-4087-4b55-82e4-4db52e58c9fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3397d964-903f-46d4-bf66-8eeae8844e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4703e563-efeb-4267-8aa0-23c21efda097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da920716-906c-49c7-a2a4-f40df2ab4452",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d6169d-1150-4cd7-a6e4-f09c09582458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f3dd51e-6d1d-4cf8-9dea-9826401857b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd64b76a-00ee-4fa3-9f0f-d41771c392d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01a672f8-c66c-45d6-a116-18544b46f4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f1bd978-50b1-4c58-827b-52128318b16e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44bc8ac4-040d-4c4c-8794-462a97152dde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce83ac34-c23e-4a99-8ecb-efd06ba42e36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d613476e-8fea-4316-9084-31b797dc6c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94b3118d-e2f8-4d5d-b479-69a9a3e2ff33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09903b99-a114-4e0f-a4f7-71a0ae213548",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64efbae-9f81-45c8-a8a6-d3609263ad28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be6fd2b9-4dd6-4ee7-84e8-760e03cfff6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6456c45-bd6a-45c4-8778-85b398eaca56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eddd25af-687b-44c4-b41b-88264cfb17bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edabe792-b164-4151-a741-638e68e276cd",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29eb0770-44c5-4d3f-bc4b-d7e27a2d4a6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e27780d-1c34-4fc2-bf70-13d7f9214977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42d898c-e8d8-4688-bcc9-f60d2ee1cc8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0a1adf9-d14a-409c-a59a-3099cd7be1a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6699b0-544f-404b-84f3-2336516c8c8a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d173ff-2484-439d-8853-101043d1fc86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c4f69aa-c929-4574-90eb-e075d894f2ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d0d774-ce3c-432e-b7cc-733faa3642fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cbfc4b9-f98b-4ab9-86a6-e43c931dffb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4617ee0-ddf8-4cae-b9d9-92b0602c4c8e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acff7e6b-0971-4602-ab0c-edb2b7378502",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af15d850-891c-4a04-860f-98d227ed0b24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5193ba21-979f-4b36-93d5-4f4bcf29eaa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b69b7a-4ac1-4a71-8e12-6e5eed87a80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec78630-515a-4ed4-9b72-17a4ac9bfc58",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b67ef2d-d6da-46e4-9044-a0ef4dae60de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c40b37e-fc69-491c-bc49-0be0c3e3cd2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c1448b-3106-46af-9e5e-eb015321ed7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0955df56-7a2e-4a29-8ac6-7ee590d70be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6464eb1b-054d-408e-ad4a-ee445bd71c4d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3541a84b-38ed-46f9-82cf-ebaf8d9749ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "947812d6-59cc-4b8a-9aae-aeffdb767998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aca0261-b6b7-4252-b446-e95bb9fe52e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a197308-bf60-4a2c-b9cc-2e7555be3cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74bd222f-c661-44f8-8c8e-50e10f1f07e7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d57496-0f57-44cb-9160-31faa041cfd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ffc92b3-5ea1-46b3-8d2d-64baec1213c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab5769b-3d95-4bcc-bda4-09a476270373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f41c19-f233-419a-adc8-a6582feb60de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3abeeea-3c54-4613-8630-779cf1feb356",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d27584-e501-4f7d-8af9-8f9e9f5c0d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b930f038-8a4a-4756-8a7c-624710d0c016"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8184c1e4-1ced-4e01-8f12-14f5b2ce6ac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ed00ec4-b270-41a9-93a7-96a1c5a276f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652f2c18-edfb-4d1f-9d6f-d7599276e738",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2807806-741a-4973-8467-228b2048a4e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b2e0e4-afd2-4d55-8254-21b11fa552c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97851f4-0bcd-4bac-91ee-fdd279869cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f1bf8b1-97a1-45d9-b449-0e7524098cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f3fb52-7636-4bcc-a02f-231763527d3a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450dbaf8-4505-4f7d-8e9a-49a7c502ebdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8fb12e-7b45-44fc-9b03-77abf8664d5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59238a2-5a5d-4229-9856-61a9f631d978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f01f8196-0de9-40a8-9c1d-852f4e61fb8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f432892-ec77-4ab9-9712-c43e25ca2d36",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e7694d-ea94-4da5-9bf2-751dc9d57536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d2d151-787d-47f1-a6cd-0c5d08fbe2b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "610b0b90-7e38-4e20-9b79-485c6cba32e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58948db0-a19d-4c44-a336-c3728a88680b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921f751b-62c8-4561-a9bf-0cbb18ed2e31",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41c2e12-f8a2-4778-a876-7406cb044d51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe0711b-ad38-40f0-b3f9-0ec05ed0b892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64163c2b-c86e-4620-a8ed-1477951193f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66a49733-ea1d-4d1d-b301-bf7ab971f733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85470de5-6af2-4ec2-91c1-a194e6ba14ef",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6541de-1ae5-4307-a564-59c925f47c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e90335d1-3cb3-44f1-9201-a34dd61eb4d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2152e22-d9d2-41fb-81ca-99f88c193227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d88f5a1e-4112-4f9c-8bc5-9eaf06eb91f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32e5050-3da0-4816-99d3-7c0368336c82",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c454de-ef80-4eff-bb47-e46c14bf7859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c0ba7b9-5068-4157-b6a3-2c83913553cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a208c2-2f7d-4b10-970c-66ada34d7390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c95827-0148-4b21-b479-24df332dba49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4f87f2-a453-4d50-9161-3bcf9b3b39ad",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84047e6b-a2ba-4f62-a8b7-848ad4dff94a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd5dda7-c430-4dc9-8c32-927ed0ab08a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10a777d-8176-4f5e-8f89-6e03938d8385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2026b64-b82f-4a5d-b652-6793477b93bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e3aa732-0b39-44d4-bfd1-21b8dbe1e382",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d57573-3629-4dc4-9b50-f8c5d5c8812b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "211bde43-4c44-40c7-b8ad-40af3149361b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33484fd-727d-4287-b58a-2fd670fe324c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f51ff67d-7a13-4ee7-97d7-5cab0c958a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db468d1-4a23-4edb-bc63-f3ab5f054313",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2460065e-be6e-4d9d-9308-38e12d6d5733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71337e14-8a82-4d91-9578-fa3a64f1b68a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8110ea74-6188-409c-8d9c-bac41d05cde3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee10afca-a61c-478b-a767-027f693d89e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f50030-be37-42fd-94a3-67163706d2b6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb56ef7e-f2b5-4d5c-84f5-bed3a9f41410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c59a51-7f62-4b6c-adf2-417287d780f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b4e654-a7c7-42d6-bfd8-6384d71b6b12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9598c7ea-2690-49b9-8e7e-9285c63bc6bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eae4200-cd9a-41e7-8df3-744fa299d544",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a0a68f-bd8e-43be-83bd-12284b2cf19e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "438d1460-570f-46df-a08d-f2f84f9a8898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "877783ed-fa0f-4f62-b708-cb586e16209e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc79a33-9413-465f-a77f-00191960b149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a5e686-449d-49a6-8886-6febbac388c7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7185be6e-a777-4e5a-ac0e-016d7b2b067f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c982608-eda4-4d20-9469-edf71b88e6a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9cac72-0831-42e8-88fc-9a78b747a273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3c87f27-60c6-4cde-9b6d-eb493bf661e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15c17a2-a496-43e6-a8e1-ab79aaf5f12a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c660acc6-9359-4d48-bd04-64ee05beac66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10005bc-b35e-427a-a610-1bbf8b7cbc9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2f3946-461a-4412-96c2-e914bb6c3fc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ae3de7-a8b9-46d6-b827-13f99ebbdea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4244abd-cac3-4806-aa47-7df4461f3c53",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca8c54c-b0e8-42b2-b4e6-fad8aafbbd9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a42d4c3-41ed-4691-9a16-c977801600eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a0a58b-a820-4963-91d6-1a8cf392a3ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c93541b4-2f78-4fd5-9382-96bd70206f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206752cd-95d4-4417-8745-a918e6671c33",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2ac00e-de82-4c3c-8f99-8085f8329495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0442fc0e-0405-4928-9958-0f7c805ac9ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc54ece8-b517-45c3-9607-2eccf39666eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41213844-396c-43a2-bee5-936f91a084f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56930a8-80f1-4b23-8371-e24e779ba810",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868965cc-3378-4577-83e0-2a7a64c6a4d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7be7bf5-6601-4d81-b6da-fd9c02ddaba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58592503-12de-40a6-98fb-3f8bc95f2f80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58739377-e18f-4cf4-afe6-528f77947cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22772f6-e1db-4c69-b33c-793551ecc737",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2017f1ce-64f5-47cc-ad17-18020ca79af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57bab866-c025-493d-a348-b62cb1902d22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4256454a-7c2d-49c7-ab4d-10138ddcbe8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc25a2d9-e0bd-45fb-86c1-67905fd6d4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5db5775-056b-47df-8a1a-bf93e9baba32",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa5501c-fb1a-45cb-991e-7ef13efba80c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "119ae7a8-0dc1-48e1-bdb2-c24690802783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97fccc2f-6468-42c2-87f4-62186e61afe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01eaf6e1-991b-4633-911e-8ac3c0c5d3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd85039-8097-46ba-aee7-b447895fa291",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0274d7b-1a55-4729-8244-a1080428357c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b076907e-b42e-4921-b618-d8fa4b11cf0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0833466-1d15-4266-8dfc-67bf234af28b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98ab56c7-bbb5-4a32-9b75-cb2a5d1fc599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8211e66d-0ebd-4e2c-ba46-df2bb5d64cfb",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f9e33d-1245-49f1-85c9-1014d3f54be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f96e444a-2031-419d-a8ea-e5152f9bb570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5889a58a-1eb6-4437-b199-9101f1fa358b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bde9961-d410-4507-87ba-d3d8392db769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd2717f-375f-411f-b8b5-239661fac410",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de817a25-a835-4fa8-b200-0a9dab0da7be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04384297-1c64-49a7-87f5-5cc1e5b8164c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6da2a4-1e94-4100-b740-65a637f7231d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "272be632-0fcb-4078-a4e3-70d22d2505bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6999df4-ec67-4c8a-9ec0-482ec8916752",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a0fd65-0507-4e13-95c8-349472505ee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7c148e-25f7-45db-a0b6-b531f5bf9c49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1e74a2-0d64-450d-8420-190051278216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea3040f0-f8e0-4a1c-8838-1ee232ade914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7641c374-18fd-448d-8825-1ff9cd20d731",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feeb3e99-7f26-4c40-bdea-6e27a6102d25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7fe92fc-cd99-4b7d-b083-67df2d5a8f28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ed06f5-8f51-42e4-9c0d-ab7a74560481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "366211c0-273b-45e4-a83d-82cbca7fd4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8245a34-23cb-49c9-bc24-51efbeae92c1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce41726-47e8-4a2b-8f6e-69a7f02a46e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "596e21aa-0ad6-4e2c-ad0e-f2cb11e00618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b6eed6-4fbe-4366-833d-ebe2abccd49a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e96ac2-de69-4962-8aaf-f75685264e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3b9432-3fcc-4035-8834-19e66a48aa95",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca07d46f-7699-4e6d-af99-d4aa39096ba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b1f878-cc31-4d60-977d-e9e037082284"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c2baea-fac6-4ef8-b8ef-59c20070abd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab3bb734-0995-423d-901b-01386ff1d9ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffca2377-eaab-47a3-8513-7a47a477582f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00dcba77-09c4-44f3-9fd5-2862ae21297a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0deb4088-4332-4877-8fbf-6a6c23054e8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fd4524-7011-4767-bc3c-a9170536e301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf0d174-ccad-473d-9c8c-bf270537aa81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7bbb87-4bdc-40b0-98c6-be7c9a0cc7d5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c4dc5f-f843-4d1a-93ed-195520f0512e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8af56eb-ac00-4702-ba29-e916651871e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4a34a2-4f80-42fe-9360-9e51c5a94a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65a07fe7-770f-47dd-abab-7f5ea60947a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d0eee0-bc0a-4f58-8fef-9b4ebb283273",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2cae5c1-1d36-49f9-b761-00df9431d8d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14025a47-e5a7-4809-95f3-1b19801050d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39fb0ffb-a7fd-41df-a72c-2a65958aaf7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5d04e18-3794-4c47-963b-43362b61663d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ab218e-18a8-4686-be47-2c3a191b7045",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beca6e13-0dcc-4767-a15b-296e34b0c253",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63b3c217-e87e-44fa-b99d-6a1f155e9cb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2109c15c-136e-4f16-a12d-31f1084bb209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e5083e-8b85-406f-b831-3d8fd8c237b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8faa876-b972-432a-9a91-cd2b4383a585",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fedbe024-4269-4531-8e7b-73730f260e83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbd421fc-116f-4e1e-ac17-5e9f1a53155e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57788b37-3fe9-465b-a10e-1a75fe4bfa4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfe4ef73-ab18-4ced-b6c6-d95c2493b8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f407aca-6a4f-43bd-a74c-7c00e49dcdbc",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ce0bf1-fd53-4554-b8f2-5869b01f474d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ff03081-a9ce-49c2-b251-caa3803bd7db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade18aeb-67e4-46de-ae41-a5190b2279cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36c63ba5-766f-4891-89d0-c6c36f74f003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b29fb48-f2b6-4497-b758-d20527c5cb06",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d9fb91-bc32-4575-9c6f-1fe3bcd093c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb9c0a23-2b5d-4408-9801-ef13af1a7e7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "702636cf-d2af-4dbb-bebd-16f0aa915a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5299cf-c78c-43ff-95a3-b75b7217ce43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4679bec2-2e52-4c05-81b9-a2728810bf21",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6166489d-5bfb-4146-83cd-d2914cfeb346",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "043a0067-2155-4398-87a3-059f23524ad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16ef0db-588e-404d-8e3f-94b82db94d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44db790f-5b29-40e8-987d-f47ec4eda7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd88ad27-2a35-45ac-a054-4229066bdbe4",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d308e97f-eb86-4303-b34d-bd7d23782e70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76bc4836-c3d1-4f5e-8717-c68266f87fb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4abe99-f805-4df6-a024-c23e617d2a22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f3f4bca-2c51-4b35-8b1c-fdd71d14b85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f90f99-6de0-46b7-b91d-4fd464ac37a5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31db29d0-413d-452e-82cb-cd4bbd8f84eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c9c98cb-11bd-4de8-bf97-33b344af2d9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4802f3-db77-41c7-b47b-56199b3c13c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acf892ab-9525-4976-b7cf-98fced4a4a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd95315-1599-4b02-a2d9-0e5d4a26610a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb24ff22-5e98-4b7a-9397-441edc11f9cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "648db80b-a3e6-4af7-8680-05f325958e99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e3e034-65af-472f-a84a-216ae80e3770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c20e48d7-8aa1-4668-97f5-2026393044ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6a69a3-9190-476b-bf61-f54c7ac31998",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f955fc-0558-4b7c-ace8-fc533ee62a2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f410f905-5770-4b0f-8c77-6510954b8baa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7bdb43-c3fa-4e5b-b439-845ddec64751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "364a1f29-7978-4585-87a6-85b3fafcf8e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397557b0-2068-4ed2-a1f3-6416500579f3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732cf2f5-77be-4716-80a2-811885afa0c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27fc6a5d-3e75-4c83-ad87-8a5145072f31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3cd694-0ca7-4080-8d12-15ddf2a3f28e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffaacc14-2728-4f22-8dfa-666b69b54779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b1a90a-74c5-4ef1-88ab-5454074ca58e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69d316c-84da-49d1-85e8-9014e2d07764",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ceda7aa-1db2-4ff4-a8c2-64476ed0f848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f848047-5c2c-4326-ab4b-87a1cff797a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84598d53-5a38-4232-b982-d7f26d992440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957852bd-9915-42ec-89b3-75afe3615fba",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7941e29-7fd1-4651-acff-84e28f57908a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5124925f-85cc-4cd9-8bf1-aec02da42c20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6fd79d-7436-43fb-af4b-f0a214f6b6a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ff2630-2cd2-40db-acd8-f6ac8b34ca17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85964264-425e-4ca3-bfdb-6e3402afcb0f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ecb749-bd4d-49fb-85d8-b6b962b0b1b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78e94ba5-5b71-4439-b170-3f1ba49e9d53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51dcda5b-5c23-42a0-8c0b-27feaf1b5bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af6f29b9-2c0f-4425-9d4a-671e39d43afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8f852d-07eb-4757-89d4-d845927de8c9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6def5e10-65ea-4dda-905f-6219b64d1bc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c21e75e5-1f12-44fa-974d-9e0ac2ec1311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfcd26e-6967-4190-bb2e-cd6681140477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6641106-5897-4466-b277-3166c8045112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43a36c8-fb42-4220-ba32-e7d9af326b77",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9adb2c08-62a1-473b-afa3-858afd79fa05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cef0167-01f7-49ef-b4ee-447e58c4b7fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2e4cd2-f067-418f-8289-ce28f4526655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ed73ad8-5a48-446c-94e3-a07325a421a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b3174e-99c1-4af3-8816-7517221dd6d2",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80698460-dbbb-4bc7-b3cc-496066e6937b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb995c6a-35bf-4392-897a-5cd1024f25a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fc4ed4-5bdf-4b90-8fda-56175c8ba945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ffeb93-4245-448b-aa92-a8df0cf0d6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516932d0-2ed8-4a4b-8a93-a2bd687ede68",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38cf982-fcf3-4920-81e0-d51982835b99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90a8f5e6-4d3c-44ec-afce-ee972f4e3a12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae88a24-b914-4788-bd1b-d2f75646faac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "403aed44-f66f-4532-9d03-eb5f7b0f1ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597d3480-c772-4f87-9b78-be704f47faa6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9377f2b-0f7a-4c63-ab10-3c88f8ede2c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "690c21e4-8467-4346-b53a-af89bd3b7829"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55655bcc-4a9a-4766-bacd-253199355b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f04f2b3d-31d4-40c8-af83-827f5d1d03ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25cb796a-1040-4d73-9c55-6c637cd8f41a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75c8e15-a7d3-44a8-9e1f-67c0475d5672",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d367a43a-de2e-4de1-94d1-f58738ea68cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7eb8c3-acdb-4134-8368-cb0e5c4e6c5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a9ae68-b5ac-4472-9481-e144c7d9b60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1bae4c6-8370-4039-8cf4-7451112dec80",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a836f1-fcdc-4775-b6c7-ba4d4a19ce19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3d7d792-c71e-4708-a48a-2a581a4622ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24f099b-440e-4454-a097-d48b4146690f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52467425-74cf-4006-a29f-6364c768ea09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba584ab-4060-46ee-8735-beecfa67bd49",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd0a62e-c45c-4671-ac79-c1feb13b7ab4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d82ede75-7c5d-49eb-8c4f-7e39b5b1218b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6764ae41-3d99-4aad-859b-8f3f122a7fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1e1fb9b-92a8-4db9-80e9-e5cae76dc8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90cbb65-034d-493b-ac81-484b1d4cceb7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38325507-6da9-44b9-89bb-d97ea16da1fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5bdb75e-f43d-4426-939e-8a61e19e42c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "164b589a-b81c-4d70-ad75-3b74a2fe307b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61613539-daa8-4fa1-923d-ad2d42539090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7bf6ae1-99dc-422e-ae28-6f462e081be4",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ba4473-6c81-49c3-9679-46fb0f107d10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3f7545d-3052-4796-baae-f984fe11c4e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f267da-8e3b-472c-940c-c68694497bd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f039fb-0f05-4138-8651-7560c6bbcc33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7bcbe8e-315e-4ee5-89f5-2d49ac72b02f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f82e18-ef0c-47a4-bd1b-86f968281a5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da0c74b7-7296-480a-b3cf-a459e75263cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34df22b9-590e-44a3-acce-52f160946cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1495f17-f49a-4d2f-a522-25fd5953550a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4938fe68-e55c-496c-bbd7-24ccc555f9ec",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ecf5340-309d-4a61-9b35-a58dcbdc7a6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5136028d-0015-4e1a-b3d3-157b5359aa39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d2ce37-3d70-4d30-a6ba-267a04a149fb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453ab5e5-3a9a-42ae-8e25-bfa7f884668a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f2e7fa-e137-4924-add1-8dbacd6327c0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c0cd35-9c60-4aae-b4a6-feb2a8cc1a24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20b43aab-ebba-4eb3-aa83-de65d2a47098"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3639f5-5684-47ee-97a6-d13dec06f645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b51c255-93c0-42fd-9511-de061098171b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f82bd2-63ff-4790-bbe8-ed8abb8a9ace",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50da1e8b-afcd-4333-a149-49c64a2f96ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fbb709a-8cf0-4e4f-b6fd-592207f58a9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5963c401-d661-45dd-ba81-e2ec2f5a9660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "362ec704-6b78-4162-875c-0bfa9dba178e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68c6772-7bdc-4656-8f88-341b853fbd30",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5a9ef9-4971-41d1-85d7-3725d75d2d38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "056afa23-8616-4e1b-8a90-50a97979e61f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c1df2e-12da-4c39-bb67-88564ac9b310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf632e30-410a-4f71-9e6e-c4955e740758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc45a32-c350-4388-b27e-a86259c87f73",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c65ea87-b726-459d-a42c-29ed944c1f46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d710545-60f6-4732-aace-58b1d3c60aea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5ae599-185c-480b-85ca-7edfbedac7fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d68a018-04c1-4d30-8208-5ad757e88449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a30e19-245f-4bd3-b519-29163774a45c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a7d2f3-41eb-4435-8da2-af7a8fa87f71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85af5e63-d653-4a96-9f7b-6dcb42edc533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb443c99-7431-449f-9494-91b4d68f65cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b70dcbb7-d672-4d36-b543-19299b023b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f59356-7efd-4256-a760-478a98e97d41",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3e47fe-a11d-4c06-9fe8-99913991ec99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "245aef8c-3ef1-42b9-b9f4-4cfe8bdb637e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3ed9f7-138d-4d36-a968-d9c2644815b8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26b0121c-65a5-4689-aa25-52132c89a130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70f048b-a615-4373-bf47-9aa58471db26",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed69430-b4f5-4070-9591-de411884ded7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ebeecc2-0a6a-43e8-a9b8-aebc7ade74d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9815bf3a-0e1b-4455-ad2a-08ec1d09e36e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d2e7ec4-0d53-4b7e-963a-e38afd1b47ac"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65643242-6f8b-4050-b0be-ba2ec374e6b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c287a0d-6084-40a0-ab20-2e806d28b0a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9d8271b-6a48-4b6c-909b-20fa4a91efd5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "da802400-a968-4dd5-a76f-308f6d4d9e8c"
                    }
                  }
                ]
              },
              {
                "id": "2573a43f-9262-4841-9328-547e1b16fc88",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "337ceac6-8873-40fd-a3ce-026ad1e4c15c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e45f49c6-e137-4dfb-afb3-bd004771cf55",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0135d34b-3b27-4415-b6ed-211887339f33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ba5d1b-113b-480b-a99e-47da0addae95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a559f33-0e63-44ac-bda6-a735d76e442d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "880c2424-4cdf-42c8-8e09-99afc7f049d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0efed075-1f9c-4296-a2e4-b7eba9dc781c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cffe58ca-b131-407a-bf4d-6ac359fc5398",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e53e455-682c-49a6-8d10-6aba999de4d1"
                    }
                  }
                ]
              },
              {
                "id": "33cf412c-fab5-4d6d-8504-9f11d2f17214",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3623788f-a48d-48d8-b9b8-cd4565d8a642",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d97d643-ce23-4a72-b2a7-6b5ca20bb426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "88144781-1943-4530-9b0f-391b349ceef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4201e04-8703-4340-b6ef-9cc4c986d3a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97ddf711-8a78-4a0c-8f37-9e48fc15d4f6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "94799d47-223e-414f-abfb-c0367fe8e3d2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3be1fdb3-e0b6-4513-880c-9ae6bc324011",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8653b13-79d9-4064-b31e-34575a6f39dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "76a2f2d7-3dfd-4d18-85d4-05e999980c91"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25dcc396-a410-4e66-beaa-c7d19ea367f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "510d9d1d-d390-4e27-bcaa-8ebb4c9c9b2c"
                    }
                  }
                ]
              },
              {
                "id": "755837d6-e44b-4eab-af7e-6fdd01bff526",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6d327cf-2f6f-4204-b2e4-19308622e65d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6f75d30b-84d8-490e-a8c5-794d98382f5b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7c0e3d6-468d-40fb-850a-7f2837cdc402",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d07e7f9-8aca-4136-b1fb-60b087774f6c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee815f81-3c6a-4309-8181-5b3e79058228",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c7868093-29fc-4d78-967f-31b1b4ad0c3d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5417c596-92d5-4271-92ca-e8e2c7e49175",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9a2668e0-483d-4452-9481-24f98c04028d"
            }
          }
        ]
      },
      {
        "id": "80854f60-e874-412b-8484-2395acb03115",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1b0b2817-0c61-48b1-a1d1-d20e0c627bfd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3c9bba78-0bbf-4a6a-a70b-ed652c856b5b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f1458696-32cc-422a-bf13-f146bed5acc1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d86372-ee8f-4411-9b1f-f077330ae1e8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3d97d8af-3d5b-4327-856b-700dcd91364b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "488abc4e-6c9e-4e09-b0bc-d1835a2edc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8bfcf9d3-dcf2-49b0-a980-56d4c81a1bf3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5a13fbf-48ce-40b7-838e-6e39d984a51f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63b2ff93-018e-42bc-9578-19b4d8ba0fbc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "16100337-826e-4d51-8a68-1589f5f049e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "713ee4a6-6e51-4edf-91c0-9f02b2d94ff7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "80461e60-26f4-4458-a039-89299535cc94",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "300aea8d-d29d-4643-81c8-c5e8b23104c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe553f84-58a7-44a6-809a-36bc6716b4fb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f9d3266-c442-4d0b-b3b0-1865483b628d"
            }
          }
        ]
      },
      {
        "id": "0ff76d24-4bdb-4df6-b131-7046bc4ef2ba",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "05d3f470-0c49-4337-b2de-3ac8aacda44b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "60bf999b-c1ac-43ff-b539-84decaefbd02",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3f0ac844-3e9a-44b0-9aa6-491c1f69094b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f9e22e-8f6c-4f75-a5f7-92c2cee847ee",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e56065ae-efbc-4f86-b55f-ae35275f4f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4ab604-b5c7-491a-8926-d583baf11880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8a8ef23-b360-48d3-882e-2fb263b76115"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15a99c5d-01d6-43f8-adc1-fcc061d7f1d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4a2a926-8787-4933-8ec1-1b533672a908"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "da345a58-a10c-4ccf-9927-b0e4526abf1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1894be4-ecae-4ff5-8529-aad3bb6b6ac7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "661a07e9-e642-4ca4-b9c3-bfb57bc66e3f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6ba9203e-a159-463f-b651-5ba90e3ccfe2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9782864b-97ab-4e13-bd41-6ef62bcb5852",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b808c6bc-96af-4e58-a51e-9fb16ace21df"
            }
          }
        ]
      },
      {
        "id": "c7d537fc-ce0d-4789-93fe-a3f2cc6bedb6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6a7e4744-e8f9-4987-9577-ce39ae44df1c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "825e01e0-011f-490a-8dce-1e3b96c64432",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3dfe0aad-7dd4-4c5a-aa10-87ac7b446d84",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b9f3a3-b475-4d99-a9dc-a7e46a1361e3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "151f39c6-7191-474f-8ab6-7ddb998e4d73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "970b0a2e-a7d1-4a23-9c24-a8ff041fb97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd60ac11-007f-4c22-90f3-21e0e523a218"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb579bff-93d4-4506-91bf-45526528c1da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c04bd492-95ae-44e2-b403-16706896193b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "63efafa8-ac52-49f9-8a50-480fabdcc354",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e841461-608b-4788-9717-fea0f259626e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d846ace7-5d55-4840-9c4c-4a584de4cc74",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ba001796-b856-4f5c-8a60-60df4cdeaa68"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a618d3d-b527-4154-b798-1caa12586a03",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ef8df6f-21c5-4cc1-bbf5-46c6a0e14b61"
            }
          }
        ]
      },
      {
        "id": "5ed1852d-c54d-4da1-9631-f4cd529edac9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "049ef710-feac-4f71-9a65-a41f6f5e4859",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "adf7d62d-eb40-4fff-9f77-26859c3551b7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "26b5bc99-deef-4751-8bba-6dc16aaf7bce",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "43b83d33-888a-4662-af37-6c999a5715dc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0e0437c-fe84-432e-b130-eb2037ba8a58",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 96.61754385964916,
      "responseMin": 9,
      "responseMax": 9232,
      "responseSd": 595.8212062923344,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704155701456,
      "completed": 1704155738216
    },
    "executions": [
      {
        "id": "c31d208e-5ea9-4eb8-9d3a-766a358531ea",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "988b8dde-f617-4140-92b8-ba6e65cc8a00",
          "httpRequestId": "5d091c14-77fb-4f9a-b7f9-d88b3c1b7475"
        },
        "item": {
          "id": "c31d208e-5ea9-4eb8-9d3a-766a358531ea",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "27765642-eb43-450f-a74f-4fb8f85e1eba",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 0
        }
      },
      {
        "id": "f7a89c0a-5017-480d-bd6c-f218277c0cb0",
        "cursor": {
          "ref": "92bfc20b-f91f-4e48-aa4e-e50f7a061d83",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "70645179-a059-4c76-9ec5-2810c211d41f"
        },
        "item": {
          "id": "f7a89c0a-5017-480d-bd6c-f218277c0cb0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "db1dab6e-0c67-4483-b3a6-db1cdaf0ea8f",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "b947599f-d8d7-46e2-8735-41883893a780",
        "cursor": {
          "ref": "edababe2-21fc-44df-b892-806415efeb6c",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3d6b431d-1032-40f7-8633-322349331cb4"
        },
        "item": {
          "id": "b947599f-d8d7-46e2-8735-41883893a780",
          "name": "did_json"
        },
        "response": {
          "id": "86223e9a-f558-4309-b4cf-5a06d889e222",
          "status": "OK",
          "code": 200,
          "responseTime": 351,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973c1ee4-27c0-40da-927c-da40fc43b435",
        "cursor": {
          "ref": "03b8071f-9a3a-45e6-bd79-6393597689b6",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e5a1b971-c1ce-436e-86a7-6ab385006c07"
        },
        "item": {
          "id": "973c1ee4-27c0-40da-927c-da40fc43b435",
          "name": "did:invalid"
        },
        "response": {
          "id": "01af7a2d-751a-475c-9076-90fd77fa8168",
          "status": "Not Found",
          "code": 404,
          "responseTime": 725,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973c1ee4-27c0-40da-927c-da40fc43b435",
        "cursor": {
          "ref": "03b8071f-9a3a-45e6-bd79-6393597689b6",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e5a1b971-c1ce-436e-86a7-6ab385006c07"
        },
        "item": {
          "id": "973c1ee4-27c0-40da-927c-da40fc43b435",
          "name": "did:invalid"
        },
        "response": {
          "id": "01af7a2d-751a-475c-9076-90fd77fa8168",
          "status": "Not Found",
          "code": 404,
          "responseTime": 725,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e334940-5a39-4609-b818-7accf0c251f8",
        "cursor": {
          "ref": "55d46ffc-8e62-4fc2-ad9c-df503069d2c5",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "914737d7-336f-41d2-a7bd-4c2960e8a2a4"
        },
        "item": {
          "id": "8e334940-5a39-4609-b818-7accf0c251f8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7004070b-d8e5-4aa1-a228-424caaa40d95",
          "status": "Not Found",
          "code": 404,
          "responseTime": 38,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce30507d-91d4-41a2-9955-7f275b71774d",
        "cursor": {
          "ref": "b79e2cb8-a91b-4507-9ac4-a5ceb7385e19",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e5b907a0-19e8-4188-92b5-9bb7ae4c5708"
        },
        "item": {
          "id": "ce30507d-91d4-41a2-9955-7f275b71774d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ae3e4e45-a103-43d9-8c6e-ae2bf5fd8d8d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 34,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579da52b-fcd9-4f3a-ab1d-87bac1b28857",
        "cursor": {
          "ref": "7818fdf2-b733-41be-98d3-a767d0ae2992",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ac5ab3c5-5971-4c33-8929-96d7204b3afb"
        },
        "item": {
          "id": "579da52b-fcd9-4f3a-ab1d-87bac1b28857",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b16a6d0d-3eeb-4223-9b74-8832474798cb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b3805b-b912-4508-841f-9f1aab5fcdd4",
        "cursor": {
          "ref": "c6e3d689-ba51-46a0-8894-280cb0d3a8ea",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "73d4dea9-9d3c-445b-a7c8-2ddd6ca2e0e0"
        },
        "item": {
          "id": "c3b3805b-b912-4508-841f-9f1aab5fcdd4",
          "name": "identifiers"
        },
        "response": {
          "id": "a8e8b3af-be1c-443c-8db5-185a67a6ff39",
          "status": "OK",
          "code": 200,
          "responseTime": 38,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99db06d1-7061-4af4-a5b8-34468a5d280c",
        "cursor": {
          "ref": "84e27c73-5934-4f26-b618-3fff831253f2",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d67183f6-ed50-4d04-af9d-a9a0046d575f"
        },
        "item": {
          "id": "99db06d1-7061-4af4-a5b8-34468a5d280c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "91015efb-48d8-4941-b035-d22102132b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07c9eac-a996-4a5d-b3ac-02361ed99517",
        "cursor": {
          "ref": "4c567fdd-125e-4b92-b339-feefebaff8bb",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fdb41cc3-3e8b-4e3a-85fa-a1aadf24927a"
        },
        "item": {
          "id": "b07c9eac-a996-4a5d-b3ac-02361ed99517",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3f6f97f2-c3e3-4c7a-932b-4ba69359eb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef562b4-ed25-40a8-98d2-e8d3bd435290",
        "cursor": {
          "ref": "fb512cb3-077a-4e38-93db-1897a42eca3e",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e2695261-f72d-4de7-ba66-237e19322817"
        },
        "item": {
          "id": "0ef562b4-ed25-40a8-98d2-e8d3bd435290",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "95c3858e-cf0b-4a58-b82d-f63174abd3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b3d595-25da-4292-9bd6-4e2981146cb2",
        "cursor": {
          "ref": "9b237efd-0145-4787-9101-61aa1ef756f7",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c3b31645-f31e-4526-9e05-886809b783e4"
        },
        "item": {
          "id": "99b3d595-25da-4292-9bd6-4e2981146cb2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0ff03056-a82f-471b-a29e-62cb133ab9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40df896c-0925-4e63-a5a8-1869eb880a9b",
        "cursor": {
          "ref": "c83dd0a8-c03f-4334-9dd9-7980280c5387",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c9b7a0de-9370-4f05-8ef4-26476f4e9b09"
        },
        "item": {
          "id": "40df896c-0925-4e63-a5a8-1869eb880a9b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "eb23a363-b523-4668-ad1e-a67545f4af45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706f9975-18c7-4bfa-aed2-67c07c4fe123",
        "cursor": {
          "ref": "1586c9cb-585d-4c89-a95c-4675e8c543f2",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f9e4aae6-aa1b-4add-ab3e-cbf30b14e522"
        },
        "item": {
          "id": "706f9975-18c7-4bfa-aed2-67c07c4fe123",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f67ac16b-fc54-4a67-9510-d14ec35cd616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9866c2-52de-4f29-bb4b-8c89911daaee",
        "cursor": {
          "ref": "f393b1c1-1748-43f5-8ebd-a4c5d6bb68bb",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1de29805-ed8a-4ac8-9e68-0299f303b75e"
        },
        "item": {
          "id": "9d9866c2-52de-4f29-bb4b-8c89911daaee",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2a3f337b-52d7-4df3-8922-48b5be121502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a677732-8cc9-4361-a5fb-b7ead740f1ef",
        "cursor": {
          "ref": "2b3ebd30-d75f-4c88-ab6e-a8d9e9fc230b",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6d292d00-29d4-48e4-98ad-dfc4a1ef7158"
        },
        "item": {
          "id": "5a677732-8cc9-4361-a5fb-b7ead740f1ef",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8c89a4aa-655e-4f96-8e27-3034539514e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c86613a-1e77-46b3-8023-2023f9841ace",
        "cursor": {
          "ref": "50f879db-5b16-4c91-8c71-e7627ab426b4",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "95499b3b-47db-43a2-961a-ff42e404b380"
        },
        "item": {
          "id": "5c86613a-1e77-46b3-8023-2023f9841ace",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f88c39af-5235-44db-951b-2ff90f9076bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1c40d3-1c8b-4610-93cb-039db2a79849",
        "cursor": {
          "ref": "5a2de60c-6234-4661-ab15-6d0c411e357c",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6e569e7b-1284-4088-a30a-5d1941d88f0c"
        },
        "item": {
          "id": "1c1c40d3-1c8b-4610-93cb-039db2a79849",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ca676d87-9029-4a84-a8bd-ebec581ec1b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8ac6fb-8391-4601-9aec-c3cc510008d8",
        "cursor": {
          "ref": "8b5eeaae-3f4e-44b6-bc1b-fc771a706ed3",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a2dfdca0-163a-4343-8684-0f3288444895"
        },
        "item": {
          "id": "ad8ac6fb-8391-4601-9aec-c3cc510008d8",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b3bf89d6-632c-4a04-b9ac-a048e83a5f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ae0cf0-e988-467c-b998-b80b62d7815b",
        "cursor": {
          "ref": "280b82f9-e396-4ba7-8478-dce7966b5fd1",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "cca064f1-1f73-4acd-8906-72120ca55a56"
        },
        "item": {
          "id": "a6ae0cf0-e988-467c-b998-b80b62d7815b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "cd0a6de1-ddb1-45bc-866c-076335dc32be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc75dfb5-108f-470b-b119-5aaa8b258afa",
        "cursor": {
          "ref": "547a4be3-8806-4945-943d-31f21451ed02",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d0034e3f-a901-4659-a384-70ae5921bd0e"
        },
        "item": {
          "id": "fc75dfb5-108f-470b-b119-5aaa8b258afa",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "656aec66-90d6-4723-b0f5-a0b3b052136c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bbe55cb-45a9-4b19-a507-197be7028814",
        "cursor": {
          "ref": "498a3d1a-6065-46cb-97a7-4d8156f6f93f",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ec08e744-fcc3-423a-83bf-40bb0adb12bf"
        },
        "item": {
          "id": "1bbe55cb-45a9-4b19-a507-197be7028814",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b43d1f91-b172-4271-8bc2-11fb4cb36fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbec2a8e-f0fb-4f9a-b9a9-86511200c8bb",
        "cursor": {
          "ref": "f68bd888-8dc1-4693-a843-a0085d2f7efc",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c50b96ac-5808-4b46-bd99-a67bca9fd194"
        },
        "item": {
          "id": "dbec2a8e-f0fb-4f9a-b9a9-86511200c8bb",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "217f688a-e115-4c35-a073-ddc2a33dbdb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6281472a-187b-44e6-98b7-75f06b5eb194",
        "cursor": {
          "ref": "42a39969-b1be-461c-843e-3179eba4e7f4",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9bc19b2e-1f39-4e36-bfe8-25b08042ee30"
        },
        "item": {
          "id": "6281472a-187b-44e6-98b7-75f06b5eb194",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "27588804-8264-4632-bc7d-09cbbe556c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b7c42d-4815-4ead-8751-b88b16fb21bf",
        "cursor": {
          "ref": "76c2fe9c-6fad-4fdc-87e3-d1a65a02cfcc",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "364a290b-4bd1-4cb4-b3f8-0ffde393947b"
        },
        "item": {
          "id": "b1b7c42d-4815-4ead-8751-b88b16fb21bf",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "352adb6a-9afe-48b4-8187-1745e75daefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f872050f-8ea6-43ca-a49e-dda5e8fd9e68",
        "cursor": {
          "ref": "a36a21e2-147c-4af3-a72c-ffd83064bdd2",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6dd97c3f-b89e-41ae-b5e0-74ec0db91cfa"
        },
        "item": {
          "id": "f872050f-8ea6-43ca-a49e-dda5e8fd9e68",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "794b9787-0321-4933-8e70-a536ff34d513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ef721e-2dee-4650-ba38-2008eaf60305",
        "cursor": {
          "ref": "ee8970b4-4e1d-4ca0-bfe6-6112e3361bb9",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b9050363-08f9-4e86-ae26-9c15bdbb8253"
        },
        "item": {
          "id": "d0ef721e-2dee-4650-ba38-2008eaf60305",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e892a4ad-7611-4f9c-b626-7b3ab0427e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942bd56a-4b1a-4680-b602-ecb152e779ed",
        "cursor": {
          "ref": "2ac8fca2-7fab-4d70-aa9c-88fd9f64c4ac",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0d0734a7-1456-4f91-9aad-6746b2f1c536"
        },
        "item": {
          "id": "942bd56a-4b1a-4680-b602-ecb152e779ed",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2082f850-ad1f-42b8-8d4b-8d32420af36f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff039477-f2c5-4b5d-9740-0a79d2a5c0d5",
        "cursor": {
          "ref": "f2fed637-9901-4523-aefa-5917ee90e8b2",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6532664c-393f-4110-a636-423b1aa17f57"
        },
        "item": {
          "id": "ff039477-f2c5-4b5d-9740-0a79d2a5c0d5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1c564165-9cb6-4c6c-81d5-bab3874427cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c0a3cc-b61a-44e1-9a24-7636e9a56f59",
        "cursor": {
          "ref": "e1386419-9e0a-4f6f-8c33-04cf4d6d5aac",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c0eb2dc6-211c-4455-935e-7430db542b0a"
        },
        "item": {
          "id": "a6c0a3cc-b61a-44e1-9a24-7636e9a56f59",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7b64cb79-7ae8-4f00-b6ef-7258581a38f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1004a4bb-78fc-49dc-908e-5b9ccd6f042f",
        "cursor": {
          "ref": "486f5355-2d59-41db-91e5-5fe8e9836b6c",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "277ad3f9-f303-48e5-b586-d89212f41355"
        },
        "item": {
          "id": "1004a4bb-78fc-49dc-908e-5b9ccd6f042f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2a46cb9a-12fc-4ebe-be15-43b4545159ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16867c17-84f7-4b1c-ab9b-fd9384e19b3e",
        "cursor": {
          "ref": "260b6556-3824-4ec3-aec5-d54d91947b02",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f0759db8-1d20-47e1-8e8c-5e7a7a1b9b81"
        },
        "item": {
          "id": "16867c17-84f7-4b1c-ab9b-fd9384e19b3e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e4db4049-c5d5-46b6-8752-44fb3a05cafe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18b513d-12ae-40f9-8ae5-656890e01404",
        "cursor": {
          "ref": "d438279e-8ec7-4ce5-9659-39a0979fa63e",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "21193a38-9326-4784-87cf-ff83031dfb41"
        },
        "item": {
          "id": "b18b513d-12ae-40f9-8ae5-656890e01404",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0df7c074-7250-4566-b87b-6595fe041227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f18e25-0517-4408-9424-502921ace7ef",
        "cursor": {
          "ref": "9f3aa20b-2ab3-41d3-aabd-8ed567b5d6f5",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "61cc5b46-589d-47b0-ba78-36b98713defb"
        },
        "item": {
          "id": "a8f18e25-0517-4408-9424-502921ace7ef",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e4ac12eb-a380-4b75-8f6b-0a7896e68d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d770ae-d72f-495a-b56f-7f53b2997e9f",
        "cursor": {
          "ref": "945732fe-201a-4603-8cab-d3cc73561ab0",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5505ebb2-89f4-4f71-8315-1a8279efd375"
        },
        "item": {
          "id": "00d770ae-d72f-495a-b56f-7f53b2997e9f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "35dc3271-19eb-4d6f-b405-c0d801de56e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b987418-eafe-406a-9c12-44905ad98e0f",
        "cursor": {
          "ref": "6f57756d-083a-4be3-ab36-374e7b23e92e",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "fbda697a-5633-4fec-94be-e0414a5518c8"
        },
        "item": {
          "id": "3b987418-eafe-406a-9c12-44905ad98e0f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "42bf8feb-b826-47eb-9df7-0078ab637690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adabbf1e-98a9-401c-9e34-456bab3f68a4",
        "cursor": {
          "ref": "45fae5fb-b182-4df1-86e3-b46219134ecc",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4c7decc5-4397-4f1e-a923-4ec896795820"
        },
        "item": {
          "id": "adabbf1e-98a9-401c-9e34-456bab3f68a4",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "456de03d-9d92-4609-9d5a-9efa5636fad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c75cf1-2b85-4a28-b7d4-1a330b3a08c1",
        "cursor": {
          "ref": "52327815-7c9b-4f80-9265-94f433096ab1",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "87a4a835-5989-4ab9-8b85-3901b1ff6feb"
        },
        "item": {
          "id": "17c75cf1-2b85-4a28-b7d4-1a330b3a08c1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5e3a8411-bf86-42d6-b6e2-7675285b282a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ef44ab-75e6-4789-9c68-1dec34ce3570",
        "cursor": {
          "ref": "fdccd3b6-4c70-4447-bf6f-568b3d328ca8",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ab0e93cf-4f20-484b-83b6-2bb9450d3d00"
        },
        "item": {
          "id": "f6ef44ab-75e6-4789-9c68-1dec34ce3570",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "95d0e894-7c60-474e-a28f-ee4a4d21bd3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571e5d49-f540-4230-a5df-aebaa3f8a324",
        "cursor": {
          "ref": "6a4d3362-1ea8-4e4f-8900-cfbe850026b0",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ba4c4676-7cce-4a46-8404-5d067de06f36"
        },
        "item": {
          "id": "571e5d49-f540-4230-a5df-aebaa3f8a324",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "393fb4ef-b774-4ad4-b070-1618e17aed94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3989e4-05c0-4ea0-9985-d0c13463418d",
        "cursor": {
          "ref": "142a1bd3-dd69-4991-847b-40ed08e51168",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "196a7746-02c9-4769-809e-e83ddf5cd4fa"
        },
        "item": {
          "id": "2e3989e4-05c0-4ea0-9985-d0c13463418d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c43d65be-8c19-4ed2-af1f-28780b79a0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5998dd-b331-417b-8e64-9cb01afc3d42",
        "cursor": {
          "ref": "97fb0a35-0b28-4e3c-98c0-24cf23be81cb",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a76187e8-2938-4c9e-9741-cdd4bffeca6b"
        },
        "item": {
          "id": "0e5998dd-b331-417b-8e64-9cb01afc3d42",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c92fbd49-0a0f-4474-bcc2-cc1fe1385604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689df691-8192-402f-befa-149b109dca10",
        "cursor": {
          "ref": "f7ea2b19-7e56-43e9-bec8-280178c2d9c8",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d476743b-db09-4dbd-acf7-a0df88f8dda1"
        },
        "item": {
          "id": "689df691-8192-402f-befa-149b109dca10",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "50450656-82a7-4914-9eba-8ca1d2fc9577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff1b6f2-d528-4012-bf2f-ae596fb8ce4e",
        "cursor": {
          "ref": "82f038ef-f5ca-471b-af34-486aa948c209",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "fbe55e41-c72b-4d64-bb08-5298ad7541f2"
        },
        "item": {
          "id": "2ff1b6f2-d528-4012-bf2f-ae596fb8ce4e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ab9d6d6d-812d-48e1-95ae-4386878f7358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e314fd53-800c-4016-bb7c-d742cc1af717",
        "cursor": {
          "ref": "fb1f0ca1-e1cc-4aba-9d87-349085c95b3c",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "aa503246-9bf8-4e92-a982-586789a51a08"
        },
        "item": {
          "id": "e314fd53-800c-4016-bb7c-d742cc1af717",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "850656d2-4ab7-4abe-8127-c231a7eea7f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882eee36-6e13-4b7e-a006-c6c92a57e8c2",
        "cursor": {
          "ref": "03ee4363-a8e0-4e10-a237-9a571a64a6d0",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "178462c6-430d-4aa4-aa93-0f02150d1808"
        },
        "item": {
          "id": "882eee36-6e13-4b7e-a006-c6c92a57e8c2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "024aaced-2687-4879-802d-419e5e525491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16462df4-2fbb-4c93-ba46-357f9aba09d6",
        "cursor": {
          "ref": "48d074f8-e3cf-4e45-a991-003c1e483852",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5ac20630-0e7c-4181-8b95-ab514530c5c8"
        },
        "item": {
          "id": "16462df4-2fbb-4c93-ba46-357f9aba09d6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a9fdc866-c61b-438a-adac-fd685d8d6d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192b2a0b-992b-4758-b64d-46131a0fa368",
        "cursor": {
          "ref": "0baadd18-6d12-4a6d-9670-e452d81ebec1",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "74df5d6f-8f58-4aa8-b554-f02e58a9df9e"
        },
        "item": {
          "id": "192b2a0b-992b-4758-b64d-46131a0fa368",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7758d0cb-14b4-4050-8d95-7f8a5b54468f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ec5134-00c6-4da6-97fe-b8f041f3073a",
        "cursor": {
          "ref": "7088381c-00d4-419c-93b3-e1012b9a43bd",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "38e11c38-2ff0-4dd3-b640-2a25450a2dca"
        },
        "item": {
          "id": "99ec5134-00c6-4da6-97fe-b8f041f3073a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e83334b3-e284-4d90-bf3e-8def434a1ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c60f8b0-0833-4e9d-8b81-4dbc5ab123b9",
        "cursor": {
          "ref": "e11693fe-2f3e-4b3d-a89b-f2ac892f3cd2",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d06a19fa-1491-40aa-ad60-590b240a0e2f"
        },
        "item": {
          "id": "1c60f8b0-0833-4e9d-8b81-4dbc5ab123b9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "64c22100-4086-4491-8f11-685ac48f1eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af71bd6-5461-4eac-a57d-018b6383488b",
        "cursor": {
          "ref": "ca36cb8c-e683-4fce-9a69-39b397f7b188",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "06890032-e3da-438f-a1dc-7e3a4dbdabaf"
        },
        "item": {
          "id": "9af71bd6-5461-4eac-a57d-018b6383488b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f8d52b91-f3d4-422b-a9d0-dd2851e509c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b760686-063d-4104-bde0-284463198d1b",
        "cursor": {
          "ref": "9c0b33bd-84e6-446b-82c0-f6103db17038",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "606ffe39-a6cc-4e3d-9284-bcca3429302e"
        },
        "item": {
          "id": "8b760686-063d-4104-bde0-284463198d1b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3315c1fc-f7b8-46fd-9644-6cf4947fc2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c7e3e8-ff27-4057-92ff-14cc76750de5",
        "cursor": {
          "ref": "e2c6ac9e-66b8-403f-ac18-b2e69aff450e",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "fd114e68-71ee-4fce-a75b-ed3bafe4285f"
        },
        "item": {
          "id": "93c7e3e8-ff27-4057-92ff-14cc76750de5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e890b490-e37d-43ad-b243-5ea3b0c1b116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf7346e-ff49-4343-88ea-9dabd5d3edf7",
        "cursor": {
          "ref": "2df468ef-635e-4514-ae40-09c653c95b62",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b651ebdf-1f0e-428f-b5df-69a18657bfdc"
        },
        "item": {
          "id": "7cf7346e-ff49-4343-88ea-9dabd5d3edf7",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4e9c27e4-e2d4-4f8b-91cd-a3300a78b4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8edf32-cc1e-427b-892c-64da3583130c",
        "cursor": {
          "ref": "a0bc879c-bb34-45ef-8c5a-93b28cf1a136",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9e2efc7f-8d2e-4e77-9949-487d00df146d"
        },
        "item": {
          "id": "bf8edf32-cc1e-427b-892c-64da3583130c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4a127a28-ff54-4b67-a25d-c3e89cbc69f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8313afba-c180-4975-b37b-d4e17f0ccfa4",
        "cursor": {
          "ref": "c0d48eec-4253-4a78-97ae-662f8cd6a140",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3c753e28-a595-4c76-a1af-afe6d3a3786b"
        },
        "item": {
          "id": "8313afba-c180-4975-b37b-d4e17f0ccfa4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "87609e75-1bb9-4179-8407-47bde19fcb6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3944b00f-3a66-493f-aa59-8119aa1c8ed8",
        "cursor": {
          "ref": "d7d988a3-de63-435d-af31-0cfd508fced8",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "73fb9c01-04cb-49c2-a2c9-d5c71d4c84e6"
        },
        "item": {
          "id": "3944b00f-3a66-493f-aa59-8119aa1c8ed8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "456d70a1-58f2-49cd-9fd1-9564c6312e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6ad2a5-0916-437a-b3ce-e737751e6acb",
        "cursor": {
          "ref": "dea4d1b0-9894-4958-9415-4155ab73b219",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4afa32eb-063f-457c-800a-4ddf56f36d7f"
        },
        "item": {
          "id": "df6ad2a5-0916-437a-b3ce-e737751e6acb",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5a207874-a952-4cce-803b-43d24da62b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3872b2fb-9a66-402d-bf49-f5e5d460592b",
        "cursor": {
          "ref": "9ebc2699-88be-4f53-8c7a-90f14a8ddb69",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c9ce64df-887e-4e67-9092-a260c150dc6d"
        },
        "item": {
          "id": "3872b2fb-9a66-402d-bf49-f5e5d460592b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "35b8a666-0e55-4957-bfa2-f04e4ede1b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f1d3a0-929f-46fd-b3a0-75d2393e0e40",
        "cursor": {
          "ref": "797c43ec-e95a-4586-a6d4-a30a39def3de",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cc1b02ba-3049-49fa-b3c8-6d4a43b1bd40"
        },
        "item": {
          "id": "97f1d3a0-929f-46fd-b3a0-75d2393e0e40",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3ea9f484-d316-43e0-a33d-509dc6d008d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5b5683-072c-43d1-b7f0-77fa5b37574f",
        "cursor": {
          "ref": "bd33c021-015f-48ac-9851-715d840c8e5b",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8dcb814f-658c-46c9-b63d-4664e957a4dd"
        },
        "item": {
          "id": "aa5b5683-072c-43d1-b7f0-77fa5b37574f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "86f37cef-66ba-48d8-a40a-db1de2812748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b08cb2-d5c0-4eca-a698-587b3b1c2150",
        "cursor": {
          "ref": "7bd4f50b-8878-4ad9-b74d-b939cefdf711",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7144d171-bc86-42b4-bc82-ba4ebf136e80"
        },
        "item": {
          "id": "a2b08cb2-d5c0-4eca-a698-587b3b1c2150",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1a9c3aa5-0fad-4d85-ae14-e8e048ee0d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdab181-6b01-4df5-a016-0b57649032af",
        "cursor": {
          "ref": "8d98e49a-65a7-4232-9a1c-e712bb7164ee",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "22eae930-17a5-46b5-8d2d-a677cda6465f"
        },
        "item": {
          "id": "4bdab181-6b01-4df5-a016-0b57649032af",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5ff5c9cd-9254-470f-9b6e-2bafc9660a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c894c83f-a8f4-4f99-8acf-ca100c3102e7",
        "cursor": {
          "ref": "e1a871b3-693e-4bf6-91e7-4367bb7e566e",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "915e31ed-5680-4902-8676-a355af4ecd41"
        },
        "item": {
          "id": "c894c83f-a8f4-4f99-8acf-ca100c3102e7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f615bfb7-8432-4b45-a96a-517ba7291732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661d806c-e334-4eed-9e2b-bb1949f9993b",
        "cursor": {
          "ref": "9514bedd-97ce-4582-beee-8c6aa517248e",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a3d7d008-c80d-47d4-a4af-e6dd2e9bc10d"
        },
        "item": {
          "id": "661d806c-e334-4eed-9e2b-bb1949f9993b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "854d2676-62f7-425b-9c00-f815890a4a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d401010a-6988-4da1-913b-79ec0fb73307",
        "cursor": {
          "ref": "f3b450d7-7707-415a-8e37-3793cb518cd1",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "698f991a-6cb2-460b-b21c-2122e9d2b166"
        },
        "item": {
          "id": "d401010a-6988-4da1-913b-79ec0fb73307",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5a1acf6a-f2bf-424f-9683-83032cdc4cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39c3628-fb3b-4570-9e36-607ba64146c4",
        "cursor": {
          "ref": "ed02a546-5a46-4cfb-b6a3-ef4ca0a75325",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f122352e-218b-4c38-a1b1-2dbb66f61a02"
        },
        "item": {
          "id": "a39c3628-fb3b-4570-9e36-607ba64146c4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9b683b37-3357-4f7f-8f7d-1dfa1e15e73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4d1c3d-9992-4449-ae95-29dedccbde07",
        "cursor": {
          "ref": "5e2678a0-938a-4157-9b97-c982e86cf3f7",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a504321b-acb2-438f-a5e3-da2ac05fd47c"
        },
        "item": {
          "id": "bc4d1c3d-9992-4449-ae95-29dedccbde07",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "690b1cb0-dace-489a-bd64-7285d07de0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3579192-0b74-4a1b-ad16-b8cad50ab544",
        "cursor": {
          "ref": "bdf4d290-6988-4c26-97b0-697308e6cb50",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e4971f1f-ab6f-4bcf-a83e-5b3ac0c0994b"
        },
        "item": {
          "id": "b3579192-0b74-4a1b-ad16-b8cad50ab544",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "907df2ab-41a1-4fec-89a5-411131200f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a475e0-7d86-429d-9542-62f6b4908d0d",
        "cursor": {
          "ref": "57e74915-8ba1-41a7-b68a-e582f06af5d1",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9ba5b784-bed1-4fcf-8e7b-30ee16fd20bb"
        },
        "item": {
          "id": "d6a475e0-7d86-429d-9542-62f6b4908d0d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "734c3faa-c3ad-4f80-8bcc-162b80c40fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0140d98c-4b1e-43af-8128-d67ffd108128",
        "cursor": {
          "ref": "e4429267-1ed6-4cde-a855-0e3fec62dd7c",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3dfc6c66-a3d4-428b-9d82-ae0a3779ac25"
        },
        "item": {
          "id": "0140d98c-4b1e-43af-8128-d67ffd108128",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4e42bd08-729d-4e68-b18a-8d87dad65ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72220f45-b33e-46f6-99bf-dd3df95d7db0",
        "cursor": {
          "ref": "a0f8a519-de8a-4f4f-aeb0-cf7372d28002",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ebe85a69-f853-45e8-b43e-b37a9138ca37"
        },
        "item": {
          "id": "72220f45-b33e-46f6-99bf-dd3df95d7db0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "62853670-94ee-4e86-9f31-cc971f7dea2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce26f96-b402-43fb-bb1d-1ef0a4ac08ae",
        "cursor": {
          "ref": "940ad146-da5c-4efb-9ac3-0862f45daf79",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "22885bb5-3fd9-45c6-9e44-f761e7d2cc1d"
        },
        "item": {
          "id": "dce26f96-b402-43fb-bb1d-1ef0a4ac08ae",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0aeacbdb-15de-44c0-afe5-3ebd8a15ee2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f09b552-7adb-4c92-a868-edee41758e43",
        "cursor": {
          "ref": "62594b36-85f4-4c35-997a-b0b00ba1a781",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "dbc8fadb-e463-4cab-bf04-db130abed0a6"
        },
        "item": {
          "id": "3f09b552-7adb-4c92-a868-edee41758e43",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "26589136-4f2a-41cf-b23a-676c6fe6a6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec12fd4-a964-4750-bfae-abbc5a819c19",
        "cursor": {
          "ref": "da2448c5-6793-46f8-820f-2eb582689105",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a60bc962-07d6-46cb-bb32-0026c33825b7"
        },
        "item": {
          "id": "4ec12fd4-a964-4750-bfae-abbc5a819c19",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "bb6c6d7d-81b1-48b2-b0de-11b76ed751ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9ab23d-29f9-41e5-8afa-76ab03a746de",
        "cursor": {
          "ref": "a23203d1-cc69-4cc1-a8a7-97c181fa2a27",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "17df485b-420a-4c68-9e47-799d4334807a"
        },
        "item": {
          "id": "af9ab23d-29f9-41e5-8afa-76ab03a746de",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "602b73f8-6a81-480d-b9eb-7237df71bca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deab6023-8588-4c22-a54c-78867b09ebed",
        "cursor": {
          "ref": "28661d4f-f12e-4469-b3df-a963ba766c76",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8c80a747-8ff9-4e55-abf7-0be9ab96eda7"
        },
        "item": {
          "id": "deab6023-8588-4c22-a54c-78867b09ebed",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a1aba330-fc26-4018-b736-9ffac4335a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed3f2e6-b958-466a-8e3b-d57e6287e15f",
        "cursor": {
          "ref": "f3bb334c-d4ff-488a-81c4-2a963426190c",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9a292ad7-4369-4dd0-9e67-1830ff380f7d"
        },
        "item": {
          "id": "2ed3f2e6-b958-466a-8e3b-d57e6287e15f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "784ba2f8-4187-4e50-91fd-806371fdcbc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a594b0-aa4a-4334-8ce6-64805a8c8f84",
        "cursor": {
          "ref": "9f31a195-5602-4d4e-8e23-e79b18f66b32",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "fb38d5d2-012d-487d-872a-40ee3fccafbe"
        },
        "item": {
          "id": "30a594b0-aa4a-4334-8ce6-64805a8c8f84",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a1bd0ece-52cc-4c56-90fd-ddec7b73f701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d58e09d-f326-4449-9ff1-48111011ace2",
        "cursor": {
          "ref": "72836df1-dacd-452f-8eae-7e0bfe1d125f",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9accaaea-e52f-42fa-99f8-0970902f3a51"
        },
        "item": {
          "id": "3d58e09d-f326-4449-9ff1-48111011ace2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6f3fbf18-4cba-4d35-b1bd-eedefcb13fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0887080-9b1e-46dd-9eaa-6a6b71f9ca7a",
        "cursor": {
          "ref": "4475c107-c85a-480f-ab84-0e69ed9bea2b",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ba0f0176-edb9-46eb-a4e2-8f18cc180235"
        },
        "item": {
          "id": "d0887080-9b1e-46dd-9eaa-6a6b71f9ca7a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "272f6f73-0b64-45f4-bc72-747aa6467ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca51b50-7c47-4675-a58f-384e7649c5a4",
        "cursor": {
          "ref": "5f746bf7-94e0-4b32-bca2-10b4c7e1dbd1",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a73a2553-fcc6-47c5-b9b1-ad616dd84bd5"
        },
        "item": {
          "id": "2ca51b50-7c47-4675-a58f-384e7649c5a4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9df4e814-8319-4a8c-b1ec-8d45ea2c776d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e234d32-b52a-4c6e-899b-1ea74b0fb1dd",
        "cursor": {
          "ref": "131a90d4-15a5-4199-af52-9f991c57ff79",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "77dcfb90-4809-47fe-8fcd-29d5f2e1a098"
        },
        "item": {
          "id": "7e234d32-b52a-4c6e-899b-1ea74b0fb1dd",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5aaae77a-be40-409f-98a7-36893eefcb9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9304f19c-364b-4076-b76a-a38a1d520f1b",
        "cursor": {
          "ref": "3e14ef3b-e0df-4cae-ac40-1b13063b7248",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "fc349950-748d-4426-8e73-681216a9d221"
        },
        "item": {
          "id": "9304f19c-364b-4076-b76a-a38a1d520f1b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "bd8c3baf-1310-4da0-bca3-32b1fa8678ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66720f9c-06d1-4060-b749-fa8c11d471ba",
        "cursor": {
          "ref": "336ea77a-f10e-4d28-87a2-094d0459eacb",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "061aacfa-8368-4e89-997b-bc008ab58109"
        },
        "item": {
          "id": "66720f9c-06d1-4060-b749-fa8c11d471ba",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d0f28530-dffe-48c8-b989-22d8734a3ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96018b57-b23b-4824-99b6-54df9a3075c0",
        "cursor": {
          "ref": "58816fee-bc0f-435c-84b6-6cd8515e101e",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "afafb9c5-cd11-408a-af96-b41928b990b6"
        },
        "item": {
          "id": "96018b57-b23b-4824-99b6-54df9a3075c0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ba9160f8-7d2d-4e8f-a5cf-2003aacd9a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe26948-7b19-4ee8-8f35-32f656120491",
        "cursor": {
          "ref": "8fdd7c9a-7b8d-43f9-a667-e5264746a178",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ebe8b157-d2d7-4a7d-994b-21df5dff00e9"
        },
        "item": {
          "id": "0fe26948-7b19-4ee8-8f35-32f656120491",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2870268b-63be-4a2c-bd91-f7265c34d0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51be9901-0794-434f-87f3-2c6a01ecee84",
        "cursor": {
          "ref": "dd90461c-7d62-4c41-8dd4-c1de7aff9f4d",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ad5c0e97-8f57-44b2-ab09-5d356605cf2f"
        },
        "item": {
          "id": "51be9901-0794-434f-87f3-2c6a01ecee84",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ef496a11-561a-4db2-9169-7dbda26d780c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1d566b-0ae9-4da2-a248-0930b2ef39db",
        "cursor": {
          "ref": "379efa4c-fafe-4b24-b9bb-e36ab95aaf99",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ba0fe2ad-fa97-455d-b32a-f16727a3eb07"
        },
        "item": {
          "id": "fc1d566b-0ae9-4da2-a248-0930b2ef39db",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9fff062e-cf50-403d-9ad7-fe8c0714e9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b33412-cc42-4843-a2db-4ec11cfb3017",
        "cursor": {
          "ref": "121744e4-17ed-4b69-a380-ef160672acb5",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c2284060-a84d-4407-90bd-f5e9fff5d52d"
        },
        "item": {
          "id": "e8b33412-cc42-4843-a2db-4ec11cfb3017",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b58aed6a-dc6e-4b95-ad8e-df68ec474f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb28444b-027f-4427-a1fc-f04163c78705",
        "cursor": {
          "ref": "de4a693e-ce80-40de-94e8-d93fde5cb9bc",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9ddc8638-a4c8-4102-ae5d-d25e3bce9ebe"
        },
        "item": {
          "id": "bb28444b-027f-4427-a1fc-f04163c78705",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "39918f91-205f-42d2-b2f4-7e823b974c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9bd901a-b5e8-4053-acf2-9bb630cf621e",
        "cursor": {
          "ref": "7f54a9f0-212d-48e2-9e44-222f21dad1de",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e766a519-74d1-4940-b2be-6a3a0c3e9da6"
        },
        "item": {
          "id": "d9bd901a-b5e8-4053-acf2-9bb630cf621e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3cd5c0a4-3898-4b68-bf02-1c3a86bad9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd88fdd-6757-49f5-b361-70e43b510bd2",
        "cursor": {
          "ref": "f3a73474-745e-4ad4-b4e6-cc5c158c066b",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "889ee56b-1912-4fc2-b532-a8203e34d6db"
        },
        "item": {
          "id": "8bd88fdd-6757-49f5-b361-70e43b510bd2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "715075df-bf8f-4cd1-8ec3-58886a7eb6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c191819-f3be-4965-b533-5840fbc18fda",
        "cursor": {
          "ref": "55708ef5-7904-4cb6-becf-8f007ed6c7e2",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d0be800b-27a3-4641-b289-2c89afa09558"
        },
        "item": {
          "id": "4c191819-f3be-4965-b533-5840fbc18fda",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "94cbda36-f812-4eb3-b67c-a1aea9b7c26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac259a8-a9df-482e-9021-d8dff6fc5c49",
        "cursor": {
          "ref": "14d65d78-310a-41a3-8fed-7081d2e6cce3",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f66b62b1-ac8f-4f40-b4e2-aa3451b880f7"
        },
        "item": {
          "id": "eac259a8-a9df-482e-9021-d8dff6fc5c49",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2d300c8d-e81c-4cf6-94d7-5c15b3cceeef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec14ea26-d00d-48bd-8656-3738bfd69d3a",
        "cursor": {
          "ref": "de017b3d-58e7-4521-baf1-17b99e271a29",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6c9cc3d5-0ed6-4d29-ab68-4cce908f8ef3"
        },
        "item": {
          "id": "ec14ea26-d00d-48bd-8656-3738bfd69d3a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e48bce08-3602-4be7-93ce-5f3504bc936d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cdeb550-5bc0-4069-9097-f78ca5ae18b6",
        "cursor": {
          "ref": "a86dce0b-0776-4bb9-bfa6-7d1480608996",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ee1907b3-dcfc-46c7-823b-54762b822bd8"
        },
        "item": {
          "id": "2cdeb550-5bc0-4069-9097-f78ca5ae18b6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f33edc7d-d71a-4b27-a892-d286213d6fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32503aa7-945c-44c8-9bb4-1d33ae12c05c",
        "cursor": {
          "ref": "2f2618f4-c366-4972-b21b-bea504755d21",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5e6bcfd1-5f62-4041-9802-17c585a2382a"
        },
        "item": {
          "id": "32503aa7-945c-44c8-9bb4-1d33ae12c05c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f8864279-8198-47ba-9197-908203d16e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84ae047-fe0d-421d-9445-ad610cccfbac",
        "cursor": {
          "ref": "e7b3a588-8357-44ed-bf2a-3191aae777d6",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d3411b98-0c29-4c10-bdbe-862cea9037ca"
        },
        "item": {
          "id": "c84ae047-fe0d-421d-9445-ad610cccfbac",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4d617f40-1638-479f-8e51-a479555ba748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645d4369-a330-4d15-9db8-a827fc7a3c69",
        "cursor": {
          "ref": "c150343f-e7c3-48ae-9fda-709da6bcf719",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a07cad83-92b5-488c-82a7-98afa4c265e5"
        },
        "item": {
          "id": "645d4369-a330-4d15-9db8-a827fc7a3c69",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7ae36aee-f982-4594-a271-e18522185e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4bb2ad-4bd9-4df3-889a-0dd728b67b21",
        "cursor": {
          "ref": "79208427-8143-48e0-b72c-a27b3192ead4",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e5a775a8-febf-4613-8552-0aceef2b1748"
        },
        "item": {
          "id": "bd4bb2ad-4bd9-4df3-889a-0dd728b67b21",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d35a9414-980a-4ef8-a465-b5700bc433b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa7b4e3-99ea-4d3e-b9e5-3fde3c7560b8",
        "cursor": {
          "ref": "cb4e1de0-38a6-422c-928b-05ea9dca7f20",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "252aeabb-d186-46d5-8d90-a6d4bac08a94"
        },
        "item": {
          "id": "caa7b4e3-99ea-4d3e-b9e5-3fde3c7560b8",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "49d377a5-9a3e-4e09-b08d-23d120aefa27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "98bbb107-f8b7-4067-bfcf-808683320504",
        "cursor": {
          "ref": "7e2b945c-5624-4943-8446-28cce377fbfe",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4001e94a-a263-4fb9-9456-0de4671cfccf"
        },
        "item": {
          "id": "98bbb107-f8b7-4067-bfcf-808683320504",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b04c41c4-bdff-4dae-8df0-32822ddd0244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "7ba49497-9ad3-487a-8746-ac853d996267",
        "cursor": {
          "ref": "d005cce7-06aa-4eb6-9436-2263a1f92fed",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "20fc10a6-fcc3-4595-814c-253645336e62"
        },
        "item": {
          "id": "7ba49497-9ad3-487a-8746-ac853d996267",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "44badcd9-7927-41dc-9c31-113353ee0835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "8b83be41-2d16-428c-8d8c-df6ec45d988d",
        "cursor": {
          "ref": "9e841b48-f9d3-4c2f-8513-1a037c3031b2",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "68f1059c-7e79-479b-96b8-1500e8834a93"
        },
        "item": {
          "id": "8b83be41-2d16-428c-8d8c-df6ec45d988d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "dacef814-0f07-4a4e-96f5-1b93c11779cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "802b7c1a-33f1-4195-99b3-94a48519f76d",
        "cursor": {
          "ref": "d3c39ec8-d28c-4708-a796-349beecfd537",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "72bb11f4-3564-4239-b293-5844122ee898"
        },
        "item": {
          "id": "802b7c1a-33f1-4195-99b3-94a48519f76d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3f680d0d-5133-48fd-bd11-e64179059e35",
          "status": "Created",
          "code": 201,
          "responseTime": 9232,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e33f2bc-ae86-4b14-ac10-466667c8ad93",
        "cursor": {
          "ref": "4d0b1696-8798-49a2-b046-8262fa167324",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0be12a6d-ea24-4441-a151-49a41ff0827c"
        },
        "item": {
          "id": "6e33f2bc-ae86-4b14-ac10-466667c8ad93",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ad819b08-6d7e-4f8a-b942-d381104be3a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "019eff0e-2bd2-450a-b4f1-cd98aba768b8",
        "cursor": {
          "ref": "eb63b336-9ffa-4da9-a3ee-e17185728cc2",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "97101774-61b7-4d13-a100-07383a5078f0"
        },
        "item": {
          "id": "019eff0e-2bd2-450a-b4f1-cd98aba768b8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cc1d5ab7-8af0-40a3-8fc4-781c304991da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "f67c04e6-4274-4dda-b860-92f34e0ab48a",
        "cursor": {
          "ref": "996cee1d-138f-449b-b08c-1c5a957f985c",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a7b4c3de-d4c1-4a4d-8900-3c26c2dd3994"
        },
        "item": {
          "id": "f67c04e6-4274-4dda-b860-92f34e0ab48a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "453e6120-941f-4646-a363-7f761755d8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235ced16-e9c1-41ab-9555-e5fb732b60d4",
        "cursor": {
          "ref": "7e0864b7-81bf-4a00-b315-618526064c89",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "56e5b77e-9cce-4a9a-a413-8356ea2276d6"
        },
        "item": {
          "id": "235ced16-e9c1-41ab-9555-e5fb732b60d4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a7957b20-dac1-441a-9b79-1d68d0c33c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e996b6-4dad-4133-88cc-1ce46ba04e28",
        "cursor": {
          "ref": "a5a65453-048f-4268-a937-6bca38e851cf",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7224156c-51bc-47f2-9ce3-03e3480d08a9"
        },
        "item": {
          "id": "49e996b6-4dad-4133-88cc-1ce46ba04e28",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "94524d77-7a95-4128-8e81-c13c73388079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e7c9ae9-5e46-4cb4-ba14-c779a93db4aa",
        "cursor": {
          "ref": "d7636677-087b-48e7-94b1-2fef44bd56ab",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f90a42c6-e462-4279-b002-f61f655a4321"
        },
        "item": {
          "id": "2e7c9ae9-5e46-4cb4-ba14-c779a93db4aa",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3ee85e0b-6ec5-4319-8b4a-b534273d767f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795fac66-4735-4e86-94bc-8fe71c08ac10",
        "cursor": {
          "ref": "6bc4110d-27d7-47ec-bae5-3182a9baf386",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b4a79f25-4e98-4aac-a413-d95b9687a3dc"
        },
        "item": {
          "id": "795fac66-4735-4e86-94bc-8fe71c08ac10",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "796683f3-e088-4ee3-99fb-29166d0557b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6b3a1f-e715-49e1-83d2-086ab56cd41a",
        "cursor": {
          "ref": "dd12e0f0-0764-4b62-b16d-6fa6e39fcae6",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ef2482c5-669c-4f13-99ce-60bb1b68d029"
        },
        "item": {
          "id": "6a6b3a1f-e715-49e1-83d2-086ab56cd41a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d67e6dce-c2c1-4a76-9234-080d268e07dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b47f40-7fda-4373-b971-681c51988b13",
        "cursor": {
          "ref": "94b9daf5-3c72-46f2-b892-b1792fab04ab",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1c30a92b-7cd9-4d55-ab7d-1676774be597"
        },
        "item": {
          "id": "23b47f40-7fda-4373-b971-681c51988b13",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4786fdf2-6240-419e-85d1-414a46e07b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d8585d-cb00-4f7c-ba4e-0b156514c04f",
        "cursor": {
          "ref": "0126a894-f140-4210-9f90-a102c6d12ac3",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3e159838-56e2-4aa8-98d6-a9721294c7e2"
        },
        "item": {
          "id": "89d8585d-cb00-4f7c-ba4e-0b156514c04f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "17c87131-4bbc-49b5-931d-0d8436a7a3fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0698657c-3432-4d2f-8a03-2c3f03645e87",
        "cursor": {
          "ref": "021d2bb4-8ce5-4c8c-9e27-24bc5d65b7c9",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "aeda22c7-ef1c-4cdd-b61b-a4afe4e7aa6f"
        },
        "item": {
          "id": "0698657c-3432-4d2f-8a03-2c3f03645e87",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1cd20c63-3e44-42b9-af24-7b28f5133274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651a1911-464a-40cb-85a1-f0b61fe7bd2c",
        "cursor": {
          "ref": "8eccbc55-18f9-4163-a84f-9afe3386be9e",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d8a49f7f-3f51-4b3d-a248-07974c6e4e5d"
        },
        "item": {
          "id": "651a1911-464a-40cb-85a1-f0b61fe7bd2c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e3f1548a-3aef-4c21-a445-f118108d4820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3d2ebf-af77-49dc-81b4-f1a896e20714",
        "cursor": {
          "ref": "c15ade03-8fee-4e52-8ec1-c67369af55ec",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4e7f8927-078d-4583-a340-a0bae5c7c596"
        },
        "item": {
          "id": "bb3d2ebf-af77-49dc-81b4-f1a896e20714",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cf266856-de7d-409c-a26d-27327d36afc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d3e439-5d09-4985-8592-bd185a014df1",
        "cursor": {
          "ref": "933527c4-c1dd-40b9-ac78-c58e5eb4f242",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d1e55551-2471-4e81-ad1e-290873976317"
        },
        "item": {
          "id": "52d3e439-5d09-4985-8592-bd185a014df1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bef79f61-2c2e-4c9e-8667-859a4c60a515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f351db0b-1255-4cb3-bf53-01a112aee682",
        "cursor": {
          "ref": "aa192bda-c588-4559-a5e1-5326a2e49570",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ccaec3f1-f654-42a1-9800-57ecef1ed002"
        },
        "item": {
          "id": "f351db0b-1255-4cb3-bf53-01a112aee682",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ac42c6c6-d86e-4169-97b9-bda0fc2c2cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31a7607-5359-4821-b780-dbf32ed145fc",
        "cursor": {
          "ref": "0b569b8d-e8df-4ebb-a598-c8c994b35df9",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b3116620-7994-484f-bab6-4c53178801a0"
        },
        "item": {
          "id": "f31a7607-5359-4821-b780-dbf32ed145fc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "08022ced-179c-478c-998c-59914a9abfdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b171482a-3737-4d15-999d-cde085644f9b",
        "cursor": {
          "ref": "48433d64-3d16-4ec4-af58-18501f6e9835",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e2cf4a02-29da-45f7-8b83-e313db1b2f6c"
        },
        "item": {
          "id": "b171482a-3737-4d15-999d-cde085644f9b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9e025dc4-1f5f-4688-9dbe-5051db9927eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0534dc9f-c540-4c43-8822-ddd6288931c4",
        "cursor": {
          "ref": "796ed90c-900a-4b62-81ed-9f641ed10d5c",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ac0173ef-e16e-4b37-a409-5bfcf6d9ec6a"
        },
        "item": {
          "id": "0534dc9f-c540-4c43-8822-ddd6288931c4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "38c364e0-1c26-46bd-88f6-bc447eef035d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b0589f-b13b-4ee3-9645-dba8f93e986d",
        "cursor": {
          "ref": "e3a9a0d6-5750-4671-b57d-0c55bc554536",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ed959bd4-082e-48ac-9ee5-72e8614773b0"
        },
        "item": {
          "id": "e2b0589f-b13b-4ee3-9645-dba8f93e986d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d399c47b-e384-4e53-bf5f-ee2f62ba2b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06771191-d13b-448b-8c33-875edd9f886d",
        "cursor": {
          "ref": "f186e5f4-efca-45a2-9db7-b082fa59d41c",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1c14755e-7f80-4859-a63c-29d10e7f0d50"
        },
        "item": {
          "id": "06771191-d13b-448b-8c33-875edd9f886d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fac5819d-25a6-4b1c-8fa8-9594b4dbcc87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a80222-18d6-46d2-b170-acffe3dab59e",
        "cursor": {
          "ref": "fd8bddc3-782c-433f-b654-d5e06699ea6d",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "16fd9a2e-39aa-4ae2-98f4-8de20dd44e1d"
        },
        "item": {
          "id": "72a80222-18d6-46d2-b170-acffe3dab59e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6b6041da-e9a9-4812-b6ce-84c9eddfc235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c776ca4c-74c8-4028-8b49-9385054301b1",
        "cursor": {
          "ref": "ae543444-c724-4c68-ab70-e000a8d82aad",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "bf7191c9-8d44-4e02-a195-9ecc20132759"
        },
        "item": {
          "id": "c776ca4c-74c8-4028-8b49-9385054301b1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cff36c11-295a-4765-8864-7e27c7feb805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30aa2075-228a-4bfa-87df-7779425e528e",
        "cursor": {
          "ref": "36a92321-26be-40b6-b8c8-b68624ef6f40",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "297207d1-32bb-4c7b-beeb-5abf57438f27"
        },
        "item": {
          "id": "30aa2075-228a-4bfa-87df-7779425e528e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b43c0640-de15-4aa2-9ea4-abf3edbc604a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51781a1-96bb-4ce8-acef-25e7342a324c",
        "cursor": {
          "ref": "1a74cda1-59d0-4d64-9eb4-9ce4932cd5a2",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e4ab946e-044d-4ef5-af6e-5d17292948ad"
        },
        "item": {
          "id": "a51781a1-96bb-4ce8-acef-25e7342a324c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5ce8d12b-b5ec-40e2-9d9b-17416d17e9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353cfaf7-03e6-4eb7-9d40-b14ec5c9fac7",
        "cursor": {
          "ref": "324bd710-394c-46a3-8b0d-2eba62415e7d",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "533cb0c8-6e0a-40f9-9282-f61ba9b454b7"
        },
        "item": {
          "id": "353cfaf7-03e6-4eb7-9d40-b14ec5c9fac7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7f154c54-6e9c-4d66-83c4-37b4ae9d863c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49347fc6-b99d-4f1a-a888-1ec33cf8e7a2",
        "cursor": {
          "ref": "efd14268-f32b-4d10-889d-c95260cb3125",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "37b52385-5cbc-4494-94e2-ca54342bca27"
        },
        "item": {
          "id": "49347fc6-b99d-4f1a-a888-1ec33cf8e7a2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "680608fc-babb-4e9f-89e4-8f3930b780c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07548fdf-3af3-49c8-89d4-c42581b812f3",
        "cursor": {
          "ref": "d2b856fa-f3df-4719-8d14-46d938efa3bc",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "16abdc1c-bd6e-42f9-a3bb-e5572ad5047c"
        },
        "item": {
          "id": "07548fdf-3af3-49c8-89d4-c42581b812f3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fd60e22e-5a82-4db9-90c3-74e147933a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d69a0fd-cea3-424c-8e51-0f09b4cd3e76",
        "cursor": {
          "ref": "a3644485-9d7b-493f-8840-f322a0f771dd",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6a62aa05-44ea-465e-b2d1-ed09733dfdee"
        },
        "item": {
          "id": "9d69a0fd-cea3-424c-8e51-0f09b4cd3e76",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4664a7e9-e9d4-4645-ab2d-71233d1b8246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87bb3ac7-c1ce-4846-87a1-894065af5bc2",
        "cursor": {
          "ref": "c94f37f4-9ca5-497c-837d-ecfc417397ff",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cf07c3b3-2a91-4240-a761-83d6efffbcb4"
        },
        "item": {
          "id": "87bb3ac7-c1ce-4846-87a1-894065af5bc2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2c9035b1-c491-4efa-9e45-aa37d21e1a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a9e7c1-13f3-426d-94e6-6ed574b48ae9",
        "cursor": {
          "ref": "47aff521-ca45-4d5c-a461-b93a702ed2da",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6bece59a-dba8-4306-8232-5bb439f95467"
        },
        "item": {
          "id": "a4a9e7c1-13f3-426d-94e6-6ed574b48ae9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3257c358-a70c-4905-8244-9bf86311c6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80969cdf-d43a-41d4-a9cb-025d3494e926",
        "cursor": {
          "ref": "4a972dc2-cd05-4b44-bfc5-7da23b901a76",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ab1c9887-7c5f-4292-b0bf-c1b0ffb9b1e7"
        },
        "item": {
          "id": "80969cdf-d43a-41d4-a9cb-025d3494e926",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "67cfa0c2-b906-4306-b76f-1a94770ffd0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a19b5e-5cf1-48a6-a1c6-c41933564b6f",
        "cursor": {
          "ref": "aea1a31c-e0b3-4424-bf49-bed785c0b0e9",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7fdec5f4-6a92-4710-b2f1-48cbf55ae5e3"
        },
        "item": {
          "id": "11a19b5e-5cf1-48a6-a1c6-c41933564b6f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3f37fe7e-eb40-440b-a279-b48a6bf0d891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632f8393-17c1-4caa-99c3-fbc3af55f3cd",
        "cursor": {
          "ref": "3acac591-a4cd-47af-af93-f3ae69394d25",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d8b6a172-c0e7-4d56-8b10-9cae2297efa6"
        },
        "item": {
          "id": "632f8393-17c1-4caa-99c3-fbc3af55f3cd",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "64b3c986-6117-45c5-91dd-f6b196115551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d8b9b9-72b9-4402-91ce-df365077cd43",
        "cursor": {
          "ref": "efaebaa6-041f-4bcd-80d9-bbc337d0a3f8",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d1e60e68-23cb-4b20-a906-15f7fffdb9d2"
        },
        "item": {
          "id": "27d8b9b9-72b9-4402-91ce-df365077cd43",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d04d3c2c-2dbc-472f-bbf9-226daced5220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3a5c8d-cf33-44e9-958d-6a9c5db4214c",
        "cursor": {
          "ref": "03af8950-2bb0-4404-aafb-0cafe6127f06",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "572e2b42-1153-4b30-a449-d6303b7b9cc9"
        },
        "item": {
          "id": "7f3a5c8d-cf33-44e9-958d-6a9c5db4214c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9dec6575-16a9-4f42-a976-7ca75a8e37de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da45d50-6d13-4753-a41e-52b9e46f99fd",
        "cursor": {
          "ref": "51f5322b-0d41-48b9-a99a-83ebe0cb16ac",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b1674340-b55f-4a9d-91ca-1ac178d9f81a"
        },
        "item": {
          "id": "9da45d50-6d13-4753-a41e-52b9e46f99fd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "59e24eb1-1fd2-449c-8d91-689a8df0d5f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d71bb7-17fb-4c28-bbb8-885d62dbb178",
        "cursor": {
          "ref": "bab53114-8f61-4f1b-a4f0-f194c382d93b",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9e1c35b9-0039-43d5-8d98-343ff3ea17e5"
        },
        "item": {
          "id": "87d71bb7-17fb-4c28-bbb8-885d62dbb178",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8d9b3422-accc-41f0-b8ed-0e6c1623087e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42567d70-783e-44b1-af53-92934c9e819a",
        "cursor": {
          "ref": "7b5db32b-d3a7-4203-b35c-e477bc69d42e",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d06db1c8-a67c-4b3e-9987-fc44e81cc5fa"
        },
        "item": {
          "id": "42567d70-783e-44b1-af53-92934c9e819a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e2703517-63fe-4acd-8309-f099ce9585f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9a7ced-4dca-4ed0-b8f7-9238c2ebf6a6",
        "cursor": {
          "ref": "8b304033-acb5-4354-a937-be8f4c6fa297",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b2c3e2ec-e0fb-4418-82fa-8e2b9f4c880a"
        },
        "item": {
          "id": "9d9a7ced-4dca-4ed0-b8f7-9238c2ebf6a6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5cc5d35e-1d75-467e-a08b-6c6ad27d06c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1178f9eb-fda6-471c-b9dc-fb89096dffa7",
        "cursor": {
          "ref": "f6a14d3d-63fa-4ff0-9d4e-1d02e9e19b95",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4dcce720-e4df-4186-9de6-8685fc12e63a"
        },
        "item": {
          "id": "1178f9eb-fda6-471c-b9dc-fb89096dffa7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8b162b14-a886-4c2a-be54-de73b6159356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8315ae-c600-4167-a863-2cdf58de03f4",
        "cursor": {
          "ref": "6c0fb829-8058-4f7e-80e1-b95f41fcd3d0",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f4e47b3c-d3cd-47d5-98dc-806cda599261"
        },
        "item": {
          "id": "5e8315ae-c600-4167-a863-2cdf58de03f4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "690a8ea4-918e-49d1-b067-eeda67b7fa6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc285be1-641b-43a2-9bdc-b6ee663a9d76",
        "cursor": {
          "ref": "cb41f1b4-2d41-4df2-a85a-745de48f5e87",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e7f396e7-e96a-46ad-a704-b28717e68996"
        },
        "item": {
          "id": "fc285be1-641b-43a2-9bdc-b6ee663a9d76",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "67386e4c-8744-4832-be28-616afca9c5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090c7ca7-1417-4ce2-9f96-90617bdaeb07",
        "cursor": {
          "ref": "827b2cb2-55d1-453a-b810-f75465e3e622",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3fb0142b-3c90-4bcd-a4f2-259a5a10fd32"
        },
        "item": {
          "id": "090c7ca7-1417-4ce2-9f96-90617bdaeb07",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f9fed11f-cd52-4ae1-9645-87d046dc58cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a502dca-6ee3-4758-b8fb-2546bef71799",
        "cursor": {
          "ref": "a306be47-210c-4a67-80af-941c373ab02b",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "44bfb0ab-1abf-4bf8-8bd9-99f91d9f06cf"
        },
        "item": {
          "id": "7a502dca-6ee3-4758-b8fb-2546bef71799",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a464f77b-161f-422f-bcaf-ea88df109b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99c4a96-69f0-46d4-bbfd-be42f5cede9e",
        "cursor": {
          "ref": "2af67bff-0331-4e20-ad68-9319afda0f5d",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "598a3b98-7d7a-4697-ba3e-d295c8d014bb"
        },
        "item": {
          "id": "f99c4a96-69f0-46d4-bbfd-be42f5cede9e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "201fb1d3-51b6-4e3b-bbb6-dbda75e91611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9e9aad-52ca-4bcd-8fa0-bee0ef87f1bc",
        "cursor": {
          "ref": "5661f016-8beb-4f0a-8cd4-94a1e78de540",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5637ff17-db09-487e-ad05-6c803805479e"
        },
        "item": {
          "id": "1d9e9aad-52ca-4bcd-8fa0-bee0ef87f1bc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b5fa9577-1ef8-492b-bcc3-809fc5c1a2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d8c064-f413-4fe2-9a14-fead21acf77e",
        "cursor": {
          "ref": "4c76abd5-da25-416f-a64d-61a1f7df747a",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6155749a-0eb4-4ff1-b432-3cf53306bb8f"
        },
        "item": {
          "id": "b9d8c064-f413-4fe2-9a14-fead21acf77e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "66808ef6-5dd4-4fb1-aa5a-885d873fe29f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121682c4-2177-493c-9791-66d1db017bd5",
        "cursor": {
          "ref": "7066874d-ba7c-4d50-96fb-da5a8874724f",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4c02f940-1c73-452e-bda8-176a2a57bd96"
        },
        "item": {
          "id": "121682c4-2177-493c-9791-66d1db017bd5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b24d618e-05e7-41cb-bdee-cc00239726ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed05a46-7e7b-4fcd-a4a6-20505c22887b",
        "cursor": {
          "ref": "01e74b61-a37f-41bf-abd7-d39e01dcb0fe",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "27000bfc-cceb-487b-aa28-f586026bdec4"
        },
        "item": {
          "id": "eed05a46-7e7b-4fcd-a4a6-20505c22887b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1dfc111b-3051-43e4-a45f-728362f44dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90ba134-4564-40ae-ba24-59b328edd8e6",
        "cursor": {
          "ref": "519c8680-aa9a-4156-b923-5302cf361156",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "34a7a659-18bc-4e1c-86a0-23dfecbf37aa"
        },
        "item": {
          "id": "f90ba134-4564-40ae-ba24-59b328edd8e6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e9268fcf-a0c6-4662-9f2f-8225a5dfc608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4568b2a3-8417-4a0f-8bfa-c4a89be08cde",
        "cursor": {
          "ref": "e4ed6fe1-96d2-4c7e-b0ef-d551063fcd78",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d9dd1c9d-4d4d-44c1-993d-c23d315027ce"
        },
        "item": {
          "id": "4568b2a3-8417-4a0f-8bfa-c4a89be08cde",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0f56781e-4a1e-44c3-bf1b-409e6b04fe60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866f4fcd-55bc-49ae-b0c2-b6cbe0073bd5",
        "cursor": {
          "ref": "66656af3-1f92-4107-9f57-45dab0fc9493",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0b39fb0e-8561-40c9-8fc6-cb06914eb886"
        },
        "item": {
          "id": "866f4fcd-55bc-49ae-b0c2-b6cbe0073bd5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "773efcc4-a1bf-4b4d-b98c-3a30b8d5dd00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e655a14a-b854-4992-b20d-4c196cec390c",
        "cursor": {
          "ref": "c6ec6ed3-58e2-4fab-a91c-9c51eb01134a",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f8c2352c-48aa-42fc-9f34-37615a0b5ea4"
        },
        "item": {
          "id": "e655a14a-b854-4992-b20d-4c196cec390c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6e5582d4-5abf-46e0-b196-1f9fde748020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30737de-d710-41c0-a344-6d75af0d2296",
        "cursor": {
          "ref": "bc731528-c391-4c3b-887b-e44f07e7958d",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e2b3befa-9004-41f8-b2c9-8bc678558274"
        },
        "item": {
          "id": "d30737de-d710-41c0-a344-6d75af0d2296",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "76da968f-6cf7-4e92-a441-b3b0a4dc22bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e55a8f-de5b-43cb-8d6e-f589852c2896",
        "cursor": {
          "ref": "e9e26d8c-1f2f-4b5a-9989-0627aba11235",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f74a59ed-a792-4706-82ed-1be744b86a30"
        },
        "item": {
          "id": "24e55a8f-de5b-43cb-8d6e-f589852c2896",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5ef33b97-9612-4bb7-8793-608bd268b2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd6ee46-a3cd-4134-a4c1-2bb04a7c7dcf",
        "cursor": {
          "ref": "41626374-2cef-445f-aa75-a01fa40b0f18",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "21195118-ec63-45ce-8def-f6ca8b070d00"
        },
        "item": {
          "id": "9fd6ee46-a3cd-4134-a4c1-2bb04a7c7dcf",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "75de777d-a9f6-476f-a038-a282cf8cf770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b1d077-f546-4c29-a4a3-ce82655a3e1a",
        "cursor": {
          "ref": "3d799686-bfb6-45e8-8547-466ff91ec2cd",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9c3bca9b-9483-45c9-8aea-53faa953d69e"
        },
        "item": {
          "id": "54b1d077-f546-4c29-a4a3-ce82655a3e1a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c7b68b17-cc16-4b68-94cd-9645ea9e241b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e3ce2e-ee25-4d87-b231-610b57971b19",
        "cursor": {
          "ref": "21f57794-760f-40a7-87f8-938825bca367",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8809cbb3-bddf-4d37-9dfe-8df69411060f"
        },
        "item": {
          "id": "82e3ce2e-ee25-4d87-b231-610b57971b19",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7a07ee2f-2103-4c12-b404-6fe34cb2f0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36131470-a407-42e2-8ca1-9a01bda4c561",
        "cursor": {
          "ref": "f6f14ae4-23d3-498a-9276-dbe8c14526ea",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3b7a5013-1597-446d-9fda-e3bd22e3cc6a"
        },
        "item": {
          "id": "36131470-a407-42e2-8ca1-9a01bda4c561",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3b5b470f-fd3a-4b21-a266-99002f9b3d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9033dd-4bd1-4ee5-92dc-9bdfce7de30e",
        "cursor": {
          "ref": "6d621926-df03-45b6-ac00-409310ee2df3",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "02bc3c26-23f2-4e4a-8fa1-5b1b7b00d1f8"
        },
        "item": {
          "id": "6c9033dd-4bd1-4ee5-92dc-9bdfce7de30e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e4666612-a070-418a-b131-bd503889cba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28201440-a985-434b-8bb5-ae6a9df79d7d",
        "cursor": {
          "ref": "b2b3eb83-7e8d-41aa-8185-533f9a07fa06",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "bbc86ac7-3e9e-4c09-b9b6-e90545675ff4"
        },
        "item": {
          "id": "28201440-a985-434b-8bb5-ae6a9df79d7d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0b268300-2f7d-4993-a472-a8431fd28c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee67a2f-215b-4281-bd15-ed0f05895881",
        "cursor": {
          "ref": "ad0219d7-8c6b-4554-9906-2e2f5d0ab45a",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3ca3ab44-7b33-4121-8195-348eb3755279"
        },
        "item": {
          "id": "fee67a2f-215b-4281-bd15-ed0f05895881",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f09a0c0c-caa6-40f7-a4b9-aed6652c69b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8852ac-5874-4ea5-8b10-c59e5f6cdefe",
        "cursor": {
          "ref": "9c1625e2-a3fb-4852-ba9c-0697f86a0018",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d958b2ad-d2cc-4bb0-a78b-979205da3403"
        },
        "item": {
          "id": "af8852ac-5874-4ea5-8b10-c59e5f6cdefe",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4efb6f5c-deed-412b-940a-bb08c961a872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c190a2d4-f476-4420-9e2e-0290fd2f47d7",
        "cursor": {
          "ref": "f6b06a8b-7cd0-4f25-b7b7-85a8d5752cec",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e1610725-aaa6-4bdb-904b-e9a1ee2f8433"
        },
        "item": {
          "id": "c190a2d4-f476-4420-9e2e-0290fd2f47d7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "64dc7d20-fe63-4373-9e8e-199ab5824f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713952ba-e3a0-442c-82dc-7303bd4fd677",
        "cursor": {
          "ref": "e0557dc2-b28d-4083-9ee2-cb75f4cc9d70",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1e919f56-bcc1-4afa-96cb-3f7b91ea877b"
        },
        "item": {
          "id": "713952ba-e3a0-442c-82dc-7303bd4fd677",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8de8f24c-fbf2-4f98-9275-febfa606c013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa41be7-1ef4-488b-a539-22ead846ab81",
        "cursor": {
          "ref": "ed6bd28b-3449-4603-ba98-9474b9fbd458",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4b41a375-e75a-4cba-a254-a5092eb096b7"
        },
        "item": {
          "id": "baa41be7-1ef4-488b-a539-22ead846ab81",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8215f7d5-9ec4-4143-9a4a-ec5f0e1a8f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b55966-51a4-42c5-8e6b-d17680cb44ce",
        "cursor": {
          "ref": "376dac66-ece6-4deb-a578-3bdab69af4bb",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "501b731f-9b88-4a01-a7d4-cd339106a41a"
        },
        "item": {
          "id": "51b55966-51a4-42c5-8e6b-d17680cb44ce",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "632bd378-cac7-4fb3-9b22-3c93b00c829e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14df608b-6886-476a-867e-b1347158ca87",
        "cursor": {
          "ref": "802b5ea0-3896-491c-937e-2adae2a956dc",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3eb2f10f-bdad-4fc5-92f8-2e11045a26fa"
        },
        "item": {
          "id": "14df608b-6886-476a-867e-b1347158ca87",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7fbd0733-39a9-4319-a9ea-408ca299e1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3937ea63-4962-4b15-b7c6-59e230be8c53",
        "cursor": {
          "ref": "3f547176-91e0-4d35-962e-ec2f08823809",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "544f519d-20ca-428c-b7da-1c3f6f5d59a2"
        },
        "item": {
          "id": "3937ea63-4962-4b15-b7c6-59e230be8c53",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b3ce61fd-2e95-41a7-a478-fdf392ea86f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d0d1cc-df3b-4d8e-b69f-888d13c511da",
        "cursor": {
          "ref": "718d219f-18e1-4a03-a82f-25e185406840",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "44e56261-3d87-4ad5-915f-4c52c0d00172"
        },
        "item": {
          "id": "22d0d1cc-df3b-4d8e-b69f-888d13c511da",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "8496a6d5-c10c-40e0-9d37-d0b614addd28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb763e7d-25f2-4803-9d3f-514906b71366",
        "cursor": {
          "ref": "c004f691-fe05-4f05-8222-8b6d2343f52b",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7ec76cbc-f27d-4ad0-9ed1-a25157e800f3"
        },
        "item": {
          "id": "fb763e7d-25f2-4803-9d3f-514906b71366",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d27d03bd-c68f-433e-bd48-b2f9fb0997d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a2f19d-65e6-4045-a44e-c63f6d674ff2",
        "cursor": {
          "ref": "9ceef6d4-3742-4903-b536-ef7704f3c63f",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ca6cf879-9a7d-401a-9218-7c77dde03b9a"
        },
        "item": {
          "id": "60a2f19d-65e6-4045-a44e-c63f6d674ff2",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "3b151a25-7a6a-4430-8c9b-7c01cc2975e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fd2b76-4c9a-477e-b759-822aa2cf3784",
        "cursor": {
          "ref": "632a9201-3009-456a-9693-3bc2f878eb11",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d73d0147-62ff-493d-b2e8-433fb8a70cab"
        },
        "item": {
          "id": "d1fd2b76-4c9a-477e-b759-822aa2cf3784",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0fc0b4e0-07d5-40a0-b47e-1ddf805c7048",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d81f149-f449-40c4-80f6-5bc7ff795722",
        "cursor": {
          "ref": "f8cec12e-9925-4fc1-9922-6d5bda9ebe8b",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "308e0019-9cec-4b9f-93b3-81ca5c7c6c5d"
        },
        "item": {
          "id": "7d81f149-f449-40c4-80f6-5bc7ff795722",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6c0fb6ce-efe9-45c3-af81-6dc1bfd6d1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c94a16-234d-45ae-8e0f-2c1b93c8206f",
        "cursor": {
          "ref": "19b57069-e049-4768-a225-138cf8a09c31",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "77df8976-ce71-4bb6-b49d-a9def3052c79"
        },
        "item": {
          "id": "26c94a16-234d-45ae-8e0f-2c1b93c8206f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e255c4d8-437c-4495-ac48-10e63c98a082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46ec689-dc04-4c84-aa05-89bcb3181197",
        "cursor": {
          "ref": "31d00e75-2ee6-4324-9af4-0ebe62244272",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0af24a4b-4fb0-4815-ad3c-168707a8b946"
        },
        "item": {
          "id": "a46ec689-dc04-4c84-aa05-89bcb3181197",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "88df7c66-d0b1-4c9c-83be-acecc26c72d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aedc9b97-52df-45e0-9f5d-6b4b3e917958",
        "cursor": {
          "ref": "2784c6df-12e4-45a8-8b82-bd10161db470",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5401e497-fed6-4b4b-a163-37b9cec1a406"
        },
        "item": {
          "id": "aedc9b97-52df-45e0-9f5d-6b4b3e917958",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c8364f63-fb94-449a-8e8a-f1c86f84398f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93196647-5c27-455b-85d6-a00da9d745c1",
        "cursor": {
          "ref": "77d36c82-417d-4ecf-bed5-0a000fa7e29f",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8d3c9cd2-191a-4d4c-b807-8971c62dca64"
        },
        "item": {
          "id": "93196647-5c27-455b-85d6-a00da9d745c1",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8dc24f2d-0731-42a5-815e-eb29deba285b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8464a71a-f3a9-4e7f-a83a-e291014d9460",
        "cursor": {
          "ref": "9474ed9c-3fc1-4782-ba5c-c063e825ffe7",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "51ddeee9-72ed-4f0e-8b26-b37808a1beec"
        },
        "item": {
          "id": "8464a71a-f3a9-4e7f-a83a-e291014d9460",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "80c7a118-3fc0-4494-b22e-924aeed4315e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44619910-e372-4d07-8fb1-6463d67beda9",
        "cursor": {
          "ref": "d62df1f3-4b0a-4529-a900-142556f45454",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "dc0958d0-2213-4f3b-8c6e-7f5f0b709fea"
        },
        "item": {
          "id": "44619910-e372-4d07-8fb1-6463d67beda9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "bdf4e1b0-9804-4424-a090-888da9a6db5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9389f0b3-5cff-4ac5-acf9-36e1cb015376",
        "cursor": {
          "ref": "a146b155-e3e6-4582-a8b2-c651e143b75f",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0c72cb76-6742-49f6-877e-ea857a254d7c"
        },
        "item": {
          "id": "9389f0b3-5cff-4ac5-acf9-36e1cb015376",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6a8e5308-050f-4956-9728-519c1185126d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd3615b-803e-425d-8891-c771193a9820",
        "cursor": {
          "ref": "95670dd9-d930-407d-867a-346267ebd4a0",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3374a6a3-9377-469c-9fe0-392c30627962"
        },
        "item": {
          "id": "bbd3615b-803e-425d-8891-c771193a9820",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "67b4eb82-4b9c-4e8e-9490-4d8e2621c291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4276cd-3199-4530-9f25-ce483fd5e310",
        "cursor": {
          "ref": "f01cf6ef-d857-4251-9e53-0b719eeca6aa",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "bcb3b7d6-70a7-4f45-a087-04767a4abe28"
        },
        "item": {
          "id": "da4276cd-3199-4530-9f25-ce483fd5e310",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7b2b46bd-4a1d-4ff5-b1d3-f49dffd72a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26c2602-5239-493c-8456-0c2a421f2f58",
        "cursor": {
          "ref": "de21a328-c5b6-4ced-aec1-3e8b85fc6348",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1eb43954-5afd-408d-8ccf-91b60f4eaa34"
        },
        "item": {
          "id": "e26c2602-5239-493c-8456-0c2a421f2f58",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8d58f861-4368-456e-8b62-89778fcfb80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ff4723-4830-43d5-91aa-d3b2baf77031",
        "cursor": {
          "ref": "16381690-4de6-43b2-a7fb-d338b00d6a0c",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "85bc70f1-13a3-4bf0-9f1f-a6b2cad7cca7"
        },
        "item": {
          "id": "d0ff4723-4830-43d5-91aa-d3b2baf77031",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "fd87bdde-c370-4411-afd9-af560cd2c815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ada908f-a2ed-4b3b-ac5c-816736bc5ecb",
        "cursor": {
          "ref": "3ed26392-5850-4a1e-acbd-a54722921b18",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e74b937e-00c5-47c6-aaff-bfa1739641f6"
        },
        "item": {
          "id": "7ada908f-a2ed-4b3b-ac5c-816736bc5ecb",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "407cb034-89f3-462b-94e1-b61f1e44e75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c0dcd1-d6b5-41a6-84e4-34eb469ad918",
        "cursor": {
          "ref": "6747166c-2b86-4c3d-a76f-b97db9783c86",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d3545782-2fad-400b-b7dd-acc76f06c464"
        },
        "item": {
          "id": "f0c0dcd1-d6b5-41a6-84e4-34eb469ad918",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e8be0fdf-1d8f-4577-bf28-c322a4511b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ee4a80-280f-4699-b1cb-29d5646a23a5",
        "cursor": {
          "ref": "b25c57bc-f2b0-4c75-acfb-3b3c9709e366",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "28d25317-d6bf-4e68-a15b-b5a956590341"
        },
        "item": {
          "id": "d7ee4a80-280f-4699-b1cb-29d5646a23a5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8fe1a1b5-16bf-4f78-9cf8-ab07588e46f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803e94b7-5003-4f5e-9d47-d2885bb82ac3",
        "cursor": {
          "ref": "c27208cf-8510-4bf5-929d-3dce1cfbb8ce",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9f7a7448-9534-438b-8dc3-bbd3962fc92b"
        },
        "item": {
          "id": "803e94b7-5003-4f5e-9d47-d2885bb82ac3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "016a646c-6ed3-407d-8faf-ae4e670da619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d05a0a0-bff9-43b8-a375-af0fbb4426f0",
        "cursor": {
          "ref": "1a161a4d-7b00-4dfe-8a9e-91fa1e21183e",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "97f25fcc-44f0-49cd-82e0-40974ec11753"
        },
        "item": {
          "id": "8d05a0a0-bff9-43b8-a375-af0fbb4426f0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7b490bcb-07cf-4cbf-a7e6-f7de027b91ac",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "510ea468-6970-4e86-92ca-9973ecf59e60",
        "cursor": {
          "ref": "57ff47f9-eb45-482d-9385-5127ea9f3e0c",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2d2ded0c-1a18-40da-8114-8ac95607a2e3"
        },
        "item": {
          "id": "510ea468-6970-4e86-92ca-9973ecf59e60",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "576c3010-4a6c-4e6a-8185-64df4e8fadc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d8cb85-c492-4907-a06a-2ccf2cbf02bd",
        "cursor": {
          "ref": "db24257d-e410-4095-8991-42d2ed8f0777",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "de4c2dd4-f075-4a60-9adb-6b0464c36853"
        },
        "item": {
          "id": "07d8cb85-c492-4907-a06a-2ccf2cbf02bd",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9ca48d6f-29e3-41b6-8696-bc9683785b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c44fd2c-ddbe-455c-8d90-87f6fea567af",
        "cursor": {
          "ref": "c20a6904-a44f-404a-b1d9-3ea7e93979bd",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "598b583f-624c-4368-a2ff-0d3eaf19814d"
        },
        "item": {
          "id": "8c44fd2c-ddbe-455c-8d90-87f6fea567af",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "88e8cba7-36e3-4c53-93e9-03abed3c4e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c7e9ff-e7bf-41dc-90bf-1ac961832114",
        "cursor": {
          "ref": "db747082-05d7-4923-8f02-c458b867ecac",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "092713d2-642d-4c6c-b9c3-0acf069c052f"
        },
        "item": {
          "id": "77c7e9ff-e7bf-41dc-90bf-1ac961832114",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5c3f34de-5fc4-4f41-a77e-1551744317b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6974b1a-2671-4126-973e-e537bca1dde1",
        "cursor": {
          "ref": "02f854b2-3d7a-4b98-95da-f78f290ca208",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "29191bc1-bccf-47ac-adfe-a478e2391674"
        },
        "item": {
          "id": "c6974b1a-2671-4126-973e-e537bca1dde1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "32ad8b70-6581-4551-b279-aa1270dc00a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c66be4-a4fa-489d-a81a-282c479134c8",
        "cursor": {
          "ref": "b40e86f1-21b9-4b6c-a0a8-cd7933b58448",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0047f103-3d31-478c-acda-6bf68767b70d"
        },
        "item": {
          "id": "03c66be4-a4fa-489d-a81a-282c479134c8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c234b973-b376-48ec-a120-5bd6b0d3f2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d833cedc-77c7-4f2c-ac3d-1656ebac92bf",
        "cursor": {
          "ref": "26b89c4d-7ff2-413f-a6f1-0538e0a56092",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "77d8e091-22a0-40a1-b67d-1e5a9518d9b2"
        },
        "item": {
          "id": "d833cedc-77c7-4f2c-ac3d-1656ebac92bf",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c056e4e4-11fc-4a2b-a321-f03d494b55a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b6600d-ade9-4019-acd3-741e23931668",
        "cursor": {
          "ref": "6575b7b2-ff37-4c66-bd9b-baf0bd24a746",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "10b73d93-ad36-434f-b658-3aae7e22545f"
        },
        "item": {
          "id": "c6b6600d-ade9-4019-acd3-741e23931668",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "df51b074-99b2-4961-8cfa-2ec38f8714f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc741b95-80d4-4f60-8f98-798794488bc7",
        "cursor": {
          "ref": "c4c0788c-4279-42ae-9f1a-6946279495fc",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d0cba872-dc15-4088-9409-c030fb48eb4f"
        },
        "item": {
          "id": "bc741b95-80d4-4f60-8f98-798794488bc7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4d03ad4f-7335-4183-9b76-5fdef69eb02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e7a827-0a4f-46ab-b459-be0774bf8221",
        "cursor": {
          "ref": "c9fc3ac7-8055-448c-b3b1-d18013587fec",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "55ccc741-991a-4a07-b3f4-dfb79b007fb0"
        },
        "item": {
          "id": "21e7a827-0a4f-46ab-b459-be0774bf8221",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5a1fb078-6ba5-4ee9-b609-20c0ce099a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da920716-906c-49c7-a2a4-f40df2ab4452",
        "cursor": {
          "ref": "ba3be25a-1f92-4d97-bd87-beb2a7315399",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "26af0747-dcfe-42f5-b3aa-44ebd2b23682"
        },
        "item": {
          "id": "da920716-906c-49c7-a2a4-f40df2ab4452",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "efdafde5-6a02-41e7-9220-183ded0f51de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1bd978-50b1-4c58-827b-52128318b16e",
        "cursor": {
          "ref": "1c388134-ced4-4136-862b-bd03fdbcc8e7",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "96a58056-8a3d-4684-adf0-0321c6893876"
        },
        "item": {
          "id": "2f1bd978-50b1-4c58-827b-52128318b16e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3d5775eb-c87c-406a-8b14-d67e74309429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09903b99-a114-4e0f-a4f7-71a0ae213548",
        "cursor": {
          "ref": "ac45f422-4133-4e4d-890d-a2f69f06b339",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a9e44f4a-c4fd-4704-ab05-902c1a56db86"
        },
        "item": {
          "id": "09903b99-a114-4e0f-a4f7-71a0ae213548",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c3d90591-151e-46a4-8e33-d48b5bdc090f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edabe792-b164-4151-a741-638e68e276cd",
        "cursor": {
          "ref": "e42a15d1-fc22-49a0-bffc-282b122b7980",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f4527cf0-d3a7-4fda-8c85-c647dab82d51"
        },
        "item": {
          "id": "edabe792-b164-4151-a741-638e68e276cd",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "0a53af92-b88e-40a9-8b3a-72352cb29f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6699b0-544f-404b-84f3-2336516c8c8a",
        "cursor": {
          "ref": "e44806b7-eed7-4ff3-ac15-137fafd1396f",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "590de27d-d85a-425a-a8be-231be66490e2"
        },
        "item": {
          "id": "8c6699b0-544f-404b-84f3-2336516c8c8a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "353252dd-5f9c-4dc1-b72c-3ba51c697edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4617ee0-ddf8-4cae-b9d9-92b0602c4c8e",
        "cursor": {
          "ref": "a2c21713-5bc1-4c7d-9978-8b1715601b87",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ba60c251-c38f-44c7-8b1a-d186d3f4fba0"
        },
        "item": {
          "id": "e4617ee0-ddf8-4cae-b9d9-92b0602c4c8e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "eadbc8a7-5cd1-4cb5-ab0d-c7bf36633c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec78630-515a-4ed4-9b72-17a4ac9bfc58",
        "cursor": {
          "ref": "9b106b88-5f4d-40a3-b290-af53a9e8a240",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ae39bf22-fd4f-44e3-86a2-3928b97784b1"
        },
        "item": {
          "id": "fec78630-515a-4ed4-9b72-17a4ac9bfc58",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b020d1ae-2d2c-4a98-ac62-d495c36a4686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6464eb1b-054d-408e-ad4a-ee445bd71c4d",
        "cursor": {
          "ref": "6da90699-300d-4fdb-b301-aa99e16e688f",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9ef24789-0f4d-4577-b0b6-672384c9f432"
        },
        "item": {
          "id": "6464eb1b-054d-408e-ad4a-ee445bd71c4d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b5b15e9d-9857-4cfc-b33c-bba2610d412e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74bd222f-c661-44f8-8c8e-50e10f1f07e7",
        "cursor": {
          "ref": "7edef489-527d-4ad8-8ccf-b6d538586fb0",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7f6ceb79-f716-41a0-90a6-8929ba9e9de3"
        },
        "item": {
          "id": "74bd222f-c661-44f8-8c8e-50e10f1f07e7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "761dbaf4-434d-4746-8554-0d5f5e5446b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3abeeea-3c54-4613-8630-779cf1feb356",
        "cursor": {
          "ref": "5f4e9c4c-07fb-4e5f-8c68-04d84e3a02d2",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "95ab68a0-71b6-4b1a-994b-a9c530e414df"
        },
        "item": {
          "id": "a3abeeea-3c54-4613-8630-779cf1feb356",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "bbfbf217-cc4d-409a-866e-bb0437c6a9b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652f2c18-edfb-4d1f-9d6f-d7599276e738",
        "cursor": {
          "ref": "1ebb8f0e-11c9-46bc-afa3-5261633722ae",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "17c7a9f5-03eb-4598-a77e-3cda6c454d06"
        },
        "item": {
          "id": "652f2c18-edfb-4d1f-9d6f-d7599276e738",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "493464b2-cd30-4323-b233-1c924b24dbd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f3fb52-7636-4bcc-a02f-231763527d3a",
        "cursor": {
          "ref": "0ac80d22-eb02-4445-8bcd-e219af28463d",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a937902a-62b7-488b-90c8-ce409acf5ba5"
        },
        "item": {
          "id": "67f3fb52-7636-4bcc-a02f-231763527d3a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1af51055-b4d1-4e2d-8118-c60bfbb52f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f432892-ec77-4ab9-9712-c43e25ca2d36",
        "cursor": {
          "ref": "f82c62c0-eb13-4dd2-bc43-90bc97ad6fb4",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5789ef9d-3a7a-4a73-8baa-6056fcb59250"
        },
        "item": {
          "id": "0f432892-ec77-4ab9-9712-c43e25ca2d36",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "07e8e274-53e3-4489-b7aa-490b601c7591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921f751b-62c8-4561-a9bf-0cbb18ed2e31",
        "cursor": {
          "ref": "557f422e-55f4-47c3-b29c-e10fbd352ac3",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1c204306-be33-45d6-a4a7-94e39ab8c980"
        },
        "item": {
          "id": "921f751b-62c8-4561-a9bf-0cbb18ed2e31",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4325df9e-f3a3-491f-a45d-3ea9e8154914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85470de5-6af2-4ec2-91c1-a194e6ba14ef",
        "cursor": {
          "ref": "6cfe77b7-5f19-49b0-b270-1a355e303f5c",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b1d46017-1e15-4bbf-bad1-0a9ec7ec608c"
        },
        "item": {
          "id": "85470de5-6af2-4ec2-91c1-a194e6ba14ef",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4e0aa3a2-e19b-4bef-baab-19ee9f938e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32e5050-3da0-4816-99d3-7c0368336c82",
        "cursor": {
          "ref": "1a5489e0-41fa-4323-918c-7476f1139a9f",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6fc3099a-b68e-4650-b690-90ce321af972"
        },
        "item": {
          "id": "f32e5050-3da0-4816-99d3-7c0368336c82",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8cf67123-a1bd-42e3-8827-3cdc801dd1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4f87f2-a453-4d50-9161-3bcf9b3b39ad",
        "cursor": {
          "ref": "21c74083-61f4-471e-a64f-52c29c767800",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "25f46660-2f3c-4c4f-b4aa-49802dcdd5df"
        },
        "item": {
          "id": "2f4f87f2-a453-4d50-9161-3bcf9b3b39ad",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "af71895d-c9fd-469a-aa6c-2983d9872f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3aa732-0b39-44d4-bfd1-21b8dbe1e382",
        "cursor": {
          "ref": "bbe990e8-8e4f-4afc-bcf0-d7d4d47ddd3d",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d145afe7-0136-4e10-b956-465e9a7fbc8a"
        },
        "item": {
          "id": "2e3aa732-0b39-44d4-bfd1-21b8dbe1e382",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9596654d-aef8-458d-80fa-7fb896549eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db468d1-4a23-4edb-bc63-f3ab5f054313",
        "cursor": {
          "ref": "6c1c116e-7627-4920-ac6c-5bcad96c9dc4",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "37eeeb68-d44a-479e-94d8-4114d655e417"
        },
        "item": {
          "id": "1db468d1-4a23-4edb-bc63-f3ab5f054313",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9af612cd-5b80-4df1-b761-bc3c7e2b383f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f50030-be37-42fd-94a3-67163706d2b6",
        "cursor": {
          "ref": "63026912-d81b-4315-bd7a-b576110407f5",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f9079e25-3570-41fb-8775-6dfba5aee1d6"
        },
        "item": {
          "id": "a2f50030-be37-42fd-94a3-67163706d2b6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "87012337-46c6-4582-bb51-4e28085355b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eae4200-cd9a-41e7-8df3-744fa299d544",
        "cursor": {
          "ref": "95ab3c58-74eb-4a38-9c5e-6220ca685d1b",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2f64017e-eb98-45db-92e3-1e9e449a227d"
        },
        "item": {
          "id": "4eae4200-cd9a-41e7-8df3-744fa299d544",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3bfc06bc-26dd-4b5b-91f2-53e621209d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a5e686-449d-49a6-8886-6febbac388c7",
        "cursor": {
          "ref": "db1f01fd-87ab-4f71-a6d3-087ef2a4694d",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "de82e08b-554b-46f5-aeb4-c6f363245a0b"
        },
        "item": {
          "id": "b0a5e686-449d-49a6-8886-6febbac388c7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5e3ee0da-5f4a-4a1d-9247-085111458b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15c17a2-a496-43e6-a8e1-ab79aaf5f12a",
        "cursor": {
          "ref": "3e879608-fa50-4843-a283-cf1994bd20dd",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ebebed8f-9c94-4cab-a333-d255239c2817"
        },
        "item": {
          "id": "d15c17a2-a496-43e6-a8e1-ab79aaf5f12a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5dc7018f-62a1-475e-8a05-3d5a4f6bf571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4244abd-cac3-4806-aa47-7df4461f3c53",
        "cursor": {
          "ref": "59a1de77-abfd-4bec-8cc6-bb0a1b9e073a",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b6512b55-7d8e-4653-8a2a-eece1a7264d2"
        },
        "item": {
          "id": "f4244abd-cac3-4806-aa47-7df4461f3c53",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "22e7c841-d8ef-4ea7-a82e-d7a0eab383ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206752cd-95d4-4417-8745-a918e6671c33",
        "cursor": {
          "ref": "ce8bfd7c-fa01-420d-9fb9-afce60ee5318",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8bebd199-9b8e-4da5-a3d4-a4380a9bde17"
        },
        "item": {
          "id": "206752cd-95d4-4417-8745-a918e6671c33",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "dc4ec64e-56be-443a-bf72-53fbacb76ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56930a8-80f1-4b23-8371-e24e779ba810",
        "cursor": {
          "ref": "0e90de1c-123f-41a4-bea8-b132848a10ef",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2994092e-d3f9-4d55-8caa-89172b042bcb"
        },
        "item": {
          "id": "c56930a8-80f1-4b23-8371-e24e779ba810",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "5f4e29ad-034b-43f0-88b8-d04e6b53415d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22772f6-e1db-4c69-b33c-793551ecc737",
        "cursor": {
          "ref": "459cd2b3-795b-4798-9444-83e366a837c4",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6588f75f-0b03-4078-b59f-1c470e4992b8"
        },
        "item": {
          "id": "f22772f6-e1db-4c69-b33c-793551ecc737",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4b7d851f-5db7-40cc-a6b3-2eb724f300ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5db5775-056b-47df-8a1a-bf93e9baba32",
        "cursor": {
          "ref": "a8890b61-b2a4-4feb-8834-1f9e91f2146a",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f6df8dca-6cac-44ec-bf87-b3edfa759b64"
        },
        "item": {
          "id": "b5db5775-056b-47df-8a1a-bf93e9baba32",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b6628ff1-6419-4fac-b3e4-842ee6e56234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd85039-8097-46ba-aee7-b447895fa291",
        "cursor": {
          "ref": "9d45a434-6c53-4c05-a36d-330aad49b265",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "44edcfeb-ab07-4074-bbf2-7c4dd160a753"
        },
        "item": {
          "id": "fcd85039-8097-46ba-aee7-b447895fa291",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f55ef613-b3fb-4a3b-aed9-12e07e980095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8211e66d-0ebd-4e2c-ba46-df2bb5d64cfb",
        "cursor": {
          "ref": "070aac4b-f929-4a0b-a190-78de6539ce48",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "bfa382f1-d475-4598-b8a7-f0e99855823a"
        },
        "item": {
          "id": "8211e66d-0ebd-4e2c-ba46-df2bb5d64cfb",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5a70f859-3d48-4319-881b-16d682ba086f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd2717f-375f-411f-b8b5-239661fac410",
        "cursor": {
          "ref": "294247c8-b6b5-45f0-ac80-53d26e062f84",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2bdba0e4-fe77-4bdd-aaeb-3428641d27a4"
        },
        "item": {
          "id": "8cd2717f-375f-411f-b8b5-239661fac410",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b1b4e121-cd8a-411b-b0f9-06dd2b54d6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6999df4-ec67-4c8a-9ec0-482ec8916752",
        "cursor": {
          "ref": "402a7229-d3d2-4263-b7c4-04ceac7ea10a",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6a13cbd4-2f33-45a9-814b-20ff4e1a9d0e"
        },
        "item": {
          "id": "c6999df4-ec67-4c8a-9ec0-482ec8916752",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c2e9f524-363c-491a-95c9-0ee1fbd28a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7641c374-18fd-448d-8825-1ff9cd20d731",
        "cursor": {
          "ref": "7e051e6b-0cbd-4967-8ccb-a0736a4cd988",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ff000707-d018-4350-92bd-60912ff723f6"
        },
        "item": {
          "id": "7641c374-18fd-448d-8825-1ff9cd20d731",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ea2d03c5-0190-433b-bbb5-a38e0290a28d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8245a34-23cb-49c9-bc24-51efbeae92c1",
        "cursor": {
          "ref": "ff7a4c49-89c2-4101-ae3e-415c144c1b62",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ef9834f6-030b-4fb2-b334-e88f96fc9f2b"
        },
        "item": {
          "id": "b8245a34-23cb-49c9-bc24-51efbeae92c1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d16227f5-97dc-407c-b484-8cf095c97627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3b9432-3fcc-4035-8834-19e66a48aa95",
        "cursor": {
          "ref": "e9b2c636-6a55-4c12-9cbc-15700ada6960",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ff2f9fa4-98d4-49c2-9124-7bfc35cd6a0c"
        },
        "item": {
          "id": "3e3b9432-3fcc-4035-8834-19e66a48aa95",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8c4ca8d0-c739-45d2-a61a-14c90d3a19de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffca2377-eaab-47a3-8513-7a47a477582f",
        "cursor": {
          "ref": "f11792b3-8614-4b96-b1a9-8af4dd7219c4",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7eaa6457-8e5d-49fb-b6f8-ffba5aee34bb"
        },
        "item": {
          "id": "ffca2377-eaab-47a3-8513-7a47a477582f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fc8a2126-baf0-47eb-b679-2ea326a4d135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7bbb87-4bdc-40b0-98c6-be7c9a0cc7d5",
        "cursor": {
          "ref": "a6ad55e0-ab97-4e1e-9cbd-e322528741e9",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "45a1ebdf-6976-4ec4-921a-80692b081220"
        },
        "item": {
          "id": "2c7bbb87-4bdc-40b0-98c6-be7c9a0cc7d5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8d84adf2-3380-4a35-a35f-d642a8659b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d0eee0-bc0a-4f58-8fef-9b4ebb283273",
        "cursor": {
          "ref": "ff9a38e4-cbae-4d06-a52d-ee4109d87baa",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "770049eb-e30e-4201-ae01-6594a2a7ae5e"
        },
        "item": {
          "id": "30d0eee0-bc0a-4f58-8fef-9b4ebb283273",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "bde5f68c-afed-49c3-b7fe-25051e02b0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ab218e-18a8-4686-be47-2c3a191b7045",
        "cursor": {
          "ref": "87c52677-e3db-4f0b-9247-d81364c07356",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ca62db8e-2259-4f1c-b9d7-4cc692d7f3e1"
        },
        "item": {
          "id": "54ab218e-18a8-4686-be47-2c3a191b7045",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f2bffa99-5006-42a0-b99b-f3a4e40d47ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8faa876-b972-432a-9a91-cd2b4383a585",
        "cursor": {
          "ref": "568c9714-be7a-4cfe-b698-b4552c8b3152",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "22a20057-ca2d-4f04-9664-e56613b6bc48"
        },
        "item": {
          "id": "d8faa876-b972-432a-9a91-cd2b4383a585",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "52f413c1-18e6-4e72-8fb0-991c5401d64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f407aca-6a4f-43bd-a74c-7c00e49dcdbc",
        "cursor": {
          "ref": "5f1ea95c-08f3-4ca4-8990-eba81d6a16a0",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "848969b6-40e0-4ec6-9b7e-8767f820af62"
        },
        "item": {
          "id": "7f407aca-6a4f-43bd-a74c-7c00e49dcdbc",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bf1dd1d6-12c6-436a-8f9f-485d7efae642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b29fb48-f2b6-4497-b758-d20527c5cb06",
        "cursor": {
          "ref": "659e1a36-e51a-417d-9d6f-21005c7d5c04",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bfd7629c-a4df-4644-b9ae-a40a82238e5b"
        },
        "item": {
          "id": "8b29fb48-f2b6-4497-b758-d20527c5cb06",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "54e2cab0-d94a-44aa-9952-7a517c17e24a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4679bec2-2e52-4c05-81b9-a2728810bf21",
        "cursor": {
          "ref": "f67b2364-cbd2-45df-83e7-19486e62db07",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2c0ebcc3-005f-4fe5-b8e2-8c85b9a60d81"
        },
        "item": {
          "id": "4679bec2-2e52-4c05-81b9-a2728810bf21",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0b9db46c-1dd1-4f35-9a27-f1c44c45cf74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd88ad27-2a35-45ac-a054-4229066bdbe4",
        "cursor": {
          "ref": "9e084b1d-9576-4ee4-b3cd-a7027b3dce39",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7181cb00-7892-49b0-9b23-2dc0cd37fbb9"
        },
        "item": {
          "id": "bd88ad27-2a35-45ac-a054-4229066bdbe4",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5a62ff7c-39ad-4e72-b08c-8ff681713555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f90f99-6de0-46b7-b91d-4fd464ac37a5",
        "cursor": {
          "ref": "5374332a-88f4-40e5-9b6a-00652a56cb34",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0e7f7aff-a2e3-4023-8d00-0c8108eef80b"
        },
        "item": {
          "id": "f9f90f99-6de0-46b7-b91d-4fd464ac37a5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3481dbb3-e574-4268-a016-c565a1a81d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd95315-1599-4b02-a2d9-0e5d4a26610a",
        "cursor": {
          "ref": "b27743ed-cfdc-41df-975b-8fd905628f6c",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "d064f530-b03e-4c66-92ec-3ddd0a51bcd6"
        },
        "item": {
          "id": "cfd95315-1599-4b02-a2d9-0e5d4a26610a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "820ad25d-6695-42c7-be15-2daf4d1102c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6a69a3-9190-476b-bf61-f54c7ac31998",
        "cursor": {
          "ref": "e72d8c20-1490-4c4a-bee1-f7d81ec7c654",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "6df6c96a-76e7-49c6-8121-d14faf936ef0"
        },
        "item": {
          "id": "1d6a69a3-9190-476b-bf61-f54c7ac31998",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7529abe9-ed88-48e0-8588-ceb5c2a3bdf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397557b0-2068-4ed2-a1f3-6416500579f3",
        "cursor": {
          "ref": "ba9db2c6-f6af-4048-b20b-f6cbca1a7ce9",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f989cbbe-fa96-4885-a1fc-1580877895e6"
        },
        "item": {
          "id": "397557b0-2068-4ed2-a1f3-6416500579f3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c56be644-b1b4-4293-9ac9-9bf2eb719fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b1a90a-74c5-4ef1-88ab-5454074ca58e",
        "cursor": {
          "ref": "6b05caf2-7dd2-46c4-9244-41e1b62aac4d",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "15d0da21-5f30-426e-ae83-21503778b0bd"
        },
        "item": {
          "id": "98b1a90a-74c5-4ef1-88ab-5454074ca58e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "88c45b71-9224-417d-9849-83ae0db8443c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957852bd-9915-42ec-89b3-75afe3615fba",
        "cursor": {
          "ref": "5c95d7ed-4733-41b0-8679-53d360954010",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "b9c54c20-1ccc-4949-ad3a-36fa31a1db71"
        },
        "item": {
          "id": "957852bd-9915-42ec-89b3-75afe3615fba",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "dfaf4054-abed-4baf-8f38-f012abc6d170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85964264-425e-4ca3-bfdb-6e3402afcb0f",
        "cursor": {
          "ref": "fe5deded-d4e5-488f-bcb2-332157243bde",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "af2584c6-b63a-4e55-8108-3c2b8b04fed6"
        },
        "item": {
          "id": "85964264-425e-4ca3-bfdb-6e3402afcb0f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "942d58e8-0de9-448e-924c-e2d4d01d5fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8f852d-07eb-4757-89d4-d845927de8c9",
        "cursor": {
          "ref": "6da1283e-0064-4378-99d8-425ff00a86a4",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "6348972b-451b-44f2-80e8-649597b2de49"
        },
        "item": {
          "id": "5e8f852d-07eb-4757-89d4-d845927de8c9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "76be320b-6ae2-4bbb-8fc6-06910e18e194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43a36c8-fb42-4220-ba32-e7d9af326b77",
        "cursor": {
          "ref": "48a73d34-6861-4e7f-84fd-e2ba2ed8bb69",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "f25fffe2-44b1-4c79-ac7a-de2d342b0f57"
        },
        "item": {
          "id": "b43a36c8-fb42-4220-ba32-e7d9af326b77",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "dc836676-2ec0-45ce-b3da-db8d3d83b264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b3174e-99c1-4af3-8816-7517221dd6d2",
        "cursor": {
          "ref": "eef98a59-c34f-4403-bfac-21341f2df48d",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "50f709bd-1191-44bc-af63-87225c126a93"
        },
        "item": {
          "id": "f5b3174e-99c1-4af3-8816-7517221dd6d2",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b4f54e60-50ff-4035-a0b5-842aad9af009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516932d0-2ed8-4a4b-8a93-a2bd687ede68",
        "cursor": {
          "ref": "31bd5b90-ce9e-423c-8910-3bda6cf319fe",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "7f768e3a-6c54-4451-baed-d57f2c2d7523"
        },
        "item": {
          "id": "516932d0-2ed8-4a4b-8a93-a2bd687ede68",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2e94452a-eb2c-47ce-bcb9-982287c525be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597d3480-c772-4f87-9b78-be704f47faa6",
        "cursor": {
          "ref": "64f1dcc9-70c9-4dff-949c-371caad6d3df",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "bb00a5ae-7660-4758-9e42-b313199b258a"
        },
        "item": {
          "id": "597d3480-c772-4f87-9b78-be704f47faa6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d97d69d7-0736-491c-91b2-cc52c424b0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25cb796a-1040-4d73-9c55-6c637cd8f41a",
        "cursor": {
          "ref": "b93eb91e-2e23-48b1-8b92-83ea8cabc1e7",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "4ac5ff75-ceeb-4e21-96a8-07ba2fe9acff"
        },
        "item": {
          "id": "25cb796a-1040-4d73-9c55-6c637cd8f41a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "406e2dcc-9b0e-4a39-b3c5-f00775d9075b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bae4c6-8370-4039-8cf4-7451112dec80",
        "cursor": {
          "ref": "6d555d05-8eb2-4fb2-ac69-90f6faffa64c",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "b17894cd-74f5-4c5b-b78c-b097e4f98d7c"
        },
        "item": {
          "id": "f1bae4c6-8370-4039-8cf4-7451112dec80",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "079e4bb9-e2da-4eed-867e-6bb825c4a861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba584ab-4060-46ee-8735-beecfa67bd49",
        "cursor": {
          "ref": "c70b99dd-b883-47d4-baf3-3959d5fb1e48",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "16d8d821-9559-466a-94e1-2bb0486158dd"
        },
        "item": {
          "id": "fba584ab-4060-46ee-8735-beecfa67bd49",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b4b08eb2-f3f5-424e-af3f-09ba1af80581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90cbb65-034d-493b-ac81-484b1d4cceb7",
        "cursor": {
          "ref": "bf106a08-0970-43bb-a49e-c496854dc151",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "9176e80c-bbff-4472-bc81-749aad357835"
        },
        "item": {
          "id": "d90cbb65-034d-493b-ac81-484b1d4cceb7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "05c40ce4-0eec-4991-9f05-5184edff9a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7bf6ae1-99dc-422e-ae28-6f462e081be4",
        "cursor": {
          "ref": "dfb1ef6f-4f62-4ec2-a92b-0c758a9a3c15",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "71a0b320-ac4c-4c82-ba3c-c75060f5bb01"
        },
        "item": {
          "id": "f7bf6ae1-99dc-422e-ae28-6f462e081be4",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e3ec1bf2-7053-4fc9-a7a3-8f372f675a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7bcbe8e-315e-4ee5-89f5-2d49ac72b02f",
        "cursor": {
          "ref": "e765bca6-092c-4ee6-a3ab-a48e1e7f0437",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "00227cca-f814-4f74-af2c-7a68ade57d81"
        },
        "item": {
          "id": "d7bcbe8e-315e-4ee5-89f5-2d49ac72b02f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3a0f4012-6b0d-4b4b-88f0-545b9906ecc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4938fe68-e55c-496c-bbd7-24ccc555f9ec",
        "cursor": {
          "ref": "e3ee7f8d-992e-4432-947e-7266c1a58f41",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "71305412-627c-496a-aeca-2dcf4dc1601b"
        },
        "item": {
          "id": "4938fe68-e55c-496c-bbd7-24ccc555f9ec",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c18a126f-9705-456f-a77f-cd134a507f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f2e7fa-e137-4924-add1-8dbacd6327c0",
        "cursor": {
          "ref": "57e1fa90-6e9b-4d86-a058-1b526a168de1",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "38f81cdf-d756-41b7-8e82-7c4c08f50ce0"
        },
        "item": {
          "id": "c9f2e7fa-e137-4924-add1-8dbacd6327c0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "cf39bff2-e320-4790-a5a1-7d5723ecd09c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f82bd2-63ff-4790-bbe8-ed8abb8a9ace",
        "cursor": {
          "ref": "036b777a-a5f4-4a6d-8628-ed6c86c96d49",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "9d4cbf15-3fa4-4e54-ae15-b65f2acdcacf"
        },
        "item": {
          "id": "58f82bd2-63ff-4790-bbe8-ed8abb8a9ace",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "123fe462-a19a-4516-9b41-03d331680d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68c6772-7bdc-4656-8f88-341b853fbd30",
        "cursor": {
          "ref": "a0a0f6be-badb-4077-9e26-f166cd426bb7",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "0ec6d1d1-3949-4930-809b-538e8e37c96e"
        },
        "item": {
          "id": "a68c6772-7bdc-4656-8f88-341b853fbd30",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d0e2acd9-121c-440f-a543-ab9caa2ef315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc45a32-c350-4388-b27e-a86259c87f73",
        "cursor": {
          "ref": "ccb45e6a-0005-4494-8f6a-7b76add7364a",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "aba28adf-6432-4c6e-9256-9e4536b85acb"
        },
        "item": {
          "id": "4dc45a32-c350-4388-b27e-a86259c87f73",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "db0e9dd6-4fea-4704-a81c-1b9d85174769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a30e19-245f-4bd3-b519-29163774a45c",
        "cursor": {
          "ref": "90c5d010-f9be-4def-85cb-44cfa14377f0",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "c609d8b1-f7fe-46e2-a188-f50e0f9b3433"
        },
        "item": {
          "id": "85a30e19-245f-4bd3-b519-29163774a45c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4ee1dc77-284d-495a-8bd9-512e09ea1c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f59356-7efd-4256-a760-478a98e97d41",
        "cursor": {
          "ref": "dc338a26-cc40-472a-8e6a-76d0913271b6",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f8374d44-4e65-433c-b190-7db9691171e5"
        },
        "item": {
          "id": "e4f59356-7efd-4256-a760-478a98e97d41",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3e9acdec-a415-4355-bfaa-f4801bc8fe60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70f048b-a615-4373-bf47-9aa58471db26",
        "cursor": {
          "ref": "0c6d2f81-57d4-46bb-bedf-c85a9dd61be9",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "acaed168-8c31-470e-97f4-d5946abf77b8"
        },
        "item": {
          "id": "d70f048b-a615-4373-bf47-9aa58471db26",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "fe407460-6561-4bb6-8181-58d34192ca60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337ceac6-8873-40fd-a3ce-026ad1e4c15c",
        "cursor": {
          "ref": "bef9e071-74c8-4fa1-8738-15620ee1542d",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "75638444-d6c8-4668-b6ab-65fef9f6fd8e"
        },
        "item": {
          "id": "337ceac6-8873-40fd-a3ce-026ad1e4c15c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "494a5328-f775-4766-88e1-76538f1442a6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3623788f-a48d-48d8-b9b8-cd4565d8a642",
        "cursor": {
          "ref": "a8f596f9-27b5-4424-b97d-d7c61af572c8",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "e3f82159-90c6-4ab3-9068-16baf70737f1"
        },
        "item": {
          "id": "3623788f-a48d-48d8-b9b8-cd4565d8a642",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "04d8edb1-445f-4f09-88a9-970c7d78fa58",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be1fdb3-e0b6-4513-880c-9ae6bc324011",
        "cursor": {
          "ref": "767a7b77-5861-4569-a7b3-148e27440a7d",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "622d595f-83e3-4552-82b8-339ed217cdcb"
        },
        "item": {
          "id": "3be1fdb3-e0b6-4513-880c-9ae6bc324011",
          "name": "credentials_verify"
        },
        "response": {
          "id": "804d8d01-e152-4025-ac3f-17fddf975ef0",
          "status": "OK",
          "code": 200,
          "responseTime": 2506,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "755837d6-e44b-4eab-af7e-6fdd01bff526",
        "cursor": {
          "ref": "57726423-96e8-4776-937f-6f095252f3d9",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "6f0a8f06-36b3-499b-9fd9-fe328901622d"
        },
        "item": {
          "id": "755837d6-e44b-4eab-af7e-6fdd01bff526",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ff2fd633-4fc2-46a8-801f-ed8f781ab987",
          "status": "OK",
          "code": 200,
          "responseTime": 3138,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1458696-32cc-422a-bf13-f146bed5acc1",
        "cursor": {
          "ref": "43a01d45-f796-42d4-a58b-a66849081247",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6a9be3be-28d9-4389-923d-2e90d710993c"
        },
        "item": {
          "id": "f1458696-32cc-422a-bf13-f146bed5acc1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9a0735b4-f029-4332-aeff-f06f2d2f27e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1458696-32cc-422a-bf13-f146bed5acc1",
        "cursor": {
          "ref": "43a01d45-f796-42d4-a58b-a66849081247",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6a9be3be-28d9-4389-923d-2e90d710993c"
        },
        "item": {
          "id": "f1458696-32cc-422a-bf13-f146bed5acc1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9a0735b4-f029-4332-aeff-f06f2d2f27e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0ac844-3e9a-44b0-9aa6-491c1f69094b",
        "cursor": {
          "ref": "3ceee5c5-6777-4ad0-870d-22961501cb1d",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "19cdea5c-ae18-4dbb-9f80-38b6d41d9ed9"
        },
        "item": {
          "id": "3f0ac844-3e9a-44b0-9aa6-491c1f69094b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "469f4907-f829-4b28-a168-5414a715c501",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dfe0aad-7dd4-4c5a-aa10-87ac7b446d84",
        "cursor": {
          "ref": "714344e7-ed77-4c14-a760-63eeade3a1f8",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "84033d60-082b-4efc-a170-4d830e4c60a5"
        },
        "item": {
          "id": "3dfe0aad-7dd4-4c5a-aa10-87ac7b446d84",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "52d2bcdb-870a-4ddf-89f7-c02e1958e109",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}