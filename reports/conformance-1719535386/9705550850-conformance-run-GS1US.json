{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "47370f68-6e95-4b05-8d60-ab058fbb4f51",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6326aeaa-c252-44bd-b578-478e5c0463c9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9e74987f-68bb-48ed-afa7-2b93bd3f0994",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5ad1a0d0-fc46-4478-87f1-8c8d6293fe2f"
                }
              }
            ]
          },
          {
            "id": "869d26f6-1a76-4d67-adcf-065afa0d7d34",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0293be08-d322-4b44-a573-f32bd609fc7b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "663c8b83-f50c-42ea-9ad6-a4a5a0189e88"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7e2afec5-78f9-4eb2-adda-2fcec2318fa2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d1bdce53-d4a8-4cdd-950a-9f58790f0835",
            "name": "Positive Testing",
            "item": [
              {
                "id": "162c40bb-0d55-4f34-835c-a954886eec74",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "68af50e5-4d47-4f51-9653-63639d2b3816",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d9b95760-ff7e-448b-857b-2dfaedbfdc8c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "27d0bc75-e612-4083-8f8f-58a7b2c70dc4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e8bbf775-7c2d-43b3-8537-a7142cd98e84"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cb144c5e-05c2-4d2d-b866-9c29c3497e38",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "269d2348-3613-4311-a12c-305f45f743a7"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85c0b0e4-371c-4195-bf68-6537c20e3f30",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "51b60d12-3cd4-47df-a1a7-52c615f09c27"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "22e21bed-4bfa-4cc9-bdd4-4687b40d4884",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1843c2ba-264b-4b4c-b1a2-d16d46a4e17f"
            }
          }
        ]
      },
      {
        "id": "e68fd4ae-5c13-47a6-aac4-f6abc220f322",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "760cedf8-a977-4541-8ef6-392d0eb36a34",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ddf4e886-6371-46e6-9647-7e85cdbdbf93",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "99eb67a1-2e49-436f-a6b6-3d8876411ce1",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d31b950-e854-4d02-9062-44e0bed2cacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af3cc1b5-8895-4694-b47a-34b2b8da302e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e6d9bc-9dd8-47bf-8d38-f9fe0be1f280",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c73e609-46d3-4a6c-b8fe-261e9e068487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e6ca2e3-f6ab-42d6-a486-ea37d9e45cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76577f71-7697-4835-b842-438747e88fef",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2aa8bc-876d-4be1-bf4c-8b3dfea52bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "010d4aa9-f60b-45e4-ab62-ec9745dde0d6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "86d5a104-daf5-48b6-b47d-cde10b215d5b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "abf868b7-4cdb-47da-b981-1ab959cdd247",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6960a136-31d4-4324-aa95-623d9aacc007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "396fcb96-2687-4e90-b9da-f2a8b98cc7d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495e7b8d-b7fe-4c9d-863a-09da3f416ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d82be3f3-8d9b-4d29-9f76-5c00161e3693"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4717c8af-66d3-42a5-bdef-dea51222a04c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ec880962-7155-4ca4-81d3-1e06d4b32192",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20e5726a-9e22-4115-9319-efed063023ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b5a18f13-c16b-44b3-b984-a21caeb8bd80"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a5beffb-501d-4a4f-8b5b-07cd67f934d9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b27f7df0-93af-4d03-9caf-be0c9c57fe16"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5b77013-d068-4183-af0a-c8564250d490",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2fd91c58-907a-4f79-8fda-224b7db3265c"
            }
          }
        ]
      },
      {
        "id": "e8b45acd-77e5-46bd-8d73-514dec72ef74",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8831462c-460d-4d9f-a7d9-4d5a80b39e4a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "196993cc-e795-4c68-a376-0a5a6fc471d2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "87e4d9b8-2f36-446e-8d04-c9a70716ac21",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c06408-25a6-4355-9bca-43186a073b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "619cd7d2-8ebf-46cb-885b-94e4b8c95f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ba4c5a-c91d-489a-9d9e-f704de45c44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "906ef987-08cf-4562-9123-9dedf730b742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba11352a-3558-4b71-8881-f8e54d08c1ea",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b84c8a-5d45-4b5c-9f3e-12dd063c86d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d18731c-67a2-4e01-ae32-5bc6fc9480c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ccc241-b432-4c06-b5dd-d47b3663bc48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbc70e6b-21ec-4ac8-ac98-98928099f5ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a2d5bd-b1db-4105-a740-4c0118010ea4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612cbd10-d4d4-4753-a2b8-9beefc71936f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d3bd09c-5100-41e3-8b39-70b9196182ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d12de01-a684-47ea-8d26-6e0384203e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0ae4a78-6a93-457e-8b17-a1a593287fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e136c9dd-2a5d-4a59-8343-42224afc2e31",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f23e55-ad03-4485-8e9a-49309d5734df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c02d9807-5ac0-406a-ba58-d90532471c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee36fb7-107e-487a-b3e8-5851aa199a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7f52952-1cb7-45df-b551-128750bc1225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "185ca1a0-84e3-46b9-b011-c9082dbbb38c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a263e47-2bff-44f6-985e-571c3ef59352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34342a32-f666-4c35-802d-941836b202f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f514b4-ec99-4b2a-8ed4-06ef0dd9faf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38809d91-f064-4cb6-b49f-e7cce0771d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26dcc32f-47b3-4b94-8848-eb41b4e09abe",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a167e7c9-9f4b-4b4e-b874-cfbf3ea6412e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a720df34-0242-45f4-a303-b646f04d5e18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc8f826-0846-4efd-b44a-67825aa44b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfa10454-1cd9-45b6-adcf-fadabc318325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf4f707-1c42-4ee4-83f8-cd29e6519c84",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bfad04e-7121-4944-bdc4-a66042e4650b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c0136a-74fe-43d8-8212-f7c27d10cde8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c89045-441d-428d-8880-2782717e94c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d48e3ce-761d-448a-9306-e57da0057242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c89b2e7-3bcf-4dc0-81a9-4831d019e386",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3f9a69-dac0-4414-9a60-b35db99fd1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a75bfbff-609b-4ed3-8403-5b7dc6d5a0fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749d113c-8889-4e7f-9053-24ab004185a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6c89862-86be-40d5-a2e6-542e7d43e20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3fb499-47af-4de9-a32d-7c013a96ebea",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf226a2-0a58-4c03-a482-a779e58405da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4ebb2a-870b-4088-9301-a7e13b065f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5877cb9a-4fd3-4d46-829e-eaaa9649b87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8773d6b3-241a-48bc-8ca9-dac34fd3dd4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0ddcbe-d4aa-496d-9cf0-3bd4d1c306aa",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5797d46a-2fe5-4cf3-aea3-75efcba6d39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "676dfcbd-9f36-4c0b-98f3-827a9eff6aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35351a6a-3e72-4d6f-90d0-0c4f06f271d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae0c07df-6abb-4f3b-97ec-07e22dc28f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9fe74f1-c30e-447b-9aeb-c5544bf261c4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c18a725-dafe-4b1d-b225-f2473f22c325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5067f11f-e906-4742-955c-424cec77fa32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9206c33a-1dee-4e60-9f00-4f63f10fe0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ed39c22-9b62-47ab-9172-999eb9262dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb50c4f-2161-4d75-9bed-5d6e93b2c012",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c3a156-e6c3-44fd-8faf-b39b6657264b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b1001ba-a434-444b-b7f1-b10b8c00c34c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc00c6c-d97d-495f-9432-003427b0cf05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2500089f-f403-425e-9e78-e11f14be43a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d58ef8-6726-414d-aeb4-3d74b6867978",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c124e5c5-ce28-4296-b63b-d0138f51404a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dcebf66-95d3-473e-b2fe-18691388eda0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c68db39-607a-4a67-9109-3da04d7da4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac69e7d9-7910-4284-b0ef-2c544723c8df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c0a4f7-7030-4998-8fa2-a46eb09d26f6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f044ff-2214-4c5d-aa2c-07c39948c065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2519b80e-8aed-4f1b-a3d7-7204369e46c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b24f4e4-05bc-449c-a1f1-f5129f144a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0159046-8756-45ba-bba0-ac1ab152165f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1dfb52c-733c-41db-84d0-9bb245513418",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbbe562-e8db-4eb1-bd5f-3868b4788e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c83b8391-dc94-4db2-94f3-e93fe6296ea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727138b6-0e60-4722-8b1e-fb469b974fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b6e7506-28a1-43c0-bd82-bacf2f5a7a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f2a0d6-d91b-4d48-9aba-acba283ae64a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7967b402-24f3-4732-b581-6d8cbf512e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f75179-98b9-43ef-9481-13c45ef2bf17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d05235-5ebe-4772-af16-806e6ad7032f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4678e4ea-1785-43d9-9a3e-eac3ef4b2299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32db0a18-27dc-457a-8488-eccafa7e350e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3da77d-9769-4070-87ec-212be8aaa37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b866ec-db0b-4576-8d0e-fd0b78d60d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87696d05-6b15-487c-8df0-e9f1c132fbcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66a6423b-b8dc-40dc-860a-f60d1302d83e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194fbd40-a080-4fee-ad6f-44ee5fe6425e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d35a85e-0052-4d50-8d71-c3676d6e9537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdfd92a1-6817-4b8a-bb05-3a1a3e30f7fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c4025e-2192-4778-b16f-c12e8ecd15e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5f9b4f0-48a3-407f-844a-3dee92bb5e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366a1fe0-0bb1-4600-b427-931c7f6f9896",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ec8d10-d588-4678-8a4b-847f32aeb7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eeca95b-512d-4652-8208-f79a9edfbe5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229f1eed-cabf-45c0-bbe1-e9b98e0e1cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27f8591f-956e-4d26-bace-42718a9bd021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae54dd76-11c1-48cc-be6c-183fbfd61be7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35f9fb0-8793-48c2-afea-f0dff06a83ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41dad961-8366-4095-b8c4-c98c45feaf92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d297423-dd37-4116-9f17-2cf108a30b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "527a5ba5-54ea-43ed-a076-020d36f5bda3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f5c73b7-7b72-48f4-b924-abfded2c896c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4263bd27-b1ec-4fa8-b8be-439e3310c385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29454c7f-a4a6-4883-8892-10b4006a70fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda091e4-dad6-4c3b-95d5-f7538325a11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05bbfb03-81df-456e-b6a8-b56c1df8cbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc5cc99-afdf-40a3-adab-30aff4ee1326",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ba20c9-fb8e-4e72-8d29-5375667fa715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c9801c-9523-4fc3-9ee8-32da6e763739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1fe0454-b22a-4188-a07f-3d20186e0533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4937bb5e-b6d1-40cd-8643-abb9474453f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5b2c61-c2a3-4b0a-9612-636d9eedfd9f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf708cb-1541-413f-9adf-9bf4adfc9fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0591ef2f-63a6-4a4c-af66-7bc5e3663dce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c190992-1cfe-4546-b8f0-37edca27fd33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cdeb209d-9150-46d4-b25c-38cdd5622a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b396d2e-06fd-4117-9861-d416e22ae5b1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1579cc1-cd4a-4068-9e3f-f20d54d94ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713d88c4-4bb0-4e9b-ad3c-93446ae34199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83b469a-c6b9-43bb-b402-2a03c714db81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "46446349-a8e9-4b62-b52e-a3e383df22f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690b4b57-835e-45ce-99a6-2667bebb495b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93379b2-04b5-4fc1-bc08-0c22ca83ea8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbb0d667-d843-4f95-84dd-30d61d9ecace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111ef7f4-a2c9-466d-aaf8-d423f1ade442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2316d35-5c89-433d-93d8-32c58fd967db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b0f6b8-dc47-4b7c-914d-e54150937256",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f7ca47-a2e2-4b5f-9239-1474a8715be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27046dd8-24fe-4dd9-8365-7a062a6b0a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef8b11d-e678-49c1-9994-aa0df982e874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0540217d-e8ed-4af8-b874-e29dda80d32b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb0240f-bf5c-42ae-8c07-d3d991cf6a1c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10ab337-6399-4e82-b638-f90d855c7581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163c1619-3058-405d-99e6-9a9fe3a1aecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eae7a83-3524-4795-b2ee-82afa7227ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "45a410ae-3f20-4736-b75b-928fc2361250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f0c68d-0dcd-42c9-b4af-fc976abd580d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28c5434-924e-4d60-bd7e-18e8ffe094da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf62d81-4df9-4d4d-9c99-98076bf05400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1fabf3-8d98-4fa6-91a3-d11ab3438e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc39e0c-cad0-43bf-9788-20fae1c272b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0ffb4e-6aa8-47be-8b47-3c17a9ee2e0a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4f65b2-ee36-425d-ba62-17887ed902a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e02d974-774f-4baa-a98e-f4662f791197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d251e239-e18f-4d44-a396-e3a018a56975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1af9e14e-1785-4210-98dd-3756fcb2ab18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e4d736-9b3a-4e8e-94bd-127572e03571",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "893b8877-8bda-4ec4-a337-3d8af47f44da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90a0f92f-71d2-47a9-b5fb-65ecdd318d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34bf737a-949f-4707-b52a-a05b9d1df4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "caf976e7-a452-4d6a-976d-0f0063315bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96731d1-f685-4568-92b3-2ab29e810d13",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfe8a2c-0a81-428b-8758-ba3f361bcb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c603c1dc-66b0-4dd9-ae9e-860c95192546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb2bff0-029e-45ac-8353-2226bab3cd2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "95d68dc4-e4c6-4aad-9f89-9e71303f488a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8c408a-ef44-408a-ac2b-9c091f0639c1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2036b401-5d04-48a2-a32a-d86b5d031520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce14330f-616d-44a9-aed3-91dd9ea5ab1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e11d258-f3a9-40b1-b7f9-b2d6edf048e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3baf4f-2449-4dd2-af73-47df302159b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4f8d43-1b46-42f0-bc76-9c234884d961",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4610a5-eaf8-4070-b505-d93f0be4c957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fa4c49e-23b8-49b4-85ec-eb38a422d3c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af31f9db-4fc3-48ef-b435-e8f519ade30a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e620cc9a-0e69-40ad-b9c5-efaf077ff2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601b4ed0-8ceb-4ed4-9474-48251d730519",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36a7c69-3970-4b6f-9d25-244b87f1f5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d7c531-cb9e-4575-b768-7a20753c7ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a2bc1d-e3a2-4e87-90c8-5c6980ef6cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6960c4d-0268-4629-b59a-0cc78d068e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605b45f5-9da6-40d6-89e8-fe6a5a14003c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3b24dd-8fa5-4545-822b-edbe0b29c192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bf3e6df-0f83-4315-8eac-f3f4d1a2f400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3ddbed-1c2d-407a-a63b-a9dd25b9ace1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3235c369-236b-4aad-98c2-586c8ab85c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fa617c-a27d-482f-b51c-1e1830a48489",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0bd3bb-ef72-4f65-abf1-4706dc67ef58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ad5eaf5-5741-43ec-9176-201500391bb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1afe19a3-05ab-4622-89f0-85169c392d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "50c1d490-b1be-472d-be3f-9e0dc962967d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10933ef2-e29d-48b5-8728-2265b17c7f32",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddaf3c4e-eec2-4f67-b4f8-17027e79d533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5b9090-d62d-4ecb-ba43-655bd7e8829c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1dd3a7-749c-46f7-8caf-77355ebee6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c95ba98-a531-42e2-baf5-3c0c6e330303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c690e4bb-f18d-4bd9-aa83-47039fa159b0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2263e6ac-1665-44b1-bf44-a09025412a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e25077d-948b-4950-abd4-a166cc2eb6a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120fd10a-2dd4-4d83-8415-6097e2d0a6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ade94f7-4071-4c22-96cf-7e72d08d137c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae61f6b6-ae26-440a-bb4b-50a24f89f077",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20bfe66e-36e7-4613-8603-5764df61eb19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "573ea18c-f14b-4dd2-a77b-369e319bd7c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3ac48a-cc3c-4fd9-be90-700b1bf3f40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "add3b019-4710-4808-8c89-8b16f5d7bb6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ca87b2-36d9-47cb-9647-efc6fb5bf434",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8de78f-3f06-4fe2-8f63-a24a5c83a9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e4d24b3-8bc1-49c9-b305-95d8c8bd2097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160141a9-33a6-478b-abb9-d2673574b72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0f0d17d-0814-4db6-9884-24c0b5f16116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067f5d39-508b-40c6-8546-9045a1191a33",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc62f0f-a621-4440-bff5-600589e21bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a529bb-c58f-46cc-a0cb-1fc9ccf6926b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e887a752-041d-4b7a-97f0-bf861db28157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed6a2473-94ab-42f2-bcbb-b52fd9eef613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2133782-1229-43cc-959e-5ba9522f58c1",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5976b631-01b5-4fc3-b5cb-3c97a4c7ef48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "300629f4-57e8-4d76-b205-02d3487699ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ded7f2-af40-4cd5-805d-4d50a1c5c94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "abcef2f7-363b-4ac0-b8d7-77399e9f9c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab46132d-5ae2-4cee-8e06-e137729c2524",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "584cdae6-b011-4e84-ab12-d3d2243dfb04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ea1040-2404-40c3-a437-ee76bab49aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f86d21-f879-4fae-9db2-5ad4ce67c5b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bc448da-e30c-4861-845b-3b8e28587d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ccf244-d6f5-438e-a489-a2e0159fdbcc",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "673d2159-ff13-478f-9306-1b60616be619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f6c0c5-c686-4b79-8265-a1f410397d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2aa9043-c3ad-4884-b40e-79d7cbb11c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "29c3fb86-eb88-412d-ae8d-e70e8187b0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca000c8-cd51-4918-9619-c43ffccef9c5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "812e164a-e405-4df2-9e82-f1394f1aa1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab2e406-5ce1-455f-a9c2-e802b9f38b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa8c462-7e65-4890-8db9-1ec873edbcee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f430afab-71da-4cee-a506-6e5dacced0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3283621b-a49c-488d-b777-63a809498e04",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "144e77d6-4bd0-4b2c-af94-bd5ad3bda70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c5cf552-3040-4228-bac3-64ee54c32c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a74f64e-d2e0-42ea-af69-784c10b072aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d932750-ff93-4cbb-8af3-db77a58affc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac5846d-0d45-4eba-98ea-fcfa3b669576",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec000e84-34a1-4b4b-be09-7d81d1434862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2876f50-103e-4048-9c08-88a549d785a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b85499-3dd8-42f8-a427-6be8a3b5ded3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9590080-4dea-45d0-8ac9-b550e592f8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f72caf-7b49-4d31-8338-924a7a078795",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946a1d12-a52b-4c77-82cf-270a20a964d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0014b48c-5c10-494b-be98-01d74d8c2c7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced1b132-2247-4452-99ad-01401855cd03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cae428ac-8ea4-4f35-a378-250fdebfa4f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97483c3-a64c-4e30-9d80-a7b67be27ebe",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36610f56-4685-41fb-bcd3-e100dba5610b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ce18c3-ee81-46bd-92b3-d37dbc98e446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c1fb34-1dfa-4dfa-ba67-f5fbdfd079a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ba6104-375f-415c-b538-7e7f0caa958c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30388632-5ce7-41ed-816a-fc7447460558",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d253e5-9aee-4813-9c47-327891c0d27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0986786e-69b4-477f-84ab-9bd2f3a0656e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b3efa2-8ac0-41a4-9dd3-b78643e4eb0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8b398a4d-f3ca-4a4e-8883-ae993687705e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcec204c-ca6f-4c96-b1c8-53fcd10aac3b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa365c5b-e249-4aca-af1c-b9332f1fbc2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fbcf5f6-5a9a-4b85-8c1c-54ff4375ac8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe716f0-022b-4c92-b5a0-61bc5e7f6b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "272a4c8b-d761-4396-8b35-9d68713be971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c341c277-d33b-4ff8-9058-1a1c50cc2876",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "761e0dca-9bcf-4111-8b2e-083dc541962f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f497fedb-24c0-42d9-b37c-01a0de181c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e9dd16-df57-4890-989a-f44c21e2d215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "735fe273-1ddc-414c-b128-e7bdd4186038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf5b418-45b8-4316-b0f8-1884624c8251",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84946852-daf4-4941-9f2f-f1627541c034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7502d462-c1ed-42ca-9848-fb328bac135d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16d9961-029e-45bd-9dab-469e755a0432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5a7e56b-503c-45f7-9f0a-27925ef89bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b114f22c-d17c-45c0-947e-3723ba7ff763",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b8cc12-0e32-47ca-912b-9da5b5df78ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c43478e-19bc-485f-a38a-8e427d418ab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c517461d-2679-4107-b725-fa03a38df5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "13630e4e-af6b-4509-999c-ed4f70834bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478c7678-2cb4-4338-abca-0ade24a60d74",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19a6cce-e9fc-4c5c-8ddf-1b069f6d6792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf48c31a-c58d-4990-8942-ad2ec0a81b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969ead97-2f23-4185-b0cf-f9bca4be4242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf3551f9-382e-48a0-a9e7-e493a789bdab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92fe93b4-b7b3-4735-bea1-26279f451553",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3eb5cb0-552b-4afb-a40f-9459ff246709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00047b40-6d1e-489d-ac6d-d30738bd3e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3068e9a0-6239-441e-9268-c7ae515bcf0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f2693e46-8e3a-4fab-a647-35636b1c1c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99f56d8-7867-43b3-a098-8dfb21fd7f0f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5540b228-8952-491c-bfe6-244788f29b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9077eb31-31a7-40c0-8a41-e4464792e7ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52b364d-ee19-4060-82f1-4e294cf1ff23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f43b4eab-78f8-4b66-bbc3-5039aca665a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b398e0c2-c73c-4785-b899-e1381992f638",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a693cd-5148-4b3b-ad6c-2d673f63f7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc7146e-ae0e-431f-abfd-b574c121bc4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ade7ff-bc18-4635-a00c-c5b51e56fd2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1572bde7-c88b-4c50-bc68-4aa029a2b22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7754a6b6-c21b-4761-8e1a-0812c3b9afd4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d07419-783f-49db-9437-1375c1cdc455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c2091a0-aa64-4a34-bf0b-9637fcfb8d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc427c6-8811-417e-a4dc-b88c5a61372f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b4c1b41-e1b9-4386-9308-68fbd0c921ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f33df0-d7a3-46ee-bd46-842681c6bafd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "568ddf8a-91d5-404e-8f79-e1eb03b99bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "552aaf9f-d9e9-430c-a260-84117eaaf2a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ebaa8b-e5a3-41dd-b0c2-3c2466eaedf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "79176c28-b53d-42cf-b3fa-1e1eab2c6848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46427af0-a551-402a-bca2-724093fce3a8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea2d483-913e-42f6-af57-f77eb2be3593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e1de83-2427-4529-9df3-3fcf867ea4bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfb6b9a-526f-4cda-91a1-5d94a2b10983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2685fda1-7073-4709-b009-5927c35cdda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d18506f-e4d2-4f92-b3f1-975173abf415",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986dc6da-3812-4f53-9331-60753333e49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9daec5a9-7572-425b-8a1e-e76942f4cc58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927fea05-a27f-4cf0-ba83-25594ad2937a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6845a27e-d9b9-4fc5-8cd4-65c0582f25ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de43fd1f-9cc6-4512-9195-3b3f64a4c7ba",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea5eaab-c6b8-4d2c-aedc-df72752adbcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e7aacd4-d661-455c-a107-5e442e498f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8370fcb-33c0-48dd-8925-8277b36ba747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a98ed30-5eb1-4f75-8b30-4bf08f4668d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b9e8af-55e4-4b8f-a1e2-a80fc10d71db",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a64677-435d-4e5d-b6c6-82a184faeb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b29aa5cb-fb60-4911-bf30-89d754632902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93955468-dc4f-41af-8922-93ad9be78c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7210ac58-57cb-4ca2-a15c-f50ff329ada2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a6fe91-048e-4c7e-8fb3-ac556e56677e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa77aeb2-a6b7-4052-a02e-61aaf5e3016f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6956385d-3ccc-45de-a129-6aa44e42c268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96dd9ba7-445f-4e1f-9d5a-0635635d9a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a08bf9cb-2836-4fbd-81f3-a924b86489c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc93ca5-b724-4745-af42-f045716a8a75",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6382dbdc-8e00-422c-83e7-74a8d92f8b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a9b524-9e94-4cdd-b217-f368874665d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff86d02-474b-45c6-823b-526bb442f2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1ad9d71-c9ac-43ce-8f71-7660867ceb27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f09fa3-df04-4a77-a984-d11d1b4084bb",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "756ecbe0-1981-4332-ade0-0d706eeec4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af1e0f47-4bc2-4a93-a43e-0a1c6fb0825b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826ba6b2-c206-46c8-a547-822c4bcaaf6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5890f975-6a39-42b3-af96-d6d5ea7c214f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095458f7-64dd-471f-85dd-e05c83577e0e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1093460-f821-4c76-bf00-d4e7c38efea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f29a0ce5-cf4e-4c62-805e-690ce1df94ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03e254c-e4b8-49ff-bd03-7d1135496a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f49e2b04-e180-482e-b52f-be89119590c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9acaab2-61a6-4064-8cbb-ccfc6ee50c6c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ba327b-e3bb-4b66-8ab9-a14c4b4c1afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68bbd392-a15d-4d43-a8b4-339ec7d21349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18dba4b-3e20-4082-a3e9-985425d44139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "350fb29a-bc12-4200-9b32-c6ee69d6749b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f522ee-ab6f-475a-913d-eec7264f8695",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebf4164-6f4c-420d-a246-c7f519e36985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4444b4ce-8151-4515-941a-5e1f7a05dd3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35efa2f1-7573-4a45-8915-592bf6754656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2079b409-798c-46fc-8b6f-c07fb3379ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232bf8a3-fe6f-4fdd-8760-7af3f35b0eb2",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1719c1a3-d8f6-436a-ad66-fcb213c98062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c6a596d-8a00-4fd0-ba18-52bb53592187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87748bf4-efee-4a79-be18-7aef8722b0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6aa542c-9125-4571-b217-d680ee482d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd7a99c-c23b-442c-9a03-e09d0e7fc3fc",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5050cec-d8dc-4797-bc31-2e6aec3b858f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d709cd38-8e58-4800-a6fa-e1ff10bc9a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbdcad3-47e8-416d-b785-234710bfcf53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97ec7e7c-88d3-4d9f-91fd-69b2deed9a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f505ea5-d87a-4901-bf5a-1212fede66d5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73153133-9cdc-4a98-bb0f-f008cf1393d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0155968a-adc3-4827-b446-4648dc689831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e525177-9a47-4d93-bb21-cf55c34b256a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe1e2381-d3a0-4ae2-b1bf-9e54f519d622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b597643f-c1ad-45d7-a71e-8bc630bc36f0",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901e3f6d-5870-4850-9fb2-d3d78f108296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da9a5c5-8fcb-4d58-983f-e3da75b9cf99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ad73a3-2b6f-43a5-9e92-b98d991247b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5f29433a-2964-41d0-98e6-e6ae80fb7c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6892122-4e1c-489e-9d96-72cce747734f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4280edde-ac1d-44a9-b642-d026ff9b4573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad524e65-e507-43d2-b6a1-824e1cecae45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521c1140-4011-4369-9aad-ddc6f6d21744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "60638591-a37a-40c7-b668-cf7e3f8beb81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ca57a9-53d0-4c05-97fe-7ac2d39585ab",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32bd02f-6957-400a-aa28-ccc8a58564df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf3f0bfa-200b-4de7-b12b-9c6be7877ed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7e2fa1-8e34-4f93-a722-f9eb3f4af97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1101138c-5802-4b98-a2cb-636e00ead7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7f86f6-03f9-4a75-8069-d157508b9d51",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "224468ca-90b0-4645-a183-4fc92a31fedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1af500c-79bb-4259-93cc-4fb6b23e5397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b508bc-fd6b-46d7-aaff-a6a387fc6052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61e31add-0eaf-4347-8e88-5b129446d88a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41ef8cf-9ca3-4a38-bdeb-dce751943b30",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a0976b-6865-4371-865a-107deb14c6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee4a8022-e812-4798-b53a-15b1aee63171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10562dd0-f9aa-4a3a-9080-026243895746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc38298e-cc50-48a5-b095-c287e6aae0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ac1988-58e0-4108-8af6-9a099020bed7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75985223-c467-4600-b757-2afdfdf8c7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07de86ec-7320-4779-8438-fbeddadd4dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b659df0-059b-4be1-ab70-30bef53ad2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "804b39a2-71ec-4b94-942a-109787a0227e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a07177e-1805-4c3f-9375-858a65accc1f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c83abb8-b6a9-4e80-aa3e-09023d4e1424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e9ab0c1-83ad-4c39-a093-d64266d49e65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea82153e-01b9-4534-8f22-42fba2bd771f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1aeead65-493f-4da9-83ca-67d1c32b7ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fa1099-8857-484e-8405-08fb1f2863d0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1bc89c-a8a0-40e4-9eb6-d2d95c9c92dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd4993af-f094-45d8-b97d-bac443993ce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fe8207-d16d-4451-b070-11a5f373f204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "40f2861c-76f0-4a6e-b83b-d327cd3dfc28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2a5aea-3d5d-4ab5-b574-1e7243f2f6dd",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ec2f0a-f8d5-4885-b037-a3efb1a3a826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa7e9e30-5b4d-478b-bb48-19ff14354765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05296135-e6d6-4558-9dd7-bb2f810d8617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b124e04-2e5f-4ab8-9fae-e848e3bd9c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80abf31-7fb5-4c62-9962-bf8c8e576c87",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83760e8a-e621-4598-97b5-8e389a5c7c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f77dcf6-b739-4b98-9bcd-33428cdab0a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3ff613-f9ee-413e-ab82-33e7482dba82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "205bd957-2a1e-4cf9-86d8-04f5f89f0cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba2f201-2d09-4fdb-8dbf-ead0852eb4bf",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9542c805-e9fc-4af3-a025-a3f8f3c29ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d76b0d8-125a-47d7-a38e-aa86c10ba226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09bdd116-e65a-4d29-81f8-fa78edf76bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13cf7464-b1bb-4aef-ad84-401e1046d840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ba19ce-6cf7-4fbb-8922-97f87ce60eba",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d7426e-bb98-4498-977a-155de0567ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eacec2a-e717-4e5b-874a-6abae6add0a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea8446e-3ccc-4256-a4f2-cc69e15a9b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e8682d94-40ae-4985-8b5b-d3783d768d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753b7dd7-72d8-488f-b54c-443853079be6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9e9d96-71a2-4914-9d55-e51367b1a3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dda933d-1076-4e0b-ab76-52eee3c1db11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435f5ff5-9879-4cc9-b96e-accf5124d875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a09b261-c81c-44ee-bc0a-59017f44e781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22599d2c-e701-4834-bbe6-25fc8b1a2e1a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e717c8-a015-4d77-b6e0-e7e4b99262cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b12043b-fb90-402b-8b4c-9942ba68e3e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a7ca69-4129-4d7c-a703-45295c9474b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "67c27755-f0e0-4db7-ade1-12bdcc74d331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60490b7e-5793-4826-b624-4f0a776996dd",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db7b13f-0777-42e2-88f2-c5021e57b996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c296bf9e-bdd6-4650-aa3f-fa5ae55d0eb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9aec015-c335-4c92-8ca1-8c07dcf55d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5320b0a6-c141-4ad1-8611-cdfb8544abcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98da43c6-4e89-493d-a5e6-0fb4fc98beac",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09be251d-741a-497a-b65c-f4e7e32cf849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f37afd-3f1c-43e2-85bd-54f48f3d0eda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc46e40-b7eb-450c-b4a0-48b6f25f1f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a939c7f-f679-4927-adfc-ef1af5200654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c8fcc9-c6ed-464d-b568-96db79a9083c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bba48c8-a762-4afc-9f01-5212ff36e9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac7665d6-c317-48f9-bb20-52a1bbd404d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7fc39e9-a641-43da-9097-934d0207f0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "49eea243-6dfc-40bd-a589-2342ac338313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a80431-aec5-43a3-be46-d738eeab5aff",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b6ffc9-0b07-4243-b3b1-237301ffe50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "762b4332-293a-4264-b8e1-09d4a40ada90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19243dae-471e-46f5-8183-9e21bdb093d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d91155a4-3e39-4b72-9221-490b9c8ad03a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1cba630-2184-4837-82cf-e192bb1c838f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72c6ea8-c104-4b1e-90ae-ca828f21309a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "204ee6f1-beda-4fb8-98b4-022a4ffdb00d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32207ca-f86b-49fa-8bcf-714bf852740a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ac9d01d-52de-4080-8711-c277c2427989"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f1b84efc-9f9a-4eac-8437-8eefb124338f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "40a45f6c-db4d-4d98-93b2-2e62ec7a8723",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ede128-9ad5-4026-be4c-d4353deed621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7130122-1f1e-4005-bd31-ed590d22d6bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5398835-7368-488b-8801-3659e6b669a9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02884701-0c64-447f-ba99-064ed9508aab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c11c4be-4c65-43eb-a086-d913f3ae31ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15220dc1-45d8-4715-b139-90caed8afbdc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9877409-d60d-40b4-8d4c-fa1a69e33852",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d393f50-402e-41cb-be47-966f60db0667"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d45b0841-dfd5-405b-81df-582cbcb3c4b5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d4bd114d-8f48-46f7-8456-f6da38bde391"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e74a7f37-a696-4538-891e-0a04ce9184fc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "18ea0579-6b86-4897-9132-9a1787d0449c"
                }
              }
            ]
          },
          {
            "id": "751c49bb-974b-4cf2-a730-2c512f51b8ae",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3e338af6-e3cd-4977-844c-fed8d053d6ed",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "e9ba5518-8928-48f5-b664-8d36d53fa225",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62224e5-1b43-4a63-a510-4c7f1b8df5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a5955f31-841e-44dd-ac54-951a9bb8b191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afb40f6-8311-488c-ae8d-0f9b185b6c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8a32068-dbd4-4589-a067-a3436f19d4cf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5d72ae24-77f9-4dab-bf53-66ea173ddb1d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "342d3e05-7aa8-4569-90d8-d2606cb726e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d3e5036-cff1-4f21-b285-2448d5c740e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3174f8dd-dce7-4e29-a0d7-b43c02584667",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "688ea174-a40e-45f9-bd64-ce0483e91476"
                    }
                  }
                ]
              },
              {
                "id": "c7d8c0ac-a439-44de-9110-f804f1c8f46e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07453403-5a02-4891-b84b-ea055b21ed48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6d81d530-4cdf-4a5e-ad6c-4d3e6c05abe7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38a807d6-dfd9-4ea0-96b7-af7a920740d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "938f7f50-a83e-451d-8b3d-9d34ebda0d52"
                    }
                  }
                ]
              },
              {
                "id": "48b19389-bca2-4332-9b96-c5a3e2b58567",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cff5399e-f774-4cbf-83b1-c826797c3304",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fa95a270-8591-4c35-898a-07aba8405719"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e23b5a6-ac9b-492e-9bc3-9d0471c9e086",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ac8efb26-174a-44cd-a226-9a085058198e"
                    }
                  }
                ]
              },
              {
                "id": "f573068e-2fb0-4ccb-8601-96a71b0f43e8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fafe2663-765a-4482-b193-20b888ddb88a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3d67249a-bfc4-4d70-bf4b-6d3c38ad05ee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be75f846-99c5-4f1e-b097-767640627064",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "00f25de0-80f0-44e1-86c8-c769064bbcc8"
                    }
                  }
                ]
              },
              {
                "id": "5cfc2dbb-a9cd-4182-b9a3-1679bf678047",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c0e0654-77e6-43a7-bf44-13e9f7993f4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3611428c-2e09-4385-95d5-2827061fd7d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2407c4a2-decf-4f4a-9b20-ef91e56fc93b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2771b9eb-b1fd-4003-9aac-6daf300295ad"
                    }
                  }
                ]
              },
              {
                "id": "14c4f9ba-96a3-4783-9f2d-96bf7a70499f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cd03957-3b2f-4374-968f-dc2d08a41367",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3fd87824-244f-4173-b823-2349a834aae1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff839123-5466-427d-b05c-743d03135292",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f031bb7e-fc81-423a-8e50-43dd1e4b4e12"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "16007194-5bfe-46a7-9e0f-2822e992dbed",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9fcab641-9b50-4270-950d-0336d18a595a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "14dbdf57-5c86-46af-82cd-e3dd61d17ec8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8a130e62-188d-41ba-bd43-6e2148398f2c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a66125d-917b-42a0-8f53-3c5e43dde408",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b68c7c34-df28-41b1-9a8e-1f468d7dc889"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f704941-5426-4545-b5e5-19de79752ea5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "51bd4808-b3f4-49c1-8177-20ba1bb40647"
            }
          }
        ]
      },
      {
        "id": "ec2b4b8f-ca7a-469d-bb55-32c94ffca659",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "595f26de-b169-48cb-ba66-25700336ac24",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7b7f8f42-6662-4e3c-be57-8a038b04d0aa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0e48f488-911b-47a6-bd73-dbf7b09d666a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86122748-d626-45c4-bef9-430cf653d5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5093528a-59d9-419f-acf6-0eae5e9eccec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdcae1ca-340d-4788-a4b0-93a0bdce1c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bdcf584-02e2-4a9b-baf0-41af65c367ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed684fc-f95e-446e-83b0-1e6ae78733c1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bdc165a-90c1-4be8-bf3b-aaf02b7bf99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5caafd42-8f4c-4687-a162-81137478283d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c4dd6b-7201-4ac0-a040-bf2408007fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b8fe275-b809-4a95-b795-8452ebd48eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5f2baf-270d-40f0-a5cd-3c937c26f7dc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3cf613d-4769-4a20-a310-3fe1de973e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26115445-6d22-4e86-8f18-ff775557b233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e888100-72c5-4f91-bc4a-8a1a8f613eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d5d44df-2393-4cce-bc3a-f324792ec253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c86a055-087a-4e67-9219-ebe17aea224c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82cf2311-9f71-422b-904a-f3689b6fcd61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef036edf-e84a-4c31-99cc-2e3c05f332f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb054ec-8910-4357-bec6-a804c7322dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a5ee9dc-836d-460b-80bf-3ca986bae373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68cd1604-04e9-4f43-b18c-d685865fe1a5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc00d822-b487-4f50-a593-2fba890e6fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a836231-e75b-48be-8270-b34f06d560fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8f1995-0f4d-4d7c-8962-e31d0445ca14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ff87ed3-fcaf-4b77-96ac-0b80c17199c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f93043-cd1c-4ad9-bf7e-5ae5399caa60",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a77696-a038-45c7-8765-05d89254acce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e56aee5c-46dd-4063-b835-93642c3df104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b4f80b-662c-43be-85a7-fdc88804ff9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "243aef7e-ac7d-4a53-8123-27ebcabc5fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3c0e04-b54e-474f-afad-11d07081efc0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de56a2c2-5f38-4fa6-b796-534fa7e15fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d028e2e4-6db5-460b-a6bd-fca324f8e17f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8063d3b-4579-4952-b7b3-1e23a62b6a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "051cf84c-2754-41cc-83c2-e260387efa08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4fb51b-bb49-4f95-8d57-9d4d4a60181b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99794f01-8dbe-44f1-b890-7f9b2676ba52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "928fdbbd-765b-425e-be35-9b841c31b0e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d39041-e487-4d07-85cc-c44291a1ab65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f38dd47-bd43-4c14-aed0-cefe72795457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366b6513-a6aa-4f6a-9ea3-5791765dc652",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "462a41c4-d183-4395-82d3-e231a1f37a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fd4cecf-3af0-4352-aece-24b64f175913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530aad7a-0686-48c9-95aa-1aaef3f4dc06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dea37026-cb20-490c-a007-e4d83871988c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14388ab9-e649-4fad-bb77-b6f5028871cf",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8903bd69-a2c2-444d-a2e9-07d7d0f6b921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84a1b8fa-e410-497d-ad74-a66f6366974f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ae90de-9d48-4439-b1e8-268d96c934b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf90c1d-d8fe-4d8e-829d-1b0eaedeb119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deefcc03-d316-4e99-a8f8-ded224c69396",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf535d1b-5143-477e-889f-d122149b3021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "853805d6-03e0-4642-ae01-878d0c2f9dca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b246e3af-f365-454c-aacc-27146df6aa47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3c9f9453-1772-41e8-a91a-c4eaac1fbe4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ed7f1f-0f72-4752-9ad6-18d24c867fb3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb693a27-003b-45d0-ad35-8def0a762e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e55681c-89cb-4843-a4ab-c8418620f887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a97f58-5a9f-4e6c-a483-4cf466c491b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1c69e685-fb61-445b-9d17-70d5d92e9ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d77bcac3-faf4-419e-88a2-54e89de33433",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d011e12b-64a0-4b72-9947-465d11a57ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa74bea-64af-4553-8741-861eac2dd595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70acbc93-068d-4cee-9be7-372adf7a24bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e954b6-c030-4da7-a26d-88d4aa1378c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61cc92e-8b3c-4194-9860-407b0fd562c2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25e9cfb-78b5-45b5-b1fe-89fb23d75bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d4cff11-ae26-4a85-baea-3c373cf1ed76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2d801a-50a8-43cb-9ce6-6d0e562620ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b406d83a-0f37-488d-b3c3-a81385e6d457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80943d4-a413-43a5-8cb5-9946e55b227f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f3e07f-cec4-4339-ae98-91d3766ab0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81d2732d-e17c-4eeb-9294-6b002b55c349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763f8faa-f337-43b8-9ca9-379a9fe7c978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbbf6419-fac7-4b0f-8c10-cf2027014e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad7f1af-be86-4ed4-869b-14b369dbbaac",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8dc4430-07d4-413f-a6be-e18c7e55bb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b93b09fb-1fe7-4565-aab7-1dc818e8cccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea1b615-eb18-45cb-99e7-141412321e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "be91f78a-0d3f-4868-985b-9b31409e497f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa16db6a-15e9-4608-84c6-a7512c37b223",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8fbd97b-9bbf-4c84-a29a-f38df84618ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f69f96b8-a028-4245-b0f6-31861f65b81b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ccefcf2-fcfe-4fb5-8656-11a0bde6a6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "324fc4dc-5156-4848-8285-a4b9e9252ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a596ce2a-df83-4bbe-8207-a0ece1c7fbd1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e086b7f0-b582-410b-aaf6-89e7d5c6e8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02964b6c-b1b2-403f-8794-4062ceeebe14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070ffe61-0607-440d-b431-933acc7c306a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c38cac5-e70b-4ee2-9d06-abde1fe5440c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371f641d-6b78-488a-9d02-3432cd34dde9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269299ce-cebb-4ed3-b73c-4aff97919bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38451726-29b4-43ed-ae65-60632caa4e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d188d0-d01c-4aad-adea-c8e63bad7e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93d1e1fb-bc62-4736-8a4f-98657b4140f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c153b89a-1e13-451d-be31-18fceae6ee7f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35408f3c-c6a8-439e-9fae-ee69066fcb22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d712c8f-9631-4b23-9d03-eca7831adae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33adedd-f7d6-4c56-aece-a8062b9ede63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06c12426-7792-4b0c-8a69-f946d4cfac95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52415643-1a34-4c52-8b43-71f58491b244",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae181632-eda9-4a8a-8946-360bf5d198d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4083762a-0381-4d7f-b506-76fe2d965311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06232f12-3491-4c95-a09b-28b5ee43d2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5484dfd6-ecf1-466d-bac6-78ccb5ab002e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043941c9-faac-4fb2-86ef-540ba9858a21",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5452e0-f33e-4d24-aa3b-89b163e04fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd797bf8-b7fd-4763-b0ef-ffd941125400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c8da6f-b531-49dd-9f65-86a9823619ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e1c53f5-aa12-4658-b73f-293e658befdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41b1f78-5baf-4822-907a-9e3de5c601f0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaee438f-b989-4601-8fd6-52457c345b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d66fd92-1a58-4276-a2d3-3f60754c5087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2890ce-225d-44a7-8610-041062a16e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66f8579c-fc71-4830-9f29-80cb43e4da4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff276ed-55de-4229-8376-f50ce60157f7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "231afcc5-f1ae-4a11-98c3-7ee6405d9b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79ae7dbd-396e-49ee-861d-cfe2eefa4275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e40a1ed-57f5-4aff-baf7-1e518dda3933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc72794e-c6c2-43d5-9d43-df1315cb4f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5aa2cf-5eb9-4867-8166-c43c0c5e4680",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70006498-81e8-4e06-ae54-001e41414613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf9cc3ad-a344-4e72-9acf-b80fec5839a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d069767-5e45-4551-b9c6-4353cd32c96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8db34e07-27e0-48f7-9acf-f2d6b98c6599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3975006-a48f-46cc-9a7a-80cb1c0924ef",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ec5c4a-e727-425f-a55e-6f1e3351e7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d13215-e15e-44da-aac6-d9d0e045e5d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dee1e9f-148b-4b3b-bff5-afa728e7a259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3902734f-d7ec-46d2-bce1-2c6146eec964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b19f99a-bfb1-407d-92c4-7d950f0ab4c7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0226224-7f71-425f-b6bc-c8d6021b42dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e20663e-fc50-4ec2-bd56-2c70ccf4b0a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304117e9-432f-4e5c-8dba-532276875158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f5a1296-b093-4287-b7a4-afec09f0824f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d295d892-95a8-48e4-8d41-e5ed6b8932d5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e54bb5-9d1b-44fa-aa40-feb2b58b774a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca2d89bd-deff-4418-94b9-08876f613085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457d18e3-398b-490c-aed5-17f8aef5def2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e147d7d-c650-4bdf-90a0-cef24624a971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d107a3-15d9-414a-a199-36c529cdd9d6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a57948a-9cad-4547-8e6d-d56541e3ff08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f689ce29-ee14-4eea-82e4-8e9b81d01258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67bde8a7-c525-41e9-ba59-ddcfbae1d2d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbd043cb-267f-468d-832a-a7872bd1125e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06d08fe-1294-485c-b65e-62c19bc907b5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed81679f-08a6-4e9b-9f8b-9cd0175c56f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da1e2e0-ff89-4275-b838-ecdfabe58c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59783db4-3fab-4947-8afc-33d8acc759c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c2cefed-9a84-4cc7-a1a5-b0acf4036469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb24713-5f70-4c3c-ae82-d9a370b90caf",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "815a6ca6-ab4c-4834-91cc-a207a213250d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cd7ecb9-073d-4e80-85bc-b92bc58f82b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba7615c-aa42-4293-8b84-0840206cecb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb3be73-5fb5-4770-9798-06efdff44fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980295cc-8dff-46d8-aaea-e485c6c82e56",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a359e20f-1bdd-4b3c-af3b-2adc773bf343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32dd9707-9052-4190-88b7-ce61bef2350b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01fa14e7-ef37-411a-ad62-6c8c63940d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f76b54a2-2a8d-491f-a866-ace5373434ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3100bd68-5f64-40db-9ed8-21e5c7c229bd",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97eb927f-dcbc-4039-91dc-154d84c7b73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7059592-bd06-49e4-93e0-3cf7a2c6f5be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddff5fa5-3045-4e63-911f-9a0d223bbaa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f289673b-e38a-4fa5-be7e-13ce0ccbfa34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb11b43-2af4-4d63-b420-14f25409d760",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48ee6a5-1627-45dc-af19-71fe32822e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "847408f4-a012-4e23-8de5-d174de924363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ddd50e-9763-4459-b3c3-d1a5bf3e715d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6053cf00-fef7-4df4-84bc-a085dcb5de74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27cd182e-acf8-428c-9cf8-538e8c935313",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94226802-0bb1-4190-ab8f-e203dd4393fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76614177-0701-45b1-b31f-e55fd8a5df40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661b3d74-ce68-4301-aff6-0b06d33517f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22a5521d-7855-4856-b678-2dbc5dcbbe91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891f582d-a56c-4f11-a2a7-3e2ca6ace129",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10efaf84-6f75-4ac6-8451-7a21c957bfdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f354cc1d-d220-42b8-a5f6-c35ba46fbf40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28c04ab-10da-42f0-a861-6ae457eff57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5af0b152-3c74-4d1d-ad50-1231b7ad1936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e20564c-0137-4738-91f5-508e3adcc053",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6014df4-daca-44a3-b5cf-4192970e1ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76eecde4-31ce-46d6-92c6-73c30e55ec42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d08ac2-7548-4f9a-aee7-ef22b853a3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16a9a009-39d7-4ec2-80ad-53a24c4187de"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "434152d2-756e-40d4-a9c3-56e8aa701375",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a5c83b07-b68a-4e10-b4e7-813338218369",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04dc8d52-6735-4a53-b5fd-a270499a08b8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "891ea63c-3f48-41fe-bfe4-ef7db5aec073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1885804e-1971-4840-8857-b79372269931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa2af631-201e-4b27-905e-e1c06b66e5dd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "250e3c61-c566-4af5-bd54-144e6add3d03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14c89d3c-faab-436b-b86c-da51ffce6d42"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "92889f3c-b1d4-4e1a-9626-b9dbc5a055b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d433f60-58c2-4c13-a482-21e3fe9a405d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b7e768a1-70bf-4eb6-b23f-c2ec82202a0c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c049b308-8457-4878-afed-1fada5620aab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31953049-a6f0-4c29-abb0-c274ef8fdf0c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c8275966-1183-45a9-89dd-4472013c7980"
            }
          }
        ]
      },
      {
        "id": "3d47cb71-f066-4644-b9cb-a542e093662d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "af32a026-0ac7-4c41-9631-85c11f4ec99a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5bdbc18e-7232-4c97-8105-cdc23ed657ce",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ebfdead2-ac0c-4458-847a-53127284233a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d5e159-2cee-497d-83f2-3e85db9ec8eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0921d6f2-c53a-4389-b3cb-a023ae73a553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a58a89-e994-4e6b-82df-a14eba61477a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14cdb227-456f-4bed-8518-d4e37ac365f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9490d839-3244-4074-8f6a-cd34f7bc0e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d6ab2e-9f8b-4a73-ac0a-061b318965a1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec7a619-a5cc-470b-a3ab-8c2116a6370b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ff03480-4960-4619-a728-1c9106698bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbc20d7-3d58-41fd-bc47-f097f9782da8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a143440e-0b8b-4bc0-91ab-17d7169780f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "129735ee-820b-41fc-bf97-081e4d6b1b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2724df51-5db8-42aa-9768-4d0d7f75008f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf751d3d-f890-4fa1-8640-f892fa10b1e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d2b827c-e498-40fb-b59d-f98c44e79b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ba2e96-2eb0-4c54-a708-b4aef9f70e73",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a262aa-21b1-4367-ac8c-d782b8171dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c6d22f5-e2eb-4d8d-8113-ae61238c18d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2807410-d46a-4136-aaf8-f780476b47bc",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0320746f-6460-40db-8ee4-0523fb9b39f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b06fda6-7c82-48e1-867c-41eda719a0bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e53d6e-aa49-4016-9c6e-57b9ce6b394c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41db2841-03c5-4251-9562-2a124033484d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1fc7803-1cd2-4def-8985-ec8157450b4e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98f9062-b3cc-4d9c-9279-28fdb267d3a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0215c9f3-5d09-4252-bfa8-8bbd0c387d37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dfd8961-1de9-4314-87ea-a329082802bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5781fa7d-8839-4fac-9a9f-072179ba1034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70c708a-79f6-4734-9fef-2b29caa459d6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddcf7e98-f9b8-4384-813b-725220024ec0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57ab3576-e87c-49f2-bc49-8929cb603f5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5b0a43-1ae8-49b7-91a4-caff713124ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c88b0b-11f1-40a5-accd-0fd2efa632c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9af0b4-9fdc-4f2a-8b82-b480d13bc4c0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d92267-d477-46fe-a21a-51512e45d219",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43912254-22d8-47b5-848a-4ff49f8bbb43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82e59d8-d6e5-43ee-95ad-cca7ec2092c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1904ac08-5042-421f-b6d6-5707212d59da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4274839e-6a85-4ff7-9793-78884d4f253d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0536b38-c4ed-4571-9951-1e6a9bd98f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cbf11b9-3a19-414b-aada-4f6b82f357a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a988cfcb-6480-453d-be93-a7483240ed1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc1657f-89eb-4ea7-bb23-c9bcc0b8376c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f35e2c2-cadf-4902-af48-807efdf83e79",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abae25fe-0510-495a-b493-deacbf97c256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93e6330f-16b1-41a1-bbe9-e1fd6513299c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c634efce-0732-4566-8147-3a3a478081f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceef6ff3-0e9d-4bbd-8f73-23ace6db47b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "799bd8fd-198c-42d5-9457-061fe3e0db8f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf7ad3d-0234-4be4-9e29-5c995b76606a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c9bfdaa-e931-43d0-966d-9295d697cdb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f411e5-042b-4d7e-9692-04826a650dff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd03ea11-7035-4e33-98e0-30b772a2bb4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e8d644-41f8-4534-9a65-12578dab4d6b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6017545b-564d-4948-99eb-7acf096743c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3265e946-a7e9-49d4-980d-e83336a78c25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ee6a2a-547d-4c9f-9a7b-568e13293ade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db4cfa49-087a-4cc6-95c9-34cfd6648b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98943f3d-445b-484e-92fa-747a5dc18f6f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67865e0-da1c-4863-917f-7103b69ecd95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42421317-9b18-45ea-8d57-f359e8323db0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8dd2d8b-616a-40df-b2a6-548238d4ebe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "746b1700-4de2-4965-9ec3-86bb2210c7c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf88b2c-4f45-4d1a-91d1-7f6f654b338b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0273b809-20c5-4834-921a-331d48a8d984",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eeea00c-c612-4187-867c-d5bc8b234306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc5c4db-a4e5-47f5-8ac7-3a362a7f3708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1baafc3e-2560-4b8e-9394-957ee27e6495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2199eb-02b5-4c3b-ad81-b067b91c1623",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e648d3e9-5965-4c4b-abe6-a1370a481cd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29c69b36-c358-4568-b197-774e0b3fae13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ede082a-fc7b-4a02-a82a-b7a12ace85aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46399045-6a72-443e-bec2-a2198c5fd0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd7bd40-1934-4e50-bf29-f2d5f35c5eb4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee68251-a561-4576-aad3-c72db354de39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df6c518-39fa-4256-8db2-87bd35dbd18b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d42ec0-eb2f-4b38-a6fe-5a2e883b7a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9acc142f-0449-48cc-a37e-b50d620d33c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97942823-e83e-43cf-b5ac-a9341ae2635a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068b81c1-8603-4e66-b0bc-4ee7bfdffcfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f9e7a0-a32e-4036-a65c-8a5bcc8eb52e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0be45d8-dfb9-486c-b39b-cd4c6d8adcc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "092b24ff-3561-4eb0-b146-12186dfa43f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5e91cb-a2e0-4537-92c4-f6656d43e42e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3354656d-2421-4a65-8f19-d03e51e560a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c2b750-860f-416c-b9ce-30829d737485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca6f086-4ba4-4188-9b01-72d71ef0c7a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f6feb9e-3e73-4435-9fc5-e5ed3d57c834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cddfdafb-cbc8-466c-b7fb-d19f099603a3",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "724a2a9f-782a-492e-8c68-786a993c5ae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65fda61b-a0bf-4a67-82bb-cb0ff0fb5770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e038656-ef7c-4255-b25d-3e76ce8a4e41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01320ba3-998b-4c15-86f2-e3d8924ed8fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151be41e-97af-4fc9-8e8e-08728a218086",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd9093d-69bb-44c5-a619-f51c6db3c7e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32916cf5-5e71-442b-b3cc-6781703bd452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1c2020-87ee-4786-b10e-ee8ff90a6cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45331b71-1e37-48b8-a5cd-90b4db4028a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233328e8-4fcb-47b4-b8a1-77da2cf57801",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa35fbc-3c24-40b8-8b54-e5d6ab33e4c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c517dfa6-41c7-445d-8c1c-9da4a541b6d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd6f746-fe5e-489c-ae9c-0b6e6f39f754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed45c031-22d8-4423-b429-590cf48afd43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ef4304-7c9a-4f9c-ae52-6867bbb39178",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c455410-1868-421f-85b2-e27e141998ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc88fda3-c5b1-4ff5-9976-e48637aa7a36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "930ebc32-80dc-40bb-be2f-0c73793da9e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab5e56d5-ec58-4ab4-8b0c-8cd577fc6c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79d2e9a-da41-4914-9f92-9825fefec83f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18c59f8-ba40-45a0-8760-3904e07078a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "425b9b54-f647-4765-93b9-e8ad68b9e7c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c342abf0-7a18-4441-9fdf-5ab6c5e97c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8622a8ce-a999-47e8-9b48-57e6bd945e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a222ea2a-07aa-45ff-bcae-8ce5518cc974",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de09a903-256b-48b0-a882-fc9a9306ea30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4138a668-35b7-4ed9-bc99-29069fb67b4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3422bbc6-9566-4711-86db-448b9e99740b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f41468d9-a739-4b06-9c19-f0b6a68893f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18d1bad-28e3-42de-b7b5-857bfd63e3f6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e45e1637-d28b-4eeb-8204-f5cbfddfb442",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73157595-666c-4773-92bb-cf39478d2218"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb252eb-cdc3-4d47-ae78-f530c32dd822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e83a1c26-035a-41a7-ac38-e1125cb42ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc60a66-baf8-452c-be18-1e325eb54391",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e839277b-8be8-4dbf-a75b-8f9f29c1e23f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1515b9d7-b8c8-491a-8b33-fe7af8ce2d5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dfee696-c47f-4262-96a2-4f33d75f9535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0334625-e969-450d-9bf5-ed79550cc85f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ce4812-0876-47db-bae1-e20a87204f51",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0669d6-8d0b-4126-bd3c-a05b1e2ec52a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d71cb12-30ab-4780-a1a8-b789a20c2937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0eb1136-b806-42f9-accf-58898e21836c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8db7164f-213c-45ac-badc-afe03c4d8ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9c90b4-1427-4f2a-b242-f9d617407c87",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5938a00a-d22b-427c-8e48-2fa4657513c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3afaab87-bbc9-45d7-949a-10932636d382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9baa863c-cc7a-4069-b80d-17102401eb92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46986329-e680-4837-8ae2-1ae8d4eb97b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5868f554-e5f5-4190-81fc-1a23c9d6dc55",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8067fc-afc8-458f-be4d-20f4454cb5c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f1637b8-5c08-4f3f-96be-aed6693d7083"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3ecf40-2562-422f-b729-8a83d86a9437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e86ef533-0ab1-451b-a9a3-a01514772d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474529e5-4bd4-47cd-bed2-cf5503f53975",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a8ad4f-d907-4bcf-ac4b-c25d7f3a7d9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8a40c7f-6b96-4ab4-8cb4-3b49db976557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6884b0d-1d1e-4226-bd81-a02fc6d659e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f998afc-8fbe-4339-8cda-f65e37892e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1081018c-2abe-4740-a0a7-3837639f8dbe",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b0cde8-5e2d-4b9c-949b-131c036677e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0413e51d-cb37-4b27-bdd6-072e2a7447f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc9110a-64f1-40d6-a6ec-5a3e6ec14f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04f7bb68-2836-4382-91ea-51b1ada237d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bccb2c72-5c62-4218-85d7-6837adec5025",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf16039-481f-4117-a11c-adaae6d3cdab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac0a742a-a352-477d-bfa5-17d953e6149b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7da66d0-c9ee-4d4b-b0d4-4e6ec28f2746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55cc9327-6167-4f5f-8c85-f4cef94a8f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25cade11-7215-47b4-b359-38d1edb5d01c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82f06b7-bee9-4a82-82cd-7e075dee9e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1d84e16-185e-4db5-b719-d184ae4caff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "884ee1ba-bcd8-4ced-a909-86b037a17871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "777e7b37-7f7b-448c-986a-82a24ad9226b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96a2d41-d3f4-40f6-b16e-39559d211d46",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353438b2-b891-41f4-a74c-2df6ffbb2622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e1384d-9549-4ce1-a481-19d941f449ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9822d923-2608-4876-971d-a4da9e258532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f899c84a-3c45-41fb-b346-781aeed372d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d16cc42-34fe-4414-9322-49590632b3f3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19018dc3-6366-4393-8cee-c54aa81d754a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c748ed4a-9f9a-4036-af62-e15a90531bd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a47858a-ee33-4999-89e4-3a2166e47573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1902f79c-736e-4e98-b4ed-656857bccd81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81781e6a-5044-46c6-b79d-4e70e5e79deb",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8081ec52-747f-4c71-ba71-7899562bcab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "999c6e8b-f1ce-4177-8952-dce4ceae8dce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9155a512-22bc-4c23-bca3-61a6a086c2d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a1222dd-4af5-4913-b778-e88eb833982b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b983c37-d617-45f9-a3eb-effd836fb40c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6dbb70c-2f2e-4939-a954-27787abf5ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da66f38f-b7b6-4e27-b93f-9938791c3cc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1aeaa5-aac2-4ff9-a1e1-4572777101dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfbc656d-7f88-42cd-948d-a58dcab1a3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27ed5de-47e7-4b03-b744-3590181b0d8f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0accdff-36cd-4a9f-85fc-5698d79d58f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "262ffb1b-ef6a-4db8-bd82-b3a5369dd910"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a29fbb4-e648-416e-8d16-b939768d72f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50fb4d5c-493a-4970-9017-aafbdf8958ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4cb73c9-24a2-48aa-abf1-84c00ba4677f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae6a7dc-7480-40f3-ba40-defac2522a02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0012d40-35a6-4035-8b05-8efea045af5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01bc7d1e-a633-4cc3-aa17-43207f2334f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bcf2419-0513-4f1f-a4e0-613c272d856d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e9b176-a327-44e9-afd2-2f13703f7ce0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27a5757-e04c-4915-a2e9-1c67ea19406a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c7487d-9cff-4dd1-ae08-7eaccd4c50df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6999442-6c62-41d7-b631-95cb8d0d2143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "198f62af-e9af-4394-9de5-0b7c93d5fcae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132ed0bf-9f14-4f11-a6d8-360553ecf9a3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69dd5d07-f1ac-4b17-b302-459f24a90687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "121ec709-e7a8-4fbc-90ae-1b8ad498e98a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f19d36-bce3-4252-8c47-4f6cb76a16f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f077426d-e434-4b39-850b-baeb3d9ce806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867202bd-ffd4-434d-9aaa-6e4532db4939",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a5b13b-06a1-4fbf-9239-cebb0a91ef75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e095145-efb2-4a21-9d4c-97428dc378c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4c1521-eecc-4985-9297-088a00b05701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa98724-2b00-4142-9572-249e217bf6c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7365224-be31-474c-a3f2-341351c65a5a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d30b77-4788-440a-b6e4-8fa6fcff1177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55394c88-bcc2-4ed0-ba25-004f4dd8a512"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82af53d8-3862-408f-879c-076301f5eb0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76623c92-1886-4b9f-a02f-0b857e963fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159a59bb-535b-4dc6-99fa-593b8264cb7a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c362ae-abad-41a5-afd1-1f215a87e800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95764a80-71fd-42ca-9a47-b9eccc3f2138"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84391169-4be3-426a-a457-389e8b557468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f041a6e1-d872-430d-9fa9-b62044a2d697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f77aac5-734e-4cf7-af44-b303c67b2eae",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc577c3e-b369-4942-abf3-4844ee2403a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b00881d-46a4-4fd1-a80e-7103557ffbb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1242b9-6710-4f76-88cf-5bbbd8c432ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef66e0e-4a50-4968-8574-169403c010b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b52e91e-41ab-46ee-ad8e-9a4e38f88c62",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a6574e-0cf1-40d3-a38b-1186032c0d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aefb71f-4f5f-497c-8ccf-ef9d711462b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83fc73eb-c0d5-4ff9-a7a6-cb5e117e3150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99efc607-284c-44fa-81de-ed09e25b6a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e910a8b6-6413-40ee-8787-750efae57c36",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16877cfc-7bea-43e9-866f-ce2eeff72a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa8f14a8-ecf3-4219-a182-fbf6ef45c27b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ab4015-65e4-44ad-a1d7-941c59186cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32e886f3-0e6b-4edc-be72-dfe21d70ea25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488de048-a6ab-4256-8cb4-a160acf2ef6f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3bb7ee-3aff-4eb7-b721-8596d18179da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a607e35-1167-4fa6-bff3-fe8a3b37685e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea221bd-f710-4d67-834b-514b07669ff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb770f9a-45b2-4111-b848-fd40a8bd1637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16764573-70f5-4bd1-af6b-e700f6c663a4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b396f444-3ca3-456b-aa57-83d16a975d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7830ffa-13e3-4188-bd35-ffd77965fd0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd53071-da5c-4e41-9419-168721fa9e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17255df7-c4db-418d-b47b-739bb76aea9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48636b9-29fd-4796-9a53-7c1a544400e5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f45e7e-9a58-4e71-95c9-1779e132bcc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e259923e-5908-4191-9c6a-bcff96b833ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dbe3f2c-d1a4-4868-a6db-19214b6913e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a27719-f505-4c3d-844e-d99bf044a518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956d3349-7294-40b6-87b9-d686760fad3e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0a09ef-1665-4fc3-8aa6-e197669d9a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93788f65-29d6-4ee1-a73c-88c345333446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1d9bf3-a293-48fc-9c7f-f04626eec720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab4987d3-d830-4901-83e5-f678cf667884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af14cc34-a1c7-4b8e-9349-c38f22186cd4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b32cf2-4fac-4113-b650-17c7e71e2c2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcfddd3f-66f7-4f5e-a2f6-6ee2cd290da8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad6f94e-1dcf-4c02-a184-5a9c16739a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8eb1784-0594-452e-a015-71967b727b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628dfb32-9dd1-42cb-bf3b-d6c8e545a302",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "705c7319-04a6-419b-be84-f4e29ddbbe5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be9a131-5db2-40f1-85be-31bb763f2012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b811dca8-a24d-41ae-9362-9ed8c5d3ac87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a54986-8221-4c1f-b5aa-a0fdaa8b81b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94a85d4-50f4-45a8-91f5-716997eb6bc6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6adb18e2-636c-45ae-a9cb-5ccff38f77fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d587f5-0bf8-4b07-82f7-5d45e724596b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a567bbb-2c4e-412b-90d9-0c8371c4b8ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d78b97d-8899-4b6d-b8e1-9afff47f951e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68fae42-02e8-4a0d-ab2e-ae11234141ca",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4304809-266a-4254-895f-d04fdc04b218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a35387-6238-4de5-8451-5dd0d0cfc7bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc3608a-e9bc-4848-840d-d0e3fc31fbc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb06f7a-5678-4188-a41e-f822c6bb31bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7a65ea-ac93-417f-ae78-f6633905ad30",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f654d7-0955-45bc-bdff-c20cb6f47db4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117578ce-cc40-4b25-ab03-6e211b4cfb5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92d6b03-ba35-48bc-aa0c-cdef91f0e73f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4c2f482-8feb-4f03-a8ae-1a8688f1a74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d473cec6-2d89-47ce-ac6f-1a3092ce8d1a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c1ba44-6c0d-4716-99ac-08a26330ffb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb8d8fe4-bf4c-449b-b6c4-e4931820f284"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "050ba8e2-628f-4e3a-b611-7926b3dbf48b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95b45b6-da32-4af6-9a82-69f053510136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9bf4f0f-b454-4588-a78f-1bd83c6df1e2",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86416af2-2c09-43dc-b549-2875ccb1628f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db4baadb-05aa-4768-8bc9-426e41a00bd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa88dd27-80a3-4338-a378-a65f753867be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76cd90bc-0a18-48dc-be47-42e78cd8f6e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb106ea9-2ce8-4b48-86ce-70b5c8ec1584",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa945c7-cb80-420d-a041-07fe17984c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe751b0a-60d3-4f0c-ae5a-7b753577a108"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fac6cec-2da5-48a5-a2f6-1f1251925247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc8a611-790d-4734-a916-0ced499d67ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e3ac8f-b841-4ac6-b1c0-cb73e034976a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c896017-4e43-4c75-9481-bf1b69fc7d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d195695-08b5-4363-b876-cab33af1c1fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47eb9376-a303-4bbb-ac38-4c1b6e30308d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "805695e6-9760-4a83-85b1-1920529db957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbaf5ad-aeb0-44e5-8391-ac23ead87df3",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a785e38-33ad-4707-9717-530d513b3e29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e79cde19-5968-4963-95cf-7fa8a6ff551a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d069d3a5-f44a-4488-8d53-b30aa05cbe41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bf91315-24b6-411b-a239-5d32acbfd32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906a7ec3-dc2f-4a92-97f7-3dd2543d9895",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a40a90b-29d5-4027-ba38-3b4b1eadddea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "033caef1-6d61-43cd-ad48-d4d904b939fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1195b4-ec56-472e-9338-13c5e57a44cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b7c0f7c-64b3-4e09-80cd-36f393038887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7e3c04-50fd-4754-8247-66bcbbfe7ce6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04703ba9-9556-454b-b5c2-340d2a812bcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1c63384-235c-4b4b-971d-bce562a3a250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17229779-9359-4da0-89f2-453fc7be3f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbf51112-9b7b-49cc-8ad2-98d4c144a1c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b28d03a-c36c-40a1-a11c-e03e54525d1a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d3415f-8338-42f7-af99-114ab07bb6ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea5a7077-6a0c-4b57-a4d7-c434d290a072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "964ec027-5da2-499a-80e7-94e60dc60a46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94199bf3-c10f-4758-be08-de75f247c454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fd732e-c944-40e1-8d3a-5b4d0bb358bf",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d0b22c-0e6e-4448-aba5-b7fb0fbbc60a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64787f6c-cf2d-4e85-a880-777c0f7cbc2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e8fbf6-2f20-41aa-b933-251f4b8e0aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c1a2b1-befa-4f25-b29b-cd0cb7dd77c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c186eda2-72e6-4265-b8fc-3f19b4b82765",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "203dced8-eeb6-46ad-b869-60ba9c0aad51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0733a1a1-b79e-4da2-898a-00511502da23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e406200-011b-4524-b45d-f905c1b63c5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15546e06-f460-4eda-924a-aabe241449da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0507e4f2-001b-4b5c-a702-c261e16c974d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de650f2f-5bf0-4d8d-b0df-3565212c827f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3d88bfc-afbe-41fa-b87c-67958767eb56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9697a736-e387-405a-b08b-1f9536a667c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5afd08f-7858-4099-97c4-5a4ac0caccbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64eae8f6-cef6-4fad-9e80-9676b356c270",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346faf16-32c9-4712-9951-6e4c2ae6970f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a029e966-aeaa-4ba0-8afa-2cea190b8fde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b75aa4-42e1-4e1d-9f8d-60d3db0b6b58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdd06180-dbb0-47cc-8fe1-50360741f809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee36781-8545-49ef-be88-8a5b82d0cdb3",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f99c8d-84db-4586-8c44-83e168a6ce15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d157925-b4cf-450f-84a4-e9573c8b466b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8f2d24-dbf5-4299-a0ea-21f5f17475ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c18ffdd5-b88e-4d10-93af-a8062293b42f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8355d5-6703-4c96-bc3b-f04b183f9f88",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4912138c-5916-4ad9-a7fb-c1cfc77a9303",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "703508f4-c3b7-4c68-a960-537eeddc33b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c169a5-5089-434e-92ec-b81a391fbc33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4f7843e-a98a-485b-abcb-9abcab50e64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d1f724-4250-43ad-b516-05abb658c034",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b047d9-23ad-4d7b-b46f-f818af6004ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43715aee-7e4d-4a3f-81ce-c4a80d0cfc84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10fa84c2-722a-43e4-b2c2-00a049938d31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a7f507-81dd-4623-be5f-0c4fcc06e0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "701f9700-0965-4754-a461-0531325ef2f8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463d1b59-2304-4bfb-9191-3e6fa397f6bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dee05b2e-a28b-48ee-87f4-e65160d68d5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e65089f-511f-4a3d-a186-b6c574079588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db84cf85-72fd-424a-8364-260652d766d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e78763f-8f38-4644-a5ac-07ace4954746",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d63c9a9-76c5-4959-873f-0fd30bb2019c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34949afc-23e3-4cb2-81bd-e01706b55a1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b641b2-748c-4dd2-b9cf-1463282842cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24b85f36-5d14-48b2-a908-f5ec86a4c60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff748a1f-d9ce-4373-b6c7-8fca1150d500",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df966092-0ede-4c46-b377-fb7a5c703f10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b15c9c1-cc76-4e3d-91e2-b6ef653da51e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64bfdc3e-9b32-403a-89cc-5d884f074a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0df09be2-43b9-409c-9b93-fe23902c68da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04459048-cadd-44a3-87d3-f1f680b0cc5b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39ee476-433b-45aa-89e7-3a87e33ac8d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b26e399b-beee-4f22-8fc4-2048915c2e18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0fc41ca-0d96-416a-82bf-f3f0d99e92a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "570d1f20-abeb-4476-953c-8559b729598f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab40996a-c488-44e9-879f-4c32f1b80ed5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56f0c8f-5a48-4923-bd66-2ea8de50412b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "231a1768-0799-4847-8163-c9688c2aa8a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c73c6f-f262-49cd-8e2c-990f364d1dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1bee0c8-dd2a-4b13-b7a3-e1d90fea11a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80db900f-5c37-49fc-9f71-178fbc0e058d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1467d473-1b3e-4b9b-b74f-fc8e1bec9063",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68b7f0a8-62a7-4a44-ae80-6f62c7fa3924"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1cd1c4a-b18f-4d20-9400-12e7fe19d6e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b57af1a-f888-4f26-86b5-5616116d1070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795686f5-453e-459a-885c-7f40864255f4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9106ddd7-6006-40a7-9b00-b17ae6e4de44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12c07e36-efe1-4623-b3ce-d81da9ea4450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "146a2765-dd27-4508-b8c7-1bc1463b1b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9291308b-3f45-4ffa-9244-1340d234c6c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96c4a0d-e91c-4991-9db6-5942f00dde12",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b540db-6251-42ee-8c81-0b7d803d4e33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ee1d2f9-b54d-421e-aded-5c3f68ac58c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90e6001-8aa7-46b5-b129-2eeea45b9914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32ee9723-5c9b-4687-a924-4b28c53d1ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d2697d-d999-4db6-a2b9-bfedba10d2d5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0136166f-1c60-47b5-a131-20929132f01e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81ba5861-4f2b-4089-8f8f-638c9b13c5f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "149a503d-4b60-4f6c-8f6f-f9d6593e052c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e598aace-04fd-458a-a6a9-e74047ea36e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92c40cd-bdc0-4d71-b446-ed5f899a495e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9515592d-6ff7-46d8-9f18-a65544f939ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36b85522-57d5-43b2-a24c-0e2e236883f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd6ab69-98e6-4455-96ab-cfbd0bd3674d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e30221c6-8df4-4cbe-94a1-45fb7efd2ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848e20ae-51e8-435e-9d3d-c6acdef42118",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0931df-eed3-454c-a75a-fdab3b281848",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "192893b2-82b2-47d4-a94e-4154140127b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82ffd3f-ffb9-4e32-811c-95f44c413d1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae14fe64-9242-498d-a49f-5897f76532e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992550c7-6863-46b2-8c1a-af2f3c027835",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d524e7c-e4c5-47d8-ab56-faf6abe15330",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d1e8749-3389-4088-9d71-bba94c97f5f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc58e82f-90f5-4be3-849b-085a5911f591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08f9765f-c43d-4444-ac05-fc9cc49889e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3633559-a028-4407-b4c8-b73a756cae3f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6d438a-8ead-45c1-bcc7-ad2fe22b3a2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a718ecff-9ab3-42f5-ade7-43e729af94c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e072bd4f-87a8-4bc2-8956-a6f8854cd141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f189e6f4-2263-4149-8d22-949b70e574b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4449b7-96be-4bbb-b80b-4f8dd4ebe98b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de174cb6-be4c-4347-836f-415e347fd855",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a23a7ca1-a267-486c-b9df-a470ed0e3ff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "430902ba-19cd-4c40-a363-2a9837da5c63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efa423c9-9436-4424-a8d7-effb83b41c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e094b8cf-25c6-49f9-9a59-72b21b3a8ab3",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d274a3-352e-4973-a2be-42fe9c55e648",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b4a818f-ef6b-4ade-bcc1-2e9567fc8552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce8e747-ee82-4c35-ac2d-fe19afb38c70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c32a9e2b-a685-4036-8d6b-a1e9dead1a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265e9ce2-ab86-4840-91a6-7142808a0462",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad10c12-ccc6-406c-83b7-3fadbc8192fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d58beb8b-1620-47d0-8d00-08282a1c65d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bfc785-c9b7-4562-ac7c-fab3a0302c2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316fa51f-e5df-4f52-b916-74f76d154db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00285328-ffb5-4406-bc08-ae113e5d4123",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b28e75-ee91-4e1a-bf7a-685b3e4fef53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d3f2f22-7739-46b2-8cc8-26ed7241452d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e92e1d4-7a6c-4415-b067-9014e79e3c80",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92ca0682-f5bf-4b1e-a831-a02a36f3f32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a1a0a6-5e08-4a5b-b5c8-09581c94e177",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c43cf3-2196-4a86-b7f9-afd321bcac6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2d2152b-e9f3-4eeb-9969-6c06ac054b8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61e6127-82df-4f2b-a429-2d89c75dc850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "190ef395-97be-4fb7-91bb-78aceb21fa9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa3c090-53e8-46d0-866a-9c58b4afe935",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8a1e4d-a7f8-433d-a1ee-c8a07b174e01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "157e9938-7e49-4a22-980f-54a39ff827b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d7822d-c9c9-4121-950f-8a6f192e5856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3025940a-4c44-4194-9227-1ec448d74d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34154e52-d1b4-44a7-8cac-2184d697a924",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e85874-56d5-4362-adc5-652fb2de934e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f35eea4c-b9c9-41a3-8c15-2b648bc1a765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21c33d3-a4de-4086-9bab-0da9279bf990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6433c891-8e95-4cad-b7ff-710dfb229134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d0d930-181e-407e-aaca-ae1bfa25ad01",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed89ffd3-7244-4031-b267-da22eda82bb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7316aa1-08bd-4959-afee-dc4c705d6744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a89f439-8b44-4112-bdb5-27967b41e073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f56262d9-f29f-48ca-b48e-f2921e02a724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf20436-bd89-4a5e-9bb5-5ef556b18cdb",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9c1ded-8356-4d78-87ef-6bb06d8dc017",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38354490-c2bf-4e1a-808f-211f7d554d01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4601e98-460a-4073-9c73-013f73d130a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c63ccdee-bb90-45e8-b348-f3c8ab8b23f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483b7a0b-20cc-4b18-8bee-8fef3d90a5df",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a629e3e-d395-4625-b707-464ff683f4c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7cde5b3-124a-42ee-97e1-f0750f964381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b46de02-6312-4653-806b-c68ee833dbac",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db18fc3-5870-42a9-ac70-9a48a85a6fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448a303d-1aa3-4c33-b525-fa60e013db06",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5942cc-ad0d-4adc-8885-9f7c22fd6682",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59784c7b-96fa-4c40-a79d-74c4b506d72d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc29c46-ca80-4636-9a13-30c6e29db7f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ce1f43f-a00f-41a7-bd9d-5f3189de1927"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c493bb17-2565-44b1-9146-f71901f8931a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39b83a7f-0a30-4a3b-ae5a-6ddbd97fc221"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fac4ac72-1060-49d4-b784-4754ac7fd504",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f7cc771-4f21-4d4a-b8e3-51b728789bf7"
                    }
                  }
                ]
              },
              {
                "id": "bed13ab1-c9f0-48c0-8e0d-2aad4078d162",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "afd98b10-ded5-4388-9fd4-8cf39b09ef16",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f955d632-0c51-4f1a-afea-ddaa4f77ee4d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a80f9d33-8220-406a-909a-a645ffc343e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "624b949d-a9e3-4067-a53b-595985248bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1eae3dd5-b996-43c2-8759-2b23dcdf9568"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1790df08-90ef-40e2-959f-ae7c4e03e192",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e500da4f-4b18-4895-80e0-1a0717c716ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0055598c-4796-4bcd-b688-6a9b7f03fdc3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cef54e13-9738-426f-9110-64e5b2eec114"
                    }
                  }
                ]
              },
              {
                "id": "5ed07e4b-8423-4f08-a896-254a1d16f8ef",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "90aa9fca-1cd8-4a2d-bc8a-40619d30a169",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f237f196-e62e-4d8a-a593-d171ebdf7281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "708cae46-fa06-49ed-81f0-ba641a3c91e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5007b1a3-02ea-4e59-a5fe-6993caaceab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0b5abce-29a3-4958-8a61-f1568b9b9a98"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "82fa74d2-20c6-43e1-baf5-30baa9f62efd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8622fc9a-e50a-4b73-a709-64c17c37a669",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95adc945-cc9d-45c1-b1d1-e76d10454ad5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "96b0f4d7-c42d-4ae6-a6bf-cc5da6e14dd1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76eb8184-0329-41b6-91d9-da1cb32c45b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a1cdc3a-c5e4-484b-90a3-fb4c4b0a82a0"
                    }
                  }
                ]
              },
              {
                "id": "60197b79-60f2-4d36-86af-8dcf2633cee0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8227447-c0db-49d9-b07a-b7e96f7f6747",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8fb6e698-2df3-46f3-ad28-01b62cf98521"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8665244-5f69-4bdf-9ca8-a775cf0a598b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea378817-7774-4a88-8ff4-713cda0c969d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ea64fd89-2a36-416d-87fc-5d2c5702262a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "690bb42c-54b6-4de7-bf59-550c259f73f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "666d09c7-3102-42ba-8dea-f46a607b65f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e68aea65-bccd-41a4-9fb1-03a13af56c7b"
            }
          }
        ]
      },
      {
        "id": "60c65abc-24f4-4d38-8d10-b1539326a185",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1bcf5615-3288-42d4-8574-357d670fceeb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c4502e24-9043-4cb7-876b-f59d972fcc7e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "475c9f0b-3518-4f78-9bf0-150ab3e84fb6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f9de2e-e43e-4786-9fef-14211df9c883",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "08d11a13-3989-4c12-bc4a-52db8042db33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b466ed2f-72a3-4840-b8cc-c5920cbd5fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b191d985-7931-40d6-b316-394ad626f684"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "053bc9a0-84ab-4ac1-8c67-32a44dbccaf1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47059b39-c184-4366-ab4a-b8f7f77a4b4a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fc6efad-75b4-4a11-a958-0c41338982d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f32fa642-9192-430c-a9de-3df520ad088d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58f422cf-6413-4d16-87c0-6e5256f75bdf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1a561b19-a194-4936-92b8-1637e3683a8c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "138be20f-069e-414a-bc9e-bc264d2eae85",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c2e526e1-a9af-42d6-88c9-207a89470f20"
            }
          }
        ]
      },
      {
        "id": "c6bb6404-afe5-44e6-93a6-ab5c53780bf7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ed6a2038-8615-4a30-bfca-c58edbd5608e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0ae8acf4-824c-48c4-ad34-4a710b4008a5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "418f1045-d453-4cdd-b91e-26b4661ffd8d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48184ab4-6948-4711-b6bb-f5f45dd571b3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38466335-8af7-4c6d-9130-95ff09247c6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c386b3-059f-438d-b7fd-ff7d6e4d1aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b43149d0-0d61-4b65-adc9-5dd89e2c9ad3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a32a7ca-0ed5-4c06-9c5a-c097be68c3fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a98862d4-9fcf-4a03-99a6-83d842d8914c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "76f257c6-e544-44b0-be5f-ec48bf50d66a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40c0b878-f49b-4bb6-8293-deac8ab0bc30"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "80c814a7-2a71-4e5b-ac37-7aa591da428f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d620acd2-fbaf-4374-a8a8-4f8b6de7fa57"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "97a51602-b789-4bf6-b443-09c983e04457",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a6fe5436-78c3-476c-93bc-26a17252dbd0"
            }
          }
        ]
      },
      {
        "id": "3400c1fa-babb-4f3f-9ea1-08c76b60f3e9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "760895a3-1689-4619-a802-34b2e294766c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e832f65-b99f-49c2-9138-24b31bbfd8d6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b13294ff-bbb1-4612-b9ff-06b868bcf543",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8dd9b23-ec2c-4ea8-9dc6-3e73fc132d5e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1eb91412-15bd-4cec-8eb2-db352574807b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9847abaa-7344-4e84-95a9-28906d81665e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a905fb7-c201-40ae-a56b-2c860250fd50"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6fa05e1-f7b6-496f-84b0-2b017da523ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e4690f1-ac15-4272-aaa9-7d3080ed8fa6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dcddbb66-5690-4eea-ae5d-9a4471fc1b35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "961fd447-32ae-43f7-8014-e88295d3a2cd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f93ab15-bea7-43cf-a339-df4c8d556275",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0f2356e2-55ee-40be-802f-bec4d18bb851"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e13e482-70f3-48f1-8d94-9a2c0c8209e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af56a604-4c1d-4fb8-bebb-b50d4b041146"
            }
          }
        ]
      },
      {
        "id": "f1a15e16-ca6f-44de-a50d-43636c54341b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1ce7f87-fb14-4978-b938-a2b65b1b2726",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc91dbb7-a20e-4a2d-a09b-4ff5e0e445ee",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b83b434c-0e95-4457-b053-06bedfb1440b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a70dbdd-2815-41bf-b543-07a8f075433f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c37ba557-25f9-418f-8345-2af5de4f4ec2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 89.55555555555559,
      "responseMin": 10,
      "responseMax": 5911,
      "responseSd": 432.7773274647695,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719535111988,
      "completed": 1719535142653
    },
    "executions": [
      {
        "id": "6326aeaa-c252-44bd-b578-478e5c0463c9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "45d9ca22-aa86-4aed-85c6-6f0855dd9282",
          "httpRequestId": "cc81a83c-7f86-4674-87f5-21cd4fd7900c"
        },
        "item": {
          "id": "6326aeaa-c252-44bd-b578-478e5c0463c9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a7ceabb5-b2d7-41e7-8f89-e34bdead79dc",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "869d26f6-1a76-4d67-adcf-065afa0d7d34",
        "cursor": {
          "ref": "894329e4-45f1-4066-a7aa-5154ec6f243a",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8d29f79c-da4b-4cc9-8512-bd8ee492df2a"
        },
        "item": {
          "id": "869d26f6-1a76-4d67-adcf-065afa0d7d34",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ef44df06-a47a-4a3a-9326-b2070426dae1",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "162c40bb-0d55-4f34-835c-a954886eec74",
        "cursor": {
          "ref": "53e37ee2-fea2-490c-93de-a30a76557f61",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "aaa9542f-beee-4185-9352-427bab467ad9"
        },
        "item": {
          "id": "162c40bb-0d55-4f34-835c-a954886eec74",
          "name": "did_json"
        },
        "response": {
          "id": "27cfee87-3a2e-4215-8c2e-04e3c55d99bc",
          "status": "OK",
          "code": 200,
          "responseTime": 313,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99eb67a1-2e49-436f-a6b6-3d8876411ce1",
        "cursor": {
          "ref": "a967011b-801a-4991-bf46-b5aab9ae6f9e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "feafea96-8b88-4742-a394-37a1b21075f3"
        },
        "item": {
          "id": "99eb67a1-2e49-436f-a6b6-3d8876411ce1",
          "name": "did:invalid"
        },
        "response": {
          "id": "b0cb800a-acf9-4bbc-af0f-e004629fedd1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 412,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99eb67a1-2e49-436f-a6b6-3d8876411ce1",
        "cursor": {
          "ref": "a967011b-801a-4991-bf46-b5aab9ae6f9e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "feafea96-8b88-4742-a394-37a1b21075f3"
        },
        "item": {
          "id": "99eb67a1-2e49-436f-a6b6-3d8876411ce1",
          "name": "did:invalid"
        },
        "response": {
          "id": "b0cb800a-acf9-4bbc-af0f-e004629fedd1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 412,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e6d9bc-9dd8-47bf-8d38-f9fe0be1f280",
        "cursor": {
          "ref": "1f5ba60b-58ea-4315-92f0-3e04c759a8ee",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d64eaff1-0219-4c9d-8189-a2d328e8b317"
        },
        "item": {
          "id": "60e6d9bc-9dd8-47bf-8d38-f9fe0be1f280",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "eafe1a9a-2998-41bb-bcdb-4b695e8f4520",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76577f71-7697-4835-b842-438747e88fef",
        "cursor": {
          "ref": "5d96a8ab-0ae6-46e8-adec-aa5a255b7559",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7ad307b8-3d59-4496-92ec-60e016ad7dd9"
        },
        "item": {
          "id": "76577f71-7697-4835-b842-438747e88fef",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e36c576b-0de0-44a6-aa24-26ce8b2492a7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 50,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf868b7-4cdb-47da-b981-1ab959cdd247",
        "cursor": {
          "ref": "aabe3554-d53c-499c-9e3b-faea8c857a3e",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "00e69ade-1273-4c9b-aa68-31477deb4d21"
        },
        "item": {
          "id": "abf868b7-4cdb-47da-b981-1ab959cdd247",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "35e2e4d2-ffba-4a55-ad03-79eed2112e99",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec880962-7155-4ca4-81d3-1e06d4b32192",
        "cursor": {
          "ref": "b8115558-6550-4bb3-834c-7df97c15a9ae",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "78c551f2-b607-4c1d-b81f-1bac5a8bf951"
        },
        "item": {
          "id": "ec880962-7155-4ca4-81d3-1e06d4b32192",
          "name": "identifiers"
        },
        "response": {
          "id": "0d10332f-9c96-45a4-baba-8e112c76288a",
          "status": "OK",
          "code": 200,
          "responseTime": 171,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e4d9b8-2f36-446e-8d04-c9a70716ac21",
        "cursor": {
          "ref": "744da9d8-f1ca-46bf-b0a0-9a0b19ec40df",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2159077e-a944-4f59-8b51-19bc0e2ff2f3"
        },
        "item": {
          "id": "87e4d9b8-2f36-446e-8d04-c9a70716ac21",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fec0497a-a8d8-46b5-9c47-3451b988d785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba11352a-3558-4b71-8881-f8e54d08c1ea",
        "cursor": {
          "ref": "3a9a40f3-da2d-4f89-a28a-d2266761cdde",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a892674f-a8d3-474e-91b7-cacc36316d67"
        },
        "item": {
          "id": "ba11352a-3558-4b71-8881-f8e54d08c1ea",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "47afecf9-f937-4522-8b52-3582fb944775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a2d5bd-b1db-4105-a740-4c0118010ea4",
        "cursor": {
          "ref": "2cbc2a8d-beaf-4aed-b39e-b4b6da2f14d0",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b210b1d1-6c45-498b-9b99-62e4cab879af"
        },
        "item": {
          "id": "d9a2d5bd-b1db-4105-a740-4c0118010ea4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0352ce75-f837-405a-affc-697ea602ea67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e136c9dd-2a5d-4a59-8343-42224afc2e31",
        "cursor": {
          "ref": "5d2ee6db-fdbd-4eda-ba82-f28c40211fd5",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "868d17b6-017f-4990-8c4b-002e48ca4991"
        },
        "item": {
          "id": "e136c9dd-2a5d-4a59-8343-42224afc2e31",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "001f1ade-4702-4f46-a96d-4f9d593c1509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "185ca1a0-84e3-46b9-b011-c9082dbbb38c",
        "cursor": {
          "ref": "3e19b227-c337-4fe4-a7f8-472f6e4b71aa",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "83560575-d911-4408-8d15-3832dd760578"
        },
        "item": {
          "id": "185ca1a0-84e3-46b9-b011-c9082dbbb38c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "34faa068-2e07-41b5-8248-476b0c063bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26dcc32f-47b3-4b94-8848-eb41b4e09abe",
        "cursor": {
          "ref": "405db6a2-9df0-44bf-8716-5083b3a80453",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ebd02c17-a0b7-44cb-8a8c-f32cc85d1035"
        },
        "item": {
          "id": "26dcc32f-47b3-4b94-8848-eb41b4e09abe",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "125cdd0e-678f-453a-9253-929eb19f0a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf4f707-1c42-4ee4-83f8-cd29e6519c84",
        "cursor": {
          "ref": "f0bd9d0d-cad4-4fb9-9acd-e85451997b1b",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "bb9e4e22-4c3b-4c51-90f9-3374271234ac"
        },
        "item": {
          "id": "eaf4f707-1c42-4ee4-83f8-cd29e6519c84",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0bcd3221-55cd-497f-ac73-d25d269b1fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c89b2e7-3bcf-4dc0-81a9-4831d019e386",
        "cursor": {
          "ref": "5b49e599-100b-497e-83e8-a47a4acb86ae",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "70c9c9d8-ef1f-4877-afb3-36113137a529"
        },
        "item": {
          "id": "8c89b2e7-3bcf-4dc0-81a9-4831d019e386",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f090edba-e5ed-4af7-b9f6-88f06d1dcc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba3fb499-47af-4de9-a32d-7c013a96ebea",
        "cursor": {
          "ref": "a70aede0-323b-48e1-8fe1-6b8d2575f02b",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1db149a9-3966-4c6c-a891-4be489daec1b"
        },
        "item": {
          "id": "ba3fb499-47af-4de9-a32d-7c013a96ebea",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "90c47eb7-8c75-420c-9ba9-07b730de0eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0ddcbe-d4aa-496d-9cf0-3bd4d1c306aa",
        "cursor": {
          "ref": "c3e8995b-4766-4309-ba41-47e7c3be8600",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7596782b-0a3b-4d13-a603-06fd9f8769e7"
        },
        "item": {
          "id": "cd0ddcbe-d4aa-496d-9cf0-3bd4d1c306aa",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "561a1ca8-22c4-463a-86d1-c1f52bc6cccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9fe74f1-c30e-447b-9aeb-c5544bf261c4",
        "cursor": {
          "ref": "291a4d69-c657-4bca-a5c6-3c417132ae39",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "87d461d1-4a11-4c0a-8cb8-8247ded0ef1e"
        },
        "item": {
          "id": "e9fe74f1-c30e-447b-9aeb-c5544bf261c4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "20c71105-af81-48a3-b42c-87f8d6feb8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb50c4f-2161-4d75-9bed-5d6e93b2c012",
        "cursor": {
          "ref": "06309a99-7e25-43dd-a2ea-27cefc7c56bc",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1d8f4770-fafa-47f2-939a-25d4b0938565"
        },
        "item": {
          "id": "3cb50c4f-2161-4d75-9bed-5d6e93b2c012",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "cd5b0aa4-87c6-4d0e-afe1-999906302ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d58ef8-6726-414d-aeb4-3d74b6867978",
        "cursor": {
          "ref": "0ed8de9e-a1ee-4ccd-afeb-525692b1e589",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d2c45c02-fd7a-434b-b50f-839c309f6686"
        },
        "item": {
          "id": "80d58ef8-6726-414d-aeb4-3d74b6867978",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3c9539f2-ca1c-41da-ba4d-74f222462705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c0a4f7-7030-4998-8fa2-a46eb09d26f6",
        "cursor": {
          "ref": "56d0edaa-4383-465f-b93e-7be65c3d2b4f",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c1eb212e-56a6-4084-98fd-5fea2f90d142"
        },
        "item": {
          "id": "86c0a4f7-7030-4998-8fa2-a46eb09d26f6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "cdebf7b8-30aa-47d6-ab5e-7d683c93f18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1dfb52c-733c-41db-84d0-9bb245513418",
        "cursor": {
          "ref": "7458991b-1f4c-4c85-87fd-338c22d89f4b",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "eaad8f6c-9468-412e-8586-323afb23cb44"
        },
        "item": {
          "id": "f1dfb52c-733c-41db-84d0-9bb245513418",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0d9e83c3-7e99-4211-9f6e-bdf1c3b225a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f2a0d6-d91b-4d48-9aba-acba283ae64a",
        "cursor": {
          "ref": "a004e5b2-96a8-4874-bab9-ab311af42fa9",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "efeb27f9-7ca4-4d68-8b93-11b649c15f58"
        },
        "item": {
          "id": "17f2a0d6-d91b-4d48-9aba-acba283ae64a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3502dcd5-410e-42a9-85a8-76a15631516a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32db0a18-27dc-457a-8488-eccafa7e350e",
        "cursor": {
          "ref": "d789aa76-2a4d-4f6d-b943-614737e89c6c",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1390a1b7-d202-42c2-97f5-3439df87db9e"
        },
        "item": {
          "id": "32db0a18-27dc-457a-8488-eccafa7e350e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d24831d2-9e86-496e-8d76-02f9dff2e10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194fbd40-a080-4fee-ad6f-44ee5fe6425e",
        "cursor": {
          "ref": "ccddc7a2-9479-4e18-b7b8-7cb4ed28ba79",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0c327341-7745-444e-90fa-07944db0eea3"
        },
        "item": {
          "id": "194fbd40-a080-4fee-ad6f-44ee5fe6425e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2a7e0aef-62d4-4147-9b13-8b0f5b261faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366a1fe0-0bb1-4600-b427-931c7f6f9896",
        "cursor": {
          "ref": "f90455ce-f3ae-4f13-b0db-aee98d6a1a48",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "243fbbdb-6a17-41b3-ae87-f4d8eb3f7759"
        },
        "item": {
          "id": "366a1fe0-0bb1-4600-b427-931c7f6f9896",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8c7a8a6e-46d9-48d5-b0ed-cb29ecfdaebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae54dd76-11c1-48cc-be6c-183fbfd61be7",
        "cursor": {
          "ref": "a1edc00b-f4ec-4da4-87eb-d87e63d79d67",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ec8e21e0-05ab-4537-abaa-0a957843b5aa"
        },
        "item": {
          "id": "ae54dd76-11c1-48cc-be6c-183fbfd61be7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9d2ea7e6-c5f9-44ad-b19b-c96640f82ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5c73b7-7b72-48f4-b924-abfded2c896c",
        "cursor": {
          "ref": "1c7a5184-52fc-4153-b46b-3c0d53d0c020",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a01daeab-8e02-44cb-bb49-91695824bea6"
        },
        "item": {
          "id": "0f5c73b7-7b72-48f4-b924-abfded2c896c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "06a861fa-488b-424b-b56e-3c4c5742a591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc5cc99-afdf-40a3-adab-30aff4ee1326",
        "cursor": {
          "ref": "93137721-f7ef-467d-911f-647df26ba196",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "80bef257-5024-452e-9c15-059d79529d2f"
        },
        "item": {
          "id": "1fc5cc99-afdf-40a3-adab-30aff4ee1326",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "383f8a62-aeab-4b49-8753-e70df57fa5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5b2c61-c2a3-4b0a-9612-636d9eedfd9f",
        "cursor": {
          "ref": "aa30c8ea-3c35-416d-b52e-f326ddfc7232",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "19f8afbd-338f-43e8-ab27-e94d8ab27164"
        },
        "item": {
          "id": "9c5b2c61-c2a3-4b0a-9612-636d9eedfd9f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "380999e2-ca9d-4c47-a174-da9353de6d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b396d2e-06fd-4117-9861-d416e22ae5b1",
        "cursor": {
          "ref": "b3f612ee-92ec-4912-abea-668be4677deb",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "898210a2-0a65-43d4-a42a-2c0ecff984fb"
        },
        "item": {
          "id": "3b396d2e-06fd-4117-9861-d416e22ae5b1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "18c6728c-47cc-4cad-9cbb-45d78e2c4707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690b4b57-835e-45ce-99a6-2667bebb495b",
        "cursor": {
          "ref": "b9f0b623-254d-41dc-b113-73389a2900bc",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "cd018a72-f1e2-4696-9ff7-706c1c95b712"
        },
        "item": {
          "id": "690b4b57-835e-45ce-99a6-2667bebb495b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "22af8d49-f19e-493e-93ee-c735d09f0515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b0f6b8-dc47-4b7c-914d-e54150937256",
        "cursor": {
          "ref": "0268ba3c-65f8-4ffe-a19a-c8c7b45b6bcc",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e837783c-c1ef-471d-a568-4238f79ceb7d"
        },
        "item": {
          "id": "e0b0f6b8-dc47-4b7c-914d-e54150937256",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b03202de-8eb1-4482-80f4-678659c61c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb0240f-bf5c-42ae-8c07-d3d991cf6a1c",
        "cursor": {
          "ref": "4faf3b9a-06fd-4327-8785-3480dd8361fe",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e37cee52-4504-40be-86a5-059be3e9daf4"
        },
        "item": {
          "id": "afb0240f-bf5c-42ae-8c07-d3d991cf6a1c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "bc6468be-6e55-4539-9846-b9c646a3147b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f0c68d-0dcd-42c9-b4af-fc976abd580d",
        "cursor": {
          "ref": "6f4317d1-19c8-4ac7-8156-33e7d3bf73b0",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6f6ae667-3a8c-460a-812c-e9b2ffe3967f"
        },
        "item": {
          "id": "35f0c68d-0dcd-42c9-b4af-fc976abd580d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "339f993b-38d2-43e8-9132-b54c81265d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0ffb4e-6aa8-47be-8b47-3c17a9ee2e0a",
        "cursor": {
          "ref": "f76f941c-d003-41c6-a483-1d242ed0b00a",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7130cfac-7348-4ff0-9a9d-5069833a57a1"
        },
        "item": {
          "id": "3f0ffb4e-6aa8-47be-8b47-3c17a9ee2e0a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a2305a19-a6d2-45a2-9f57-5c44b1e29b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e4d736-9b3a-4e8e-94bd-127572e03571",
        "cursor": {
          "ref": "816c52c4-3cae-40a8-a473-0fb563d56652",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "766f38be-b5e2-4fe5-b6ef-9414bb638b01"
        },
        "item": {
          "id": "62e4d736-9b3a-4e8e-94bd-127572e03571",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "db624c6e-ca04-4a84-9d01-3ae2f2cd25f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96731d1-f685-4568-92b3-2ab29e810d13",
        "cursor": {
          "ref": "1243a6a6-4c78-450a-9a06-2f689e585509",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "92bbf5c5-c3b2-4b70-93fb-0f069dffd2bf"
        },
        "item": {
          "id": "c96731d1-f685-4568-92b3-2ab29e810d13",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9c2d9711-ca0b-482c-a0d1-9e4171cdc49c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8c408a-ef44-408a-ac2b-9c091f0639c1",
        "cursor": {
          "ref": "63e0aa2d-d134-487d-8950-732a55e6e562",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "437b1338-1147-42b9-81af-d63aaf4c0021"
        },
        "item": {
          "id": "ff8c408a-ef44-408a-ac2b-9c091f0639c1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0461657d-9090-4ae3-9c7f-815c82c7dc46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4f8d43-1b46-42f0-bc76-9c234884d961",
        "cursor": {
          "ref": "2567808e-6c09-46dc-9504-8c848591b9ee",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2c415a82-4e80-48bc-b201-151c12c32cce"
        },
        "item": {
          "id": "1a4f8d43-1b46-42f0-bc76-9c234884d961",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "817f3936-8943-4f9c-9667-198c3536efd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601b4ed0-8ceb-4ed4-9474-48251d730519",
        "cursor": {
          "ref": "d343ac3b-ee55-42a0-9d66-b816b9006092",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1eb590c8-f36f-4f6b-b7f0-e83191a517ed"
        },
        "item": {
          "id": "601b4ed0-8ceb-4ed4-9474-48251d730519",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1272d3aa-7e3b-4791-a151-551396a56bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605b45f5-9da6-40d6-89e8-fe6a5a14003c",
        "cursor": {
          "ref": "6085f78b-792a-4b06-92f3-b6365b8816e5",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "30fc2819-37ca-4f8b-87db-a39a6ba31c60"
        },
        "item": {
          "id": "605b45f5-9da6-40d6-89e8-fe6a5a14003c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "11398fad-97d9-499e-afaa-d369141a60d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fa617c-a27d-482f-b51c-1e1830a48489",
        "cursor": {
          "ref": "e2cc8b4a-7363-4445-af8f-a11e7af6bc9f",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "cf8f8ca7-e861-4f6e-9efa-26d6b6d8846f"
        },
        "item": {
          "id": "f2fa617c-a27d-482f-b51c-1e1830a48489",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "802fd2a1-a323-4c6c-a6f7-4af7e1f88c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10933ef2-e29d-48b5-8728-2265b17c7f32",
        "cursor": {
          "ref": "c4ff4567-7848-4382-beeb-86c6e83ee977",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "bb05ae7a-b186-4ec1-86f8-e289d4b39551"
        },
        "item": {
          "id": "10933ef2-e29d-48b5-8728-2265b17c7f32",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ade818b5-e4d5-44ba-b68c-f16145289b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c690e4bb-f18d-4bd9-aa83-47039fa159b0",
        "cursor": {
          "ref": "dc55c9db-e26b-42f2-88ba-39275eed196c",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2ed2f741-06c0-4a6c-ab8e-d490cccce00c"
        },
        "item": {
          "id": "c690e4bb-f18d-4bd9-aa83-47039fa159b0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "10ad1fbc-da4c-40d5-b80b-57410ce38c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae61f6b6-ae26-440a-bb4b-50a24f89f077",
        "cursor": {
          "ref": "8cc19913-f37c-4d41-8645-f78c31f4f7a4",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d10b3581-7cf8-4692-bddc-1a03d12fee48"
        },
        "item": {
          "id": "ae61f6b6-ae26-440a-bb4b-50a24f89f077",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "53d2ad26-c1f3-4cc7-b8b0-f13ae295ccf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ca87b2-36d9-47cb-9647-efc6fb5bf434",
        "cursor": {
          "ref": "174feb22-ad83-47eb-aa76-f44c791b1778",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3f400618-4346-45f0-a3c1-77417f342330"
        },
        "item": {
          "id": "07ca87b2-36d9-47cb-9647-efc6fb5bf434",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f8b4261d-22f7-40e4-a864-3ab86e36fb57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067f5d39-508b-40c6-8546-9045a1191a33",
        "cursor": {
          "ref": "6a840b7a-2557-45d7-a45b-478976bc1f3e",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2a067515-6396-4e1f-9519-ff2eb12464c3"
        },
        "item": {
          "id": "067f5d39-508b-40c6-8546-9045a1191a33",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "747af86c-d960-4355-939f-c7bd875a8960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2133782-1229-43cc-959e-5ba9522f58c1",
        "cursor": {
          "ref": "3f8dd6ce-849d-483d-a049-f85087b201dd",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5c2185c8-4324-43bf-82f7-dda770772d7d"
        },
        "item": {
          "id": "b2133782-1229-43cc-959e-5ba9522f58c1",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "91c2d1c2-bd64-497f-80ac-84b7a4202f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab46132d-5ae2-4cee-8e06-e137729c2524",
        "cursor": {
          "ref": "a7269ca5-1634-4e76-a82c-47bf9ccf6f4e",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "83c4683f-4c8d-490f-afdc-76d6f3d85585"
        },
        "item": {
          "id": "ab46132d-5ae2-4cee-8e06-e137729c2524",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ca540ea3-bc85-4f7e-9b27-4996b226507a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ccf244-d6f5-438e-a489-a2e0159fdbcc",
        "cursor": {
          "ref": "bec946e4-9418-4464-b9c8-e8304976ba08",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "089d2e3a-d304-47ed-b60c-963bb6a44232"
        },
        "item": {
          "id": "57ccf244-d6f5-438e-a489-a2e0159fdbcc",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "cae85001-6fac-4bd3-9f73-4e10d5e5914d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca000c8-cd51-4918-9619-c43ffccef9c5",
        "cursor": {
          "ref": "47800740-3281-4507-a457-173392dc351a",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "836898c2-e0c1-4170-9c29-ad6a7b46dd04"
        },
        "item": {
          "id": "2ca000c8-cd51-4918-9619-c43ffccef9c5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d6701851-2323-4829-8df7-5e2c9afb47be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3283621b-a49c-488d-b777-63a809498e04",
        "cursor": {
          "ref": "6d05b35a-e2df-40cf-b4d4-3b10578cd40c",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4be90708-81ab-44a6-85a8-94ec58238f8a"
        },
        "item": {
          "id": "3283621b-a49c-488d-b777-63a809498e04",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "101dff4c-4528-4810-b793-77a737988c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac5846d-0d45-4eba-98ea-fcfa3b669576",
        "cursor": {
          "ref": "76728570-b708-4c6b-99fb-5fbf02977a0f",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "754cf281-3dbe-4c27-8c0a-2147139e454d"
        },
        "item": {
          "id": "2ac5846d-0d45-4eba-98ea-fcfa3b669576",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a400f025-8d9b-4303-b653-3d98d7b339a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f72caf-7b49-4d31-8338-924a7a078795",
        "cursor": {
          "ref": "f5b83d12-652e-41cd-a669-c444e5d37da9",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "95f01466-1d3d-4c22-9b1e-7f2d93cf4687"
        },
        "item": {
          "id": "70f72caf-7b49-4d31-8338-924a7a078795",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "45e1d120-7e28-46b5-bc1e-b9c6f5a8c291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97483c3-a64c-4e30-9d80-a7b67be27ebe",
        "cursor": {
          "ref": "3830b1c0-7774-45cc-816e-b2f5e50b1d78",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e2548cd3-3103-43cb-ac59-e5d218918b06"
        },
        "item": {
          "id": "f97483c3-a64c-4e30-9d80-a7b67be27ebe",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "31b824ef-1def-467c-8cef-a37c565f79dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30388632-5ce7-41ed-816a-fc7447460558",
        "cursor": {
          "ref": "35a95de3-2ec0-456a-aaf4-ae3d64361535",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2760168f-9c1b-478a-9d4e-3764bc417835"
        },
        "item": {
          "id": "30388632-5ce7-41ed-816a-fc7447460558",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1efb7085-dc83-47c3-b7c3-db20a1f86d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcec204c-ca6f-4c96-b1c8-53fcd10aac3b",
        "cursor": {
          "ref": "935fae84-e72a-4375-8540-f9f47688a1ae",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b579cc70-7822-4352-8392-629395121ccc"
        },
        "item": {
          "id": "dcec204c-ca6f-4c96-b1c8-53fcd10aac3b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4f53135a-3563-4eaa-b450-14fb6e0088b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c341c277-d33b-4ff8-9058-1a1c50cc2876",
        "cursor": {
          "ref": "e5b44c75-81a6-4282-9cde-874b31086c82",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c709afc8-fc90-4c49-96b3-d34bb76868b7"
        },
        "item": {
          "id": "c341c277-d33b-4ff8-9058-1a1c50cc2876",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "de77951b-d030-4ce1-802f-76022e86a811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf5b418-45b8-4316-b0f8-1884624c8251",
        "cursor": {
          "ref": "a419576b-d238-4921-8481-0191303c36e1",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3f530ef4-4304-4ba7-b959-332d976c78df"
        },
        "item": {
          "id": "edf5b418-45b8-4316-b0f8-1884624c8251",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c1ff27ad-4863-4307-9aa5-184cf9916ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b114f22c-d17c-45c0-947e-3723ba7ff763",
        "cursor": {
          "ref": "c2e65ff4-4604-4d29-bf8b-9984e0ae3206",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d34f5a0e-c758-48b5-a3f2-8fb70b502da9"
        },
        "item": {
          "id": "b114f22c-d17c-45c0-947e-3723ba7ff763",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9a26b74f-88cf-444c-aa9e-fc9ac02a3e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478c7678-2cb4-4338-abca-0ade24a60d74",
        "cursor": {
          "ref": "92f1894e-5e14-4f83-9139-871acbf2c914",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "11951c2a-a8cd-429d-8e7a-d471ccf6e285"
        },
        "item": {
          "id": "478c7678-2cb4-4338-abca-0ade24a60d74",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b669b5cd-f258-431f-acf5-88486052503f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92fe93b4-b7b3-4735-bea1-26279f451553",
        "cursor": {
          "ref": "1abddca1-f42c-4e16-979f-ad20844c86bc",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e23e71ad-ffeb-46ba-8978-055e36df8403"
        },
        "item": {
          "id": "92fe93b4-b7b3-4735-bea1-26279f451553",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "07be3e65-6d40-466f-8be5-09c7cdd57c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99f56d8-7867-43b3-a098-8dfb21fd7f0f",
        "cursor": {
          "ref": "b780e55a-ef3e-4eb2-a42c-836c4fe50b79",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "572153a8-9aea-4dec-bff7-6d01b60885ac"
        },
        "item": {
          "id": "e99f56d8-7867-43b3-a098-8dfb21fd7f0f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "aa9957ee-1a15-4500-973b-7c0802034891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b398e0c2-c73c-4785-b899-e1381992f638",
        "cursor": {
          "ref": "ff7c25c0-85d1-4c8f-8931-76ba82415478",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "af04d0d5-4d75-4a05-9cfd-75e0199fdaa3"
        },
        "item": {
          "id": "b398e0c2-c73c-4785-b899-e1381992f638",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b42f2c40-f77f-4862-a543-a3bb5281dd06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7754a6b6-c21b-4761-8e1a-0812c3b9afd4",
        "cursor": {
          "ref": "0049432e-f320-4d61-b154-72f6ca2d3641",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2d9abb19-aa45-4063-9184-73b9bf492df2"
        },
        "item": {
          "id": "7754a6b6-c21b-4761-8e1a-0812c3b9afd4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3f50d19d-c103-47ce-ba39-2bb7389f7f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f33df0-d7a3-46ee-bd46-842681c6bafd",
        "cursor": {
          "ref": "8eca3cf2-42d1-4a46-8f95-2f839f9910d9",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3b3e3f34-e312-46b3-afda-1c708a2c8b92"
        },
        "item": {
          "id": "40f33df0-d7a3-46ee-bd46-842681c6bafd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f05c17b7-c530-41a7-998b-412499471312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46427af0-a551-402a-bca2-724093fce3a8",
        "cursor": {
          "ref": "398de29f-10d8-4436-9e37-086d2668b41d",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f66bd8ae-f988-49a9-b52b-6e10156f50be"
        },
        "item": {
          "id": "46427af0-a551-402a-bca2-724093fce3a8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a4c8539b-6cac-476c-8ad7-3eab8ad47a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d18506f-e4d2-4f92-b3f1-975173abf415",
        "cursor": {
          "ref": "f0fd65eb-48cd-4518-92cc-1c0c76a47a2f",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0aab93bb-a3e9-482b-982d-dd6d93c610f2"
        },
        "item": {
          "id": "4d18506f-e4d2-4f92-b3f1-975173abf415",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b01614df-2e67-4dec-997e-3d4828d100c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de43fd1f-9cc6-4512-9195-3b3f64a4c7ba",
        "cursor": {
          "ref": "86f4f554-3e9c-4533-a282-e91676c0bf1b",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a3e9b926-38c2-472d-ad08-1f997142f543"
        },
        "item": {
          "id": "de43fd1f-9cc6-4512-9195-3b3f64a4c7ba",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3c846765-52dc-4066-8e5c-05b83feb6ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b9e8af-55e4-4b8f-a1e2-a80fc10d71db",
        "cursor": {
          "ref": "f7cdbb40-881c-4fab-9511-0e0d8cb979ab",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f3bb59a2-ca19-43f1-bceb-780030ee118b"
        },
        "item": {
          "id": "d6b9e8af-55e4-4b8f-a1e2-a80fc10d71db",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "62505138-8122-40e0-9c7c-390a501e6eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a6fe91-048e-4c7e-8fb3-ac556e56677e",
        "cursor": {
          "ref": "30ed8444-708c-4711-a4ca-2905e394166d",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2b68fbb3-f709-4378-9996-51467a845511"
        },
        "item": {
          "id": "49a6fe91-048e-4c7e-8fb3-ac556e56677e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3843e8a3-3925-4996-9d3c-66cd42417c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc93ca5-b724-4745-af42-f045716a8a75",
        "cursor": {
          "ref": "c9447270-ab7c-44d1-883d-d56e615f591f",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b712a00f-3f16-4393-b492-5051856eb86e"
        },
        "item": {
          "id": "9dc93ca5-b724-4745-af42-f045716a8a75",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5e67a077-f604-4a12-a0bd-f8d9d6238891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f09fa3-df04-4a77-a984-d11d1b4084bb",
        "cursor": {
          "ref": "e9ce637b-bdf0-4e79-a71b-3c541653cd2d",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5e6b6c21-2470-49ec-92c0-6c2732887e3d"
        },
        "item": {
          "id": "97f09fa3-df04-4a77-a984-d11d1b4084bb",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "773f983b-ba6d-4d0a-a53b-52371827aae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095458f7-64dd-471f-85dd-e05c83577e0e",
        "cursor": {
          "ref": "777b9500-aeef-4717-9427-e5a97c3ea382",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1f4fce3f-76e1-4ff2-94bf-81937b03af23"
        },
        "item": {
          "id": "095458f7-64dd-471f-85dd-e05c83577e0e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7fc1ea38-3189-4b40-a971-30cae78a27ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9acaab2-61a6-4064-8cbb-ccfc6ee50c6c",
        "cursor": {
          "ref": "f367b5b1-7a09-42ac-ab7d-84de3953d824",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ced7818c-2348-4ff0-9e7b-d19217599838"
        },
        "item": {
          "id": "b9acaab2-61a6-4064-8cbb-ccfc6ee50c6c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "15e90645-4dd2-4bba-aad6-16bbe8cc241f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f522ee-ab6f-475a-913d-eec7264f8695",
        "cursor": {
          "ref": "65989ef5-5200-46aa-aad2-82a23b8b1d81",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5902714f-34ab-451f-b7f7-dab6176fcebd"
        },
        "item": {
          "id": "76f522ee-ab6f-475a-913d-eec7264f8695",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "af880929-0b43-4a8d-995e-da4dc18a13a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232bf8a3-fe6f-4fdd-8760-7af3f35b0eb2",
        "cursor": {
          "ref": "5fbc420a-d557-462b-bf71-5b168bd1382e",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9cd90958-0e1f-471d-ac66-b2b6d0d74525"
        },
        "item": {
          "id": "232bf8a3-fe6f-4fdd-8760-7af3f35b0eb2",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f6f46bc4-b011-4fb2-80b2-5ed3010d2d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd7a99c-c23b-442c-9a03-e09d0e7fc3fc",
        "cursor": {
          "ref": "095c2051-93b5-4397-baaa-90067cb5c5d6",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "abc3e089-9997-4d02-bec7-91d792761ae1"
        },
        "item": {
          "id": "3cd7a99c-c23b-442c-9a03-e09d0e7fc3fc",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "54fa6e16-200d-4c76-9044-aa6c5cc36dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f505ea5-d87a-4901-bf5a-1212fede66d5",
        "cursor": {
          "ref": "379791c9-de32-4937-9e34-d8537e1e78b0",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "551b244b-0fd6-4db4-b955-ca6862329f54"
        },
        "item": {
          "id": "1f505ea5-d87a-4901-bf5a-1212fede66d5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ddd952a6-bffa-4739-9258-792a074d0856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b597643f-c1ad-45d7-a71e-8bc630bc36f0",
        "cursor": {
          "ref": "7162b4c6-326d-4140-996a-60ff3adf3230",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9b514101-6b61-45e3-a930-0a3a43e95f4b"
        },
        "item": {
          "id": "b597643f-c1ad-45d7-a71e-8bc630bc36f0",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f8ef862b-8fc6-41e3-8119-158778c0c12c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6892122-4e1c-489e-9d96-72cce747734f",
        "cursor": {
          "ref": "9eeee012-802e-493d-86c7-fe463602adb6",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c3a595e4-97b3-47c3-9eaf-8d7063bbb68d"
        },
        "item": {
          "id": "e6892122-4e1c-489e-9d96-72cce747734f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4beba281-9a03-4288-8d95-ece39216137c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ca57a9-53d0-4c05-97fe-7ac2d39585ab",
        "cursor": {
          "ref": "cca35a8e-52cc-42b4-be9f-b84fff002d73",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8bebb0ac-0e8b-4604-8ad2-ded1228bb934"
        },
        "item": {
          "id": "60ca57a9-53d0-4c05-97fe-7ac2d39585ab",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4c82ddd5-878a-4c2a-86c3-bc9275ff6080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7f86f6-03f9-4a75-8069-d157508b9d51",
        "cursor": {
          "ref": "d29179a0-8aea-4ffe-96f8-e61914410dc0",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b5fc2fb4-b934-47b5-8c0b-ca8b8012c446"
        },
        "item": {
          "id": "bb7f86f6-03f9-4a75-8069-d157508b9d51",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8b701aec-a467-431b-b96b-9b90c36e855c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41ef8cf-9ca3-4a38-bdeb-dce751943b30",
        "cursor": {
          "ref": "f59bdc6b-a0ab-465b-b140-b517652234d6",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "051b90b4-872e-494d-9559-129fb7e25c27"
        },
        "item": {
          "id": "e41ef8cf-9ca3-4a38-bdeb-dce751943b30",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0da13cb2-86ef-46d0-9f23-1bdfdcb2b5b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ac1988-58e0-4108-8af6-9a099020bed7",
        "cursor": {
          "ref": "d2dee21e-d774-4e2a-a04e-4ab530be4a1a",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3b44a6d3-20d7-4410-9c79-8ed8f0314cf7"
        },
        "item": {
          "id": "e0ac1988-58e0-4108-8af6-9a099020bed7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9e8d442c-69b2-4966-9aa6-b5eb7b8a4fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a07177e-1805-4c3f-9375-858a65accc1f",
        "cursor": {
          "ref": "fc45fa37-6565-4aec-9289-2b7875b571cc",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "be8d7e0b-2b39-4b8f-b3de-c78584ec2a70"
        },
        "item": {
          "id": "5a07177e-1805-4c3f-9375-858a65accc1f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "cb5180d6-8ea1-409e-afc5-3e2481c41bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fa1099-8857-484e-8405-08fb1f2863d0",
        "cursor": {
          "ref": "266b22f0-a869-489f-8b30-85497e41bfe3",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c88362ce-a278-405b-8e34-4764707ec85f"
        },
        "item": {
          "id": "42fa1099-8857-484e-8405-08fb1f2863d0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "cc81424a-1a6d-4cad-9139-3799effe58f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2a5aea-3d5d-4ab5-b574-1e7243f2f6dd",
        "cursor": {
          "ref": "22feccbb-6ea0-4a79-8d18-fa8434513fc1",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ec7a5b64-ae53-47cc-913a-d73be363e330"
        },
        "item": {
          "id": "3f2a5aea-3d5d-4ab5-b574-1e7243f2f6dd",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8d6880ad-78a9-4780-a474-9e743bcd2cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80abf31-7fb5-4c62-9962-bf8c8e576c87",
        "cursor": {
          "ref": "231dbef0-d342-40a9-9e57-5c31779f315c",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a7e5c139-7b8e-4e71-b9a3-450ce3d23da7"
        },
        "item": {
          "id": "b80abf31-7fb5-4c62-9962-bf8c8e576c87",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "277045a6-8fe3-4376-a1d7-32c83bc3c27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba2f201-2d09-4fdb-8dbf-ead0852eb4bf",
        "cursor": {
          "ref": "da3f93e2-a610-483a-a5b2-784744c66d90",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d5d2efe5-7dbd-4d85-bc5e-a572acd12d0d"
        },
        "item": {
          "id": "1ba2f201-2d09-4fdb-8dbf-ead0852eb4bf",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0a9e5ef5-d345-4912-95e4-8aa07cfe5311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ba19ce-6cf7-4fbb-8922-97f87ce60eba",
        "cursor": {
          "ref": "8007ccff-9fba-4a3d-9144-eecd31584732",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "df536e1e-252a-4742-a519-712f067964ca"
        },
        "item": {
          "id": "f4ba19ce-6cf7-4fbb-8922-97f87ce60eba",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0a3de71b-9152-44fb-af54-39d3d271c6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753b7dd7-72d8-488f-b54c-443853079be6",
        "cursor": {
          "ref": "00ad6026-faae-4926-a3c5-62de9da27f57",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b726f89b-1aab-4f41-8cc7-31a7dbf6c624"
        },
        "item": {
          "id": "753b7dd7-72d8-488f-b54c-443853079be6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "cf5d05ef-3096-4818-b280-8aee904fbd29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22599d2c-e701-4834-bbe6-25fc8b1a2e1a",
        "cursor": {
          "ref": "da9aac7b-7381-492a-9bef-d2cc1a93dc82",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "395c233a-39cc-4831-bd9b-05e00eae00ff"
        },
        "item": {
          "id": "22599d2c-e701-4834-bbe6-25fc8b1a2e1a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "27fb752d-fb17-4f69-821f-29ecc36b901a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60490b7e-5793-4826-b624-4f0a776996dd",
        "cursor": {
          "ref": "431cfebd-7819-4a77-8575-c150219dd540",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d7528713-710b-4102-b468-8dc42ec8b385"
        },
        "item": {
          "id": "60490b7e-5793-4826-b624-4f0a776996dd",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "bb151617-b8b7-41ee-bd06-71125a65ee9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98da43c6-4e89-493d-a5e6-0fb4fc98beac",
        "cursor": {
          "ref": "0359bc3c-ccf6-4983-99fa-2d24a4112198",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "38f20df0-4fdf-43b0-82c2-e1854c5e2118"
        },
        "item": {
          "id": "98da43c6-4e89-493d-a5e6-0fb4fc98beac",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "dbea9823-9b52-48cd-9f8e-e433662e0acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c8fcc9-c6ed-464d-b568-96db79a9083c",
        "cursor": {
          "ref": "3b269658-987c-4273-89c8-e7e9d990cea8",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6716863a-2bc8-4c18-a0af-e9f76e9a10e5"
        },
        "item": {
          "id": "38c8fcc9-c6ed-464d-b568-96db79a9083c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9aa2bc38-f4f1-4a04-a5b8-b4db925018a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a80431-aec5-43a3-be46-d738eeab5aff",
        "cursor": {
          "ref": "487fc11c-0c59-4ab5-9107-9cecbf70fee4",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b495be8d-6f08-4e46-bbf4-f66e8c79d940"
        },
        "item": {
          "id": "52a80431-aec5-43a3-be46-d738eeab5aff",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ee283a2e-df94-49bf-827d-efb9fde7ec4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1cba630-2184-4837-82cf-e192bb1c838f",
        "cursor": {
          "ref": "237c54fd-a988-44e6-b57b-297e445ca40b",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "edb0ad7e-06ec-48da-8b62-b6738e859d3a"
        },
        "item": {
          "id": "d1cba630-2184-4837-82cf-e192bb1c838f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0e63ac0d-a668-463f-9164-2de6fc2f7f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a45f6c-db4d-4d98-93b2-2e62ec7a8723",
        "cursor": {
          "ref": "c731cb23-8102-4647-82c6-ffe2982024c9",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c789f3d3-9e21-4a4e-b91c-4c06a80e042b"
        },
        "item": {
          "id": "40a45f6c-db4d-4d98-93b2-2e62ec7a8723",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f49b6789-0907-4361-94f4-950fe655f90d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ba5518-8928-48f5-b664-8d36d53fa225",
        "cursor": {
          "ref": "bc8686ae-52e9-4e66-bebf-2acc5743a663",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "bf2ca5d2-4ffb-4b87-b0cc-21c260a9175c"
        },
        "item": {
          "id": "e9ba5518-8928-48f5-b664-8d36d53fa225",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "309d0a81-4daa-489a-8cb1-f8877c88781e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "5d72ae24-77f9-4dab-bf53-66ea173ddb1d",
        "cursor": {
          "ref": "67d2cf7b-e743-40f1-88c5-839eb08acdd2",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d10bcb8d-9b36-49c2-bdcd-1743b4580858"
        },
        "item": {
          "id": "5d72ae24-77f9-4dab-bf53-66ea173ddb1d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "70e723bb-e2df-4859-a579-b35c70b83105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "c7d8c0ac-a439-44de-9110-f804f1c8f46e",
        "cursor": {
          "ref": "c6f0a2fb-17e4-4524-8f8e-952b05e5691b",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "eedb56cb-1e92-4927-bf58-523c3f220356"
        },
        "item": {
          "id": "c7d8c0ac-a439-44de-9110-f804f1c8f46e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0e68445d-fc0e-4aa7-9d05-2e0a514595b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "48b19389-bca2-4332-9b96-c5a3e2b58567",
        "cursor": {
          "ref": "546b6d93-654b-4796-a81d-a6a871addfda",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f9bad12c-b0a7-4e63-a6ec-5a66a698db71"
        },
        "item": {
          "id": "48b19389-bca2-4332-9b96-c5a3e2b58567",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "616cc2b3-a7d2-460d-80bd-a4f2f6223947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "f573068e-2fb0-4ccb-8601-96a71b0f43e8",
        "cursor": {
          "ref": "13c3cd26-b81f-4064-92fb-5c59e4724f27",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0e36e416-ecff-4be1-ab71-37992f60e072"
        },
        "item": {
          "id": "f573068e-2fb0-4ccb-8601-96a71b0f43e8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3d6cf22f-f5d3-4d1d-96bf-483483202bbf",
          "status": "Created",
          "code": 201,
          "responseTime": 5911,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cfc2dbb-a9cd-4182-b9a3-1679bf678047",
        "cursor": {
          "ref": "f0a34644-ee6e-4940-a1ff-7ff4d43e63ef",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b8a4dbf1-c1ed-4409-a34e-0101cbcbbc25"
        },
        "item": {
          "id": "5cfc2dbb-a9cd-4182-b9a3-1679bf678047",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "cd117a46-85b9-4152-b766-0d50a14459c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "14c4f9ba-96a3-4783-9f2d-96bf7a70499f",
        "cursor": {
          "ref": "8bfd26c8-4baf-4570-86dd-10b1fc339ede",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f68216f6-f33c-4f41-816b-190b5943fb6c"
        },
        "item": {
          "id": "14c4f9ba-96a3-4783-9f2d-96bf7a70499f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "35ae3e63-4ca9-4c04-99c1-61652307266d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "0e48f488-911b-47a6-bd73-dbf7b09d666a",
        "cursor": {
          "ref": "accccaf7-2c9d-47d4-bca7-9038dfc4daf5",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b094eb98-d912-4ee1-8d50-cea953a28f5e"
        },
        "item": {
          "id": "0e48f488-911b-47a6-bd73-dbf7b09d666a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "399aed4c-f21d-4ddd-ab56-16c9dea19c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed684fc-f95e-446e-83b0-1e6ae78733c1",
        "cursor": {
          "ref": "2efd7d4d-5cff-4db6-9f51-e9fc832ef0da",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "58bceddd-7262-49f9-b1c2-def674a6af1a"
        },
        "item": {
          "id": "fed684fc-f95e-446e-83b0-1e6ae78733c1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "95cb3ecb-ebaa-4da4-9163-3f213812acdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5f2baf-270d-40f0-a5cd-3c937c26f7dc",
        "cursor": {
          "ref": "6722099d-2c1d-4dd0-8ace-7b695aacbeee",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "91b1e5da-8d00-4c18-a780-2c07b37888a5"
        },
        "item": {
          "id": "1b5f2baf-270d-40f0-a5cd-3c937c26f7dc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6147052c-0f93-487c-85dc-d29ad2fad4d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c86a055-087a-4e67-9219-ebe17aea224c",
        "cursor": {
          "ref": "17828e30-5d5b-42d5-8acf-c5a56525f7a0",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1fa19538-8eb5-409c-a7f8-a7c3cb371b67"
        },
        "item": {
          "id": "5c86a055-087a-4e67-9219-ebe17aea224c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "976523af-48d2-435f-b849-77e36b20df40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68cd1604-04e9-4f43-b18c-d685865fe1a5",
        "cursor": {
          "ref": "82781d29-26d6-466f-802e-339c66ab62d1",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e7bf82fd-3b73-4bb9-9f05-13bccaf63a60"
        },
        "item": {
          "id": "68cd1604-04e9-4f43-b18c-d685865fe1a5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "15bcc719-9bea-4bcc-83d3-d234f389a029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f93043-cd1c-4ad9-bf7e-5ae5399caa60",
        "cursor": {
          "ref": "e072b02b-4e7f-4872-b528-63b10de785d4",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c78fbba9-5242-495d-9481-5a2fea85ac20"
        },
        "item": {
          "id": "f4f93043-cd1c-4ad9-bf7e-5ae5399caa60",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0bb2182d-c5b2-4caa-8ed5-5d31e770cf84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3c0e04-b54e-474f-afad-11d07081efc0",
        "cursor": {
          "ref": "68b5901a-cc1a-4e5a-8ff6-d07e39321a8a",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3bed4c76-db63-4eb8-845a-c6be3fe15e03"
        },
        "item": {
          "id": "cf3c0e04-b54e-474f-afad-11d07081efc0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7da150a9-2b2d-429b-92b7-98eb05ee9dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4fb51b-bb49-4f95-8d57-9d4d4a60181b",
        "cursor": {
          "ref": "b0593f5f-bc15-43fa-b7b0-21977b26c1f8",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "38689263-3600-4b7d-9e0a-3cfc78fb0af6"
        },
        "item": {
          "id": "ac4fb51b-bb49-4f95-8d57-9d4d4a60181b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6b9a19c5-96fe-48a0-ad23-981bc930b991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366b6513-a6aa-4f6a-9ea3-5791765dc652",
        "cursor": {
          "ref": "219f01c7-948d-4c67-9c3e-5295ae043f0d",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6b4b992d-75cd-4c13-977b-09918e63d8d6"
        },
        "item": {
          "id": "366b6513-a6aa-4f6a-9ea3-5791765dc652",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cb44bc1c-3ad7-4dc7-b043-d9b2b89c8cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14388ab9-e649-4fad-bb77-b6f5028871cf",
        "cursor": {
          "ref": "f3c49d2b-5a59-449e-8659-a706cba6a355",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ce924301-5e86-4975-8971-314d04e46c3c"
        },
        "item": {
          "id": "14388ab9-e649-4fad-bb77-b6f5028871cf",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "dd1c738d-8ed3-4291-bf98-48db0ec2c502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deefcc03-d316-4e99-a8f8-ded224c69396",
        "cursor": {
          "ref": "8462cf3f-7c58-4150-bf5e-39ce158476a3",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8189cdeb-e82c-4fe4-8984-6a0ece722bd6"
        },
        "item": {
          "id": "deefcc03-d316-4e99-a8f8-ded224c69396",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6170b5b3-3221-4525-a7d1-4d37ca863cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ed7f1f-0f72-4752-9ad6-18d24c867fb3",
        "cursor": {
          "ref": "71b1b434-134f-46c4-b7bf-d10dae9e47a7",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "044e42f6-6a73-4652-bc99-46901b569229"
        },
        "item": {
          "id": "20ed7f1f-0f72-4752-9ad6-18d24c867fb3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3bae8341-07c0-4880-92f3-f3b4df361d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77bcac3-faf4-419e-88a2-54e89de33433",
        "cursor": {
          "ref": "ae04f70a-da83-4c8e-b762-6f64b1d10ef2",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d8b598b3-cb70-4640-9a73-3939e8c9ff2f"
        },
        "item": {
          "id": "d77bcac3-faf4-419e-88a2-54e89de33433",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0ceebba4-d2fa-48fb-8a8d-4659c325be14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61cc92e-8b3c-4194-9860-407b0fd562c2",
        "cursor": {
          "ref": "85ea348c-538a-4eed-a24b-513d30d7396b",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ab8259de-ca99-4c6f-9a2d-15110f50d291"
        },
        "item": {
          "id": "f61cc92e-8b3c-4194-9860-407b0fd562c2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1fd47058-87fa-472f-bb64-2edfb7f9d8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80943d4-a413-43a5-8cb5-9946e55b227f",
        "cursor": {
          "ref": "0291b000-8b4f-40f1-bd06-a22300d65b4d",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e6e10e0b-8dbb-4c56-9c4a-76d75515613c"
        },
        "item": {
          "id": "c80943d4-a413-43a5-8cb5-9946e55b227f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fc02e822-dc4c-4575-aff9-e5cc6af7a5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad7f1af-be86-4ed4-869b-14b369dbbaac",
        "cursor": {
          "ref": "83a68cff-953f-4aca-bd3f-5bceed6cb6e3",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "846ced77-8371-4364-a2f4-3ef13e45faf9"
        },
        "item": {
          "id": "6ad7f1af-be86-4ed4-869b-14b369dbbaac",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3cfb3273-9ac7-432c-844a-4c7990836d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa16db6a-15e9-4608-84c6-a7512c37b223",
        "cursor": {
          "ref": "61d00b29-282c-4ed4-a827-415c11ab6e92",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "abda5d4b-bf2d-4fbe-9ce5-c66c4f454e7c"
        },
        "item": {
          "id": "aa16db6a-15e9-4608-84c6-a7512c37b223",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c9fd36c2-635a-4a28-bd48-0b497948d6c0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "a596ce2a-df83-4bbe-8207-a0ece1c7fbd1",
        "cursor": {
          "ref": "071ff671-6e67-428f-a3c1-472a378ba011",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7da1cd5e-a52f-4a23-a989-c0db965ec286"
        },
        "item": {
          "id": "a596ce2a-df83-4bbe-8207-a0ece1c7fbd1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6ff967fd-9b75-4df4-bcfa-5d441fab79eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371f641d-6b78-488a-9d02-3432cd34dde9",
        "cursor": {
          "ref": "24175238-74f0-4037-8600-d6dc5fb4cc0b",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a1f38b7b-8a6d-4522-936e-12e5b4187b7a"
        },
        "item": {
          "id": "371f641d-6b78-488a-9d02-3432cd34dde9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "674a08c3-b0ca-4d11-9f9e-aa4672cebf20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c153b89a-1e13-451d-be31-18fceae6ee7f",
        "cursor": {
          "ref": "42f3775b-7dfe-4fbb-817f-99e5a5e9848f",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1bd8b5bf-3fda-4f8a-9968-374ae126c919"
        },
        "item": {
          "id": "c153b89a-1e13-451d-be31-18fceae6ee7f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "88e79fbc-43b4-4669-8166-da53d7edfef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52415643-1a34-4c52-8b43-71f58491b244",
        "cursor": {
          "ref": "e3317c02-c0ee-4f99-9441-1fdf2145e4bc",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c4c9f228-cb80-411e-9280-fbc19b17ed6a"
        },
        "item": {
          "id": "52415643-1a34-4c52-8b43-71f58491b244",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a8644b3b-c590-4d6a-94d1-c79c2bd100e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043941c9-faac-4fb2-86ef-540ba9858a21",
        "cursor": {
          "ref": "ca10cf5f-fdbc-44d0-a46e-d8164ed768ab",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b4a81456-20c1-4d41-8188-e33b10d51b3d"
        },
        "item": {
          "id": "043941c9-faac-4fb2-86ef-540ba9858a21",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "35a61c9f-4b0a-4d12-931e-b1b2608542a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41b1f78-5baf-4822-907a-9e3de5c601f0",
        "cursor": {
          "ref": "f22ba5ff-c03d-4092-b569-acaf4729cd13",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e33e8e0f-ae87-4e79-92d2-79efc41d7314"
        },
        "item": {
          "id": "f41b1f78-5baf-4822-907a-9e3de5c601f0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ce614bcd-fef6-4d64-b1b4-fb1f49ca7158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff276ed-55de-4229-8376-f50ce60157f7",
        "cursor": {
          "ref": "1d198092-f530-4c10-ab50-7aad4777761e",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1129a800-e0fb-4045-be7e-24e1f3710284"
        },
        "item": {
          "id": "2ff276ed-55de-4229-8376-f50ce60157f7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3f208c51-a04a-4e83-8531-375ed101d235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5aa2cf-5eb9-4867-8166-c43c0c5e4680",
        "cursor": {
          "ref": "2ad5bcf5-2f70-4cd9-b933-124a9f4b6e7f",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4bb772d2-73db-4d73-b441-84a4bdecb742"
        },
        "item": {
          "id": "8e5aa2cf-5eb9-4867-8166-c43c0c5e4680",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "05a60a69-ab51-457f-b64f-31d1d7066df6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 54,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "a3975006-a48f-46cc-9a7a-80cb1c0924ef",
        "cursor": {
          "ref": "92eeb38c-5252-493f-9e78-2ed31439fb1f",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b7d31ea4-3cba-4763-b4c3-454bda14a38f"
        },
        "item": {
          "id": "a3975006-a48f-46cc-9a7a-80cb1c0924ef",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fb20432f-2692-423e-9925-bd47a56a2446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b19f99a-bfb1-407d-92c4-7d950f0ab4c7",
        "cursor": {
          "ref": "2c800a38-19d6-4a37-8f50-6b85fecdd9de",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3c7eb611-2757-419f-921b-3081b8b877a9"
        },
        "item": {
          "id": "2b19f99a-bfb1-407d-92c4-7d950f0ab4c7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e29add77-d503-4a5e-8f8c-73b5d16d52ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d295d892-95a8-48e4-8d41-e5ed6b8932d5",
        "cursor": {
          "ref": "2d7901a9-4409-49e6-a215-8c6d7fa890d3",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3022d449-7dca-40e4-a631-cda61966448f"
        },
        "item": {
          "id": "d295d892-95a8-48e4-8d41-e5ed6b8932d5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3f686df6-fa9d-4d1d-b4e6-bfcbb0a7caaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d107a3-15d9-414a-a199-36c529cdd9d6",
        "cursor": {
          "ref": "1e2670cb-6917-431d-947a-27b97c1215bf",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1381cdb5-2f2c-4c07-a011-979a3c9979d9"
        },
        "item": {
          "id": "72d107a3-15d9-414a-a199-36c529cdd9d6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9520af8c-0ce7-4cf2-9730-3ac36c567732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06d08fe-1294-485c-b65e-62c19bc907b5",
        "cursor": {
          "ref": "fedfa808-a2cf-4977-a200-38d4c2485b84",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6d4937f4-880d-4724-bbbe-742007823720"
        },
        "item": {
          "id": "f06d08fe-1294-485c-b65e-62c19bc907b5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b055df1e-4bea-40b9-acc2-6a0496f41a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb24713-5f70-4c3c-ae82-d9a370b90caf",
        "cursor": {
          "ref": "262ddebb-56db-4b9d-a2c5-cb975ed24ac9",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "fea2fc62-3803-4e9c-b126-6bfd8ae420b9"
        },
        "item": {
          "id": "abb24713-5f70-4c3c-ae82-d9a370b90caf",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c098b28b-ddf2-466f-b727-f67d89ba2335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980295cc-8dff-46d8-aaea-e485c6c82e56",
        "cursor": {
          "ref": "df7e61ee-a3ac-4dc2-8075-e25590c87764",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a13c66e7-2c3c-4501-bf0d-aa7bf36accd6"
        },
        "item": {
          "id": "980295cc-8dff-46d8-aaea-e485c6c82e56",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "746606ff-0260-48fa-b239-bfe78c533054",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "3100bd68-5f64-40db-9ed8-21e5c7c229bd",
        "cursor": {
          "ref": "ac7e2819-4233-4d00-b41e-26490146e5fe",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "adb10fed-9c5a-4c90-a009-66ecfa9eaf5f"
        },
        "item": {
          "id": "3100bd68-5f64-40db-9ed8-21e5c7c229bd",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "83adafa7-031d-4f12-9542-9149564af798",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "0bb11b43-2af4-4d63-b420-14f25409d760",
        "cursor": {
          "ref": "3caef2fe-ad92-48ef-a196-e3a3d1a99901",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b69a6dd7-2801-4539-95fa-5661921bd542"
        },
        "item": {
          "id": "0bb11b43-2af4-4d63-b420-14f25409d760",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b0dd045c-85c6-43d2-930e-e07d1b5cfbec",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "27cd182e-acf8-428c-9cf8-538e8c935313",
        "cursor": {
          "ref": "98672986-cf66-4b9c-ab19-6d9c6f6c78d5",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "20911721-4615-40e1-8479-ff0063842db4"
        },
        "item": {
          "id": "27cd182e-acf8-428c-9cf8-538e8c935313",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6d85c116-0c39-4aa1-9d92-d42eb693c20c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "891f582d-a56c-4f11-a2a7-3e2ca6ace129",
        "cursor": {
          "ref": "d30aa81e-5641-4c87-8bd4-567b8c03d7f7",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "319ce320-1d21-410b-91eb-603346c59414"
        },
        "item": {
          "id": "891f582d-a56c-4f11-a2a7-3e2ca6ace129",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "25bcfd8c-e04d-44a1-bf1a-9a58abaa4011",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "0e20564c-0137-4738-91f5-508e3adcc053",
        "cursor": {
          "ref": "3a65f694-0911-4fda-8acb-4675d4637f7f",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "deb25e22-ef6e-497f-aee3-cc30f86ee99b"
        },
        "item": {
          "id": "0e20564c-0137-4738-91f5-508e3adcc053",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "88385533-e8e3-488b-bfd7-6853ca1ed1bf",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "a5c83b07-b68a-4e10-b4e7-813338218369",
        "cursor": {
          "ref": "d9581654-3f1c-4af4-8c58-977062a7343f",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "af8271dd-376d-4bd4-b67d-9f156d340c19"
        },
        "item": {
          "id": "a5c83b07-b68a-4e10-b4e7-813338218369",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "59c49654-abc4-426c-9c30-28b912bd3b5d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebfdead2-ac0c-4458-847a-53127284233a",
        "cursor": {
          "ref": "ef12a184-2b58-453b-b70d-c301b971e7e2",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "20f7762a-676b-48c2-987e-a3a6531b423a"
        },
        "item": {
          "id": "ebfdead2-ac0c-4458-847a-53127284233a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "790a1f22-4112-4c35-9385-423c98099ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a58a89-e994-4e6b-82df-a14eba61477a",
        "cursor": {
          "ref": "5c102fbe-e762-479f-ab46-29f77d6acc8e",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "94e44751-4749-466c-83f6-3e62a464c761"
        },
        "item": {
          "id": "e2a58a89-e994-4e6b-82df-a14eba61477a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b743b202-5aef-4e59-8b2f-9474f2e2dccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d6ab2e-9f8b-4a73-ac0a-061b318965a1",
        "cursor": {
          "ref": "2f04e4f5-3fc2-457c-8fd2-5bf28f3a3db0",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4957b5f7-8ab8-4349-bd31-2112b2fad57e"
        },
        "item": {
          "id": "09d6ab2e-9f8b-4a73-ac0a-061b318965a1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "12c74142-8956-4dda-a72b-97cc2eb5546e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbc20d7-3d58-41fd-bc47-f097f9782da8",
        "cursor": {
          "ref": "8665eb0e-26a5-4825-a4b5-5e6829ba6472",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a4eae5ac-a22d-4227-a94a-71a18d6ce900"
        },
        "item": {
          "id": "4fbc20d7-3d58-41fd-bc47-f097f9782da8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5a2e17e7-7266-45f2-b8b1-b939e4a83fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2724df51-5db8-42aa-9768-4d0d7f75008f",
        "cursor": {
          "ref": "69c18a83-d212-451f-b62a-804b5b9dee82",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d347dd52-8d7d-4224-a90d-3218fa2c2dfe"
        },
        "item": {
          "id": "2724df51-5db8-42aa-9768-4d0d7f75008f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ec3cc1bd-0f83-44b8-a9f0-93e4bbb9f87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ba2e96-2eb0-4c54-a708-b4aef9f70e73",
        "cursor": {
          "ref": "084c2a83-c2fa-4bb5-b27f-45770f87e50c",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "53cbb074-fc22-4dca-a077-696d1f0627ce"
        },
        "item": {
          "id": "c1ba2e96-2eb0-4c54-a708-b4aef9f70e73",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b1af840d-a5de-460d-b51c-8e2aad32133a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2807410-d46a-4136-aaf8-f780476b47bc",
        "cursor": {
          "ref": "ef2ba72e-721e-440a-82d6-7d7b8fca7f9a",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8877ab4e-5f30-41f6-a4cc-13fddb4d03bc"
        },
        "item": {
          "id": "a2807410-d46a-4136-aaf8-f780476b47bc",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "711f2bc6-0b31-42bf-9718-fbbcb420691f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1fc7803-1cd2-4def-8985-ec8157450b4e",
        "cursor": {
          "ref": "07b2e57b-f82a-47e9-9375-2ba925e072f3",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a8d05af7-4342-43ff-bb48-f84a566a4cb1"
        },
        "item": {
          "id": "b1fc7803-1cd2-4def-8985-ec8157450b4e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f4b63117-2e59-4497-86cd-5ed82f4a58b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70c708a-79f6-4734-9fef-2b29caa459d6",
        "cursor": {
          "ref": "35f36e59-774f-433a-b9fe-a65d15949da4",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "60c27e47-931d-4837-95b8-46d9c86a87ea"
        },
        "item": {
          "id": "c70c708a-79f6-4734-9fef-2b29caa459d6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d94a356b-ecf0-4ef0-91de-ac1a2ab9602d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9af0b4-9fdc-4f2a-8b82-b480d13bc4c0",
        "cursor": {
          "ref": "cb7f29f2-5afe-40aa-b0f7-d6af3e102e87",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "81b771ca-ea69-452e-a06c-23316a5afb30"
        },
        "item": {
          "id": "be9af0b4-9fdc-4f2a-8b82-b480d13bc4c0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "31cd4aa9-46e3-4348-aac9-4b49fbf10625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4274839e-6a85-4ff7-9793-78884d4f253d",
        "cursor": {
          "ref": "f73678e6-9347-422b-83d4-07fd0d38d91d",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0f3ff8b7-f0b5-4956-b4b5-5d815e36738c"
        },
        "item": {
          "id": "4274839e-6a85-4ff7-9793-78884d4f253d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8dc2fb47-a2ea-42a4-ad2c-5228b97e589e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f35e2c2-cadf-4902-af48-807efdf83e79",
        "cursor": {
          "ref": "8e72e1c0-120c-461a-ac97-f3a250a2ba72",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "65683342-7de2-41aa-902c-3580caebfef4"
        },
        "item": {
          "id": "2f35e2c2-cadf-4902-af48-807efdf83e79",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9d8f6dfe-8ac7-47b1-8747-7abf2589b444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "799bd8fd-198c-42d5-9457-061fe3e0db8f",
        "cursor": {
          "ref": "510fcc1d-2504-4eaf-8004-6d746d6d79b7",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6e4ec8ca-9b96-44a7-b1ba-0b46ac80e3da"
        },
        "item": {
          "id": "799bd8fd-198c-42d5-9457-061fe3e0db8f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "02263b86-293f-4b17-9eab-b401629e54d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e8d644-41f8-4534-9a65-12578dab4d6b",
        "cursor": {
          "ref": "1e085dd1-df0e-4582-ac4c-a6d10bb9d484",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "88d122d0-ca37-4f05-83bc-3d9b0c4273dc"
        },
        "item": {
          "id": "e9e8d644-41f8-4534-9a65-12578dab4d6b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2d989f4c-1001-4117-a3aa-84a020cfeda8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98943f3d-445b-484e-92fa-747a5dc18f6f",
        "cursor": {
          "ref": "8e85216b-7b15-412f-9e01-500ef541908b",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c15e1a64-f2e2-4a0b-948e-523672e0c236"
        },
        "item": {
          "id": "98943f3d-445b-484e-92fa-747a5dc18f6f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "49ce7385-f184-4eea-a2e1-e0f9c14ab3fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf88b2c-4f45-4d1a-91d1-7f6f654b338b",
        "cursor": {
          "ref": "6a7155dc-3613-4aff-9a58-fe877d0823f4",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f3807f90-04b5-4098-a7f6-37315077e51d"
        },
        "item": {
          "id": "6cf88b2c-4f45-4d1a-91d1-7f6f654b338b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1fd14171-216e-4820-8d6e-2f981c7ff76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2199eb-02b5-4c3b-ad81-b067b91c1623",
        "cursor": {
          "ref": "d9e3b3d6-f8af-41dc-bc70-5f2a7549faa3",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "76db33a2-c923-4444-98a3-bc4eb2e427f7"
        },
        "item": {
          "id": "3e2199eb-02b5-4c3b-ad81-b067b91c1623",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ac4b168c-d476-48bd-909c-f05dbac1015d",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "9bd7bd40-1934-4e50-bf29-f2d5f35c5eb4",
        "cursor": {
          "ref": "3190219a-ce3a-47f4-9898-d34f41d226e7",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "22e01498-1a34-4c51-951b-4fa06dfb678e"
        },
        "item": {
          "id": "9bd7bd40-1934-4e50-bf29-f2d5f35c5eb4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "eb30b5b9-7f4a-4a8d-ae33-d3a94e0079dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97942823-e83e-43cf-b5ac-a9341ae2635a",
        "cursor": {
          "ref": "ad405b42-5fe7-436f-a951-ef72d2778d84",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0424be69-5189-45fb-95ce-f0cd2105b22f"
        },
        "item": {
          "id": "97942823-e83e-43cf-b5ac-a9341ae2635a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b5b18111-05eb-4c7b-9cb3-8181cdf059a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5e91cb-a2e0-4537-92c4-f6656d43e42e",
        "cursor": {
          "ref": "d52f408b-4729-479a-bf26-6504b5dc4916",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4d1cf1a4-c883-4a09-b163-3ba6b613885a"
        },
        "item": {
          "id": "ad5e91cb-a2e0-4537-92c4-f6656d43e42e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "045ff337-721c-4766-8855-ca651da3cb55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cddfdafb-cbc8-466c-b7fb-d19f099603a3",
        "cursor": {
          "ref": "0a914700-bb78-413c-8890-9af0b9a79d4d",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9c4a9f4e-c6ed-466a-8b13-3b6032017b37"
        },
        "item": {
          "id": "cddfdafb-cbc8-466c-b7fb-d19f099603a3",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1e73946b-ef86-4e69-8ebd-920a390badaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151be41e-97af-4fc9-8e8e-08728a218086",
        "cursor": {
          "ref": "097b9e56-554c-462b-a4df-b829a998e1bb",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "dd808b94-0711-413f-9e48-59c3021eb8ad"
        },
        "item": {
          "id": "151be41e-97af-4fc9-8e8e-08728a218086",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f6b4467f-2497-43bf-92ea-71560acd9e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233328e8-4fcb-47b4-b8a1-77da2cf57801",
        "cursor": {
          "ref": "86fa181a-d8ae-49da-bdde-df6b217d570d",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "462336ec-4c8a-4d5d-9c15-801549590f46"
        },
        "item": {
          "id": "233328e8-4fcb-47b4-b8a1-77da2cf57801",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "182f890c-27b5-42cd-90ea-976f5dcb27c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ef4304-7c9a-4f9c-ae52-6867bbb39178",
        "cursor": {
          "ref": "02aea88d-ec5d-4ad5-9b21-feb7f9ffbdc5",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8fd6bf8e-4860-4442-878e-d2e14a7839e6"
        },
        "item": {
          "id": "96ef4304-7c9a-4f9c-ae52-6867bbb39178",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1a56713f-1beb-40bc-abb4-7fe9474efd38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79d2e9a-da41-4914-9f92-9825fefec83f",
        "cursor": {
          "ref": "179fbfd4-9dba-48b6-a587-a51d093bffda",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "308330f7-9fc9-4038-8bdb-6ae716e56b9c"
        },
        "item": {
          "id": "b79d2e9a-da41-4914-9f92-9825fefec83f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5264870f-4fb3-4648-bc96-c1cc33820153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a222ea2a-07aa-45ff-bcae-8ce5518cc974",
        "cursor": {
          "ref": "1b27ff53-ffe8-4697-9c28-af23068f9c12",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ea23bcf1-55e2-471a-bf73-3bfc55c026a3"
        },
        "item": {
          "id": "a222ea2a-07aa-45ff-bcae-8ce5518cc974",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4efbd121-2742-4f28-b08a-766936edb2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18d1bad-28e3-42de-b7b5-857bfd63e3f6",
        "cursor": {
          "ref": "485fff0e-37aa-450c-a6ce-c18e1b895352",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e61715e7-337a-46e2-86db-6d93364d3367"
        },
        "item": {
          "id": "b18d1bad-28e3-42de-b7b5-857bfd63e3f6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9bfadbe6-7d73-4faa-b8d0-10d89294fb74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc60a66-baf8-452c-be18-1e325eb54391",
        "cursor": {
          "ref": "bbda6926-7360-43af-b364-4fd99667ff22",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d14d4e94-1692-4081-8af4-af7b2667befe"
        },
        "item": {
          "id": "0bc60a66-baf8-452c-be18-1e325eb54391",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "75dfd295-5840-4a94-b77f-1a452db629b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ce4812-0876-47db-bae1-e20a87204f51",
        "cursor": {
          "ref": "e2da2766-8e16-48a9-8935-6fa73beec537",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a859e40c-e64e-4e5c-84e4-0cbfeaedfb22"
        },
        "item": {
          "id": "a4ce4812-0876-47db-bae1-e20a87204f51",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b00e0b62-d967-4f98-8b91-d320560b81f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9c90b4-1427-4f2a-b242-f9d617407c87",
        "cursor": {
          "ref": "113a7cd9-39cc-443d-9a21-686c9a1d4f76",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d2d0d073-edab-43c4-bc32-709d932a022a"
        },
        "item": {
          "id": "cf9c90b4-1427-4f2a-b242-f9d617407c87",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "18762a0a-1f88-4558-92e4-d9e22b56b0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5868f554-e5f5-4190-81fc-1a23c9d6dc55",
        "cursor": {
          "ref": "bc73af2b-2e33-4a8c-9b23-4b9cd57b9f8a",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e4922fd9-9129-464c-9aa2-8c8f06121742"
        },
        "item": {
          "id": "5868f554-e5f5-4190-81fc-1a23c9d6dc55",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "86fb68c0-1756-4028-9fd1-1da6185d9bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474529e5-4bd4-47cd-bed2-cf5503f53975",
        "cursor": {
          "ref": "7703a4f2-c545-4069-a87f-933101f11c7a",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "8287b23a-06a8-4600-85bd-ceccee581269"
        },
        "item": {
          "id": "474529e5-4bd4-47cd-bed2-cf5503f53975",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "316f00a1-7c60-43dd-a585-faf70e37a66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1081018c-2abe-4740-a0a7-3837639f8dbe",
        "cursor": {
          "ref": "24c88dbb-6184-46a8-8cdb-ea5ffddfc388",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "bc9aa469-0584-4a61-ad85-7071362f4764"
        },
        "item": {
          "id": "1081018c-2abe-4740-a0a7-3837639f8dbe",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "915d2562-742b-46f1-a8ae-cec690b910cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccb2c72-5c62-4218-85d7-6837adec5025",
        "cursor": {
          "ref": "7918647e-4a8a-4422-b9b6-707d9531882e",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3e06f9b0-dd8c-4d54-922b-52b798febb3e"
        },
        "item": {
          "id": "bccb2c72-5c62-4218-85d7-6837adec5025",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f814cf80-829a-472f-9b58-ec6effd3057d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25cade11-7215-47b4-b359-38d1edb5d01c",
        "cursor": {
          "ref": "8ac6281a-f19a-4a52-8aea-74514923f649",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "dbac6ec1-1d6d-446a-85fb-33a767f7094a"
        },
        "item": {
          "id": "25cade11-7215-47b4-b359-38d1edb5d01c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c7b5ed88-d61b-41d0-8656-2b04edf33f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96a2d41-d3f4-40f6-b16e-39559d211d46",
        "cursor": {
          "ref": "f8d275b3-8530-4462-9dd2-e2250cebc632",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2d61ef76-590a-4c60-916b-3e1cfd313a20"
        },
        "item": {
          "id": "a96a2d41-d3f4-40f6-b16e-39559d211d46",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c099cab0-9b92-49e7-9358-4c894e1151ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d16cc42-34fe-4414-9322-49590632b3f3",
        "cursor": {
          "ref": "903e4676-26dd-4b99-9bc9-6c92f743487d",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9f9acb0b-6e05-4cd0-a6c1-b666d47b5ee3"
        },
        "item": {
          "id": "0d16cc42-34fe-4414-9322-49590632b3f3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8012556b-a269-4420-8409-5ed1312a002b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81781e6a-5044-46c6-b79d-4e70e5e79deb",
        "cursor": {
          "ref": "0802d72e-d9f5-49f0-9961-1c1bb75358cf",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f870e642-cefd-49d8-b8a2-3c007f811bb5"
        },
        "item": {
          "id": "81781e6a-5044-46c6-b79d-4e70e5e79deb",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "888d2423-b0f8-4f5c-af1b-d9925ab3a7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b983c37-d617-45f9-a3eb-effd836fb40c",
        "cursor": {
          "ref": "5e74ec4f-1db0-435f-a7b3-f9b2ec6cd094",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "916a207b-e8ef-40a6-ab9b-058e39c47446"
        },
        "item": {
          "id": "8b983c37-d617-45f9-a3eb-effd836fb40c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2272fbff-e3e2-425a-9468-dadc835a6c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27ed5de-47e7-4b03-b744-3590181b0d8f",
        "cursor": {
          "ref": "dfd7879e-c597-4bd1-8fe9-fe90e4cbf5e3",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "362445c4-1c5e-44a3-b503-8024165b36b0"
        },
        "item": {
          "id": "b27ed5de-47e7-4b03-b744-3590181b0d8f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5c1c00d2-b297-4782-b3be-ccc2a379823b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4cb73c9-24a2-48aa-abf1-84c00ba4677f",
        "cursor": {
          "ref": "3b37aca3-b5c6-4c67-9ad4-12585796b4ad",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ae1c5e7d-f7aa-48cb-8dc1-85379900ab8b"
        },
        "item": {
          "id": "d4cb73c9-24a2-48aa-abf1-84c00ba4677f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "aee1fbf9-8dc7-4e90-a4be-b48e38050a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e9b176-a327-44e9-afd2-2f13703f7ce0",
        "cursor": {
          "ref": "8e3ed6ad-912f-4d7f-a381-d3275e3b3a07",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "cad8a134-21a0-4914-8b9b-24a13b3d047e"
        },
        "item": {
          "id": "f1e9b176-a327-44e9-afd2-2f13703f7ce0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6f6b956b-5d13-443e-914e-377e84f0a4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132ed0bf-9f14-4f11-a6d8-360553ecf9a3",
        "cursor": {
          "ref": "9fb351ba-7510-4326-a169-8eaad9eee59d",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "73c16955-555d-4509-86c5-a3a9900c377e"
        },
        "item": {
          "id": "132ed0bf-9f14-4f11-a6d8-360553ecf9a3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e4ce9f17-68d6-4744-ab1b-ac01bf56da35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867202bd-ffd4-434d-9aaa-6e4532db4939",
        "cursor": {
          "ref": "c7cd6441-af65-4b60-8349-c9632ef79318",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0adb7477-0da9-4507-b8fb-25a5ca4344f2"
        },
        "item": {
          "id": "867202bd-ffd4-434d-9aaa-6e4532db4939",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f51f5660-fb04-403d-926a-40e5745d90ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7365224-be31-474c-a3f2-341351c65a5a",
        "cursor": {
          "ref": "73ef9b42-f41f-47e3-b9ee-2b34e55dc3f0",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "493826ed-4105-44ec-8bea-c18b25593473"
        },
        "item": {
          "id": "f7365224-be31-474c-a3f2-341351c65a5a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a0427ba1-61fc-400f-a955-c93cf6a3a4ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159a59bb-535b-4dc6-99fa-593b8264cb7a",
        "cursor": {
          "ref": "91657fe4-0496-46ed-b231-9622d020735e",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "bb24ba4d-886f-4520-8300-566c2410d89e"
        },
        "item": {
          "id": "159a59bb-535b-4dc6-99fa-593b8264cb7a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e1bf0e88-7284-46bb-b051-d07c5f86fb6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f77aac5-734e-4cf7-af44-b303c67b2eae",
        "cursor": {
          "ref": "1c67552b-5b1b-4288-991f-a732db7d9606",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "381e9bad-afc7-4e25-9c4e-daf75cf8b889"
        },
        "item": {
          "id": "6f77aac5-734e-4cf7-af44-b303c67b2eae",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4ff2a8eb-be68-4b3a-b9be-b702d11a04fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b52e91e-41ab-46ee-ad8e-9a4e38f88c62",
        "cursor": {
          "ref": "2d8e5715-a458-44be-9135-6bf8de23fabe",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8494ab43-3aa3-4a10-87dd-360cb2b23586"
        },
        "item": {
          "id": "7b52e91e-41ab-46ee-ad8e-9a4e38f88c62",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c1461bd1-64f7-4589-aaaa-4050d0675f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e910a8b6-6413-40ee-8787-750efae57c36",
        "cursor": {
          "ref": "bd443057-85db-4c8f-8388-642e9e697a07",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "af4745ae-d39a-4c98-9d23-e4ca14d005d6"
        },
        "item": {
          "id": "e910a8b6-6413-40ee-8787-750efae57c36",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4456ec9c-fccf-41b3-a111-7ae3209157af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488de048-a6ab-4256-8cb4-a160acf2ef6f",
        "cursor": {
          "ref": "86d010b9-450f-4b2b-a157-9877467b56b1",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4b25c46f-dfac-4cb5-9ced-74046b32641d"
        },
        "item": {
          "id": "488de048-a6ab-4256-8cb4-a160acf2ef6f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6662ba9b-b781-42e3-b12a-b5507a123144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16764573-70f5-4bd1-af6b-e700f6c663a4",
        "cursor": {
          "ref": "ba09558c-be23-446a-a11a-905d5f06b6f3",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "66974a6c-d89d-4ac7-9293-322f8456f651"
        },
        "item": {
          "id": "16764573-70f5-4bd1-af6b-e700f6c663a4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d34291ab-08cb-4ced-9799-7aa2e62cadc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48636b9-29fd-4796-9a53-7c1a544400e5",
        "cursor": {
          "ref": "203adacd-58ee-4c6d-9d0e-71a868da659a",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ee3aeb02-2653-4588-bee8-0096b8cedfa5"
        },
        "item": {
          "id": "d48636b9-29fd-4796-9a53-7c1a544400e5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "82a06151-83de-4941-8f36-3fbf348e2676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956d3349-7294-40b6-87b9-d686760fad3e",
        "cursor": {
          "ref": "6fb5d341-48ba-437d-9402-4e1f719aaef3",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b9f49474-66ed-467e-8887-8fdf28d666ce"
        },
        "item": {
          "id": "956d3349-7294-40b6-87b9-d686760fad3e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "67668797-724d-4f81-bae6-65bb270311f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af14cc34-a1c7-4b8e-9349-c38f22186cd4",
        "cursor": {
          "ref": "df1c3cb3-82cb-448b-bb5f-bd75ab6db8a4",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3e5d9ab4-97e8-42e2-b5bf-d981f2290cd5"
        },
        "item": {
          "id": "af14cc34-a1c7-4b8e-9349-c38f22186cd4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "da3e785f-369f-4c70-8728-efc9226ec86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628dfb32-9dd1-42cb-bf3b-d6c8e545a302",
        "cursor": {
          "ref": "54eea79f-9cb9-4520-858a-b4c9229a4e9b",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7388e1d0-e427-4e37-ace4-aa6d25fa63e6"
        },
        "item": {
          "id": "628dfb32-9dd1-42cb-bf3b-d6c8e545a302",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6e487d22-74f6-45cd-b4af-f216c4e7568b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94a85d4-50f4-45a8-91f5-716997eb6bc6",
        "cursor": {
          "ref": "abb245e8-934e-46b2-881b-556c4a6a7b87",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "adc5ae15-5778-4e4d-bb14-3b4cb7740c8d"
        },
        "item": {
          "id": "e94a85d4-50f4-45a8-91f5-716997eb6bc6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d1f7acc9-df1f-4ea9-8ae5-8978107e28d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68fae42-02e8-4a0d-ab2e-ae11234141ca",
        "cursor": {
          "ref": "d99e379a-952d-4d72-915c-2e2855334d8a",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a6472682-6a73-459c-8f15-7357b1862d9d"
        },
        "item": {
          "id": "b68fae42-02e8-4a0d-ab2e-ae11234141ca",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8adab414-0f0a-4529-83fd-9fa88be22fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7a65ea-ac93-417f-ae78-f6633905ad30",
        "cursor": {
          "ref": "f216f1bd-e42f-46f4-9b86-e51a7733b90d",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3b08aab9-d553-4185-844a-394898b15cf3"
        },
        "item": {
          "id": "0b7a65ea-ac93-417f-ae78-f6633905ad30",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "67154d5d-6b2a-44ed-9095-db3724714b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d473cec6-2d89-47ce-ac6f-1a3092ce8d1a",
        "cursor": {
          "ref": "d7db0336-992f-4968-b56e-d99f4f3fc0b8",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a5a54e3e-0751-4b1e-afdb-7805ed84ae9e"
        },
        "item": {
          "id": "d473cec6-2d89-47ce-ac6f-1a3092ce8d1a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fc2ff600-beaa-4e7e-94fe-4ac3d91162ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9bf4f0f-b454-4588-a78f-1bd83c6df1e2",
        "cursor": {
          "ref": "c1eff2d7-f245-4bff-9633-bf6241b913c2",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8883f2f1-023c-4683-abe4-417ba7fc4fa5"
        },
        "item": {
          "id": "a9bf4f0f-b454-4588-a78f-1bd83c6df1e2",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "cf536bc4-7492-4404-9c5d-1f9f0c867fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb106ea9-2ce8-4b48-86ce-70b5c8ec1584",
        "cursor": {
          "ref": "9a7a7f94-22a5-4033-8353-fba334f07da1",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5f4a9eb4-bd74-432e-8232-ade1765ca822"
        },
        "item": {
          "id": "fb106ea9-2ce8-4b48-86ce-70b5c8ec1584",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c11aadd7-0227-4f62-9769-0a242a28ef3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e3ac8f-b841-4ac6-b1c0-cb73e034976a",
        "cursor": {
          "ref": "e19f7e8d-4758-4306-a99f-ffef4fcba99f",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5ec37fd7-78e9-45e1-9632-a33680447aac"
        },
        "item": {
          "id": "23e3ac8f-b841-4ac6-b1c0-cb73e034976a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "01bba282-0315-4331-a689-955519876ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbaf5ad-aeb0-44e5-8391-ac23ead87df3",
        "cursor": {
          "ref": "7c8858ca-7d04-4d4b-89e2-91340466f658",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7e4b18c8-6395-47b1-98bd-33cf19116f25"
        },
        "item": {
          "id": "dbbaf5ad-aeb0-44e5-8391-ac23ead87df3",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "99869fe8-caf4-4e56-9a0d-9aacfb940d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906a7ec3-dc2f-4a92-97f7-3dd2543d9895",
        "cursor": {
          "ref": "9d7a98c3-ab1a-455e-b1ba-dba0852af0a8",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3cd12047-d366-461e-b79b-de9685df34bf"
        },
        "item": {
          "id": "906a7ec3-dc2f-4a92-97f7-3dd2543d9895",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3703573c-85e4-43b5-995c-48cd8c61d532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7e3c04-50fd-4754-8247-66bcbbfe7ce6",
        "cursor": {
          "ref": "ffdf8ef1-8a7d-4286-a2a9-86d8fbda762c",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e0f18a6f-d555-415a-8bf5-da6dc70e7a83"
        },
        "item": {
          "id": "fa7e3c04-50fd-4754-8247-66bcbbfe7ce6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "fe5bce68-baaa-46b4-9f5a-fd4b545d48b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b28d03a-c36c-40a1-a11c-e03e54525d1a",
        "cursor": {
          "ref": "bce6ee06-df7e-4806-a61f-51b1d3e72cf1",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8ef89d8e-8540-4798-b0b8-3ff80b703761"
        },
        "item": {
          "id": "6b28d03a-c36c-40a1-a11c-e03e54525d1a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a9c6227a-5f9e-42d1-b318-08f38aa9656d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fd732e-c944-40e1-8d3a-5b4d0bb358bf",
        "cursor": {
          "ref": "5bfb843e-687d-48aa-9377-0bb050ba8c48",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c4ace40e-dace-43cb-8e3a-de21c19bd8ac"
        },
        "item": {
          "id": "71fd732e-c944-40e1-8d3a-5b4d0bb358bf",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "31e59717-5c29-44e9-97a5-10ec5f636e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c186eda2-72e6-4265-b8fc-3f19b4b82765",
        "cursor": {
          "ref": "8f36f0f0-25cc-4612-ad5d-89f400a8c259",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a1812a9f-285c-4481-989a-638cb13ef293"
        },
        "item": {
          "id": "c186eda2-72e6-4265-b8fc-3f19b4b82765",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "060f4079-9875-4ff3-8ec1-895053d9285a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0507e4f2-001b-4b5c-a702-c261e16c974d",
        "cursor": {
          "ref": "b7c22428-3b2e-40b8-acc9-f1c2534fd06d",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "47264f29-13b9-422d-88b3-89df8206d189"
        },
        "item": {
          "id": "0507e4f2-001b-4b5c-a702-c261e16c974d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "294c552e-ee7a-4ec4-ae9f-b846e6ad28a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64eae8f6-cef6-4fad-9e80-9676b356c270",
        "cursor": {
          "ref": "11fddf06-4a2f-4ffc-97d8-641dca5ad466",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2ccd7b84-1375-4af4-b986-18306d146f67"
        },
        "item": {
          "id": "64eae8f6-cef6-4fad-9e80-9676b356c270",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "59e4f57a-f6e2-452e-b522-2c36573646c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee36781-8545-49ef-be88-8a5b82d0cdb3",
        "cursor": {
          "ref": "61e731f4-e3a5-499f-8ea5-7f9d47603bb0",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "630075e7-ec5a-4622-837c-f95a20c2e017"
        },
        "item": {
          "id": "4ee36781-8545-49ef-be88-8a5b82d0cdb3",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e4a24d95-b6c4-44d0-aa02-d780d78aaf64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8355d5-6703-4c96-bc3b-f04b183f9f88",
        "cursor": {
          "ref": "6e77888e-3529-4407-81f1-5325730e561f",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f7be3bdf-a40b-4060-8d60-8b0481a3f2b3"
        },
        "item": {
          "id": "ee8355d5-6703-4c96-bc3b-f04b183f9f88",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "36062e75-76a7-43fa-8c13-8ad353aee13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d1f724-4250-43ad-b516-05abb658c034",
        "cursor": {
          "ref": "e2f0d99c-4224-4e41-95c6-252cdaca0961",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "15d0ae9a-c863-4205-ad97-096fb91cbba1"
        },
        "item": {
          "id": "b5d1f724-4250-43ad-b516-05abb658c034",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "fc68dda8-a235-49c4-9c9e-dc0c277bd0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701f9700-0965-4754-a461-0531325ef2f8",
        "cursor": {
          "ref": "ca3e1917-0c6a-4290-9cc6-58fdc3a9e6ba",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b20cc4cc-28c4-4c32-8edc-84e5894cb417"
        },
        "item": {
          "id": "701f9700-0965-4754-a461-0531325ef2f8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "01bcceb1-35b0-4042-b9b2-0931d4daa119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e78763f-8f38-4644-a5ac-07ace4954746",
        "cursor": {
          "ref": "72742e7c-cdfb-4a29-8899-c9263ba019ac",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e12f2bc3-033c-45a2-9cc6-72f134ac0bad"
        },
        "item": {
          "id": "1e78763f-8f38-4644-a5ac-07ace4954746",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4c1e6150-815b-4f70-85b5-76d5499654ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff748a1f-d9ce-4373-b6c7-8fca1150d500",
        "cursor": {
          "ref": "619023f4-d90a-45dc-9dfb-537a73ae01d8",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e03d9b85-37bf-40c5-9875-4863fefb0d51"
        },
        "item": {
          "id": "ff748a1f-d9ce-4373-b6c7-8fca1150d500",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "101a6836-59f7-46a7-9eda-b9936fae2afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04459048-cadd-44a3-87d3-f1f680b0cc5b",
        "cursor": {
          "ref": "b7c1d1ae-31e6-4d42-9e31-d5b6ac11f5ed",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "978266ca-e02c-4518-b7af-3549be76a067"
        },
        "item": {
          "id": "04459048-cadd-44a3-87d3-f1f680b0cc5b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5b0835f2-4a07-4838-94ee-7787e66b5124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab40996a-c488-44e9-879f-4c32f1b80ed5",
        "cursor": {
          "ref": "65ef9b08-015f-4611-974c-f8e98b6eb88d",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "66344770-7c74-4fc4-9933-7d3b37e4e510"
        },
        "item": {
          "id": "ab40996a-c488-44e9-879f-4c32f1b80ed5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e1dfb289-bbb7-4129-abfb-c9d8a7a3daa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80db900f-5c37-49fc-9f71-178fbc0e058d",
        "cursor": {
          "ref": "fbed2871-1120-4e9d-92ab-9194cc273aa8",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e01ce6fe-d04b-444d-b68b-ac06a4d90414"
        },
        "item": {
          "id": "80db900f-5c37-49fc-9f71-178fbc0e058d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a0970539-0590-4604-a7ba-523f18b037be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795686f5-453e-459a-885c-7f40864255f4",
        "cursor": {
          "ref": "24dde42d-cbe1-4c37-9d01-d98c9a464c96",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5d28629e-4c84-48c6-a1d6-8a1c108902ee"
        },
        "item": {
          "id": "795686f5-453e-459a-885c-7f40864255f4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4f85f10a-0b15-486e-83bc-98f1336a040e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96c4a0d-e91c-4991-9db6-5942f00dde12",
        "cursor": {
          "ref": "702c51f3-1a58-4f12-9b0e-a7928501718e",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f428e638-557f-484d-82f4-13af5e647a99"
        },
        "item": {
          "id": "c96c4a0d-e91c-4991-9db6-5942f00dde12",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ee6c09cb-475b-4946-9749-64264fdfad53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d2697d-d999-4db6-a2b9-bfedba10d2d5",
        "cursor": {
          "ref": "8e642c68-f79f-421f-be49-ed47982e6bde",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4468aa61-2cf5-45ea-897b-03722105b7af"
        },
        "item": {
          "id": "42d2697d-d999-4db6-a2b9-bfedba10d2d5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b8da5b2d-3588-41b0-bc90-71f576e576d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92c40cd-bdc0-4d71-b446-ed5f899a495e",
        "cursor": {
          "ref": "c8bcc460-36d1-4bc0-948f-b7da26ab3991",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e3bfc1da-ed08-410b-93f4-da09fb62027c"
        },
        "item": {
          "id": "c92c40cd-bdc0-4d71-b446-ed5f899a495e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "36997654-598a-4b68-8557-c81e688c6c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848e20ae-51e8-435e-9d3d-c6acdef42118",
        "cursor": {
          "ref": "885857ca-001d-4c97-ae6a-575e7ee8da17",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8b1f9288-018d-462f-8f4e-63141fcef796"
        },
        "item": {
          "id": "848e20ae-51e8-435e-9d3d-c6acdef42118",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4a5b7c91-f016-4066-a160-ca8ebe075f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992550c7-6863-46b2-8c1a-af2f3c027835",
        "cursor": {
          "ref": "7b3361ae-98aa-44e6-9321-9a34959150a3",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8b404fbc-3c13-43ac-8c8b-80232d5edfc8"
        },
        "item": {
          "id": "992550c7-6863-46b2-8c1a-af2f3c027835",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a98306fd-e24c-4da4-b353-9657a75b9b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3633559-a028-4407-b4c8-b73a756cae3f",
        "cursor": {
          "ref": "0a805edd-ae6a-4b19-8e4d-358a528ee300",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "20b1214f-1c27-486f-a2b4-e9aca148beb8"
        },
        "item": {
          "id": "b3633559-a028-4407-b4c8-b73a756cae3f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2fdbdb57-af29-4482-9eb4-61a7c9284be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4449b7-96be-4bbb-b80b-4f8dd4ebe98b",
        "cursor": {
          "ref": "acfdf26c-642b-499c-a550-c7f8a28abc54",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "945d3256-5eae-4575-b78f-935cb7564c35"
        },
        "item": {
          "id": "dd4449b7-96be-4bbb-b80b-4f8dd4ebe98b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "75111e4d-24d8-464e-adbe-b56272833a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e094b8cf-25c6-49f9-9a59-72b21b3a8ab3",
        "cursor": {
          "ref": "574be958-3efb-429a-b718-0129f3573598",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c37efa03-ca3a-4c70-9855-731ce57c7f27"
        },
        "item": {
          "id": "e094b8cf-25c6-49f9-9a59-72b21b3a8ab3",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "22680468-d613-4aba-8b9a-4907579e1e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265e9ce2-ab86-4840-91a6-7142808a0462",
        "cursor": {
          "ref": "d28f8d83-5331-43a9-aa11-4a1f63d5e8c5",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f6dfd682-f69b-4b39-8db0-5e209f3c6795"
        },
        "item": {
          "id": "265e9ce2-ab86-4840-91a6-7142808a0462",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b3b29e07-2795-47f7-ba73-7de7eac95855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00285328-ffb5-4406-bc08-ae113e5d4123",
        "cursor": {
          "ref": "212dda67-602b-4945-af12-d6f4907aa9d2",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9c0a9984-9921-4eb8-9ee2-beb00ff1c471"
        },
        "item": {
          "id": "00285328-ffb5-4406-bc08-ae113e5d4123",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "05075b2d-9256-48fd-978c-35d92e88b85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a1a0a6-5e08-4a5b-b5c8-09581c94e177",
        "cursor": {
          "ref": "b152858f-21fc-45e6-9323-6e7c0108e228",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c9399d41-27e1-4da3-a613-52a8d69ea715"
        },
        "item": {
          "id": "a3a1a0a6-5e08-4a5b-b5c8-09581c94e177",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "32fdefc3-f468-4c15-aedd-971913397957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa3c090-53e8-46d0-866a-9c58b4afe935",
        "cursor": {
          "ref": "0ac652b8-bcc6-421e-967c-92efeb8af3c3",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3caea3a0-883d-4051-a1eb-de7e36d85861"
        },
        "item": {
          "id": "2fa3c090-53e8-46d0-866a-9c58b4afe935",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d15d4f76-865a-48e6-8de1-a42662ca022b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34154e52-d1b4-44a7-8cac-2184d697a924",
        "cursor": {
          "ref": "151c1d15-4276-461a-a206-48d972a4859c",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "68f627e4-9894-42af-905d-a95f0e44c49e"
        },
        "item": {
          "id": "34154e52-d1b4-44a7-8cac-2184d697a924",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "586b0c4b-bf9d-4863-85d6-6233d2101226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d0d930-181e-407e-aaca-ae1bfa25ad01",
        "cursor": {
          "ref": "0c983810-0f7f-450c-97cf-d33239decae4",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2507860e-4f55-4833-b5d0-84d66c74f228"
        },
        "item": {
          "id": "30d0d930-181e-407e-aaca-ae1bfa25ad01",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d3c5ff2f-7256-4fd0-8cef-22a1b420bb5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf20436-bd89-4a5e-9bb5-5ef556b18cdb",
        "cursor": {
          "ref": "9e22278c-c2a4-41a0-afb3-f26bf0b77bfd",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8396333e-713a-4ad1-a1b5-c6c61891b183"
        },
        "item": {
          "id": "8bf20436-bd89-4a5e-9bb5-5ef556b18cdb",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "609b055e-5397-4338-a9d2-cf2c10ddd19c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483b7a0b-20cc-4b18-8bee-8fef3d90a5df",
        "cursor": {
          "ref": "5851c919-0def-41bd-9f1f-660b0d408ebb",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a255ad50-ece5-4734-8ac9-7fc4623a6bc5"
        },
        "item": {
          "id": "483b7a0b-20cc-4b18-8bee-8fef3d90a5df",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "eaf4c987-f0fa-41e8-902f-fe5d280a3afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448a303d-1aa3-4c33-b525-fa60e013db06",
        "cursor": {
          "ref": "31bde5d1-4bde-4cb7-9a01-86090166b735",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a6256cf6-3c91-43fd-8d49-3feed8c8c810"
        },
        "item": {
          "id": "448a303d-1aa3-4c33-b525-fa60e013db06",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1890bfbf-fd29-449e-a668-b99a62f47f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd98b10-ded5-4388-9fd4-8cf39b09ef16",
        "cursor": {
          "ref": "cee24292-425c-410a-8c67-4a53e8b6941b",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c1e09816-3a9f-4cf3-b0b4-98c0f69e6da1"
        },
        "item": {
          "id": "afd98b10-ded5-4388-9fd4-8cf39b09ef16",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d95bbe59-2552-4633-ae8c-07d1d88aabcf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90aa9fca-1cd8-4a2d-bc8a-40619d30a169",
        "cursor": {
          "ref": "3231d516-afd8-4829-9493-bddd27893fcd",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "284c7aad-4b71-48d7-ba34-4aae14159808"
        },
        "item": {
          "id": "90aa9fca-1cd8-4a2d-bc8a-40619d30a169",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8dad7f03-2c5d-4476-aa25-553d7af05be8",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8622fc9a-e50a-4b73-a709-64c17c37a669",
        "cursor": {
          "ref": "68350621-0db7-476e-b324-a08e5318e876",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "991d0bf6-ce73-431b-9571-0a066c8d706a"
        },
        "item": {
          "id": "8622fc9a-e50a-4b73-a709-64c17c37a669",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1d597e4e-5e9e-4c65-b3f5-2890c69873cb",
          "status": "OK",
          "code": 200,
          "responseTime": 2648,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "60197b79-60f2-4d36-86af-8dcf2633cee0",
        "cursor": {
          "ref": "4c441b5e-ae59-48bb-a481-32887a8da9c2",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "99d38d78-9e8f-48b6-a0d4-6cf78fe6ccc7"
        },
        "item": {
          "id": "60197b79-60f2-4d36-86af-8dcf2633cee0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b8a5d3d4-205f-49e8-a239-65661901e6a1",
          "status": "OK",
          "code": 200,
          "responseTime": 2097,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "475c9f0b-3518-4f78-9bf0-150ab3e84fb6",
        "cursor": {
          "ref": "3a4c284e-10a1-4f15-a7ab-5466da3317a3",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "eddba7ff-5cb0-462c-8c79-801b3e613b21"
        },
        "item": {
          "id": "475c9f0b-3518-4f78-9bf0-150ab3e84fb6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d448f883-b3a8-4fa9-b94e-92aea90f8c3b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475c9f0b-3518-4f78-9bf0-150ab3e84fb6",
        "cursor": {
          "ref": "3a4c284e-10a1-4f15-a7ab-5466da3317a3",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "eddba7ff-5cb0-462c-8c79-801b3e613b21"
        },
        "item": {
          "id": "475c9f0b-3518-4f78-9bf0-150ab3e84fb6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d448f883-b3a8-4fa9-b94e-92aea90f8c3b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418f1045-d453-4cdd-b91e-26b4661ffd8d",
        "cursor": {
          "ref": "ce180fcd-42ff-45e9-ab5f-546417fa8c38",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2e25d1af-3702-45bf-a059-5125c935438c"
        },
        "item": {
          "id": "418f1045-d453-4cdd-b91e-26b4661ffd8d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "29569133-6302-48af-807c-13aeaf8791e2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13294ff-bbb1-4612-b9ff-06b868bcf543",
        "cursor": {
          "ref": "e451b66d-6de9-4930-bf4f-47f043684a61",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "30f63cdf-b4ba-496a-bf75-98e96113c45f"
        },
        "item": {
          "id": "b13294ff-bbb1-4612-b9ff-06b868bcf543",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "71ae93a4-c0a9-4f28-b15d-2c4736d91b9b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}