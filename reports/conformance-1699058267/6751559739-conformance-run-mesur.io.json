{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1863058b-c053-4219-a20b-6523aeb96230",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9a008b36-3472-439c-aae1-c51cb29e44fa",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3ebabd45-7c82-4e29-888a-794a5025193c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0261b5f7-2c9f-4755-92a1-5c688ecad41b"
                }
              }
            ]
          },
          {
            "id": "4a0ef4cd-47ff-4f8b-a520-71a59676d340",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b06e10f0-255b-45db-a7f9-698c9ed17872",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5b0ad282-b45f-400e-8da3-438c5641148e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c71ca5b7-1d9d-4df7-8f01-f97aaf651c35",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "972a0c45-fcb3-4d53-8279-e65b71cd9dab",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a1555886-33ed-40b8-8fc1-dc11ce86368b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88590de4-6e9e-43e1-906c-445a49dd27f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "267c5fb9-e25c-4d26-9777-cb45f081473c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "19e91443-c83f-4532-849d-70156385aa38",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2f27fe27-db6a-46f3-b9cb-336109dbf950"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "df80421a-7767-4604-aa81-8774bfbd74db",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bba35d06-3415-4925-acf9-3423114a5150"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d03b7335-04d3-48ae-ada9-af02b14658bf",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e76df6fc-feca-4dff-afc5-9c8af0ffe73b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2301b19d-d325-4467-b482-25448716d44d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "030e07ef-829e-45bc-900c-c1745eabb038"
            }
          }
        ]
      },
      {
        "id": "ec59011b-a11d-4359-bff2-f49a8e65f82e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9336e230-8e66-43a7-930d-a7ab343eaed3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8f1929fd-1745-4d72-ad21-5f5b051923a7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f1567196-2091-411e-8535-c32493253673",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a271c4b4-7fe5-4701-be2a-64569acf0566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c409cbd5-3291-44a9-bc41-822ec2e17a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4688bb61-1638-42fe-bfdb-b20f91922be6",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff700e6-f3be-4219-b324-fd48ab80e756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7eb68c63-8b52-4348-becf-8000363ae93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25741df7-1b39-409a-ab78-ddc69ad6d8fd",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8267196e-297b-441d-a8ad-fa3c39f0a1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e3383e1-4095-4652-b5b4-a1c12c216d45"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5ac3578b-da78-4b9d-b6f6-9f3f4f348bd3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c1018508-48b4-4f19-bdf5-1b2ec114ce7e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68563a89-f574-4727-a3d9-a1a94d81bf7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51b2309f-92e4-400b-be80-1ed5f335016e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a92565-8b7e-4122-8633-1e5268e10b1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe9b8f5-8d08-40f1-ac70-1e412b6e8c9d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "12fac7e7-6627-4dc2-8e51-1a5bf858a9c1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fe0a5981-e1b6-4bd8-902d-3df31d987255",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc036f84-98fc-47b5-a04f-b86e36e42b2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "70b2a4c8-c1c6-446d-b927-4306a754858b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ec62a7d-3d0c-423a-a1b6-1c3b456ca4bb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "fb3d09b0-c16e-472f-bacc-6e735bfb8a67"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ecbad176-45ce-4219-a828-12493591ba6d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "be442a0c-6936-44bb-9860-6afacf8b3e23"
            }
          }
        ]
      },
      {
        "id": "f9755308-ab1d-4f27-a812-eb8968788847",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "983bd035-ef20-40df-b491-acfe0abeaf4e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "086f60e8-83c2-409b-b575-068b8ea389ab",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a874c2c1-7c8f-41b0-a343-4285b7a9a819",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31a09e7-dc50-4329-9a51-0cee6a452f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a249c913-4904-463f-b726-eaa1e928bd79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc9d630-a2a9-4aa7-b0ca-aa73a5136a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5382a77e-cb45-4a53-b450-7a3c923dbf90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827b0392-6793-48b0-9639-516e956bdadb",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb5f581-1f2b-4bb7-acae-1d1a77634a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e583f891-b5e8-436c-a16d-f52d2c9eeda7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c013b0b1-7e5e-4d08-9358-486b07bc4abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28a0dd0a-1c17-4e77-8b7e-da503d383936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39ceaac-74ab-4de4-82a7-d0a18631f1f8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca8847f-d493-4286-99b7-c4a83ebcea4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7d92c98-0f93-4cfc-a135-d993d19c4091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ab3530-5b12-4da7-b8d1-212a250f3b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4f8a0f5-b6f8-47e7-8715-c1b2dd2d0ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99e2a83-a83d-4434-92e7-b42066954752",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3f826a-9d22-4051-b88b-f4efeb097cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc103527-0adf-407a-b05a-c77639982e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334acd43-6c22-4142-b495-eb4667cfa522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ca8eca4-f0c9-4ff2-8a3f-526b571abc7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b27f667-6520-4bd5-bc92-df6e76615978",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a3f54e-509a-4a11-ad36-10981856249e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50800ea7-e94e-410e-b426-8b09fa2cbe05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d3f852-23c3-4331-bef5-02677acbe44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55d8b8cb-30b5-4066-9edd-a05d2c995d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8703cc0a-5b00-42dd-9687-29a727beb68d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74eb05d-ec32-4673-8198-bd4ea1246e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df68bea-0c1b-4b56-96c9-7850c2873e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d10408-3aff-4d8a-bba8-1166f007332f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4fa12c79-bfd6-42a0-a83f-4dc13bd886cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c90c843-4046-428d-aceb-caa1cffb120a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6dc5589-5765-4f76-a19a-b1293b921c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96090e2-3bd8-44be-8b8d-03dc0be0c143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8cba7f5-7137-46eb-a3a8-e48a70fdb86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e44dc75-667a-4d35-b50e-b42e3d86748f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12fc4f1-bdbf-45e8-a25a-b03b1f540cf7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e641bfd0-f37e-4f44-b3cd-762e9e83251b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee831df2-f76f-4d5b-b939-e08c01bdf2b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e501b49f-7983-4738-be1f-84a08b97fd17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b44b5ec-09cf-48ab-b6e9-d46a2bd99e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c3cbbb-1a1d-4faa-a900-dfe8a8a910e6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88197091-a0e2-493e-95f5-45f6cba2bd6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8724513-9799-4cd4-88d0-cabe77f55cd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95743893-d2aa-4bba-abca-ee4c62b95df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29bb0101-c6c1-49e5-8c57-f43d97c52942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6dc6f7-8c54-49b1-9a18-771edb8a4bf7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9565a06f-15e5-453a-97a1-3d44d7b61c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1b66e19-539b-439f-90a6-a94bd349c3f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b534d282-5c7a-4152-b817-8ff7b27f98ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72232ea2-4b07-4f07-bf86-a3a4f5604c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e154001-5641-43d6-a8f0-c1fe45990cd8",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09183763-40a0-4ba6-80c1-663e1c12d8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81202e6a-88c0-4b84-b508-3388a1576de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b197877c-4a4f-444f-9294-7893c88b41da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "501ae40c-799c-4dff-8942-cf4e95d5407b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7b1039-7399-46cf-9b28-42922ba5bed0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5263251b-4676-4773-aa28-5c9dea859443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea7ecbc-c3a7-468a-b47f-30cc00e903e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c333add-724b-49f3-989b-54b8f28d183f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7b22aba-7619-4dfb-94fc-4d9f71e40d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b28f93-0119-45f6-bbce-6e03eaf6b5a3",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2001289-d12e-414a-a724-febb74efbec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a91914b6-0ea7-4bb1-b269-dc983b7eb224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8193d93-54f4-4ed5-9ff4-66544240b28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "503bbca0-69a5-4c6d-b0d5-8c4b7f000b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0510ddeb-17cf-4b19-a8e0-581a298a6586",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98425d9c-de24-4996-8380-5298d6e87b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5625212e-c3aa-4aee-8ee8-d7d63a30c47e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8819739-f340-4163-b288-583dface1da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a20384c4-f209-423e-8873-9bf8c385dd32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ec8aff-a1a4-4e7c-a091-fef970b8be54",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027650bd-9736-4fc2-ace0-67e35f81f237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2295ad23-09e9-45f2-997d-bc96b65d535e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b537efbe-7aca-41a9-9019-555eb3f25af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba7a88a0-ced0-477e-92b7-dfc8c46917fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7b2f0e-4dd4-4420-bcf0-cac4c75582fb",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56afd7f9-9e29-4f12-b718-ffdfe67878ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a74d6193-7bf6-43c1-a2ba-d75d0cc94834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cffa2d8-6182-4b16-86ee-64f46ca4bf2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c961cc0-3dae-411a-a720-022204c60bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51251ad4-e112-4584-ba09-d5d291f94bd3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4d3931-55f0-4c1c-ae9e-ccb534c70ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c724b3fd-bc68-4b51-846d-5a7c351acf63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303da3a5-ad01-42ba-ad63-d0919cbea5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce658125-6e06-4bac-b8a4-8847ef4a4fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad33208-548a-4946-9144-563763c5a89b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6330217d-eeed-4c19-80ce-1dbd35139e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b845b5b-4c89-4bda-bdb7-f94a3f4439f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62dd8ee-e6ea-49c5-88ef-09b50520e93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "61c29995-d97c-471c-b720-653480f63538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b501b8a-9f0a-4ade-8a50-671ac4a5c344",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7215ec09-03eb-4534-b4d9-5a6ce00541a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "521ac4ec-2075-4bc2-a144-627e42e36716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74ecbfc-043b-4d8d-8b9f-c5fbfea2470a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4e2b960-fc72-4da2-b7c7-84f27cdbf2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f418be3e-fdc8-44e2-8727-78d4abc447b7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212de9a2-d486-4702-97f3-ba720ebdf848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92bb5b50-2a95-42d7-860c-46bc1720c62c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c3ef28-887a-4552-9509-0ba684373ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01fb0274-4cb5-4360-bcf5-3b794bee6b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1f962f-2201-49b7-9806-34df56a5bc2a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f32a620-5cba-4d42-b951-02abd4e0bee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5ad6ee7-9c5e-4c53-acb4-1a00ca8daf8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c662dffc-44bf-421e-aa4e-dbe34c8cdea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a02bda9-e572-4d4a-b4cd-88c268c19286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326b125a-af7b-450e-a966-bd03ed7ed7c3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e253f7-d4f2-4b57-8646-6da2ee65acc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c787c9c7-1847-4a12-b376-787a60cedfe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f946c8a-4b0e-4206-8b29-052c26277ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbf1ae33-04e6-42b0-b699-431b09922cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44df8e7-68f2-4503-986e-395b63f97108",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d587586-9b37-4743-86db-00ba980b65cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b049603-c5f8-465b-8659-222c115400b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d15c4c-62fd-4ffe-ab44-79a12ad6d4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f90fd523-6446-4c04-883f-68f31b6043c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ffa1bc-2fcf-4d51-b5ba-d78ec57a7a6f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960f9395-04ef-4f87-9c0f-8d352b6e517e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c666dd2-4bee-4eae-88fa-66f355de6ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbb3465-129e-419d-bbea-584e928eb439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ca23a4-5806-4b5f-946e-66e426e1bf02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d499e27d-20a6-444d-b58e-416478e84741",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a54d3713-b749-411d-8140-c32c4b2ba23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d98146d-a97b-4f80-a46d-2f2f0aba0a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4a6464-e256-48d5-a820-30c9ab588696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a6229f-ba02-460c-95c8-48618a7dbf7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c5a1aa-061b-4cbd-9ad7-be8364aafe10",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "067526a2-a894-42f9-91f6-0ce4f92c92ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b0adb21-85e2-459a-9ec7-66b10a5b360a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eab2950-7405-47dd-9189-429afef2eb72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1953d2a2-66e0-4267-9f84-ac7425b163bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027f6780-d324-4993-be10-55c83af0a703",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4684374d-66c1-4eda-8141-1135f2498cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb266cec-bf15-400e-ab97-8134d0be0c99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45829284-7e4c-4829-b707-a11d6bc59b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "10d9d9ff-158e-419e-81cb-1d6c16c551ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2237927e-722b-4002-b2b2-d74114a2fe4b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eecf2245-b111-44e9-868e-d4502863baa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e63a5e82-f50e-4b42-884b-ef9769df2937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c99219-da04-4830-89bf-350a9c59352f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e79b98c-6b43-44f1-a26b-44d2ec21180b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe27790-0d9c-47e8-9ac1-fffdf3b84d47",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c549acfb-a7dc-4b56-87fb-b76ef959e985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "239ecdc3-4ba1-4df6-8eeb-5a1d67df9fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939645d2-c108-4b74-aa4d-3582f30314c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2607d8f3-f1ac-463d-a9a2-41712ea3531c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cdac059-dbee-4ee4-a633-b5e774eaa3a3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0d1e68-4bff-4474-be6b-869471606d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "541e5a6f-fde2-4dbe-90db-23c35bf90347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc910756-7f17-4e5a-9a89-ca50b4b5f38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2531a920-3466-4171-a934-86b5b23741ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05eecb31-2b7b-43c2-b9a2-005238d3c50f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88748519-b8fe-45b0-b24a-fbfd8344d032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fa436e0-f115-4749-9fd6-79a8fcb643d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5128d889-c067-4bcc-a6c3-34a6957c9d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b424e64d-c2be-45c8-b1a8-94d00ec50715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d34b422-8c21-4fe5-b4cd-d7aec77a67e8",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e9d20f-f669-4456-86c8-5b693fcb2191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb5d4e3f-6a5f-4119-ae38-1d753df1abae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9b17b2-fbed-4bb5-8c88-1fdf9096824e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a648f88b-a9b6-4ae1-bd2d-be6d3e06179b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bcfb0ec-2d21-4bd9-927d-13689c52a501",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7489e4-fd1c-4bd0-9f8a-e29fc8edc2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3eb3231-a563-49ad-a245-32c6d9927b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf5fa99-9d12-4749-9b71-84464257a322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e34214e1-719d-4f2a-86d8-c39f249610b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da15c0c-129e-4274-b1a6-a7430e680ef9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a10c0ae-6708-4958-a504-c246450f4c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6025f98-2bfe-4f9a-a057-ece96cadc438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016c1262-f55f-457a-9eba-92400500140f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d252696-62f5-4bfb-867c-723a7c6c2a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f1f75d-a39f-4527-a75d-18ea9d1265c9",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce6c713-d56a-4c4c-8672-913fd7de2ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b5330f-ad0e-423c-b4c2-621aef8568da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b698c5e6-b8ee-4474-af2e-e41907a31373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1152fc-5c23-406a-9b0c-2ab06bd172a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7637817-2bff-4544-8803-aa2fd6242ffe",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4cad02-0fc3-4b5b-8ce7-7f0384dfe505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d79c4bcf-91b9-42e4-8a51-5561877d0f5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49359d5a-5e36-4bf8-bff7-c422524b6747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "94418dac-7b7e-48e0-8ceb-7138f7767de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2aea08-cbae-4370-a964-e9ef20395827",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb6a85b-0ee1-4506-be80-48165acfd1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09943ded-f4d4-4fe0-941b-3905f58ff5d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ea8e95-8c74-4003-9034-a15e1d81ffc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2000e56-bf6c-47d7-aa7a-60e5189b013b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c311e46-9ea5-448c-9f39-3dbad86f5275",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d23637-ba1f-4461-ba47-409501acc1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94ebdb5b-62df-452e-b3ec-b8ae450e096a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed6e2a6-d8b8-4e38-88d8-fd5a0f38ff77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6de67475-1b7b-4705-81c1-e653cf60f054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2b368a-4771-4082-912f-d320cabc33ea",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c297ce-ed1a-4cae-9d5d-7d8985018d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1543645-1358-49e6-89d3-1cfaabf9be32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2083bf99-739d-4f6a-8410-f2aa8572ec51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5424db87-68dc-4351-a4db-79e3ee7d188a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96f7199-9ee1-4534-aafa-92fe32914c4f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "283cccad-1fc8-435e-8317-3bf51e1d169b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3c5fb28-7f99-4237-ac23-afb3d0658103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124e7ad3-2d78-4420-bd39-c91bcaba073e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7e21d8e-75d8-4699-9269-70db881fdd93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39da6da-5a9d-400b-b52b-bb08d4ca5457",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55a2448-1cc7-4cd6-924e-0fa395adc650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00be231b-8375-43b4-a6fa-bf46eb11bdd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27a7d98-7b4a-42e5-94a2-978079a1ae7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3dce08a-48c8-4d71-93c9-152a339eae8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7b67e3-fa39-4038-bff1-b8c902e15872",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de70f05-7add-4203-bb78-47e30472980e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b76a2509-6611-4757-a46d-4d00e362aabe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37707d23-c920-4af7-8ee0-e9fd9d407b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0c548fc9-69b3-48c1-a07f-fcc9709ff35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf95aed3-0409-458c-99fb-1f6f6b2d0de8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d221fbbd-57d8-44c8-b529-e9a5b2c669f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b91242a-88d9-49ef-9ed1-f8189f0ee875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9e711e-f091-4780-af88-3724770a06aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2e3b0c9-cc5e-4059-b88b-99817b1a03fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b191ee-447f-4959-b30f-509b46ea4a07",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46742d7d-80cd-43ba-b53d-bd103e4a96e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9413e654-3608-47d2-bfb4-e676409d6a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0cd9317-7ee8-4677-91dc-ba6253e6e47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec154137-2136-4dda-b9ee-8284def34567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8961c8d-dfab-4c57-802a-dd2d5ee72d1b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36863afa-14c5-4282-b9ff-bdd2648b60a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebc713d3-8746-4c7b-ba9d-8be591221fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c5ff1e-2376-461a-a263-5ae2eb88c0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "47d89f0d-2a42-4c7c-881b-9f10245ff96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc2ac96-040e-4d87-94d9-020bfb1fd4ae",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d6ab4d-9d67-49f2-8a7f-76412a588e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72d1fc1c-0058-48ee-a56d-b5eb7141e93d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e990591-44cd-4583-b6db-2e40c92dc2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e77b926-5ba8-4855-86e9-12bb84a180c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4875099e-9bf0-40cd-a2e8-f4cf3521e114",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a32bd6-baab-4a34-bbb2-1f7323681c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f48262de-b90a-40a5-be5a-1299da33ee6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58f0f77-6bc1-4975-ad1a-3cafbfc2af31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7004c0cc-686f-47ec-a8ad-59ee3a630552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211f242b-e50d-4d4c-a2dd-16f6dbc90e2d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0a637f-05cf-4f45-ac52-11c282b809f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e9c48bb-a31f-4abd-938e-d2f1dedcc878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ccde04-fc38-4303-9229-d2ea279c4fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "42ddf5aa-871c-4f39-aa12-314aa887a018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c5d905-4f8c-40c1-97c0-330398fd6833",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ef4c19-bd58-49a9-8471-7ade686c5ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d50e93a9-893a-46b3-afa9-c55901bdab03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00cfb0c-46c7-47de-895f-092a216a443d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "10945743-9b48-4284-9b35-932cab73cc24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c464d4-c603-402b-a803-e4215c40bbdb",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79072f05-5544-42e9-8b00-a26402bdd8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47cb1e2-f45a-42e9-b279-cc0e7a3b63a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87ef67e-dcaa-439e-b9cd-192fba4842c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37ccf575-bfef-4006-83c1-dea9c040baae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5893671-a3d0-4b95-9f46-30e49d361304",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9050fcf6-93a4-496b-be2f-86c789bac375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "195f50cd-4ce0-4d91-8307-3ea698c0a429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d417e0-1702-4558-8271-e5df8aa5d060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "351ecbea-f128-42de-bc0b-538236b3a3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eebdec94-d65c-428d-967d-383881732844",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee44444-ab61-420f-9d3e-04e83e26262c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c63732-d4eb-4dff-8365-9109112dd401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452e8bd2-3a5b-43f8-9d71-301a1771b15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dffa9782-2bc7-4aa5-b7c3-1366bae6be3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b002cd-c498-4ac8-8101-1542d677ce81",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af98f9f-9de9-4e0a-abd7-9272a273b63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01338c9-fad6-44ab-9796-7e1b4b6959aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a31f91-6794-4a85-8798-60ee337d1da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aeb19ac5-cdfc-458e-929a-4215ea17921a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0771ed-e0eb-488e-83a6-cac842a0c504",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16a0a24-d651-43b2-b425-baad0525e433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a37452a6-781c-42c4-a897-a1426d4bdc10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e2d561-baf7-41d5-8390-916aac86248c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d05b0558-13d6-4211-bb86-651ced906170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6987cf8-6236-4662-ac24-439fc44358b2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b13f520-5709-423e-8ec4-e77194f2a615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe12553-c4d5-4d7c-b64e-ec288f6ac92b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421eb4dc-f0f0-4636-89f3-734461900298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21b830c0-6416-4926-844b-fd5f12bbb959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b53392-43d5-4985-9a59-8fb5223400d3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4dfd88-8003-4311-8aeb-da0e7563eddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e14760b-032a-4c24-ad45-1a3734facf7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee179a3e-fcd3-46db-874f-ac62c31a4680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "93460616-7d41-4f01-8b05-ed80deb709e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5687f561-31b6-4ca5-b981-49aa68644d1e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3121058a-7ca0-4d48-b95b-49f5656f81fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "653afbc4-8281-43dc-9d35-12580e91425c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc4b259-faec-40a1-968b-e4c0bbb08a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c798bb3c-2a70-4916-af15-ec9b96d32adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2142e587-cd76-4b53-974f-783a7fa2b09a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bfd3a5c-49f2-4e17-96b6-6d53c051c3d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ac2a582-cd69-46d3-9fe8-a6c4a0eb016e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ade129-4461-4fdc-b4a8-ec67d7805d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b3042f9-64ab-4980-a0c3-7f664a752e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f666284-c925-46a2-8b85-2d43399c118b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0daca677-7da8-4984-beb6-52744f5b2733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3977ac09-5046-4493-85fb-3507e403581d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37bf535-0cba-4136-bc96-69fada6ceb1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "15a62aae-99ec-443c-bbbe-76d3af929ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc86cdd9-677d-489b-b52b-d57c0f1bbc15",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc8d565-6af1-482b-b073-346afca2d915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b47bcc8c-3f3f-467c-aa7d-2478187608e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36174a73-a10f-4dcb-a8b7-bb151c9ca55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "053dc864-a34b-422d-8d1b-898af1afab3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12216238-80fb-4ea0-9fdf-a7475f2aa871",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6c7177-5f1c-4d6e-9888-8ba4196f2eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "330f2a7d-d480-4301-83bd-ed5fd5ca20fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f453c99-6fb5-4863-9aac-d59244207d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a1cb6ce-2521-4ba6-854f-1ea16cd320ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1501151d-580b-4004-abcc-590dff17c43e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb7fe98-4fc1-45cd-a187-4beb1c2dfdbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4bed2ae-a63a-46f2-8d8a-1a9276a7f117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34015256-74d7-40ca-85df-49bc613e3dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0766908-72f8-4fe0-b257-bcd4ced85ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acfe95fd-6aa2-465b-b64c-8871103db633",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c922d051-502d-48d5-a05b-9cd669ac7540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59205840-37bf-43fb-95cc-bbcf3025dc39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3c49ea-e5fb-45a2-a7a8-f372239525b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f862b55-dda8-459e-ad45-6bb0d468217a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "172bd423-5542-4da4-80be-1c9f71b18204",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5429b4cd-c916-4930-be38-ac10fb9694a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc05b167-87b1-42ff-a7d6-518745ac6cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf33305-3836-4d96-92c4-b1e57b60fce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "174f54dd-e300-4fcf-83d5-4fb74003fa5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db8f354-1512-490c-92e0-577b1477a494",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfda8c14-b7a7-4d18-ad2c-d50110248ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "449aa199-6b96-4f0e-b4f3-d63f9b6a7a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c78a6a-28fa-49d5-9768-3d9f112b7f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e0835ee-c5f7-41de-8895-0d1910852cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fdce1ed-ad54-4990-a7db-30342ebb1ea2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd9acd9-4c5c-41f4-b14a-c2d783d2c7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0edb4d3b-6c75-45ff-ba13-e38d57187f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261b3990-6bb6-4041-88cc-10eda9d98e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3566fb2b-b43f-4546-bcfa-4d053b0a0cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0fc2a0-9b69-4470-89ff-3675714dfc3d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df93312-14b7-435c-8dc8-6a4e1a0fe4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8738f369-b764-4846-8800-8519cb2a61d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afffeeec-3124-45c9-96c3-230e54452b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa272ce-ff46-4833-a68e-366b6aa4295b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af650ee0-d4fe-4b54-b465-7d56502854f3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "584a7bd7-c6db-46f2-8b7f-ec46c378b4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c37441bf-aa60-4d09-8d66-20c89aaedaa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fccb055e-a47e-49d2-aad9-b16f9e430b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc3b54d0-249e-49ea-bcdb-268bb9b4035e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd6ce03-296f-491b-b4b8-10933eae7797",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f57b1b-8c4b-4e5d-b02e-cdaccea54854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca86415-6a74-4250-abeb-7617fd702978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b9220a-0bb6-4b72-aaea-d7f6b27d5bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf704e16-e8a2-4404-b9f5-86b10a9d0258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d417f94-c32f-4ce2-a149-c3ea27f7718d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "016255c8-bf9e-4510-af43-c65c8ee826ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be2f033-37f4-4520-8bfb-94ce0b3e05b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fdeb53-3e6e-4197-a64b-baf465dcc2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae1b7159-5698-43a3-8673-1b2b781486f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d983ba8-f1f1-4e62-afe0-b43df5e98148",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd082284-f453-4c4c-a96a-67e0eaad51c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e380d1b-9ce7-47dc-a068-9f81e9f44576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bcbfc6d-b8bb-42e7-931a-abc5f143412b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d19348b-7c60-4bbd-b1ab-fb3d9f100ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274f5f04-041f-4816-80cc-a29dce878aa4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "201f1e85-ee24-41cc-8a5d-e4000a3d6c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb988fe0-832d-4aba-83ca-b09e706df746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152ee4fd-b341-47a6-8004-380053d66eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53b7854d-8785-4b61-88d6-24a76e88ae6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11eb8b40-910a-4992-b5d1-e2b4d466b035",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1bc68dd-13b2-433d-a166-65b98eb5adee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65643582-c6c9-4908-9de9-2f3f2cfdaff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37283d92-a6c3-417f-8587-d80abf503770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bba436b-e964-4b98-a0e9-64a336cdeafe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5bc433-d4dc-4177-b5dc-0a809b912f1a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0e8e4e-c34e-44c7-9fde-0889caecc7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2c93d97-90f0-4ecf-a4af-f3bd5378ed75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c30a1e9-0e3f-44bc-9d53-5c2416608eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "da88c1d3-b7d1-4634-8b9a-55ef5c3a4e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e39ea4e-8bcf-44a5-bd0b-8d2def1084ce",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7574ef-ec3b-47b1-87b0-18af674fd95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0386853b-8b14-4c27-9e7a-337156e3c853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c8247d-3a7c-4d11-86aa-5a476f89aede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "203a4461-1de8-4c76-9f6c-9612686097d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9253d1a0-8a1f-49a3-b613-ea1ea8226b76",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf26e40-53d7-439f-af3c-913cfe271cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd57eff-ccab-4ad5-8f22-fdf130d9d09d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f40ce8-eac6-455b-8fb5-85b8d4bf7edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "799add3c-618b-48b1-9502-2ece11acb449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7271880b-6ef2-4258-b33e-1dfc756f27f9",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a554841-db37-4e30-8915-50799eb051fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c69a2f6-a0c6-4c63-8360-4e27918866aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19842bb8-4136-490b-94d5-889d131a17a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a58cc7e9-e3e8-4531-a5f9-9abbdbc3c179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f957f67-ba34-4d64-8e00-ad00065fff55",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c15deb-cca6-44a8-a86c-a92ca00994d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e7b2a7-17da-44eb-a478-8b916bf8a441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49692a7a-31dc-4d33-8390-76e155bcc817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35afcee0-0b36-4de6-b3bc-5a2b4303d419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c63417-62db-4cdd-9905-04d1c774c32b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6856c2-fa9f-44ff-a93d-c65ac3078ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d997f2-ec21-41b5-ab70-b9e7b9786b44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed086bb5-af3b-47bf-a769-e248f6c0997d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "22766cc6-ad58-4b66-891e-803cca66d268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d114d725-1c32-4e72-b00f-ce4ea293e449",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8bd997-d219-4db7-8629-8fe3360d53ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1bf387a-c181-4638-845c-2c661e306a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8cf5a6-06ac-495e-ab69-3cdd4253eba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dea6743a-10c7-4f91-b2c7-106773513ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614f0cb4-dfe5-43eb-ae4d-9d4cc4a95076",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d762683b-173e-458a-a026-d123fb10415c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ad0862-ed98-4b75-90f5-f65ab9494efc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b9be09-7853-4012-8f8d-322a41d6019b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b75b86b-a4ff-4acf-8712-33ecf51fba23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936eb3ab-00b8-4df2-8ba9-9f0c499ca7cd",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae19ca0-f8fb-48ec-ad8b-12082af44c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46693cf0-bf0f-46cd-b5a3-0e991887cd82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08390c42-8da1-473a-a33c-b17ec9c44ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1451b974-e80d-4927-a8c3-b6b2cf420323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b4bc93-30b5-4a2d-aa4e-735dcf6ab0d4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b1e6eb-417e-4db2-b067-f6fe747f638b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ea3edf-bced-4a22-a98f-cf1f138c338e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704d0c2e-50d0-4ec6-8796-fc6cbbbe675e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c97a84b9-f028-4df1-9fed-9606c8a6bcf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb06b16f-c2b2-4907-9ef1-8eb96bf021ae",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad4c606-44a1-4a9f-9726-bb384f86ad39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f5cd6ac-e6f0-44d2-bb20-d38281cae59b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34f6d58-cacf-4ef7-aa99-a6b9e7da4c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "38047ef0-d1ed-454e-9979-4aee6cade1b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4845a6db-5cb7-4aca-bf6e-0a56b3cee2c5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3871b5b0-c437-4066-950f-e971fc322bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "282c36fd-91c8-451e-a838-63121e41a7d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad341c37-862d-4fc2-ad18-16a51c60151f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6bea8198-b29d-401c-9455-ba8fac1b3912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f702d624-f182-41e4-99a0-371695299f38",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19118c1-d1c9-4ccc-ad85-e17ba63a2997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac31015-94b7-4801-b9f7-b70e099604e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957ed822-75e8-466b-97a0-c5126d43678e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc195e5-999c-4308-98a9-2a81c94ea7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf28523d-e156-4966-84ec-9e9578af1321",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca6bdff-c600-4079-828c-148f8fff0b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6f39669-266b-4c79-b9b0-6a1d3ef4872e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ca375f-04a0-45df-8af0-57dc1afa0bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "92dffd65-067c-48f4-9042-7c659dcb4a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc76088-8910-4348-8d8b-e7f12e5dba6c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ebfacf-cfe9-4a35-b849-612f7a12c724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "813abc10-a939-4397-b089-5b0bc69c27f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51bc77b-d886-4d93-834b-ffa9de165330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef9e47b0-5838-46e6-8885-449aa3375336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1632991c-1f89-4820-9713-573936b8c976",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cfb3db9-1aac-4026-b8c9-b921b579d4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af6e6ee5-5185-4ca9-8a79-94cfeb605920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28b6294-572f-4930-9f59-0d032bd42b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "56dd7485-84b8-494b-aa90-7da639ddb466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f46677f-2f50-481a-9363-cd5d060849e6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a0523e-b7b0-43e5-bfa6-41de76c313c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec5709ff-c439-4b57-afac-25f07b18dbb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4a0567-fca7-4b77-9969-01265e5948fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "04f2690a-bf11-4d09-a3f4-6234de16b5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3e552c-40f0-44b9-b5f1-1bb9c0171e56",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be24c88-c803-4432-93df-a8c8214ce287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00a97474-df48-4e0d-a233-0c88ae06ea31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a14df05-790e-4913-9fbf-3d7509346db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1d20812-91b2-4ac0-a3a1-5be3212d9df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983ce3a6-1ae2-4f41-92c4-6cbec8746037",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ceb29d-e000-4c43-b980-0dc94f145f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ca014ade-a7a7-4e8c-a683-f99633e07dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83840e1a-4684-482a-9228-6892054c15b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b4d9a42-0f8d-43d5-97fe-9ab41e2c81e6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5de173b9-709e-4b77-83df-d5967bfdf792",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5cc82702-70ae-491e-9f91-bb27fc6e6597",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d5db25-d15a-4da2-9531-1f4e452045c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "afc56f22-c142-4068-89c2-6854144197fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2df34f-ae0a-45df-8546-e5e2deb23dd4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4bb1623f-f566-4e86-b1d1-d70bdab670fe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "002a6886-455d-46eb-8c80-14e1055710a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66c7d7fb-4ed7-41bf-933f-efdc30ae2a33"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8dccf48f-c3f8-4afb-ac2d-0a06636e34a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09993204-2f4a-477d-afb0-91b9a4d12da8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f6968164-ca79-42a9-9da3-8a128451af3b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6dcf306c-80f6-4ee0-8eaf-82d740614065"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d39d2def-3976-466a-88cc-a62c68b56b5e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7e3a83d0-9120-460d-a907-16ad84646218"
                }
              }
            ]
          },
          {
            "id": "902ef9ac-4960-4776-80b4-a53903161824",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8e470a04-4045-4dbe-bdd0-4f147d8f7f70",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "951543ca-1a11-427e-b76b-97172f48a478",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05da362-b9ea-4bfb-9559-5da7ef9e796d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "106d01b9-876e-4acf-b0e7-8703b58b5a6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feada601-cd26-41ba-a685-678cd6560e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ee086c-7512-4ba1-8843-cde5ce538d3f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "46d823e4-203f-47d7-ba24-4c38cfb41155",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1dd12eb-aff2-4aef-8721-5ce06a29a643",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a9e015f6-defc-4370-84e9-d80547689c7f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ab4d4ca-4974-4594-917e-39b2dba5ec8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "22939cbd-f5ff-46bd-ac5c-49d70ef0b341"
                    }
                  }
                ]
              },
              {
                "id": "840def7e-ec21-46f1-b031-5b91d8fe2dc0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8831d5a6-8f7e-465c-84b3-48f118866044",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ffd1f9f6-92e1-458e-bec8-7c46f8e81b53"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18beabdc-9061-4db5-b25a-a2df1bf4dc3d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e354490e-bd45-42c5-b318-6591dcb96e45"
                    }
                  }
                ]
              },
              {
                "id": "02644429-04ed-4583-8124-70d2e7d6d19a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "680b743c-3baa-4970-aa72-fc76ed79c351",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "44c113e0-36e8-4ebe-b61d-01c9edf9fc8e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e12c56a9-8b06-4bed-ac0a-3fafc590d110",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "aa95b231-26ea-47a8-9115-14f72a0ba255"
                    }
                  }
                ]
              },
              {
                "id": "2eb22f29-7aa4-4496-bdd7-995f145418fb",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7561c093-4c18-4999-8dd8-9c0ab775cca1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a817b5b-18a3-4a38-8f1c-74612a71038e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "628f442c-f47d-45eb-a0fa-6d45c97e67f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f323505d-dfff-475f-ac08-16ba1b9d1dad"
                    }
                  }
                ]
              },
              {
                "id": "e7e7354c-843e-49da-9024-ec316eee7be5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "61df196b-f36a-4bda-b05a-02aac256ece6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "adb9f5d8-5607-4812-9d95-d792cff51ef8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6766ef5-258a-4bdd-825b-a4264257482d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0f4e2014-2350-48de-a7f7-37691960435e"
                    }
                  }
                ]
              },
              {
                "id": "97cac92e-1235-4f77-b919-92ec0e8cbd27",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "607f01b4-ce21-48be-8732-0de1f55e9eff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cff3e126-5704-4c5a-a3e4-a69b04609e08"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9591524a-0a55-4b87-ac3c-82acbe33c22f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "055d04d8-ed15-4ccb-b223-3e0a3711181f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0798799b-c676-47dc-81d5-fd3538d72dfd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c62454a9-80d8-4bd4-892e-56365661200a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3cb8227e-0a2b-49f9-86c6-ab048b8f0c6a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6b1dff7d-13f4-40a8-877f-fc7dd5c19a53"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26b5ccf7-d14d-4c88-adaf-4cb6a3e1979e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "535f58a7-154f-46a7-866f-945cb1fea53b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b3a4b67e-0b3c-475d-a5c8-97d1275f84c7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9961d861-bea0-4ca0-9884-c9c338e48409"
            }
          }
        ]
      },
      {
        "id": "7b634cac-a465-4683-8d3c-a66fc9c3d7c4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7bf09a4b-b1e5-4789-b894-5968c4e817d5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "67d30675-d061-4cb5-8dd2-cf6298b6ddfc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "88a0a760-926f-4636-8433-7584d99a23c4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c438730-7c6d-4616-ac7a-23d2d982684a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58eeadcc-b672-4d0b-a3c8-98bcb621c5ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "212ed7e2-ea2e-4bfb-9769-9a9b47e59c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "52bc854c-4466-4ad8-9006-2a28715d5a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d68399d-0b7b-468f-9b54-cf2a7e8dc2d8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8a8460-af56-48f7-8dfd-90f7e32b5516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ea76d7e-4c68-4d24-aff1-e0695192bfe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e80a99b-71e5-4637-bcec-d52328432df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4e1a98f-dd90-4b8e-b104-2441aea6db9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8f82c8-c293-4a82-8301-cd8908c2fd43",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925fffa2-a932-487e-9c69-036da326e394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6f81744-54ec-4110-9c15-5feee3f17b73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1695b18d-722a-4670-b95c-b375103d7d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "371c0b9d-a8fc-426c-8a9e-1020649738bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b76752-45fb-48f9-9929-65f2223a6ce2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7bc8e4b-0f84-4490-af43-befc5d1ea827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99567883-097d-4149-956a-6bf7ade94e49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c982fd0-d1bc-45fa-bb29-7148517ad2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab753111-9732-4e89-8921-bfe19235da83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a31df4-5437-4c60-9342-1152d871a8d6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4ee844-63db-4390-812a-d38d4d682e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36946122-6425-4bf8-bd29-f5b73d15959f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0572a1b2-5ae0-4da3-9878-d362880a5eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96d74b5a-5e9e-4671-bc6c-c2a88c05796c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1ac430-bf1a-41bc-acdc-567ac9fa5981",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02db685d-720e-4079-86bc-69535e897a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc34f6b2-64ab-4a45-aa16-4aa3a914b77c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99df1ee4-7420-4465-8158-5b6db1d73fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "18f52035-0adf-4dcd-8a05-f3580ebb4e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b7b706-3cfd-42c6-92b2-76caa8ead93a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28993118-9792-40e4-ba6b-e92a63de77c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da6bd67d-3a79-4e43-8d00-fb284d96d98d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a056b6e9-05df-4239-a66c-795b37774e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c983bd00-6465-4a22-bbe6-ff8372570a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dede992-cd73-456d-8a5d-859b90dbfb13",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc95c2f-703a-4c41-be5a-d1fad373c9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c27d8a-4023-4b0a-9862-29c541355d71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a950868f-e529-40ab-b5fd-df0ce22fe35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9c9d757-f5bd-44a1-a4d6-b595018bad40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09db183d-bd4c-4a08-8e67-54d314439257",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc1b1df-3264-4fe4-853b-5853c4e967ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9edfafe2-73db-4fc3-ae37-455f0a55b356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5bbb612-c4de-4ff3-a8a2-24235fe58ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "144eec8d-e2a2-4ce5-964f-bc7495d75f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8193cb7e-b32b-4745-8027-81d9576f6232",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66aad345-00ea-413c-b095-4bfc32b36e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1d5531-10c5-480f-ad91-be1e9868e2ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c3cd53-6bf2-45e6-9674-58d1c719494b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25150984-6b12-4220-a754-3db14cb6a09f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b970200-b99b-4cd8-9898-9397f0e12da1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d20ad0-7adf-41b6-9f4b-3bd8b55f7ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6540c16-c963-4c03-af08-6d7dc2263e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d6ab0d-f635-4fba-b830-53b0c6a0f439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "62ff0a92-444a-457a-9ca4-38962076780d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17b1975-4370-4af1-979c-e210349636c0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c9e2fd-e146-489f-b428-5a8b2276ca20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83925f0f-21d5-44ff-a1b5-d4ffe471851c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0f033e-77fb-4333-ba8e-8ce3214a05dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "329b3f5a-3dd7-4461-ba19-2282480a516c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5c30d7-3136-486f-9dee-1d38cf5aa4f8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92be15cf-53da-4abc-8557-a1190adc61ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c59c765d-ae05-415e-99cd-2523d836c53d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58eda20e-7bd4-45ee-8328-cc76d056d20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a3ab965-1c7c-4928-8df8-ebb579d2601c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7bcf97-ff31-4eeb-9560-4ffacebc1739",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba25a7b0-1012-43b4-bf26-307883f462c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f779f05-86fb-4921-b379-91bc9efb3fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378f92ff-9ef1-4d1d-9b06-ad31a6a76ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "007db926-efc3-42d5-ab70-738b7bef01a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867538b6-4753-4c15-b7d5-c774ce0b5dbd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25038871-bb94-49af-9977-fde3f9f00aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa565372-d4d8-483c-b366-f4c376f3c717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cf3900-4ece-46b9-bc3b-b14a045146ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d7203fd-de98-4268-9fdf-a904671e47f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9979f0-bd1b-4afb-9aea-0d485c9cc2d8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4047b9-c25a-4439-8aad-d0a0aad14fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d6e29dc-06b9-48e8-a3ac-a88a6ee05a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd6adde-8e2d-468f-b8c6-ee8b911cdd3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "515f6be2-de2d-4300-ac64-3c6effabceca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a69feca-dd80-4988-bf29-57cd0833f803",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9ec59a-d201-4f17-8563-da39d9480fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e00363-feb9-4715-bccc-24b653e954d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5958130-1030-46f6-a309-feb4e5e961ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "655a6672-ebb6-448a-9913-0a6c493b2116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8d4d93-162b-4c98-a6fc-caee8c9ddb25",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea042a77-1907-42e7-85b7-b380421e582d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba21258-35d5-4eb9-b590-6fd7affc99d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf4ce36-9886-4cf2-8bb8-de3eef082c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7846539a-4af2-4a03-8083-f4e29f11f025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a5014f-e1a3-4d99-89c7-58ce0d26605f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678132d4-361b-4d95-a8fb-dccf0bc6465e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a866eebb-1a94-4e0b-a49a-eb373193ff27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abfaeed-a2dd-4ede-8747-8d05f19bbded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7506bb2-be5e-4cda-9e95-c3a925b3c15d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7e185b-231c-4dc4-bc69-3ea3e213a17d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2867c8-647a-42e8-83bd-4a6a16e1787f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5def0995-ab43-477c-aa70-b373a9232d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37158676-88a0-4383-b66c-bad4de6ef09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb320ea8-c46e-4b53-b024-ca2091225fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe240a23-7b87-453a-91f0-970f8bec92eb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58091458-05cb-4bd8-ad82-db881f256808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191ea536-8917-4728-8c00-5d8415e30dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43cef72a-f6ab-46ed-b0dd-ce35a80806f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "890575cb-afe0-427c-85f8-f6b1bfc18507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91c2815-cb31-467f-b708-8d6c6cc5bb25",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9414029d-8416-439f-8bd5-5f10d06d5135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf0cc40-0ed2-455a-8fd1-b53b1fad8e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901f3ffa-426e-43ec-a51c-75683ebc4a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f05d95e-2430-4683-82a9-4037efced912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb65a97-28f0-4ed8-8f3d-eb7485eab1de",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69f80a8-3c2e-4d3a-b2f0-47303b86791d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad280c7d-e782-4430-ae9d-5832bf281b77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8bcec50-830c-425c-beb7-cc7358eb936b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64344e64-6eb3-47d7-a3f0-7c370bb5d06a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbf8334-432e-4bf2-8f15-f03311d169eb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f263fb9-2c85-406d-b3c2-77f3d98bd700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e9043d-8736-4cd5-b4a9-731ec61c46ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6ab418-d19f-4bb6-941d-8cb3b20599d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0acfd1b5-597c-4f8f-ae05-098c80b9024e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3572c98b-e296-4b1c-b3b8-b96f6ada9f41",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e0d465-9218-45ce-b27c-46beec9a8131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "889ef2db-0326-4d48-b0af-9ffebfc035ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51905d93-272d-453d-afae-1ca135d3b04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "273f06f2-f25f-4528-86dc-c701e4077194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb1337a-19a6-4259-8c00-6e891d128200",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72deff6b-c416-4b0a-938d-3317365fd2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "114cd0b4-8b58-4d5b-b34b-2ede48d7ff07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4fcf50-3a1e-49e3-ab37-f4a1cb9dbe2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "347c2e46-d786-4b7c-9982-90046ca4e7a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ed252e-8622-4fc8-a861-f8db787089a1",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04321b5-e544-4125-a694-2285e37a30ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b92b9637-24a7-4b3b-a60f-053f65cc7b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc11834-38e0-403c-a2c8-864b9d43853b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "058258de-4b4a-451f-94d3-e3ede44c445e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79e56eb-8015-4279-affc-16f69381e712",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d4a59d-79cf-4077-92da-c51d74ddba9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e2a3b2-f5d3-41ac-8eb5-8d103e186b5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a6f760-e381-4d82-aa8f-625348ae8e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "266efce8-a8d2-439a-9783-56636700339f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e13660-6f69-435d-b9c7-e4314e459c03",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e87ecd-9b51-44f2-ab48-5f9c363413a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06168625-460a-4b42-822d-4adc2123634b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1899a8c-477d-4d51-b7c3-a539d94728eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba30cb47-3981-44f1-8672-cda9f43950b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83bb1f9-719a-43c1-a8df-8e037e06600f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cee96c6-9039-4fca-a321-1f54114e308c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da3f9f80-98de-43b9-bf41-6626f11751a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39df54f2-162e-42eb-9817-9a93e5adc6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e30846c0-413e-4356-9a13-7627f142f453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a01fe2-efd9-40d0-acd1-af470ad5f3ba",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8b6e5f-0637-494a-9405-e664181c53dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eea8f7fc-6676-4efe-86b0-bc69a75345d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff131aa9-adc6-484a-94c0-63868212c844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04faa770-f9bd-41a0-abed-a3a6d0b147cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f4c321-f400-4fa3-afe9-88d68916010f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82f9974-7cca-45fc-8fd0-f11e0aca8bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6b93e0f-cdbf-4eff-9b0c-d8bffce458d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aded7098-ba6d-43f8-9ff6-ba277af63e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8819e032-2f27-44ae-b4cb-f23a80babcda"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "13fb6b36-17ec-432d-a1f7-b76f5709642b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c457401d-c649-4d16-b0a0-7d2e2f5e302a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2201a5-aa8c-4716-87e7-78f1d81f675e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "695f4959-b760-4f39-a52f-0d0df34805c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fd9ef4-92e1-4b10-863b-c5fa7e54fcc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "055e3c85-d40b-480f-8dc0-6703cfc0d674"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4008d64b-129b-4d9f-910f-7f97d3996675",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6965423d-d349-4c7a-a47d-a79767fa17e3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0228f75e-1c3d-47b6-80ac-167f455a801f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32f72ab5-3260-47f5-bf1a-ea09301751ed"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "47a9bfd2-68f1-414c-b7d5-d6759d50bd56",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bcd40f2e-e8ff-470e-85c3-d579d4b01225"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "22294c8b-9555-4b89-b41a-cea004305da5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fa7dc4e7-de04-459c-a76d-ca5e45a2de0b"
            }
          }
        ]
      },
      {
        "id": "e2ccb154-d00f-4fff-8261-156d349e85fa",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "bab0e2f5-dbc9-4f8d-bae3-f818cdcdb899",
            "name": "Negative Testing",
            "item": [
              {
                "id": "834e6480-7439-4a5c-bc76-14bb96539053",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6cdaf176-7a9e-484c-ba8a-7711ec25cfd9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd28c9c-7dbb-4b0e-9e7d-a88a8a793f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e265435e-6fe6-4e32-91a2-89ae831af62f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12372f3-8916-4cad-b9dd-04d8abb8334c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5610f874-4524-4c5d-8ba0-28bf306bcd95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03354b9e-e99d-46de-b4b3-dcddb515389c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9152fe-d14b-4a15-99a2-96d9edfd5f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "613c2d0f-d0f4-4560-8972-c248a38fab4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555dbcfe-7f47-4e8a-a329-d1bdf7401bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad119c93-bf26-4d29-8391-c265004e6a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da38ba01-7e87-4856-ae64-38aa6525ab91",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30c3ab4-81b3-476f-8409-f8bf30cb4395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d97a469-2e0c-4af1-87ac-b190ff00f28c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5373485d-cb01-47cc-af4b-92e3be94019e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e81aeb0-08eb-47d1-959d-cb6b5be960dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f1d628-5123-4aed-bd5f-9e46d6dd4874",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ae3366-3b69-4ca2-bcd1-f33912dbd049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5beb8b77-2ec5-4739-881b-2763e690ce9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b13740-0421-43fc-8676-7da00784a184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc0f2403-26c0-4b46-825e-28085c04c3fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62859d9-5aa8-4d0c-bc8e-c09c5c3d800f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d876ec-498f-4e38-8215-62554f428f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d999601-c40c-45c8-bf0c-9a237ed76ffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01cf79d9-0f4a-4463-b1e6-c331ef4bf2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f325487f-6508-49f0-b912-74e498a75c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af7533c-fbbc-4c73-9e76-f4036351504c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2e1986-6531-4c52-82d7-1bc4a8e3576f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e16d7eb5-4c4c-4363-ab6f-afb31e81a6a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205e7dbb-b893-45ed-8506-7949ab8b658b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "78f16e98-eeeb-4337-a0b0-b31562ebe8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa4b6cc-07c9-48c6-940b-90feb6f2dad0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "457916f5-36c3-4355-aaf0-12d3ea9f2149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78226123-b05b-4f39-bf01-4181ee11c7ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3373c9fe-a5a0-4ca1-a8ff-9bd7d4143fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e946dc0-a27a-4966-8a6e-44595056d7ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ddfc297-093c-4cdb-9509-6946ed585a21",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "943f7919-a01a-4201-963e-f10c662712e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "937b0fe1-2528-4f50-9f15-c8dd992e0e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a507cc-e311-40d1-a741-1ea28746c2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "994bc67c-0e71-4207-a476-6d330907e3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf28fa3-d3b1-4558-8476-01822d3cfcd2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfafe1d2-6892-416e-b6f8-7668f28cf39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "423ff299-b123-4d51-9455-acf99726e72b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8962972-44eb-4066-aa41-940e16fee4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45f54364-3347-44f0-817e-f7ebd260523c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0e988a-4fad-497c-8f06-373cbe75eee9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99555756-bc05-47a1-bb44-c2f59b6870db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e727876-cffc-4a26-a01c-e06a9fa8d5a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f9a924-d007-4888-b473-89d2f6a5baa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c371bd38-94be-4079-9bd3-113f7e5e20e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16d625d-942b-4781-849f-78dbef32e017",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b447ab-7eba-4b3f-a1e3-0088e715e3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8838238-70a5-4388-8968-d0ccc4f10f4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81219d8c-8c55-48c9-8791-69f2edb4cf70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "29f1fba9-c5d5-4b7c-abe0-0b98447f9a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6a1d8c-6ead-4d84-a1f8-99845ab92c34",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0330a35-9552-4381-a6bc-52a44fdec8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e7bff3-657e-4734-9115-1d1f0609411f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0214456a-0074-45f4-94fe-bb6a82392db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7004a8ab-b2bb-49c1-952b-60df91afcd2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a422355-a89a-460e-a16d-859ee091b5b9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec07ff3d-cea8-4054-83a2-5f414e3361bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "227b9cbf-edda-40df-8b8e-d96c3064bf57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c50fd7-e15b-419b-a957-e59a7dda1c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c89e104a-8c4c-4614-9df5-93ec286c3745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698cfe1b-9873-4f27-8d8f-87504feebb08",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6c9cf1-659f-4cd7-a666-654f0f45c821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5acc4679-a70e-41c0-8983-252f59af2fd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15321baf-4384-4c9b-9bd6-3be1a0410a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4d1299c-9ed5-4e16-a27e-0f4be00a1688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf7b384-6856-421e-9be7-99382dae08c2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a790fcd0-c9c7-4bed-b321-462c65c60dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7dae755-961a-4ae6-a584-76bd7b2ce8cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30ac3e1-68ff-47eb-b4de-8e77c80f039e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec32ddc6-6cf0-4055-b3b8-2194d1130e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8155de86-0890-49fd-9dff-07ef924f8342",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8510e324-0176-4034-8869-81384126fc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f09ac58-b8d5-4161-a3fa-406c717ac113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c0c793-ac26-4af0-9111-58515b16dfab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1949cc77-fd5b-4bbd-9a7c-0f2f34c8494e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8927a670-1eef-49db-85ae-3009c1e6a2ef",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d8f398-40dc-4a84-87d0-60c0f39881cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "909c2035-0e93-43cc-b85f-10217442efe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a299764-b290-4740-9193-785bdcd7d91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "27cab5e5-0918-4537-b185-f7949c250a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d71c7d-4760-41f1-b6a7-7acd0b1da8f8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4b0b4f-a07b-4b7b-ad68-e8e21257e6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41bb566e-dc21-4043-828d-d088fb09687a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5adce1c7-caf4-4b7a-82a7-f75a5f0a578b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "94a42882-a82c-4af9-a620-7731d209d6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69a2214-a3d9-4d92-ae2a-91708eaddd03",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a134cea5-7397-4faa-9634-2183b1ff03a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c85c256-3f81-4431-9441-a291f21c4143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5835e787-6ee9-49b9-a5d8-05b96fbb355d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3993ecbf-027f-4068-ba32-343772947edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837404c6-0efc-458c-a9f6-6f0ad88e663b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a136c3-73a8-4434-b814-c4e640d8fa6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae69091-8511-4e08-96d3-65d10aafc24d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cebe0814-b025-45be-91af-d7cf98a36c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e08c3a9-8ce9-40e7-b53f-cfc40382bb3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0584ae-fc73-43d1-bddc-7961540c7665",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3393ea3-1040-4957-bb40-85bd9bac7ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54a8ca82-c59f-4a72-aa1f-ec4e392fac09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c8f10c-4b84-4986-8427-d4660f347159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27522d29-0b2a-4b12-8ca7-b43d35e1e0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fce8a65-079f-46b6-9882-fef71d153466",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b730a14-d077-4594-928b-83b020b3771b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae448644-92b9-41f7-b0a4-f1a4d67ea035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130952f2-0509-49d7-b646-79fbb6d56e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf7c4e6-6db0-442d-923e-7d092fcad889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30588f2-60a2-4001-80f9-3ba7f9ff68c1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd415df4-139a-4332-8042-82b65d8695ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3f8e5d3-89ab-4fda-9a7c-01688a2fb8c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0131ae24-5fbd-4e2a-af09-44c423f80a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d75dda2-7027-4fd3-8aea-2fb6648efa72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2fb5b0-1fc3-45e4-afd9-2280caf9b239",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ede424-4ed8-4ed5-8177-6f2698417724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff76d2a-0d03-4cf7-92c7-c95e9fd190cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b36bab-b46f-4e2b-affb-bbe4e60a2f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5615b9f1-4cf0-41aa-93c0-18ca3677696b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e50d89f-4c36-4ab4-b2da-cd7cc0f87fc9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ce2a76-d601-4fdf-afc0-38d9f15dbf34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1258262-fd75-4e40-82a8-ed07fb0b2978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5f8d14-7977-487d-9232-68309750459f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fad4aa6f-0fc7-4704-9bca-705864551b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad4ada2-ccee-4ebd-8341-2385ffa87a33",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c63a6ef2-9f4d-41d0-bfc3-4937f421411b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a6145f8-91c5-489b-a6f7-6d16fea2c588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51cf0cd-3d17-403f-bba7-d9762ac6f6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a984a06-8c23-44f8-84e8-b1801d0be8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325863c0-a633-4211-8a6b-70321beb6ea6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "430ad8e5-3646-4777-9e9a-99490d834a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e0271d-ef5d-4a69-af72-5e3865ec70b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01316124-6caa-430e-a2d5-3b86d7c6d1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20eafd2e-c93f-4b74-81f4-cde161bd11ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24fad25-1917-4377-bce7-6955f61e74ed",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9254056b-bd57-4ba8-85f1-32ff63662761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a5397f-20e0-41ef-8d5d-9165440f8603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1840a4e3-3c50-44b0-9f59-b86d19e5fd2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da081b82-cc6d-4ffe-8864-6d85adfb8096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d4d276-13f1-4fac-b6e7-f5d05f55502a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f87a8fb-162d-46ad-b0e4-d79c463af3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e711d46d-1458-4fe1-8afd-3fc37828b815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb8b7f7-e2ed-4b15-af7b-5fab27b54f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9284a5e6-197b-417b-b6ee-ccddbdfe65fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38888384-7eff-4221-abfb-3fa1e8b53242",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "755f9634-cc92-47fb-acfa-50f645637fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c01c9ff1-5e49-4813-9e01-f3787dd3bb0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87326f51-1103-4883-a348-fa6819d1280c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c5875c9-ea8d-49fa-8702-83c37ffd0118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bfe627b-26c5-4936-9abc-c1ec8dad3ee5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e06a45-6795-4776-abff-a6bd36c531c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "326b34a3-c52b-48d6-bee5-df62368f8c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c726bb2b-2255-4b1f-a7fb-6a4631e93a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2daea4a0-05df-4b46-a27a-279100e2afb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be5e7a0-fc3b-40b9-9eda-512d5ce640f2",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0905ce12-d57e-4ac8-9313-4aa2012d2611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e8e217-760f-464c-a1b6-caea8fdae41b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be2907a-6fa1-4d99-899d-4255a1aba9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efefee62-a914-40f3-976f-69a40c8ccaba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44261a70-46c6-42b1-ba46-6567513b9b36",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2d1e38-b126-4a73-8a0f-a55973bdffe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e10c20be-ff1d-464a-9a22-d6f15690249c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c660cf-5a20-4944-a5c8-fce35be2690d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed91035b-722a-4db6-b8b7-abd6aa9e2a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18ad9ee-0919-4464-b8ac-cdace5b738b8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323b2507-5dc9-4952-a4ee-eb6fa80ac58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "212762bb-3d60-4a73-b651-fb25fb74e67e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d78be8-adbb-4782-875f-9bff09e3a34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d7f945a-f3c0-452a-8ac6-9c3371f9f7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f584ff36-e0f7-4d46-b25d-11decaaf4028",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b4a381-372b-492f-b8d0-3b861efd1ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0401786-887c-4b48-b1f7-dc4733efc788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86aa54bf-2a83-404a-adf1-e1c1a1e256b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64ba4367-1937-414c-bc51-ef3ec8b83bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50058cf-1b16-4ea4-b629-591b822de5cb",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92aea8a0-58b1-4dba-92a5-e55962fdcfac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2866729-3a86-4398-b48c-b4679d7a77ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2bb5eb2-422c-4bca-9d4a-cf3d769b1f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c470f29-6d24-4f86-8890-8f5374d6142f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d489de35-859e-4a78-9390-32b44aff29ef",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cfd07d-a1d5-45da-94de-abe21e91858f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "831ae3cc-9d56-44e5-973d-76d546cc26b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96637c8-1c13-4a02-bec8-786952659d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1553fd8b-8bc1-4ef3-9056-bd126a4b659c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "72cbce3d-b95e-42a1-99f4-f976cd1ea2bb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "268ebcb5-0b7a-49a2-9840-25ce0a3dc00a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5127533-2bd5-461c-a5c2-486516c31b03",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b9a2964f-1700-4c32-b641-5fdb7a586e9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce3dc33-4030-42e1-9268-cc628931c886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2beec2cb-48db-4bc7-8563-3fa3ef97f96f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45a9ac83-5251-47d8-ab01-013a3f897dba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97ac1308-9935-4050-88dc-c68017129cd6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad126a9a-784d-4d2f-989b-08a58b238b61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a23b74a-020c-4d22-ac4d-15c1a4f987d4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f1cebad4-f2a7-40f1-b79b-6aa920739ecc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "215f2d0c-6b9b-49ae-b8f5-d74859625b23"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34d17041-db01-43d6-9a51-9878304186b1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b8fc0989-1d0d-406c-8774-63d036b76653"
            }
          }
        ]
      },
      {
        "id": "4bcb76be-6fca-402b-a9bb-a7355e8d0b6e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5a63aba8-98fe-42e7-986f-0f4f626dc781",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac228f2b-d4e4-4b3b-b281-0342d045cd4d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0fbd026a-cd2a-49ec-bbad-829f5b70d2e2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b215ae33-a255-45b2-ad8a-33ade65343ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2629c8ab-15ca-4b68-8e78-403948df6ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287bebba-4744-4f7f-9dcd-8f639b99d119",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2766bb2a-7ac0-4a6c-9688-c8a845d0d9b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "270f7b89-5bfe-4a2c-bc4f-d15457b0109e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cfee16e-ed7e-4ce4-bc7f-32ce955fe3c8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88bfee22-58ce-4fbe-986e-dc803629f431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0edc558a-9729-4768-8456-6dcc04f496e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6369b0e-89e7-4e8a-956f-0e7ec58d2880",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76618cab-f52c-43b5-affc-9caf5b7a621e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba0d8c91-50ef-4b1d-9c59-50a7eba4a71e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24281f28-6a08-448e-8d9d-4f60e0afd90d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4119fb4e-8fba-458d-8bc2-5880b51bc69e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c338a85-197c-4340-89a4-1bd29ae072e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9efff92-b798-4db9-93d7-23ac98d56627",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "958362f0-35f8-4343-aeee-b280cddef517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56a3cb4e-87e4-436a-b94b-63d4cac84588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c742e48-ac7f-4c35-999b-ff98cf18bb48",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d606124-8601-4261-a6a1-1ca13b9e1ba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b16447-1dfd-43ae-b267-6fc16b7180b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a860193-04ed-4c46-bced-a7b37dfe477c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c18e86a-561c-4b6b-9373-a2ca6fdd2cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50cd204d-f84a-403c-83d3-7357b9d5f5ff",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1706d6-8388-4b6b-839b-6a1100846e10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86b7b779-5d0c-4dff-b421-cd535755da51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8d108e-3b9d-4c97-9728-46ccba8038f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a4b4d73-0a6e-44d5-80e7-20a52377cb0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb62af2-0919-4cb5-805e-aa14ca719888",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86c1622-ba48-47c1-827b-416f07275e2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "424c63ee-8d80-470f-9e6b-48be9b24ad3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "755c8371-693c-4920-b30e-8b7464cd52b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc25be7-c94a-4285-b72c-16b78f690a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6d191b-0da2-473e-81a8-1d97f76968ac",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a55bc15-6624-409a-857f-e91e7c9174cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5429d6ac-fd34-4583-a851-8459178da000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd599a6-b3e7-4dc1-b972-90c920781506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31bb090b-5446-45ea-8da4-26dd36d50e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42fc332-42c9-4ca0-ad58-204e3de16c82",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33420e5-1cc0-48ee-bf30-c7caffec1bc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7733834d-e3e1-49c6-a4f3-800470d5b11c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68543762-7080-40f2-ae48-dcd1f5656638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a7e812-98fd-4e81-aee8-9e5b8bcf6d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f26c657-ee22-490b-b78e-04faf7d12e41",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ce6d76-0377-4a0d-8721-594f4bb0e372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b85cdeb-2389-4010-a486-0cc7aa353650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b15f697-995d-4b0f-bc80-894ec08218cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "014ada65-9520-4d54-bf6c-15beccea45d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a1708f-0eb6-421b-bb0d-05521460f027",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d7bcfb-7f4a-4713-b8a7-fc498655be12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdadaf56-17df-44da-91d2-a0d0795a4ba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eedf031-d428-4929-90b6-d28c782bcb15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c138ae1-f512-4774-b440-e877cf1b55ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f977de01-a143-43b7-af6a-6198bd13a692",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e624fe-7272-4d95-9361-5cad2362bf39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c6696da-54bb-4046-b497-ed4ddd1f0cf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35a2f6b-cd08-4f25-8b4e-e6a0c656ae33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a241321b-7252-439d-bcbb-e9a646569103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf228774-b5c4-43b1-a41e-3f2abdfa7ac7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12da5b8f-2f76-4502-b031-bc2b17e65994",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58f20a38-1f1a-48a8-a82b-58e8248046c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab94b1e0-8590-4f1d-8017-b5fadfdbe04c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed6482c7-2450-4c1a-89dd-0dd221f3e155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ed8174-509b-45c4-a192-ca32977bf243",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50cda8ca-b6c0-46e3-9b83-cb950b3a3119",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01bee83d-c4d8-40dd-b395-69aecb3bb1ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd351bb-5ae4-4d87-b711-0df2fee5e846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a32e2187-9289-4979-826a-bad551e68249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be009041-4e6a-4722-8695-f4e7c834c92c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0aa5fc-d08e-4aa1-b816-aae92c219ee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7b2ba3-e6a5-4966-b6e0-664ae27c81da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3d56c7-9951-4e01-a968-bc48e0bc00ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4396822-3f6c-4ce7-a311-693ef6630327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0498676e-e927-465f-bfc4-4d6752b42a5e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "537d7e6e-5a43-402b-906d-d104c45caa21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a77839-3a30-47d4-9c85-89cdbfc3b08d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62749a8d-dc97-413e-b6ba-67228d9cec67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea612137-1708-46b1-a4b7-10e8e6de80e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe969ce-f25e-435f-ab55-e8f0fe3c4c68",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a03013-ec62-4fa3-bde4-9b836d7d4e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8bf9f93-be9b-45e9-be02-1d60b59a71d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7774d7ec-c31e-43bc-b2ab-c2eec3a37bad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c412c6fe-a6d5-4fb2-82fb-88cd97385063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92a8bb1-4b4e-4daf-a4a9-f4120b57923d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad6a3fc-5b8f-4061-8aaf-ae6fbcb3e0a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5bf8114-caa7-46f1-a898-0a2e6b0963cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08aa647-97ce-4ef0-894f-df8d2168c001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30aae57-307d-4132-97f8-decd8c5f2a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3626c9ad-1331-4bd6-abfe-410b8839f006",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7130fa24-fb30-45e0-85df-b13389c7dda7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "863fc83a-a9b4-4ee1-92a1-cfb6af0529cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd754bac-4cba-4d00-b2ff-3ef310a7f177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ae65410-0059-42b4-9314-fadee66bf1e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff6adf4-f632-4492-a355-d2e2b078941f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24cd264-a683-48f1-8f26-067ef105d834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aca61ea-a8b0-49e5-940e-b96ae3a08a82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf8370c-2573-4f8c-9a4c-82c33f0fad0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecb174f6-4e13-465a-8364-9deaf5e8e8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebb39f1-4bd1-4b56-a07f-d288ae43fafd",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e74c4fe-870b-4b95-b318-5d474ef128dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89c3731b-1f6a-4a57-b5ab-dceeef2adaee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d9ae16-5da2-4464-b9ab-99a1b0e826d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f3e0c83-3588-430b-8296-e8c8083355e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d20e72-4450-4313-bece-adafc3a148b8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc62a11-f4e8-48a2-b80f-d096fabdab81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "555db44f-e3bd-4332-b00c-dd62e1b20227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba82e9bb-6500-4992-98d8-d7d5e64c6d28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a92c474-0574-46d2-ad10-0ee959cba806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf40b69e-4c32-4606-88b8-86e0e9c8bffd",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a67f70-1614-411f-8678-814d44a6ccb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34bff70d-bd24-431d-8f62-9ed46d4a3ea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b1cdce-289f-4016-92d6-567148746aa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c20d3e-9ee3-46ad-845d-6bd14f8ba294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a747d8c3-d693-43e9-a589-21331d455036",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9606bdc-3234-48a1-aede-974bfece0d90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d23a7d5-4140-4e15-ad87-c8e41be6a626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b46e262-178f-4398-984b-c3a2bbd6a5a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab31340-dd23-4ebe-9fd2-2b63a8e06380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615cf2ee-b3b3-4aca-b273-008e9c88c6e7",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a726aba-cc12-4447-8e65-bb38f2997a96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d447826-0969-4a2b-9397-b82cd1e12f5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9243c9-36d3-4353-8910-5a7d99a8aab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41b66592-b37b-4958-b6f6-955de1a438f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf6e8a1-11af-4d13-818f-ecaaa3d7b377",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a151eaa4-36d9-4e9d-88b9-4fd831680204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9289a3e-6635-4d40-af54-9610f001de09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d644e9d-40d8-4197-979a-aa361cec0bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e131b3a4-1457-4d93-9f12-27da3bfa5ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d7af443-116d-4095-ba71-8c513500d038",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b427d19-1e6c-4ecb-8170-c44dcaacbe73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffdacef8-1309-4849-ba12-2b01065fb6c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5209ec76-9449-4d38-9bac-365ea8e7d2d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c93e110-fb20-4e41-9845-f86fe56993b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb88cde-f184-454b-8caa-2a16bd4ee5c0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260f4c8e-4657-455c-ac76-65d431e975e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e88e07e3-07a1-4ba3-86a4-5dfd780c7377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beab0df3-9445-45fd-bd58-8c1c9b157b22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5fa3d73-ac0d-4805-a21a-b850f513daca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed944c18-1f39-4cc4-978d-6ab5701a3093",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84f2d57-5194-4021-864e-31de21ad078c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6bb27c0-bc48-4ed1-9f84-a10bdbf5d384"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54badfea-aa1d-428c-9a18-439387cb3d6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "297c4e95-a6d7-44ce-8e78-a1770ad39e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b81dcb-fc5f-4cc8-bdae-9c15c78ecade",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef213f0a-3dd4-498b-ab0e-f40bd8fb5b46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4db5ad3-747e-465b-a050-dbd275e5bf30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d787e722-7ec5-4db3-bb44-dd439c58db26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3568dee-2c86-4078-9bd8-4ea8f8bab064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d1a522-fadf-42a0-ad55-454415d1c542",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a69deb-2e5a-4568-a315-572648c16b11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7efe55b-d986-456d-814a-fd7e8d6986f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a690e74f-2f7f-40f3-a7fb-53fb3daf32de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0bc3f13-22e3-4a8a-8312-075ce460f1fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29469c8f-acc3-48d0-b412-3d0f02b04bb6",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933b62ac-da46-444f-824b-a72a1c267791",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "906e7a5c-82e5-467d-8d8d-06c6ec03fcf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a40180-892b-4f3b-9d8a-1241f1c613ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43dcfb67-45a1-43c4-b53b-b6cbfcaaa3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e562a072-0df0-4896-b464-fe1ccc3acae5",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1fef59-f072-4cb9-b749-1669b4ebd3dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95d33ea-b113-4ad6-b6c4-c294e2dc1bbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aefc8ce-b8a9-4d81-8380-823f543609be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b420f3a-e214-41c4-9831-2d9fc6785d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c4a394-7f41-4bce-aaa1-657a55f284e0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea300ff0-9cd1-4246-9a13-b46e665a0e5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1814f4f3-b9ca-42d8-aad2-2cb7b509d943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea79aada-6ca6-46c4-96d6-a2721c29a183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "939aad49-561e-4e6d-961b-e1ece24ef0c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa30129-64f4-427e-8d8e-906694b463a5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30edba43-a5aa-4611-af31-9128edc35b0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a63ffc71-0699-4519-8b2a-bd15df389290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2a4a7d-9aa2-46d0-a115-9f6175ac24ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00b9b278-6b89-4fdc-bae8-1981d2cb2c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3e12a8-3c94-46a3-bb88-3df4d70f2ac2",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd4f889-4638-425b-a263-58b04a724557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e25b3347-6dc7-4e6a-8397-ebd590f4a881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d683db-f344-47fc-81dd-ae882943a9d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1754027-62ca-40d5-8a65-f5b869cdc055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156fa6f1-7c3a-4a90-ba73-49989bbf162f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f15652-2a5b-4007-9f4d-34711162fba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb22a00-0c4f-4b25-8632-6a2db715e186"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7b0ba9-44b0-410a-abb2-c93653afec4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8387ca69-6319-444b-b8d0-664468c187dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d970f5-ec3d-415f-a213-48a93e8a7ad6",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab649e0a-802c-4ade-9e26-4d1e833fb3c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f81ca84c-fffc-42bf-be74-0df73f586d2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef696bf-d333-496c-b032-9a880dcecf27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74c99a7a-5501-46c2-b87e-e95464b23b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d57d4c4-06ad-474f-adc9-d61218613351",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0020aca9-b565-4bb2-9960-4fb6213aa55f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a00dccfb-e7aa-4564-85fa-be19b28ed8b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da81438-98f9-45a3-ba03-1b6bf02a746f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7db013b-43db-4492-bcc6-8064b2553e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4522b58a-67f5-468a-a89e-4d9add34419a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c9f0fe-fcb5-45bb-b3a0-958b91c9f5a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "657ccd33-eb1d-4e40-adba-2c68bceae6ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f38be0-f265-4d43-a4d2-a43fdeb2f577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a690db3-5355-4c0c-9746-6f3c4150eb7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176a9c6a-1657-4fde-bdc5-193d2c6445b7",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0036cf3e-82d8-474b-86c1-613533f646bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb6a2134-8e5c-4da3-8d47-ceabccd13b56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2343d51-c60f-4fe5-833a-5c2cd57bd93d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99fb7dfb-8ec4-472a-a71c-6b473010dfc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17e6ce5-6b59-447b-9833-3a8c1756fe12",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70cae53d-8078-4c99-9be4-22848ae01e78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86595cc0-b76b-4254-ac87-c34c04d80951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f05807-f1a0-43cf-9485-b4415fb0f1ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e49330b-ad76-406e-8cf0-e97d0511adb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc87cf81-132d-44de-959f-b9dce3285916",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770862c1-a4ce-43ab-ac99-5725f9980320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54a3987-ebf3-47ef-adeb-822eed1ebe2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ee147c-fcb3-4949-adce-15c8b7a6483f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f9d8e35-b8a9-4029-83bb-072df5141c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a84616-d71e-4338-b09d-f0d974d7ba8a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8933e032-1c31-41bf-80a1-ae6f7eef3fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ea51046-7e3e-4584-8ece-c773d469fc6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c799677f-53f2-46d1-9f9c-92766e517d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2086a536-ec52-44db-b06a-e22931385008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c9cc15-2348-4726-ad56-3f83bb781ee0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a28544-d1cb-442e-8927-bd64b2d75e32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a1a9d38-6bb8-4b39-844b-fc1e8927c215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05945716-74f7-42a5-8f50-817aef70d055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ff844c-2d44-4a5d-a920-44f1b66c78c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba85f2f0-0ad7-4d9e-918d-57966dc7f842",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb4f1d4-a358-4bbe-886e-4a8a27321d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43f94139-7c37-4de7-96a3-bd0e8ae83b5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd511aa3-783c-40f9-b856-21506584d9a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea42164-ae6b-4e13-81e7-05e863888cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67957654-18f5-41dc-ae7b-35abed8f4d3a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c33818-607f-4d15-83ac-47951ae351cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e92a50d-dc42-44de-a6ac-7472cf78b264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86474eb4-6932-4817-8bee-2ab000e6f977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15a148f5-5465-44f3-b0ec-777e8de7f3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6171ce7-8e0c-46a2-bec4-536e438fbe08",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087af301-c318-4e27-922d-cac772247aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c94cf94f-85a5-4bda-b30a-1f2950950b78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30db340-cb8d-4661-8d18-c3d373ad076d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7efb99fb-7123-4694-9960-c8cef7988028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f23201f-9e22-4d2b-812a-6c50c9fcb86a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b08b48f-eb74-4217-aa81-239a748f6082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b959c0ff-dc5c-45ca-9971-d10c6d7094b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88022c8f-1cbd-48c4-9ea5-113fe1c915f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daeb1f0d-f1b9-4bab-97f2-ba2d7a81df57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05077635-ac99-4484-9dde-7e673d9319cb",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9106d0ee-89e6-4a6c-918f-0ba4e4ab3d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "347c24d5-a260-4201-93a7-6c8971825c46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f0c227-c553-4bde-89dc-7c5a91feb7c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b3837c7-2279-4dc9-b9f9-e64cc9dafc56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01d053e-5d70-416c-8390-602bfcf66bcf",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28808471-e05f-4582-aed2-6e125881c00e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd6d601-53fa-4488-8211-c102889da26f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ca3089-9dcc-4653-8bc4-f415e333bb6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b5e5d8e-b8d0-43ed-b96e-35f160ac30d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d18c1b-9e72-4927-bfe9-f98ea723add9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4392212-2fb9-4cb3-ab9e-298136937ed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df60f01f-6d4a-4795-9f28-9b47eb300448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "487567ff-3df9-46be-9332-51e45de52d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17cfef0c-bdbe-4e94-8706-07eb704625c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4d2736-0960-413a-8080-ad7041d734e6",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d028d52-41b0-4bbe-af5d-7cb1fc1d6929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eea7d33c-f3b6-42a0-89ad-725e7625979c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be66404-e907-496e-b47c-ac33de854242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22832163-743b-4506-89bd-2123e3861b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fee342d-3989-4426-afc1-31a3167353f1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb69f48e-b9b8-4aae-b77a-3a0cd1d5d5a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f6d9469-2ccc-4580-b4a7-83f50b6ba59f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05d8dda-7b78-4584-98b0-5400bd024df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81135e6a-329e-4157-af90-5d07b2d5646d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff3418b-3dcc-4ebe-bf1a-e9e655f29c2a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a4328a-4171-4e16-8483-96279a336b03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a093e7d4-ac66-402f-849e-2f17caae71e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f7d18b-8338-4457-9061-1663428a6abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8ace5d7-d87d-46d8-b627-4fe867f98ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce206300-25bf-4ff2-b8f2-7c6840fa6877",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2743073-8ed2-4ef3-945f-12c71e713000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e620c5-4b65-44d6-9192-7223f38993f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4caa6023-82f6-46dc-a9d6-e0eb375f7705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d38121-c18f-4d2a-bfb6-2a21375cc0fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648dd01a-1c60-423e-97f9-863411ad859b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7ed383-adb1-49be-a622-4a698965501a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e90ee424-6293-4142-9215-8754c13af06b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d2a0c1-6cdf-4cd6-855c-53b7ac3e709c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "402eb1f0-cb8b-4cf7-871c-9f2fa8758892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d27011-2e08-44a3-89cb-d75200b70602",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02f575f-a922-4303-bb3d-c09dcd4d602a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b77f8a92-3e2b-4e65-bab6-88de7ac7099c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1dfe0c-acfa-4042-9505-392e080f017d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c84f25f-98e0-486a-9183-b8bab1577d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a66bdd-dc33-48d7-8d4a-c6a6898fcc3f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75199c48-3362-480e-9094-da949bed7496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c39fc933-8217-42ed-8d64-dc578ed14c40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "513e3a6d-c1dc-4789-a383-016c75b4864d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f317e770-2759-4580-ad4c-ddb9c020d517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c0a275-1696-44d6-9bac-83aa90ba8781",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63530c34-40d9-4030-a0bb-ca7f49f7e091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b241161e-56d1-4baf-b724-236f7238eff1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "354525dc-e287-49e0-a04a-057f40ac2a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "759e7e47-087d-48d3-8ce5-e81ce66757d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1539be-89f7-4d25-bbf2-86019ad83db4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20817927-9d25-42f4-a50f-74531cd99ccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b37e264f-9dfb-4be3-bc39-88eda8647a7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97fd725e-59c0-4dc9-b6d8-f8da19076ca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16ed6c35-cd92-4566-81cb-b9ec3bdf6ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f7a1db-ca58-4e54-ac67-e91c6406a4fb",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e72b5e-4acd-41b3-a12b-7e527734e31a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61a3777b-563f-4023-9d38-b7fe8ecc6db4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e65e3e4-3ae1-45e9-a70e-64b24484a790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21f76e0b-492d-46ee-89d7-0f490d4d1983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6159786f-8f67-494a-bb8f-04ac0d85de94",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41b8423-e93f-49ff-894c-b97ac8f47e24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c50b93a6-a02b-48a3-89e6-dee9fda3efe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49078b37-42e0-4553-8bbd-6b0149f01442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c0083f-762e-45b6-9bf5-e34c880a53cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d91e03-3b6f-49d2-bc63-76edc52d7f9b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4aebdf-eab4-48f6-a47a-0a6f2a46fb3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2212c1d-9b8c-4545-af55-30fb3f652099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d726719a-df05-47c9-9b21-6c24617d266d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06b23c64-bcd4-44e2-819d-864f57370cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4c8ca6-eb68-44da-94d6-41165f1030b9",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff219ed-47cf-4c18-a296-599346ea3d07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9bfb44a-a28f-4864-9fcf-93878a8b30fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88384df8-8023-447b-9c17-040faf031167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eabf663-0506-46a9-9ff1-eec821e4a0fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666187d1-0b59-4692-b565-546867bbd520",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2d94c6-c8c2-447d-b482-69972446ef16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f7b5496-a316-4aca-ad32-220c32fc92f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27e1063-f14e-43d0-a3cc-684e42cb4719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64f8f1af-1cdf-4161-8d62-476289720052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c21e13-4294-4cf1-8ae0-a14c421a1bfe",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5b3308-7da8-4e30-b791-eede2542968f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c305128f-e302-4b65-bdb5-82bdeca8ddab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6749a445-8f33-46e5-8474-439c51504792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5acaf99f-afce-4379-b826-22f2f80f4f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8038bd-49fa-4116-949c-5396dc22080b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41835ba3-8578-4e7c-a5f5-0d3c534128b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3f52251-86c1-41f1-b7f6-d8cbd33f8c10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32c58fa-06e5-472b-8bb5-eba718fcec10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0efd281-7d22-4fec-9f94-7138b6435e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94df0ca-d496-4b11-b9ed-92f817bcd606",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d7548b-1531-46aa-97cf-04814bc6525c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "839676dd-1507-45ec-8a4b-7b297f61e0a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5aad42-19b4-48f7-ab72-8168c57c0ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "867ea189-192f-48c2-9179-e62656395cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b583f559-a346-4dc2-b3d4-a135176900a0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa66728-63a5-41ab-a394-7df97732e350",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16c894ab-6d60-4ae3-8f70-6ff4dfb6ff53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38248e9-d687-4a1f-987f-8ee2c9680f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24671662-738c-4f5a-9c40-9979bb740b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f53660-fd74-4b1a-b161-c839eb9d4378",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbd74af-938d-40d1-82b7-e5fc95613e22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9cded8b-41f3-48e5-a8bb-e6a5a283ef2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34a86db-bfda-4c47-a9a6-906a5982eb44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc39a5f4-6a69-472e-8901-e56061e84aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d624f60-2e6d-4063-a4e3-8b79692f008f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79798108-0fa9-4ab4-b395-89e130f26ba1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bbd0cc0-d622-4ce9-9f4c-4c604e5ff5ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b33add7-2770-442c-b78d-a95343c1d5ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4444bd26-a7b6-4d2c-9bf5-654f488a4999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7325ccaf-fbd5-49cb-8343-f4b1e9fe1d10",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cacb8860-df1b-4dac-bd08-4d5eadf8da23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4724ebf6-fe2e-40ed-87ab-3c55ca307882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4e9baf-fb82-4c2c-aa6d-4741435d23cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3def0ef-9cb3-4879-90c1-ea304fdced8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6de486b-44b5-4fea-bd97-ac1663a6fb70",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4576cb6-94ff-4644-8c53-bf576c5e0516",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bec90d22-ed4d-4392-9106-7d8dda65f117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1490c8a4-9223-41b6-95da-a7e603c4c52d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a739fd2-a089-4a9b-b9d2-8a41a42fe90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550a907e-dda2-4af2-819c-dc5113d960e0",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917bcdc6-7c1b-4892-8f09-0384175c2a61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b000cf9b-916d-431e-a9f2-1d1fb399d405"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "239ba8b1-9bd9-4c53-9c8b-a05e170310b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42e4ad0e-e7a4-4e31-bdd8-78f2b3510e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3d0356-bf3a-46e8-8ffc-87706ea3a99e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a48ee2-306e-4d90-bbfb-8eb0c64eec38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adce9535-07d3-402d-8462-e0e61335df70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f68999-56f4-463e-9648-dc82143027b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f65864d0-9bd1-4414-9b59-fbca13e65975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8c7c61-a9c2-449d-ab21-15d41c4eb6ca",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57e7586-db1b-4cc0-b0a5-216316dc8025",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "808b44c6-f22b-458c-af37-a1f087963e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e719d7c-cf0e-4f50-8197-f6b4e9dacba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6f04816-88ff-4c3b-91cf-34db5e1e156a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83c69a3-6f2a-46eb-a9f2-6008a8607590",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4d3329-4dd0-4d02-b66a-70415ffb72ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e444eb66-1ea8-4c77-ba1c-2fbef4dae7cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9860ab8f-6513-4440-b1b7-425feb77aceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b78ced7-94c7-4b0b-93ed-a0ccae957739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2530ac7d-6b18-433e-954c-0980be10fd90",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03170ecc-f0ae-4773-a0c3-ec4b710b618b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0479ff9c-3f76-481d-b09d-e9e2c593cb5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e55787-e55d-43d7-82fa-eb002221c22b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80c49a6b-dec0-4cdb-9136-f41f2fa7ef94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d390812e-fda4-4f47-b8e3-7da3a9a68996",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ba612a-3920-426a-bcab-68ded95ce1f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54ded59f-dbeb-4016-aea9-544ae6d411fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d288f39-18da-48e8-9f58-3fdbe0d1acfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "409d2e2c-6c84-4246-a182-84379d66fb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "817e94e8-b8ea-49e6-b9b9-fc65e5940a78",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12159f07-18a1-449f-8143-fc9030ec4ffa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aca50394-388c-43fb-b01c-7a3a3827bec1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08c1373-b5b3-41e8-a28d-94e727f2b839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c18e6d34-284d-466d-ab8e-2641de31a6b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa7eadb-3b82-425a-9a2a-70f062296111",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97364ca-bde0-44cb-b691-913aacad44a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d1395e2-1ec2-4124-a92c-c6f8c376b482"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90b282e-156f-46c8-9bce-172cbd3ed0ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa3eede2-351e-4536-adaf-dc32a8c9647f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063dc984-e0a1-4a9d-897a-912848db6580",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a15c64e6-9545-40d8-a0c6-a594de1af9f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24770975-3363-4e79-8ddf-709b072e7992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c091dfd5-6809-405b-b8fc-8b3972946385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de56c5f6-277d-4a25-9b09-a894872b733f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe61995c-2ec4-4e15-8197-ad67d02e7d09",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b4cfeb-fef6-4adf-898e-2bd0118d4708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25ce67c2-c7f2-44bd-b70f-72e7ea84007b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc18794f-c111-44bd-9ed2-c2507691ad90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1085268e-d999-4059-9d17-c76db8033ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a24a99-bbd5-4ea4-b837-5e28298815c5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1972d8-35cb-42f1-87c5-f74823478dc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5480b7de-6bf3-451e-96c6-f8a84e391278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c343a502-82ed-404a-a6b9-6db59d54e40d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e545ad0b-7fdc-4f91-8bc3-9e46dde61e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9f60ca-5904-48e0-b71d-15b21e5f3580",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "034ea08f-af6a-4007-b790-ca6e387ceef3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4df3b810-8eef-44f7-aa08-e662d5ac42f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b5ef8c-2236-4693-9337-dfdcec8e3435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47a9d11-263f-4bec-8589-437e16967562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd324a7-15f9-4757-ac43-099924333d88",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22308eb-a66b-4be5-bfc5-1811a28f39cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59e9b883-57de-443d-ac2a-e56251a802b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a13a1d-4037-44bd-8300-c421493cd12b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e4132b-ba36-4288-8f13-c76da133272b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d654151-7217-418c-bb00-e5620602b9ca",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46d32dd-c275-4ce2-87c9-2e721eb6f47d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd4bd650-ad5d-4865-8e5a-a54b56661d4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70becc7-ab55-49c3-b49f-46e38385006b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7ec2bdc-feec-4a9d-af27-1145fdd555a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec758c5-01b8-4ef7-ba23-7b0418d7e12f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0eb255e-e5e1-4173-9360-48b0f82fedeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adf16f65-1f7b-4deb-8f66-a557fda58845"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0afbb62-258e-4b29-afe9-1daaf73e7140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b5d6fc2-e266-4a71-bb88-9c877c7328bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3841770-eb50-4c80-8b70-b5bc09506753",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75bcc4b-d410-44b9-845a-727899827bb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d3bb5e5-df72-4dff-b637-5e8b58608515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "271e5696-c269-4fa1-8ad1-2b3316981fbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58ec166a-6901-4d8c-857c-ae7ce7d4b47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7fd5fa-3e47-4f7a-8e57-a14647ccbdfb",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7de06b-901c-4cf0-b7b4-d966689c4d79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecc809bb-91b4-40eb-aa4b-9604a291db59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c9402b-b5f2-4e9f-8741-33b7320818dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc353b71-0d4f-4b35-815d-cccb71c12927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2209d2e-f010-41f5-8311-40651a11f36f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5539909f-da5f-49d1-842f-05b00396024d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f98b093b-4da1-40ae-bdb4-0e2a819fe944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "983b2ff9-b6ca-4a42-b845-b6018d79465e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b040aff-1e03-4078-858a-76bb95aa3f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9371fb0-48b6-4bba-a698-5ad658ea39a0",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3008840c-c712-4e7e-b3bc-794add9f9061",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "130a0d66-3e66-4f2a-a8d4-951afad4fc2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a4b293-6f07-4cfc-9f99-46bda3390896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d13130-cccf-4870-ad5b-90674017a485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26295edf-de67-4a26-961a-b955eac7111a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668b6256-5caf-4455-b140-5cd4ff44bd50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "799b4f71-c181-4e28-84c8-64f7987fc13b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9e7c20-f949-4a2a-b84b-2e3bfcbc1493",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87bd69fc-94fe-497f-af42-f6ff2d1fa303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ada00d-efee-431e-84fb-f7e938cf4811",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fc06c7-1c4a-4fa4-a654-ac4e64ba6193",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26e9c41b-f84c-4155-9691-abc6ef794501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd817df-9a5f-4c14-a0d2-63b73a3c37b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "358c8c69-087b-4848-b526-79f5804997ed"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18bbb720-dca8-4df5-8fb4-d338f60856bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d635d48c-788c-4489-a82a-d84162b7c236"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2932416-8e10-4cd9-b7c6-051b348980c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97b9565c-df7b-4bbd-8bd2-9acd0298f136"
                    }
                  }
                ]
              },
              {
                "id": "5b97a230-e390-4b87-bbdf-e13e84c5c3e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "36885497-9f7a-4d33-9841-b5b716fdb31e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436ab15b-d4d3-4277-9cb3-49aaacb2bde2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c40b24c1-375f-4e65-ae9b-55090da73b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f925d9ca-edb5-4745-947c-733701b96949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11411263-d680-46c4-9584-fd838a191142"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "657ffe3e-7b83-4f89-a5af-0fd433127e21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc28b5e5-fa70-4588-a8aa-e64ba401a79c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "73fdd0f0-3712-4cb4-8752-72bdbb1eeee9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "928ef87d-3825-4f8b-af33-71251636c6b7"
                    }
                  }
                ]
              },
              {
                "id": "a4848f2e-b18c-4547-b565-faf4ffb5cada",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1c6eb0b8-1f06-46a8-8906-0c2b9a409a6f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "495ea9d4-a567-4eae-8c53-5dfa2867ae08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9b14896a-1906-423f-b96a-66e17ade1123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8287045b-9930-42d4-9502-b6606e9c1057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b99881f5-3c9e-4b93-af77-5904dd5dff3f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "40364f39-5d71-496d-befb-701a13cb8a85",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e13f496a-cffb-4eb2-973b-af39ff288c92",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0e4a333-4fe8-47c6-bf4e-457cf1aa5967",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9d9ae4b9-b978-49a9-a67d-74637f3ecd2d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2d58ff3-68ae-42f6-bd6f-122df85b9072",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75520fca-6b55-4222-8fbe-114e99086ae6"
                    }
                  }
                ]
              },
              {
                "id": "5a9dda65-1f55-4672-b8f0-7bc13ee52bb3",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4cfd74cf-2488-4c31-bfe8-51d80eaac867",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b9cc7753-4cc5-4661-8a7b-b865247708f0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01fde9fd-8c29-4bd4-bc2f-3e59e06c9995",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d5f488a-0100-4680-ba65-9ff638c52d10"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b421fc8-f66a-4a0e-9b5d-9c79f5e29a44",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b09f7293-4705-4183-824b-9de44a85ec85"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2eebe1dd-53a9-4147-ac9c-be2efc399f5e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "107256da-16c1-4a4d-ae93-36a051bf666b"
            }
          }
        ]
      },
      {
        "id": "d2fa682c-9918-4456-b739-2f32dba065e6",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8b7908a1-bc5b-41d5-afde-f7a81b0a7c9a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ff4faedd-c387-492c-9879-a54cbfb5379c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1bc86658-d97d-4035-957a-cd94783f4121",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93cb0e6a-d6db-4934-aaf6-b2223a0362a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0a43bef8-ae16-4a55-b29c-3f88597b555c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2452b4-f45c-46c3-ad66-f1f93ec397f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d610adc4-ee0e-47c9-99fd-fdd34db34dfb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25062429-9897-48d3-958a-25e9f6f653f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c442e553-6611-42b9-944e-556f1c2ddb4a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "db547676-44df-4ee0-99e6-a2731a0ccad4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c01ebebc-53cf-4e18-94a4-7142bc678fd3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "831fa93e-e578-4614-ba16-10a9005ab861",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4b0bf63f-5247-4c73-b715-7605c781564f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd46a363-16a0-4e0f-a315-6ccf7ab391dd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0bde6fed-ef80-4d83-a92f-f23637534ff9"
            }
          }
        ]
      },
      {
        "id": "b175c4a5-8b40-4626-8927-a12a6e27da73",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "303f7769-3922-4944-81a9-f0e4b24fd3da",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c48a7950-b6e9-486d-967e-027baa35e57e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e0721bc0-0926-4a8a-ace4-a56f3700583a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e1c350-9d3c-4abb-86b3-8fa49bbf55b2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fba6b84-c57a-4401-b698-192743ad53ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f9b1cc-060a-4941-91e0-2d0f4482e889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "add732a1-96c6-45dd-94e7-75bf43cc210c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ad9e70c-2d74-4feb-bf13-59df4393e6ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13bdf8f1-2158-4e1f-8560-6be2aeaa922a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "40bcdf2c-424e-4abf-a701-456d99fa11b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f07b2462-6ce2-42f6-a1b3-3839cae85fff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ce8b688-2c44-4242-a5dc-7fed4549d0be",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7e5daa50-56c1-404f-aaaf-f1d360877c87"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "41d573f8-f2f6-4cb3-b0ce-4c2ccc1f726b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b6a06671-5ec0-4495-98ca-3b29c44ad8d7"
            }
          }
        ]
      },
      {
        "id": "9a89a583-f300-420e-b2bd-983f00bd7684",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "617a15a4-cacd-494c-a75a-affd82f4c8bb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2dec26ef-807e-48f1-80cc-e8b60014f593",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f1298601-2db5-432b-9ef0-d28cacc9a391",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc561565-92d8-4819-9a34-39d174127782",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fe8400a-a291-4855-831c-f3e2af504e67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95fecdf-9b10-4c19-862c-b1176457d7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "900757da-0a88-4b0a-92f6-11fb358a9a0a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4067f6ff-9e1f-4a85-9c48-7607a07321cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e2a3561-0625-49c5-845e-ae188aff9954"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce2966d7-e885-4f37-bac3-41979ad4658d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8baf374a-edfc-41a8-b62a-ac5681c6665a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "854d7584-6e20-4f73-9510-f735b5b4b78b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "53035aa4-f3dd-4efa-a5e1-d3b00e7b92b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "505b769f-8128-421b-93f3-d2781321b972",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5802d4ff-748b-4f18-89f7-999e24a7876b"
            }
          }
        ]
      },
      {
        "id": "abef3f5d-f86a-4f80-ac96-f1ffeb628ba4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2fabee68-8e20-42e2-a1e5-a1e260689bc5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ce13606-2621-4b9a-90fe-40ff2ce87da1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4b8bc878-d114-4dd5-a795-922a2e3c5729",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "04aee575-5c66-424b-8857-a3c1450632e8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c96ff58-c682-40f8-9a00-ec1b32fd20b1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 69.60701754385957,
      "responseMin": 7,
      "responseMax": 249,
      "responseSd": 20.50331474826351,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699058018347,
      "completed": 1699058052469
    },
    "executions": [
      {
        "id": "9a008b36-3472-439c-aae1-c51cb29e44fa",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7812edb0-4b54-4221-b12d-37f4fd75e2e3",
          "httpRequestId": "91098e01-5d89-4745-81f9-2124ac41fb8c"
        },
        "item": {
          "id": "9a008b36-3472-439c-aae1-c51cb29e44fa",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4a78c7d4-9352-4054-b0b1-4fb92804acf7",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "4a0ef4cd-47ff-4f8b-a520-71a59676d340",
        "cursor": {
          "ref": "6900e333-2584-4bd7-9c15-83f43c05ba41",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "abc8e0fc-3b6f-4ca8-9228-971b8d5d3600"
        },
        "item": {
          "id": "4a0ef4cd-47ff-4f8b-a520-71a59676d340",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6fcc73d2-4128-42f2-9cdc-3b0764d05f34",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "a1555886-33ed-40b8-8fc1-dc11ce86368b",
        "cursor": {
          "ref": "a87fe5ba-ec00-47f4-87fa-a4c88ec9f0bf",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0892d310-e3b7-4419-9c42-8d372050047c"
        },
        "item": {
          "id": "a1555886-33ed-40b8-8fc1-dc11ce86368b",
          "name": "did_json"
        },
        "response": {
          "id": "143fc3aa-5187-43c4-ac11-bc204bb35365",
          "status": "OK",
          "code": 200,
          "responseTime": 224,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1567196-2091-411e-8535-c32493253673",
        "cursor": {
          "ref": "cee97c55-d466-44ba-ad94-f31671afdc59",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "53a1c7b0-9c7e-4652-8feb-c33188a662b2"
        },
        "item": {
          "id": "f1567196-2091-411e-8535-c32493253673",
          "name": "did:invalid"
        },
        "response": {
          "id": "4a669e77-0779-4ab3-ad30-32857e08403e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1567196-2091-411e-8535-c32493253673",
        "cursor": {
          "ref": "cee97c55-d466-44ba-ad94-f31671afdc59",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "53a1c7b0-9c7e-4652-8feb-c33188a662b2"
        },
        "item": {
          "id": "f1567196-2091-411e-8535-c32493253673",
          "name": "did:invalid"
        },
        "response": {
          "id": "4a669e77-0779-4ab3-ad30-32857e08403e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4688bb61-1638-42fe-bfdb-b20f91922be6",
        "cursor": {
          "ref": "174701b0-ff76-4afe-95be-3a4813b50c80",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "09369371-4166-459e-ad52-98112960aaee"
        },
        "item": {
          "id": "4688bb61-1638-42fe-bfdb-b20f91922be6",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "dfe5475d-7a5b-43d2-92a5-65ac0af5fed4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 107,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25741df7-1b39-409a-ab78-ddc69ad6d8fd",
        "cursor": {
          "ref": "91ecbd21-f3d9-4ce5-8a18-f72320ab018d",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8a6a9edf-b47b-43bd-9269-8fcc530caff0"
        },
        "item": {
          "id": "25741df7-1b39-409a-ab78-ddc69ad6d8fd",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ddb0a08f-fca2-4d1e-b4f6-27e4e45c195f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1018508-48b4-4f19-bdf5-1b2ec114ce7e",
        "cursor": {
          "ref": "b01bb759-97f2-4b93-92e4-5f93b1b704e1",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "eddca3bd-8980-4893-864b-fe941db3ec90"
        },
        "item": {
          "id": "c1018508-48b4-4f19-bdf5-1b2ec114ce7e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b61a97c0-aa02-4da1-96d5-2e028ee836f1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe0a5981-e1b6-4bd8-902d-3df31d987255",
        "cursor": {
          "ref": "11abbe06-db1d-4b3a-971a-58efc65c253f",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a73c4e02-902a-4d5b-a184-373114f24774"
        },
        "item": {
          "id": "fe0a5981-e1b6-4bd8-902d-3df31d987255",
          "name": "identifiers"
        },
        "response": {
          "id": "029c33ef-69ca-42e6-8584-abd2ac16d845",
          "status": "OK",
          "code": 200,
          "responseTime": 105,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a874c2c1-7c8f-41b0-a343-4285b7a9a819",
        "cursor": {
          "ref": "725bf4bd-576f-4cf9-bd46-2ac17b5eea1c",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "184aa228-c86d-4f98-a236-501f600a26e6"
        },
        "item": {
          "id": "a874c2c1-7c8f-41b0-a343-4285b7a9a819",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e29c4268-1845-40a0-85c8-de738946ef69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827b0392-6793-48b0-9639-516e956bdadb",
        "cursor": {
          "ref": "ad8358e8-9a04-4c18-849e-726020f15a30",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "da88dcb2-4e69-4a53-bbbd-83718c8ffac6"
        },
        "item": {
          "id": "827b0392-6793-48b0-9639-516e956bdadb",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "22a6e614-8f91-4ff5-b5e3-bae7e5c723c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39ceaac-74ab-4de4-82a7-d0a18631f1f8",
        "cursor": {
          "ref": "5203ed02-e6ac-4c53-b8d0-5915a426cacc",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "02ee52ef-a9ec-4625-b1d5-7e8dd997cf21"
        },
        "item": {
          "id": "b39ceaac-74ab-4de4-82a7-d0a18631f1f8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0ec976e4-5868-465a-8d16-d1a53521fb84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99e2a83-a83d-4434-92e7-b42066954752",
        "cursor": {
          "ref": "7594155c-795c-49c6-a2d0-7f3504e5c77c",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "806bb812-b5f7-4934-88bb-4ba2d1280238"
        },
        "item": {
          "id": "d99e2a83-a83d-4434-92e7-b42066954752",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1247efed-5836-4595-8404-37331b2ea7b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b27f667-6520-4bd5-bc92-df6e76615978",
        "cursor": {
          "ref": "96ce3e95-aa1c-4fbe-ac26-51cc9b9b1486",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9d67a642-3ea2-41dd-8ab3-7c2e78a3cd0e"
        },
        "item": {
          "id": "6b27f667-6520-4bd5-bc92-df6e76615978",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9be9cfb2-d804-4f01-98d8-279c29b27f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8703cc0a-5b00-42dd-9687-29a727beb68d",
        "cursor": {
          "ref": "02886ed3-42fd-452f-b342-7624a16f94e1",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "885e9c59-5c64-4ce6-bb6c-38af548ac3ce"
        },
        "item": {
          "id": "8703cc0a-5b00-42dd-9687-29a727beb68d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9bc095bd-9ee9-450b-a15a-e5646a9bb556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c90c843-4046-428d-aceb-caa1cffb120a",
        "cursor": {
          "ref": "ba2a8a18-7f36-42ee-b6a3-01c27ebac7ec",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b51426e7-a19a-4b20-bc20-3c9e6f63cd5e"
        },
        "item": {
          "id": "6c90c843-4046-428d-aceb-caa1cffb120a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "33189607-ec7a-43df-9861-8dc682efd3a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12fc4f1-bdbf-45e8-a25a-b03b1f540cf7",
        "cursor": {
          "ref": "24bff17e-f60c-47d9-9903-dde6e332eaff",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f3beac65-22d0-4c37-ab03-a23a794da89c"
        },
        "item": {
          "id": "e12fc4f1-bdbf-45e8-a25a-b03b1f540cf7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "9c906397-0a11-4e37-90bc-ca88d3db0e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c3cbbb-1a1d-4faa-a900-dfe8a8a910e6",
        "cursor": {
          "ref": "988d1ef1-0d99-4702-a952-b5f60289fe63",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a901713e-1026-4d09-b131-0954527ee1e2"
        },
        "item": {
          "id": "28c3cbbb-1a1d-4faa-a900-dfe8a8a910e6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "490c9904-a05c-4bfc-9f7b-9481fc5e4d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6dc6f7-8c54-49b1-9a18-771edb8a4bf7",
        "cursor": {
          "ref": "8512fc02-0758-4c52-b960-f9eb4df61abb",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1e6ed9a7-d2d6-4d71-9984-44741c458d26"
        },
        "item": {
          "id": "2a6dc6f7-8c54-49b1-9a18-771edb8a4bf7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d5186059-6ca3-4f9e-a8c0-c0f157b20c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e154001-5641-43d6-a8f0-c1fe45990cd8",
        "cursor": {
          "ref": "3a859729-88c8-40ce-82cf-04822fa8c5da",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1b6fa5a2-8eb5-4059-936e-0548419cf022"
        },
        "item": {
          "id": "2e154001-5641-43d6-a8f0-c1fe45990cd8",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "72412c45-02af-4842-8dea-f3fa740899d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7b1039-7399-46cf-9b28-42922ba5bed0",
        "cursor": {
          "ref": "a85ad356-a809-4b60-9fbf-5ff25e622271",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "776f66b0-4900-4084-be78-55955cc0123d"
        },
        "item": {
          "id": "5f7b1039-7399-46cf-9b28-42922ba5bed0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "eabe993c-d1e8-418b-89a3-eb275f1a21a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b28f93-0119-45f6-bbce-6e03eaf6b5a3",
        "cursor": {
          "ref": "3fd56665-beaa-4e75-b485-20a52703099f",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a3261575-b100-4c0e-b1cc-bd367493d75f"
        },
        "item": {
          "id": "26b28f93-0119-45f6-bbce-6e03eaf6b5a3",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7e9e5364-8bf8-4d18-8fd2-7ad6b66d258d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0510ddeb-17cf-4b19-a8e0-581a298a6586",
        "cursor": {
          "ref": "85de6cde-90d9-44b1-9988-a897267bc2dc",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6b1c7ef8-b915-4c2a-ab52-cc1a97508c25"
        },
        "item": {
          "id": "0510ddeb-17cf-4b19-a8e0-581a298a6586",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e378bdc9-775a-4e5a-81a6-63c8892e2cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ec8aff-a1a4-4e7c-a091-fef970b8be54",
        "cursor": {
          "ref": "cfe398bd-4148-4bf4-82b3-d3ca22104407",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "50ac6528-e102-4b90-a0a0-a40c5f7b87ef"
        },
        "item": {
          "id": "11ec8aff-a1a4-4e7c-a091-fef970b8be54",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1f84fb88-c67d-460f-ab9a-935aced2f715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7b2f0e-4dd4-4420-bcf0-cac4c75582fb",
        "cursor": {
          "ref": "752c463d-e83a-4ad8-b884-ad3876a7b428",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3e3e4f5b-e1c5-45a5-9314-cf46aa273766"
        },
        "item": {
          "id": "fb7b2f0e-4dd4-4420-bcf0-cac4c75582fb",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "dde14a3f-d354-447b-ad01-dafc5c6fe07a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51251ad4-e112-4584-ba09-d5d291f94bd3",
        "cursor": {
          "ref": "6c3d5bd3-7be0-4bca-93e3-e2f8efa8af87",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4dbc0015-2eab-4cd3-b2f8-2547f080b2f9"
        },
        "item": {
          "id": "51251ad4-e112-4584-ba09-d5d291f94bd3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a445e9d7-88dc-4b90-a398-448d77f10fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad33208-548a-4946-9144-563763c5a89b",
        "cursor": {
          "ref": "9f0a8493-bae7-44af-b103-d4a31d6b0af4",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b83f3937-8bbf-4f54-b860-986f27d741a0"
        },
        "item": {
          "id": "8ad33208-548a-4946-9144-563763c5a89b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1dbdb27a-815c-4a72-9920-1b049b12ef8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b501b8a-9f0a-4ade-8a50-671ac4a5c344",
        "cursor": {
          "ref": "862818d3-6e72-4ec9-87c7-a05619c10f2b",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ec037b03-be15-41ef-870b-d3909320e020"
        },
        "item": {
          "id": "6b501b8a-9f0a-4ade-8a50-671ac4a5c344",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "15cf6e71-ed6d-4e22-914b-83d867ded284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f418be3e-fdc8-44e2-8727-78d4abc447b7",
        "cursor": {
          "ref": "1ccc9bad-a7ad-4f2b-9293-20af04595de3",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a4a40f18-ab85-4d32-9810-c1c5c4d0223c"
        },
        "item": {
          "id": "f418be3e-fdc8-44e2-8727-78d4abc447b7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5fa9da8c-8552-4598-8cce-36b7602d59f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1f962f-2201-49b7-9806-34df56a5bc2a",
        "cursor": {
          "ref": "6fea32e5-3187-4179-924b-26e02b51c9d5",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "175ab57b-046d-4668-a5d5-4daf9266eefd"
        },
        "item": {
          "id": "ab1f962f-2201-49b7-9806-34df56a5bc2a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "173c7771-0090-4662-ace9-cbc0a91861ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326b125a-af7b-450e-a966-bd03ed7ed7c3",
        "cursor": {
          "ref": "01a1ec38-11dd-49ee-b909-8c62a9d6ec32",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c88e9ea8-b93d-4510-8270-e42f37bb9503"
        },
        "item": {
          "id": "326b125a-af7b-450e-a966-bd03ed7ed7c3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3aad5a5a-9d46-4f0b-8f95-27487144ed94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44df8e7-68f2-4503-986e-395b63f97108",
        "cursor": {
          "ref": "eabe8a85-577a-4c7f-8526-79538afb669e",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8594e8b0-cbd5-4db1-a18b-bac4c76a387c"
        },
        "item": {
          "id": "c44df8e7-68f2-4503-986e-395b63f97108",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ba51e1fd-6d0c-4156-b7cd-d9997b73e7bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ffa1bc-2fcf-4d51-b5ba-d78ec57a7a6f",
        "cursor": {
          "ref": "794f8153-2d2b-448e-8156-4b87cc133a6e",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0ce015dd-141c-41fa-8c50-dfdec65dd67a"
        },
        "item": {
          "id": "f3ffa1bc-2fcf-4d51-b5ba-d78ec57a7a6f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d245ea5a-52c0-46c7-81d9-257beea9d536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d499e27d-20a6-444d-b58e-416478e84741",
        "cursor": {
          "ref": "38148622-eac0-4df5-9c65-1fd39e92228f",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "19b52048-6be4-444f-8678-df5115bb6806"
        },
        "item": {
          "id": "d499e27d-20a6-444d-b58e-416478e84741",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0306e03c-71a5-4a54-95ec-daf122fdc1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c5a1aa-061b-4cbd-9ad7-be8364aafe10",
        "cursor": {
          "ref": "9fa5a512-52d9-488c-9c57-42b44613019a",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "bf0f67ca-d183-4ec2-9e25-c6f95c0c158b"
        },
        "item": {
          "id": "c1c5a1aa-061b-4cbd-9ad7-be8364aafe10",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "307eeec9-d546-4892-ae23-332fd2a92770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027f6780-d324-4993-be10-55c83af0a703",
        "cursor": {
          "ref": "846cda8f-955c-47db-a708-d656ad66cb1e",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3ff96b71-f797-475f-9d9c-19c453b9ce19"
        },
        "item": {
          "id": "027f6780-d324-4993-be10-55c83af0a703",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4b2062bc-b264-4f7e-983c-61bf25c2c1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2237927e-722b-4002-b2b2-d74114a2fe4b",
        "cursor": {
          "ref": "2cdd2968-02ba-4404-8ef2-f3d5dd65f2f5",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "957e692c-c72b-4dc6-9cb6-ac1342ca2a69"
        },
        "item": {
          "id": "2237927e-722b-4002-b2b2-d74114a2fe4b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c4b31ea2-aeb8-4785-aba0-27f5cfb75c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe27790-0d9c-47e8-9ac1-fffdf3b84d47",
        "cursor": {
          "ref": "009aacd6-473b-4fd3-a68f-b08141244dfc",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "388b2180-9735-48c9-baf2-73e199c30163"
        },
        "item": {
          "id": "3fe27790-0d9c-47e8-9ac1-fffdf3b84d47",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c4b05165-7a2c-4db7-bd91-f9d85738fab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cdac059-dbee-4ee4-a633-b5e774eaa3a3",
        "cursor": {
          "ref": "f448d4eb-6dd2-4098-a1af-964eb9eb5a4d",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "df08e920-d4d9-46c9-879e-8362576de15c"
        },
        "item": {
          "id": "5cdac059-dbee-4ee4-a633-b5e774eaa3a3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "68f55103-524f-4cf1-98f9-13cfc1cbeb17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05eecb31-2b7b-43c2-b9a2-005238d3c50f",
        "cursor": {
          "ref": "5c9259b4-73c3-4d96-9daf-833961b2e90d",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "426311db-6c14-4789-8799-30dad47aa72c"
        },
        "item": {
          "id": "05eecb31-2b7b-43c2-b9a2-005238d3c50f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "534bd8f2-bb39-408e-b44b-28c44c093be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d34b422-8c21-4fe5-b4cd-d7aec77a67e8",
        "cursor": {
          "ref": "997f177e-e501-44d0-b3dc-13fcfdf84db3",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f247d88a-2579-42d7-a7a1-539518122c8c"
        },
        "item": {
          "id": "0d34b422-8c21-4fe5-b4cd-d7aec77a67e8",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1cb8a4ab-5cc5-4074-b196-bfdef0203e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bcfb0ec-2d21-4bd9-927d-13689c52a501",
        "cursor": {
          "ref": "a054cce1-519a-4ca2-b74a-a878c43e8718",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1ae5732e-d9d1-4b40-9dcb-6187c1f6dae4"
        },
        "item": {
          "id": "8bcfb0ec-2d21-4bd9-927d-13689c52a501",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "659cae83-3d28-4d19-bfec-9521e9b28ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da15c0c-129e-4274-b1a6-a7430e680ef9",
        "cursor": {
          "ref": "6a61106c-2844-4f1c-bbde-e11a05eb6b32",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "390d3060-b891-4865-aa15-68ea2a3dc2ef"
        },
        "item": {
          "id": "1da15c0c-129e-4274-b1a6-a7430e680ef9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c17f253d-699a-4118-9b81-a3f6b77e04ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f1f75d-a39f-4527-a75d-18ea9d1265c9",
        "cursor": {
          "ref": "e17828b3-7184-4116-9fb6-b3bdadf2ccb2",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ff4e0b4b-3862-4d5c-9904-862421229cb5"
        },
        "item": {
          "id": "31f1f75d-a39f-4527-a75d-18ea9d1265c9",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d3963848-0675-4ab1-bc8b-c1b7703c75c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7637817-2bff-4544-8803-aa2fd6242ffe",
        "cursor": {
          "ref": "503d36d2-24fc-465c-a1e4-f0956ae73caa",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5506d09b-8903-4f5b-8314-27c51d5317b1"
        },
        "item": {
          "id": "d7637817-2bff-4544-8803-aa2fd6242ffe",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a57dc3b1-57a6-4ca4-9b4f-8d248377a122",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 79,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2aea08-cbae-4370-a964-e9ef20395827",
        "cursor": {
          "ref": "4cb2e56d-f049-4df7-a12d-effb9e056772",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "826ce3d6-7c96-45f7-be1d-f4238232dc34"
        },
        "item": {
          "id": "3f2aea08-cbae-4370-a964-e9ef20395827",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8686f390-2674-490e-910b-f3ef5492cd7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c311e46-9ea5-448c-9f39-3dbad86f5275",
        "cursor": {
          "ref": "b245d3e1-4658-4440-b68e-d2eb50e52bcb",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3b71f9f7-4ac5-4172-bfc8-e5bb087f0ec9"
        },
        "item": {
          "id": "9c311e46-9ea5-448c-9f39-3dbad86f5275",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8f7dfb30-7a32-42fd-a709-0bf50f53c1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2b368a-4771-4082-912f-d320cabc33ea",
        "cursor": {
          "ref": "4c0673f0-fd5e-496b-97a1-6d373b205d0d",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "438d2607-07cf-48af-82f0-b079ba44e50b"
        },
        "item": {
          "id": "7f2b368a-4771-4082-912f-d320cabc33ea",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8c99fb14-ada9-4789-a921-9d1dd3e6e2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96f7199-9ee1-4534-aafa-92fe32914c4f",
        "cursor": {
          "ref": "c70a5031-9d67-4071-a0ba-7528718ef595",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6a97c782-1db2-44d7-b49d-fb77edf946d4"
        },
        "item": {
          "id": "e96f7199-9ee1-4534-aafa-92fe32914c4f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6e422dae-4022-4f63-93d2-44bf81a80de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39da6da-5a9d-400b-b52b-bb08d4ca5457",
        "cursor": {
          "ref": "0cfeac18-bbe7-4853-8a75-04250c02f400",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d71b2928-5f0a-4f0f-b904-9cb1da7e0712"
        },
        "item": {
          "id": "e39da6da-5a9d-400b-b52b-bb08d4ca5457",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "22287319-5e8e-4ec7-b748-537e43a52d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7b67e3-fa39-4038-bff1-b8c902e15872",
        "cursor": {
          "ref": "6d49d203-4c8e-481b-aa75-c40397cff52e",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "30aad994-6d81-4f1a-b24c-a0328b50cdbd"
        },
        "item": {
          "id": "0c7b67e3-fa39-4038-bff1-b8c902e15872",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "66ebacdf-38af-499f-9459-7b730d7c8988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf95aed3-0409-458c-99fb-1f6f6b2d0de8",
        "cursor": {
          "ref": "4557cf85-e939-414e-9506-45821933fbbd",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "77876f01-1447-4c15-933b-924632e71cf6"
        },
        "item": {
          "id": "cf95aed3-0409-458c-99fb-1f6f6b2d0de8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7199fd19-b534-4db3-90f0-4270871b156e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 83,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b191ee-447f-4959-b30f-509b46ea4a07",
        "cursor": {
          "ref": "aa2ca9f3-8b2c-4180-869e-943cc0feb8c6",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1ae1f022-9ae9-43dc-a08c-4f4d5b8a6fde"
        },
        "item": {
          "id": "26b191ee-447f-4959-b30f-509b46ea4a07",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "77ca6c8f-e75c-46c8-98cb-435fe98afb23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8961c8d-dfab-4c57-802a-dd2d5ee72d1b",
        "cursor": {
          "ref": "ca081892-3cc6-4906-ab0c-28793dc79fde",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ca5ca03d-c03b-4d3e-95d1-1b09a0593293"
        },
        "item": {
          "id": "b8961c8d-dfab-4c57-802a-dd2d5ee72d1b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b35c3dc2-2460-4e6b-bf81-e9e117624ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc2ac96-040e-4d87-94d9-020bfb1fd4ae",
        "cursor": {
          "ref": "443f4f92-bb7f-4b28-8f2b-b9ff49f293a1",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b2d9523a-61f2-429f-afca-2c24ab96b8e3"
        },
        "item": {
          "id": "6cc2ac96-040e-4d87-94d9-020bfb1fd4ae",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "85566049-8de9-4e25-a9bb-6abccb6ff699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4875099e-9bf0-40cd-a2e8-f4cf3521e114",
        "cursor": {
          "ref": "fffeeba8-fd47-45da-a834-bcb689f954b6",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "39e3ade0-b90a-49b4-bd73-9d593705075f"
        },
        "item": {
          "id": "4875099e-9bf0-40cd-a2e8-f4cf3521e114",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7e8de91f-ae1f-4bf6-8eb5-82679ba83fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211f242b-e50d-4d4c-a2dd-16f6dbc90e2d",
        "cursor": {
          "ref": "acf5f92b-1061-44cd-8285-bdcb590b6e75",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ad84479e-2a62-47d3-aa61-8d5d004b3a71"
        },
        "item": {
          "id": "211f242b-e50d-4d4c-a2dd-16f6dbc90e2d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7094521f-20c1-4bf9-b546-5feb18c9fe54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c5d905-4f8c-40c1-97c0-330398fd6833",
        "cursor": {
          "ref": "afbd9a35-9250-4b35-8078-d42b2e1d0e21",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1d84a519-76a6-4937-96c5-6ba70a9f7069"
        },
        "item": {
          "id": "51c5d905-4f8c-40c1-97c0-330398fd6833",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "486611b5-122a-4bdc-a37c-5d1672350479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c464d4-c603-402b-a803-e4215c40bbdb",
        "cursor": {
          "ref": "9beed904-d1e3-4538-9085-100d379d08e8",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "fe1b363f-d146-4f3b-bf59-16975fcaf329"
        },
        "item": {
          "id": "73c464d4-c603-402b-a803-e4215c40bbdb",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9b8c2f94-00e8-4c60-adf3-361a1f0dde5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5893671-a3d0-4b95-9f46-30e49d361304",
        "cursor": {
          "ref": "f292ab81-81f7-492c-a7a3-7079e5642558",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "023f0295-8959-47f0-b807-164bc33885b2"
        },
        "item": {
          "id": "d5893671-a3d0-4b95-9f46-30e49d361304",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "48d68b62-a286-49da-ba20-326b3e8e0c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eebdec94-d65c-428d-967d-383881732844",
        "cursor": {
          "ref": "67dd23a8-01c9-4289-a319-06936ac6249a",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "df83593a-2402-43c0-b14c-2a0bb87c86e3"
        },
        "item": {
          "id": "eebdec94-d65c-428d-967d-383881732844",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "19415dc9-592e-45be-a64c-9346c5f36bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b002cd-c498-4ac8-8101-1542d677ce81",
        "cursor": {
          "ref": "64e82628-0dae-415b-a2aa-204392ffe72a",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9ea491e3-a324-4ca7-b909-03d03fc4f0b5"
        },
        "item": {
          "id": "94b002cd-c498-4ac8-8101-1542d677ce81",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "dbdcd1b6-d37c-4989-8abd-f8a5b31a8a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0771ed-e0eb-488e-83a6-cac842a0c504",
        "cursor": {
          "ref": "b42d1c8e-03a3-4017-a801-73ec0bedb7a5",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c67dfea6-acda-47fd-8072-3857c4a0e6cb"
        },
        "item": {
          "id": "ca0771ed-e0eb-488e-83a6-cac842a0c504",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a6514acf-8e0b-4db0-bf97-abeec5aaae0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6987cf8-6236-4662-ac24-439fc44358b2",
        "cursor": {
          "ref": "d7639465-f55d-4c9d-94ad-8778897cfe3e",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a97b6890-bf24-4bb0-9932-a89311cbc6bc"
        },
        "item": {
          "id": "b6987cf8-6236-4662-ac24-439fc44358b2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "26945587-2303-42f9-a36d-ea2f925d5a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b53392-43d5-4985-9a59-8fb5223400d3",
        "cursor": {
          "ref": "19308ec4-9659-4717-a169-4efc894ba51c",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "67456169-06dc-4362-83aa-f4c1d722b61c"
        },
        "item": {
          "id": "32b53392-43d5-4985-9a59-8fb5223400d3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "bbc9328e-3d18-44f1-aad0-f1dfa98d4067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5687f561-31b6-4ca5-b981-49aa68644d1e",
        "cursor": {
          "ref": "4d6eb3e8-bfcb-4d28-aa92-d175a319bbe1",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1c472c30-ad81-4ce7-a28d-6e4854c7c7c9"
        },
        "item": {
          "id": "5687f561-31b6-4ca5-b981-49aa68644d1e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "da4bd5b2-256f-4790-872b-98c5b160d4be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2142e587-cd76-4b53-974f-783a7fa2b09a",
        "cursor": {
          "ref": "d9f89098-f936-4081-88e0-311b5c061509",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "571692c9-8f07-4926-94b1-1bcbd6a4548a"
        },
        "item": {
          "id": "2142e587-cd76-4b53-974f-783a7fa2b09a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e35a12cf-2335-4612-a087-736c899b85b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f666284-c925-46a2-8b85-2d43399c118b",
        "cursor": {
          "ref": "f2fa6052-40ae-4c40-8635-a6546f6a6dbf",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "dbc4bdf3-d5e9-40f6-961a-df4fb716bb37"
        },
        "item": {
          "id": "8f666284-c925-46a2-8b85-2d43399c118b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "740c5828-ba2f-41b2-8100-b3ef390467a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc86cdd9-677d-489b-b52b-d57c0f1bbc15",
        "cursor": {
          "ref": "17043b47-c75e-464d-b83a-35b92f1ae1b0",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1044be26-e0b3-4782-acae-26a369eda584"
        },
        "item": {
          "id": "cc86cdd9-677d-489b-b52b-d57c0f1bbc15",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "945c8469-6cd8-4ed9-854f-8b9128c5dc80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12216238-80fb-4ea0-9fdf-a7475f2aa871",
        "cursor": {
          "ref": "64589a61-5033-4712-b776-9fb5a0a445ca",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3bfdf311-c8e4-4197-8cfc-6e2329ff298f"
        },
        "item": {
          "id": "12216238-80fb-4ea0-9fdf-a7475f2aa871",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fc8a9f53-6eaa-4c32-948e-477c42e464f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1501151d-580b-4004-abcc-590dff17c43e",
        "cursor": {
          "ref": "742e048b-3524-4cce-8727-772ca03a0dfb",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c865a421-761f-46fe-97c8-aa6b04cdcf49"
        },
        "item": {
          "id": "1501151d-580b-4004-abcc-590dff17c43e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3dfa4e74-d771-41ef-b1b3-4f94a2a86849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acfe95fd-6aa2-465b-b64c-8871103db633",
        "cursor": {
          "ref": "3e95fa21-3797-457e-aa51-6bdc76e81f41",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "99b292f1-7ea6-42af-8830-b5cdd846db5b"
        },
        "item": {
          "id": "acfe95fd-6aa2-465b-b64c-8871103db633",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d8ca49ea-528a-4569-b479-fc6cf3912060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172bd423-5542-4da4-80be-1c9f71b18204",
        "cursor": {
          "ref": "8f145469-e6ef-484b-93be-6e75026bc0df",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f7c2b135-f3b5-430f-8cb4-b345ef0a7a9a"
        },
        "item": {
          "id": "172bd423-5542-4da4-80be-1c9f71b18204",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a9862596-ac72-4e4e-80c6-3a3aa80f4acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db8f354-1512-490c-92e0-577b1477a494",
        "cursor": {
          "ref": "76c30d6d-412a-4c80-a916-07edc86150d3",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "548b85a6-cdae-496a-b854-0585f1699c9c"
        },
        "item": {
          "id": "0db8f354-1512-490c-92e0-577b1477a494",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1e94fc58-da51-4b76-9b82-f5f239678493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fdce1ed-ad54-4990-a7db-30342ebb1ea2",
        "cursor": {
          "ref": "2d16e950-1051-4d92-ad81-f29d85234305",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9d89aeb2-1f29-4504-8dfb-d306dfd2d99f"
        },
        "item": {
          "id": "1fdce1ed-ad54-4990-a7db-30342ebb1ea2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e183d3ee-d06c-425c-bdb2-cb82353e91c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0fc2a0-9b69-4470-89ff-3675714dfc3d",
        "cursor": {
          "ref": "0116d979-2178-4b13-8c1b-ab45c45129a6",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1a0f7c59-f856-4bc5-8224-100285c9ae5f"
        },
        "item": {
          "id": "5c0fc2a0-9b69-4470-89ff-3675714dfc3d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "fd10a2db-d826-44f2-b885-0ccbd2edf2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af650ee0-d4fe-4b54-b465-7d56502854f3",
        "cursor": {
          "ref": "e340186c-bc3f-4051-9784-1868dc109632",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4ea384ce-6e35-45eb-8d02-16df0c7f9f00"
        },
        "item": {
          "id": "af650ee0-d4fe-4b54-b465-7d56502854f3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4c3b1c56-b60d-4da3-aaeb-43db6f7d3c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd6ce03-296f-491b-b4b8-10933eae7797",
        "cursor": {
          "ref": "a39fdd1b-4512-4269-bd48-a90f0543fdec",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "11b93408-6be0-45d7-a028-bba4889bef5c"
        },
        "item": {
          "id": "bbd6ce03-296f-491b-b4b8-10933eae7797",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "12937702-ac42-4ac4-b69c-ed980a004527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d417f94-c32f-4ce2-a149-c3ea27f7718d",
        "cursor": {
          "ref": "15b8ff53-f969-4ced-b463-2c8f58845509",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c493031a-5008-40f3-a448-b3a4c94590f1"
        },
        "item": {
          "id": "1d417f94-c32f-4ce2-a149-c3ea27f7718d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a7ea050c-9afe-4168-86e9-972d06daee9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d983ba8-f1f1-4e62-afe0-b43df5e98148",
        "cursor": {
          "ref": "a39337af-c318-4b10-891a-21c7a4adf3d8",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "bcc4e442-2304-47d2-b67c-06a32591c77c"
        },
        "item": {
          "id": "7d983ba8-f1f1-4e62-afe0-b43df5e98148",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7acc3876-7d6e-4541-a101-a49f0baefaf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274f5f04-041f-4816-80cc-a29dce878aa4",
        "cursor": {
          "ref": "e0a336c2-b725-4ba4-9d76-7fed5dbad0ab",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4b0a6886-fdea-4fe5-82af-c578ead30bf2"
        },
        "item": {
          "id": "274f5f04-041f-4816-80cc-a29dce878aa4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "965f3d03-132d-4f8b-99ec-3669572b28cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11eb8b40-910a-4992-b5d1-e2b4d466b035",
        "cursor": {
          "ref": "d21ea94f-e239-4b45-a9be-e136f4b4db9e",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "42201611-4868-4fce-83f2-bac0004dfd3a"
        },
        "item": {
          "id": "11eb8b40-910a-4992-b5d1-e2b4d466b035",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "66617871-eb8f-496e-a96a-4bb34d114dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5bc433-d4dc-4177-b5dc-0a809b912f1a",
        "cursor": {
          "ref": "0c74f3f6-4a94-43dd-ba80-4c79a4a01ccf",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1c3c3b41-3506-468a-9230-0b7d85781b7c"
        },
        "item": {
          "id": "8e5bc433-d4dc-4177-b5dc-0a809b912f1a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fd8bccae-bb5b-4d44-a2de-27376a14c24c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e39ea4e-8bcf-44a5-bd0b-8d2def1084ce",
        "cursor": {
          "ref": "81c458d2-8954-4616-9617-4bb8093e69f9",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "85307cdf-db93-4e04-a2bc-e02a5d36597a"
        },
        "item": {
          "id": "7e39ea4e-8bcf-44a5-bd0b-8d2def1084ce",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "cd7594d0-f4dd-4c24-be77-782641d98d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9253d1a0-8a1f-49a3-b613-ea1ea8226b76",
        "cursor": {
          "ref": "4f763b66-f758-4f42-8a5c-4ea8065bd2f9",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "90f5b5f7-0706-4d63-b26e-a8e3e94cc986"
        },
        "item": {
          "id": "9253d1a0-8a1f-49a3-b613-ea1ea8226b76",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "17102ccd-3671-4c0e-8e5a-476722bf1ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7271880b-6ef2-4258-b33e-1dfc756f27f9",
        "cursor": {
          "ref": "19177c5b-71eb-453a-b299-184f6cb8e850",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "154b8bb9-d2ca-4efb-b714-01882a564292"
        },
        "item": {
          "id": "7271880b-6ef2-4258-b33e-1dfc756f27f9",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4a3209e0-ac73-4550-be9d-9a42b8a066d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f957f67-ba34-4d64-8e00-ad00065fff55",
        "cursor": {
          "ref": "98e63cd7-a044-425d-a17d-a98701b42f1c",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1cccc856-1bd1-4d9b-8b5b-784b3603eaae"
        },
        "item": {
          "id": "5f957f67-ba34-4d64-8e00-ad00065fff55",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "04c463f1-c658-40e4-a3e6-1a1f0a590c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c63417-62db-4cdd-9905-04d1c774c32b",
        "cursor": {
          "ref": "ab273410-61ce-4d71-bcc4-48fde61bca9f",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8ca2786d-2c52-4d64-80d1-11f751b6f89d"
        },
        "item": {
          "id": "c7c63417-62db-4cdd-9905-04d1c774c32b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c7904baf-9f57-4a00-80e4-23ab20fbb91a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d114d725-1c32-4e72-b00f-ce4ea293e449",
        "cursor": {
          "ref": "bb4b67da-f108-46fb-9284-8eb126d2a65c",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e96f2cba-e5e7-4252-b5f8-ce47f79b4f7f"
        },
        "item": {
          "id": "d114d725-1c32-4e72-b00f-ce4ea293e449",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fb010734-fec3-4bad-95fc-1e736b4380e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614f0cb4-dfe5-43eb-ae4d-9d4cc4a95076",
        "cursor": {
          "ref": "d31897c6-066f-4ba6-860e-9a1dcdfcb42f",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3182a3f2-a562-460e-a92a-a38bba6c5f71"
        },
        "item": {
          "id": "614f0cb4-dfe5-43eb-ae4d-9d4cc4a95076",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "31dbb272-e335-4ddc-9162-098ec3290c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936eb3ab-00b8-4df2-8ba9-9f0c499ca7cd",
        "cursor": {
          "ref": "3349c3c4-420e-478a-8224-f11e42d746cf",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "04984312-89da-495b-b4ca-7a735dffb175"
        },
        "item": {
          "id": "936eb3ab-00b8-4df2-8ba9-9f0c499ca7cd",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "fca1bc78-c9d5-4771-8ab3-2b48ead164b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b4bc93-30b5-4a2d-aa4e-735dcf6ab0d4",
        "cursor": {
          "ref": "f7f34260-79c5-4526-9868-f2031f5f2772",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e3e67ae2-60ae-464a-bf42-ba042f905a2e"
        },
        "item": {
          "id": "27b4bc93-30b5-4a2d-aa4e-735dcf6ab0d4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9cfc3fa2-e1b6-4fc4-9fe0-78ff3466bc4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb06b16f-c2b2-4907-9ef1-8eb96bf021ae",
        "cursor": {
          "ref": "24f8f668-5a17-45ce-b3aa-2f5882b4cd28",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7a7dad4a-bf1f-470c-a40a-7c4eb40aa286"
        },
        "item": {
          "id": "fb06b16f-c2b2-4907-9ef1-8eb96bf021ae",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7bfc04a9-007c-4c3c-bc06-875164a1ea7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4845a6db-5cb7-4aca-bf6e-0a56b3cee2c5",
        "cursor": {
          "ref": "072b1bb3-424b-41c9-9c8d-93c504355ddb",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "603a1172-e8b6-4ddc-b4a1-5dea80b01b16"
        },
        "item": {
          "id": "4845a6db-5cb7-4aca-bf6e-0a56b3cee2c5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5af15d1e-8e22-4d42-898f-6fa302a16942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f702d624-f182-41e4-99a0-371695299f38",
        "cursor": {
          "ref": "a57853c2-64a7-479e-b92d-e2053379a57e",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5e29b04c-0119-4a55-94de-f64684267d11"
        },
        "item": {
          "id": "f702d624-f182-41e4-99a0-371695299f38",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e9f834ac-4fa3-4531-987f-e1b5ec141d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf28523d-e156-4966-84ec-9e9578af1321",
        "cursor": {
          "ref": "389ffade-ec70-4706-b749-ce2bca70ada8",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f8598dd3-cd68-4a8f-bc87-25659b216146"
        },
        "item": {
          "id": "cf28523d-e156-4966-84ec-9e9578af1321",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7df9c753-76ec-4780-bfaf-65abfad9eb21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc76088-8910-4348-8d8b-e7f12e5dba6c",
        "cursor": {
          "ref": "2a666e08-fb16-4f12-9669-d754847dab95",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6de3e019-ec68-49cd-aea1-f5f9fc6c66b1"
        },
        "item": {
          "id": "3fc76088-8910-4348-8d8b-e7f12e5dba6c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b48f0418-6d79-4b86-a01a-928612adf070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1632991c-1f89-4820-9713-573936b8c976",
        "cursor": {
          "ref": "e03e9c2d-3354-4203-802a-ae69bb7f58ee",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fb34338d-9b0e-4183-a5ec-143afc8916b8"
        },
        "item": {
          "id": "1632991c-1f89-4820-9713-573936b8c976",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6005e237-d69d-40c3-9dde-258a27fb7bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f46677f-2f50-481a-9363-cd5d060849e6",
        "cursor": {
          "ref": "090ceced-989c-4255-932b-d2499cd94505",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4e48238e-0b81-457a-aafd-2d018252f222"
        },
        "item": {
          "id": "9f46677f-2f50-481a-9363-cd5d060849e6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2368306a-11ca-41ff-ae49-6adbdf9acd03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3e552c-40f0-44b9-b5f1-1bb9c0171e56",
        "cursor": {
          "ref": "2d371946-456c-41ab-bd0c-d1527b659db0",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "662eab4c-51e5-4ad3-be70-3193d33b25eb"
        },
        "item": {
          "id": "9d3e552c-40f0-44b9-b5f1-1bb9c0171e56",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b48ae933-33e8-4b5b-b135-fc064c2e6032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983ce3a6-1ae2-4f41-92c4-6cbec8746037",
        "cursor": {
          "ref": "91efe778-8479-4973-8a9d-1b0f30dbd445",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e860c401-787f-40dd-83dc-a9e7619758c4"
        },
        "item": {
          "id": "983ce3a6-1ae2-4f41-92c4-6cbec8746037",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "dff2873c-62a1-442a-bbae-bfbff3b4c58c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc82702-70ae-491e-9f91-bb27fc6e6597",
        "cursor": {
          "ref": "f162cab8-df3a-4cb4-97d6-b061404983dd",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c920149e-d0c3-43f6-9f40-58924d060ef4"
        },
        "item": {
          "id": "5cc82702-70ae-491e-9f91-bb27fc6e6597",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "937f3c73-ab63-4624-9ac6-cc0db9a5c6aa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951543ca-1a11-427e-b76b-97172f48a478",
        "cursor": {
          "ref": "e0804281-f851-4b24-bb76-8ecad033ffa4",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a6fae992-e8d8-47cf-95d0-64337faa0d95"
        },
        "item": {
          "id": "951543ca-1a11-427e-b76b-97172f48a478",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "50a34477-0b6a-4bf3-9d4a-2762f07dddec",
          "status": "Created",
          "code": 201,
          "responseTime": 93,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d823e4-203f-47d7-ba24-4c38cfb41155",
        "cursor": {
          "ref": "0ec76a63-d2c0-444c-b485-fdd8169fbd40",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e6c7df56-6e58-4098-8648-31bd984d8c18"
        },
        "item": {
          "id": "46d823e4-203f-47d7-ba24-4c38cfb41155",
          "name": "credentials_issue"
        },
        "response": {
          "id": "86e14789-e575-4ff9-8ba8-44d4a36dd526",
          "status": "Created",
          "code": 201,
          "responseTime": 249,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "840def7e-ec21-46f1-b031-5b91d8fe2dc0",
        "cursor": {
          "ref": "2f9c0175-e1a8-47c9-bb5a-ae5bfe012f7e",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f0daab5d-d818-4948-82ca-068d841ce593"
        },
        "item": {
          "id": "840def7e-ec21-46f1-b031-5b91d8fe2dc0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d0cc760b-226b-4a5f-88e2-f6c557f14a61",
          "status": "Created",
          "code": 201,
          "responseTime": 149,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "02644429-04ed-4583-8124-70d2e7d6d19a",
        "cursor": {
          "ref": "7646e4ee-f748-4174-a3b7-f644a648e2f0",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8a0bccaf-3773-4764-9823-314b43913e18"
        },
        "item": {
          "id": "02644429-04ed-4583-8124-70d2e7d6d19a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0fdedd6f-d531-4e54-a09a-e5f056b73675",
          "status": "Created",
          "code": 201,
          "responseTime": 92,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb22f29-7aa4-4496-bdd7-995f145418fb",
        "cursor": {
          "ref": "d6053362-6f14-4fad-9afc-96d249132b33",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6dfae4d3-e4d2-4ccd-8cbe-946d3346127b"
        },
        "item": {
          "id": "2eb22f29-7aa4-4496-bdd7-995f145418fb",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7cde0a92-9e9c-48ae-939c-4bb8efea6f2f",
          "status": "Created",
          "code": 201,
          "responseTime": 105,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e7354c-843e-49da-9024-ec316eee7be5",
        "cursor": {
          "ref": "91bacad9-b75c-4c4a-b455-2d5a286d722a",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "cfb5d5c5-cdb6-4bce-b38d-9c6a42ac893b"
        },
        "item": {
          "id": "e7e7354c-843e-49da-9024-ec316eee7be5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "aa11a877-7e3b-47d1-8d82-efe2e0004f68",
          "status": "Created",
          "code": 201,
          "responseTime": 93,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "97cac92e-1235-4f77-b919-92ec0e8cbd27",
        "cursor": {
          "ref": "169b5f7f-7a48-4f4f-942f-b96d26415341",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "72045ed6-68bd-4e72-9847-3c3369e72841"
        },
        "item": {
          "id": "97cac92e-1235-4f77-b919-92ec0e8cbd27",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "866a7368-39b2-4ace-b199-2c0260847035",
          "status": "Created",
          "code": 201,
          "responseTime": 93,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a0a760-926f-4636-8433-7584d99a23c4",
        "cursor": {
          "ref": "f564e69f-5abc-4c97-8f9d-1353c67a2570",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c9273ec5-1ca8-48e9-b129-3cc7f5e05cf2"
        },
        "item": {
          "id": "88a0a760-926f-4636-8433-7584d99a23c4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bc71c564-98e4-410c-ba02-7962d73afce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d68399d-0b7b-468f-9b54-cf2a7e8dc2d8",
        "cursor": {
          "ref": "e05b2388-c1c1-45c5-8284-56be010dc4e5",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "953887e3-a1a9-4c45-98f5-ca68a53e51d3"
        },
        "item": {
          "id": "4d68399d-0b7b-468f-9b54-cf2a7e8dc2d8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d276118e-c04e-4a87-a3bd-2ce386a28c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8f82c8-c293-4a82-8301-cd8908c2fd43",
        "cursor": {
          "ref": "837c6295-743d-4821-9448-169fbc258860",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "29c0f606-e896-4875-a201-cbc670c3e1ee"
        },
        "item": {
          "id": "ff8f82c8-c293-4a82-8301-cd8908c2fd43",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c85220c8-6023-4cea-9ab1-f23d65bf5433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b76752-45fb-48f9-9929-65f2223a6ce2",
        "cursor": {
          "ref": "74a86ef8-864b-4014-af8c-d1c59ad0d8b8",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "48a14c45-7d89-483d-8c14-8ed88456f2b0"
        },
        "item": {
          "id": "f9b76752-45fb-48f9-9929-65f2223a6ce2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "84a11aed-b85a-42f8-9cb2-4a28f3d8fdb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a31df4-5437-4c60-9342-1152d871a8d6",
        "cursor": {
          "ref": "091bbbad-3451-4ade-923e-116a8175122a",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "bb3ecdd3-6e11-49a6-a834-d8d758ca5cd4"
        },
        "item": {
          "id": "74a31df4-5437-4c60-9342-1152d871a8d6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ef20d22d-d078-445b-a596-1673848165f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1ac430-bf1a-41bc-acdc-567ac9fa5981",
        "cursor": {
          "ref": "10adaba7-8d24-42a4-bce6-80eff1901f70",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "946763cc-1df5-45a8-8042-8b6d63ce5103"
        },
        "item": {
          "id": "cd1ac430-bf1a-41bc-acdc-567ac9fa5981",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7f10fd4c-edfd-41e2-816e-6dc3f5a42c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b7b706-3cfd-42c6-92b2-76caa8ead93a",
        "cursor": {
          "ref": "d9a8698d-7489-4512-9ddb-c3e8e9e51eba",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e31b6033-3e0a-460c-906d-740446c2fc5b"
        },
        "item": {
          "id": "d8b7b706-3cfd-42c6-92b2-76caa8ead93a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "52aedb51-97fe-42f6-bca8-0a474e0aa800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dede992-cd73-456d-8a5d-859b90dbfb13",
        "cursor": {
          "ref": "9aa0644b-6270-498a-b132-62d5f4681532",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a2110652-338b-419e-b646-47071743110b"
        },
        "item": {
          "id": "3dede992-cd73-456d-8a5d-859b90dbfb13",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "908c66fa-7bca-491f-95fd-1c4dca2c38ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09db183d-bd4c-4a08-8e67-54d314439257",
        "cursor": {
          "ref": "28823a79-f40e-4058-97a9-d6aaa41351b7",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "09aa5509-e117-4043-9193-8e7a670e2bba"
        },
        "item": {
          "id": "09db183d-bd4c-4a08-8e67-54d314439257",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f6b4a09c-b7c9-4f09-b567-ea89d6fd55c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8193cb7e-b32b-4745-8027-81d9576f6232",
        "cursor": {
          "ref": "cc1c30c8-f65f-45c3-935f-3598486c0024",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c477e9fa-f51e-44ea-85a9-482d65ebf97f"
        },
        "item": {
          "id": "8193cb7e-b32b-4745-8027-81d9576f6232",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "60dd5b8f-4e50-4f9a-8a8e-d5afb39f56fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b970200-b99b-4cd8-9898-9397f0e12da1",
        "cursor": {
          "ref": "c46b6c0a-a270-48c1-a108-cd1f6f377fce",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "91ffde10-edb3-4777-98ff-7c427ae16102"
        },
        "item": {
          "id": "6b970200-b99b-4cd8-9898-9397f0e12da1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f0cea868-407c-495b-b7e0-f3a60617c172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17b1975-4370-4af1-979c-e210349636c0",
        "cursor": {
          "ref": "2e2290a8-63eb-4612-8231-cc6ce63f8b13",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9df22fce-48ef-43d3-89c5-cee0bd2af83c"
        },
        "item": {
          "id": "c17b1975-4370-4af1-979c-e210349636c0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ff71f7d5-9ddb-4cdb-96ce-e15d0013a0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5c30d7-3136-486f-9dee-1d38cf5aa4f8",
        "cursor": {
          "ref": "6b48ac88-b513-42cf-95be-400ef4249c01",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "83b8f17a-e031-43f9-b6f5-667e65ee4321"
        },
        "item": {
          "id": "7f5c30d7-3136-486f-9dee-1d38cf5aa4f8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "611750d4-8179-4700-8753-0421d689816b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7bcf97-ff31-4eeb-9560-4ffacebc1739",
        "cursor": {
          "ref": "7b863b45-6f92-4ea4-ba07-42582178a932",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a687e371-35eb-4a08-90a6-e5f3245713ca"
        },
        "item": {
          "id": "6f7bcf97-ff31-4eeb-9560-4ffacebc1739",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0736d082-6dba-4f6d-a21d-11fd09c4dc5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867538b6-4753-4c15-b7d5-c774ce0b5dbd",
        "cursor": {
          "ref": "f3167911-c322-45db-8857-332ce4a87f48",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c748560e-c18f-47c4-90e0-a2a2c80c41fc"
        },
        "item": {
          "id": "867538b6-4753-4c15-b7d5-c774ce0b5dbd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7a1f94a1-8974-4a60-b1e3-27343a5ee072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9979f0-bd1b-4afb-9aea-0d485c9cc2d8",
        "cursor": {
          "ref": "0f8a142a-60c9-44c7-9f8b-eaa1efdc4482",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4ca525c1-12e5-415a-8424-1c74ce930c61"
        },
        "item": {
          "id": "6f9979f0-bd1b-4afb-9aea-0d485c9cc2d8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "851a9a49-2045-4ba9-9e11-fb627b74f982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a69feca-dd80-4988-bf29-57cd0833f803",
        "cursor": {
          "ref": "8803878d-129e-434d-89f4-8aa558951e2a",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "aab5fbdc-e166-45d3-afb8-573d27f211e7"
        },
        "item": {
          "id": "5a69feca-dd80-4988-bf29-57cd0833f803",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5e62826d-a6fe-4697-b4b6-4f82276aa868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8d4d93-162b-4c98-a6fc-caee8c9ddb25",
        "cursor": {
          "ref": "62e3274b-fa7e-47a5-8a87-888b619237ff",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f637e360-3b6e-4fd5-b0e4-a675cb616d6c"
        },
        "item": {
          "id": "5a8d4d93-162b-4c98-a6fc-caee8c9ddb25",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "44811997-a0e1-4bb4-b73e-a9cd602c9636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a5014f-e1a3-4d99-89c7-58ce0d26605f",
        "cursor": {
          "ref": "aa05e880-ef5a-4f33-b34a-ef8c1d3311b4",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d9589d04-4990-461b-8fba-eecd89a06c2c"
        },
        "item": {
          "id": "e5a5014f-e1a3-4d99-89c7-58ce0d26605f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "70ec1f90-e1ce-4e64-b039-fc3f654d7a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7e185b-231c-4dc4-bc69-3ea3e213a17d",
        "cursor": {
          "ref": "73fadfbb-5b78-4a07-a869-b4dd82426a84",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "33c3cd2a-01be-429f-8931-efaba432b1ad"
        },
        "item": {
          "id": "2b7e185b-231c-4dc4-bc69-3ea3e213a17d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d44156fa-0250-44c5-86ea-f286f081ce4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe240a23-7b87-453a-91f0-970f8bec92eb",
        "cursor": {
          "ref": "a684c2a7-7219-4926-ba60-52e6568a57ab",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8731aad9-17f1-4d7a-bacf-7dcdaf8db434"
        },
        "item": {
          "id": "fe240a23-7b87-453a-91f0-970f8bec92eb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f3f060c7-395b-4cb5-a88c-cfb095b4cc8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91c2815-cb31-467f-b708-8d6c6cc5bb25",
        "cursor": {
          "ref": "54c2ce14-6c84-4212-8d81-f4a50b3ecbfa",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "69a481b3-5b36-4bf9-ad3b-b5e88cb1104d"
        },
        "item": {
          "id": "b91c2815-cb31-467f-b708-8d6c6cc5bb25",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fa7a47b5-af54-4889-ada0-d6187e1aab4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb65a97-28f0-4ed8-8f3d-eb7485eab1de",
        "cursor": {
          "ref": "053553f3-fdb1-400b-a6d5-89b85ae284b4",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ce9b337d-1b11-4449-8892-4f8b26dbcb30"
        },
        "item": {
          "id": "aeb65a97-28f0-4ed8-8f3d-eb7485eab1de",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2008f46b-115f-4f48-80a4-e97884c9968a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbf8334-432e-4bf2-8f15-f03311d169eb",
        "cursor": {
          "ref": "41945123-0ffe-4b2d-a32b-fc9588013f3e",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2b25d8a8-0384-4562-b9ff-4d8dcd7cf1f2"
        },
        "item": {
          "id": "4cbf8334-432e-4bf2-8f15-f03311d169eb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "17f11f52-5795-438e-b41a-e029dc70efe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3572c98b-e296-4b1c-b3b8-b96f6ada9f41",
        "cursor": {
          "ref": "4b9adea1-5fad-4959-a347-9dfcb48303a8",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3c2225b2-75bc-4ede-b035-7dd12d0deb59"
        },
        "item": {
          "id": "3572c98b-e296-4b1c-b3b8-b96f6ada9f41",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "af482802-b099-4a3b-a14e-8ea275e3cd1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb1337a-19a6-4259-8c00-6e891d128200",
        "cursor": {
          "ref": "24ef53b0-44b3-4a25-b2a5-f941d3cde4db",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "297b9b70-f3b5-4d3f-9fc3-6196cf7bc993"
        },
        "item": {
          "id": "2eb1337a-19a6-4259-8c00-6e891d128200",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "667f7886-1af8-4fbb-8af6-a715ebbe1c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ed252e-8622-4fc8-a861-f8db787089a1",
        "cursor": {
          "ref": "d0dfead2-2a35-4e16-a5ab-f2b07958aba9",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "faf77842-6aca-4570-9bed-69e9bb1e74f7"
        },
        "item": {
          "id": "55ed252e-8622-4fc8-a861-f8db787089a1",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "55a5531f-ba45-4b52-8b57-d2a5d43cd11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79e56eb-8015-4279-affc-16f69381e712",
        "cursor": {
          "ref": "5237a35c-3558-45d4-8ced-da01862a91ad",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4c7cb5d1-5793-4ab8-b006-fef996a1c487"
        },
        "item": {
          "id": "b79e56eb-8015-4279-affc-16f69381e712",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2b1b9211-8fd8-4937-97f9-ba494c060707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e13660-6f69-435d-b9c7-e4314e459c03",
        "cursor": {
          "ref": "817994fc-cf28-4715-8b23-55d45687b857",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5457b544-0ef3-4170-ba87-6fc9cc4cefc6"
        },
        "item": {
          "id": "b9e13660-6f69-435d-b9c7-e4314e459c03",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "04060e98-b528-49e2-a623-5e4611c960d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83bb1f9-719a-43c1-a8df-8e037e06600f",
        "cursor": {
          "ref": "c31e6c42-7667-4478-8c90-f431aaf94be4",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bc46008a-0766-4e3e-a2fd-d454cbd51c53"
        },
        "item": {
          "id": "a83bb1f9-719a-43c1-a8df-8e037e06600f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "183e32e5-a19d-4246-87be-e928728d6e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a01fe2-efd9-40d0-acd1-af470ad5f3ba",
        "cursor": {
          "ref": "622d1707-b944-4eee-bd4e-a8ad04e4bcf9",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0a4b9b68-c2ee-4a16-b13c-2077f51a17d5"
        },
        "item": {
          "id": "42a01fe2-efd9-40d0-acd1-af470ad5f3ba",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f90fc870-702c-451d-afc8-39e5fadf47b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f4c321-f400-4fa3-afe9-88d68916010f",
        "cursor": {
          "ref": "fed14c4e-b736-4848-9758-dc4db1846dd9",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6450fc9b-c009-459f-ae24-663b158270a3"
        },
        "item": {
          "id": "e9f4c321-f400-4fa3-afe9-88d68916010f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d2552713-b7da-4263-a27f-a65f51194fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c457401d-c649-4d16-b0a0-7d2e2f5e302a",
        "cursor": {
          "ref": "54636776-cfe3-4915-9d0c-4d9f5518a2e3",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ad3aa7c3-809a-42f1-a650-2f700f021fd7"
        },
        "item": {
          "id": "c457401d-c649-4d16-b0a0-7d2e2f5e302a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "534eb279-390f-4026-aae2-876116c0cc42",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdaf176-7a9e-484c-ba8a-7711ec25cfd9",
        "cursor": {
          "ref": "5c823c1c-bc45-4f9d-93ff-ea411e0251b5",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d9ed9416-a23b-4803-9245-d3c955ba8dc9"
        },
        "item": {
          "id": "6cdaf176-7a9e-484c-ba8a-7711ec25cfd9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0698b851-4bc6-48f6-85c6-8020e83c0431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03354b9e-e99d-46de-b4b3-dcddb515389c",
        "cursor": {
          "ref": "ed1c0130-f5d1-41fe-8c48-a3418816c34c",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3a5d6967-90a6-4fdc-bbc7-1eff25bbe0cf"
        },
        "item": {
          "id": "03354b9e-e99d-46de-b4b3-dcddb515389c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "875f7012-49d2-42c3-98bd-dc87612e7988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da38ba01-7e87-4856-ae64-38aa6525ab91",
        "cursor": {
          "ref": "28a8f397-227a-4870-a043-4faab48782bf",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b7f48166-078e-4150-a423-b4faa7bcfdb8"
        },
        "item": {
          "id": "da38ba01-7e87-4856-ae64-38aa6525ab91",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a8ff9075-4fe5-4777-8d25-e1e552ffce66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f1d628-5123-4aed-bd5f-9e46d6dd4874",
        "cursor": {
          "ref": "7b037657-a976-4398-ab86-b7cf94ce011f",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4c321b2f-04ab-46f7-ac40-ad1564cd26d6"
        },
        "item": {
          "id": "70f1d628-5123-4aed-bd5f-9e46d6dd4874",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e5f6bead-2f1a-4379-9f6e-24676ccb267c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62859d9-5aa8-4d0c-bc8e-c09c5c3d800f",
        "cursor": {
          "ref": "a663d891-ce4d-4548-a033-23066f9c8a7f",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7afc2b06-89e2-403d-a55a-f243b1141594"
        },
        "item": {
          "id": "d62859d9-5aa8-4d0c-bc8e-c09c5c3d800f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a2d26b41-a7aa-459a-99ad-adc9fa73e36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af7533c-fbbc-4c73-9e76-f4036351504c",
        "cursor": {
          "ref": "e2caff80-115f-4e87-ab8e-31dc34a7bd7d",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a306325e-fe7b-4fe7-9487-7c22e3f6cb46"
        },
        "item": {
          "id": "3af7533c-fbbc-4c73-9e76-f4036351504c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ae28b688-3d51-45d5-9278-a0a542f59b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa4b6cc-07c9-48c6-940b-90feb6f2dad0",
        "cursor": {
          "ref": "aceed1de-995b-44c3-bb11-6e589631eb20",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cbd9591b-49be-48b4-a949-62f49585c3b8"
        },
        "item": {
          "id": "0fa4b6cc-07c9-48c6-940b-90feb6f2dad0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f8193040-213d-4502-8220-7dc8b11cfe33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ddfc297-093c-4cdb-9509-6946ed585a21",
        "cursor": {
          "ref": "de41230f-b959-4a99-8cd1-cd1f7fc36d80",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8ac95433-57e2-4410-8d4d-4c057d9b7511"
        },
        "item": {
          "id": "8ddfc297-093c-4cdb-9509-6946ed585a21",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "af94726f-0567-4f74-89b8-fa1fb0acc085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf28fa3-d3b1-4558-8476-01822d3cfcd2",
        "cursor": {
          "ref": "340d4c7b-e90e-4fb2-8877-a7b7bb5e8f29",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "10ed03fd-60e9-4e52-8e0c-a56b3d8786ea"
        },
        "item": {
          "id": "2bf28fa3-d3b1-4558-8476-01822d3cfcd2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b9e68d63-bd30-4076-a86e-61e032a1329e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0e988a-4fad-497c-8f06-373cbe75eee9",
        "cursor": {
          "ref": "2aeef772-e925-4806-852c-fe72f6ce3dba",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1b9f98a6-fdd6-46d9-a1b8-3d3087c284db"
        },
        "item": {
          "id": "cb0e988a-4fad-497c-8f06-373cbe75eee9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b20a986d-cb0b-4540-898d-a0404e8ea3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16d625d-942b-4781-849f-78dbef32e017",
        "cursor": {
          "ref": "65efa95f-1198-4f2f-9ce9-aa445b4bce6d",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7ab35d71-e4d5-4514-b219-b0b486a482c1"
        },
        "item": {
          "id": "b16d625d-942b-4781-849f-78dbef32e017",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "206bca17-c72d-44f9-897f-c317bf40545c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6a1d8c-6ead-4d84-a1f8-99845ab92c34",
        "cursor": {
          "ref": "d2795fe6-892a-49bd-93db-dfb403e4a801",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3db0e1d5-0868-40ad-9eb2-c08547f8b809"
        },
        "item": {
          "id": "1e6a1d8c-6ead-4d84-a1f8-99845ab92c34",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bcea00d2-103b-4030-ac5f-37ba17412b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a422355-a89a-460e-a16d-859ee091b5b9",
        "cursor": {
          "ref": "01f7f266-da46-475e-a479-d4e1ed86048c",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "99035426-6919-4ecd-b844-68195e5b4250"
        },
        "item": {
          "id": "1a422355-a89a-460e-a16d-859ee091b5b9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fb7634ee-cacf-4918-9e9d-daeb057597fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698cfe1b-9873-4f27-8d8f-87504feebb08",
        "cursor": {
          "ref": "38179403-af98-45a2-bbbc-48c2bc2a551b",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7d5bc2b3-3551-49a0-bfc1-058695f32f70"
        },
        "item": {
          "id": "698cfe1b-9873-4f27-8d8f-87504feebb08",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8aedfc79-28fe-4195-8d76-adf3df4adbaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf7b384-6856-421e-9be7-99382dae08c2",
        "cursor": {
          "ref": "0ba773a6-e625-4099-9a13-be670f9b6ed1",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2f86f18a-e921-45ff-ace8-59761531d746"
        },
        "item": {
          "id": "faf7b384-6856-421e-9be7-99382dae08c2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "22cee6b7-af35-496f-9455-885df2a9c6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8155de86-0890-49fd-9dff-07ef924f8342",
        "cursor": {
          "ref": "00249c3f-af2b-4247-b4aa-c6c9d69be0c7",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f710fb5a-fc40-42a4-8bb5-50c1669fb4de"
        },
        "item": {
          "id": "8155de86-0890-49fd-9dff-07ef924f8342",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3cd4729f-94fb-48ba-9adc-4fb2497ef8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8927a670-1eef-49db-85ae-3009c1e6a2ef",
        "cursor": {
          "ref": "a4749ab7-29e0-4e10-a711-4571f53ff2a5",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "17614c4d-49a0-4a4c-a542-72757947389a"
        },
        "item": {
          "id": "8927a670-1eef-49db-85ae-3009c1e6a2ef",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "dbb9488e-3344-45e6-b4af-0b8f53f2c068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d71c7d-4760-41f1-b6a7-7acd0b1da8f8",
        "cursor": {
          "ref": "1fda4132-e4da-46d7-ae1d-ba3f85e421bf",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "48e2bdd5-36c4-4d34-863b-0534475e297e"
        },
        "item": {
          "id": "95d71c7d-4760-41f1-b6a7-7acd0b1da8f8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0160b96a-6232-4a2b-b385-9bc386a6294c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69a2214-a3d9-4d92-ae2a-91708eaddd03",
        "cursor": {
          "ref": "80898c15-3726-40b5-b3b6-c873c2132890",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7827fac8-38e4-4a13-bdb4-05bc4531e515"
        },
        "item": {
          "id": "e69a2214-a3d9-4d92-ae2a-91708eaddd03",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "18ab1f1f-1780-4019-b382-b747a0d31b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837404c6-0efc-458c-a9f6-6f0ad88e663b",
        "cursor": {
          "ref": "4ab5a8a9-55e9-4e2c-b7ca-449eb4924676",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3b936e16-b633-496b-ae1e-53399e7ffd1b"
        },
        "item": {
          "id": "837404c6-0efc-458c-a9f6-6f0ad88e663b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4ef4b29e-da1c-41e7-97a8-a0db5d2ff265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0584ae-fc73-43d1-bddc-7961540c7665",
        "cursor": {
          "ref": "24510877-1060-420f-9d3e-3aa05fa17cc1",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "eda9cad1-a608-4fb9-864d-2b34659d0cdb"
        },
        "item": {
          "id": "ef0584ae-fc73-43d1-bddc-7961540c7665",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d20d1336-4e9b-4627-a092-b7785abcda7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fce8a65-079f-46b6-9882-fef71d153466",
        "cursor": {
          "ref": "46a29242-30cf-44b6-98d3-644bee0432fd",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "cea8bf85-2378-44da-996f-c9cf27850c18"
        },
        "item": {
          "id": "1fce8a65-079f-46b6-9882-fef71d153466",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "310881fa-328c-4ea7-bf1f-52bd79465e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30588f2-60a2-4001-80f9-3ba7f9ff68c1",
        "cursor": {
          "ref": "3412ff40-f41a-402c-a10c-8e8a3e805bb3",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "be3f4829-7b0e-4fb2-bf41-90a032467729"
        },
        "item": {
          "id": "c30588f2-60a2-4001-80f9-3ba7f9ff68c1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "507a76f1-1c63-4e84-aded-967e3e72da38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2fb5b0-1fc3-45e4-afd9-2280caf9b239",
        "cursor": {
          "ref": "dcd4e25a-eb5b-479c-bdc9-c548593433b1",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9abdcb99-51c1-465d-831e-3644097fa6f9"
        },
        "item": {
          "id": "ad2fb5b0-1fc3-45e4-afd9-2280caf9b239",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "00388de1-d457-4744-a554-05b008b21089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e50d89f-4c36-4ab4-b2da-cd7cc0f87fc9",
        "cursor": {
          "ref": "45992866-c8cc-437f-8c99-fc47d8c42950",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "05e3a399-cbc0-4762-9ec9-27e79b05cdfc"
        },
        "item": {
          "id": "2e50d89f-4c36-4ab4-b2da-cd7cc0f87fc9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8c7dcadc-ad30-48ed-9070-3c2c0281e132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad4ada2-ccee-4ebd-8341-2385ffa87a33",
        "cursor": {
          "ref": "5cb29dd1-35c1-4ca7-bf0a-4a2393a26ca5",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f7f7e40d-8fe1-48cd-a265-3abd8bfd0d18"
        },
        "item": {
          "id": "9ad4ada2-ccee-4ebd-8341-2385ffa87a33",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5f020008-a0c6-47be-ab0b-98f45df35f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325863c0-a633-4211-8a6b-70321beb6ea6",
        "cursor": {
          "ref": "92264347-2874-47c5-9c8f-ea4f96f8e4bc",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "29a35834-fc12-40ff-a9af-a5bed757aa04"
        },
        "item": {
          "id": "325863c0-a633-4211-8a6b-70321beb6ea6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a4cbe7fa-a475-4f7a-a11f-d3c021c57f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24fad25-1917-4377-bce7-6955f61e74ed",
        "cursor": {
          "ref": "badfb9c3-37bf-459b-807a-6d56352165a1",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a1f0179d-e1da-48b7-833f-4bff58097652"
        },
        "item": {
          "id": "f24fad25-1917-4377-bce7-6955f61e74ed",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "997ce081-c829-47f3-bac0-1e56cf3b8729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d4d276-13f1-4fac-b6e7-f5d05f55502a",
        "cursor": {
          "ref": "36b298e7-c0c9-48d9-aba2-f675e0caa04e",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "010c3fb9-ff0e-4ba0-a825-c3cf69eb72e2"
        },
        "item": {
          "id": "d5d4d276-13f1-4fac-b6e7-f5d05f55502a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9b7d11b3-fe6a-46ee-92db-83f1384e5509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38888384-7eff-4221-abfb-3fa1e8b53242",
        "cursor": {
          "ref": "aaddaa2a-81f9-46ad-a972-265477e58050",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "525e03f9-d7db-43f9-9930-c57c7fcc76e1"
        },
        "item": {
          "id": "38888384-7eff-4221-abfb-3fa1e8b53242",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2c834a3b-447f-461c-95a6-284f9286fdb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfe627b-26c5-4936-9abc-c1ec8dad3ee5",
        "cursor": {
          "ref": "36a416db-b9c0-4329-a6fe-2607cb21edda",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "37438c8c-334c-4896-b2c2-2fb857debd39"
        },
        "item": {
          "id": "4bfe627b-26c5-4936-9abc-c1ec8dad3ee5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "994ed924-dd2f-41f1-b59b-b80822c6f607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be5e7a0-fc3b-40b9-9eda-512d5ce640f2",
        "cursor": {
          "ref": "22ec150f-18c7-4ee3-abb2-c177a1d5007d",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "007339f5-2688-4ec2-a435-9b06e23e91cd"
        },
        "item": {
          "id": "3be5e7a0-fc3b-40b9-9eda-512d5ce640f2",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d2c2b19c-6702-45b4-a7df-85090d5a783a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44261a70-46c6-42b1-ba46-6567513b9b36",
        "cursor": {
          "ref": "d659abba-2c1d-4125-8b29-b090676478f5",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "55cbbbd4-fbd8-487e-af46-42eeced1c08d"
        },
        "item": {
          "id": "44261a70-46c6-42b1-ba46-6567513b9b36",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "dcd2262b-ed98-4831-876d-11690725c521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18ad9ee-0919-4464-b8ac-cdace5b738b8",
        "cursor": {
          "ref": "b502a019-69a9-4bad-ac1c-f7b37a392e5c",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9b113277-b4dd-42ae-a648-901f34ffce75"
        },
        "item": {
          "id": "c18ad9ee-0919-4464-b8ac-cdace5b738b8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "94731750-e57b-40c9-a4d3-99bab6a6cdb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f584ff36-e0f7-4d46-b25d-11decaaf4028",
        "cursor": {
          "ref": "6f96cd2e-4a1d-41d8-93fe-06f973e52c81",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e2d7eda7-3375-4df8-8e3d-2429bf2c894e"
        },
        "item": {
          "id": "f584ff36-e0f7-4d46-b25d-11decaaf4028",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "333db4b5-1412-4eed-8c51-c9846f572bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50058cf-1b16-4ea4-b629-591b822de5cb",
        "cursor": {
          "ref": "6304251a-a256-4ba8-b4d6-9010cbcf09ce",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "95098e72-800b-4f22-935d-3a59f04e52b6"
        },
        "item": {
          "id": "f50058cf-1b16-4ea4-b629-591b822de5cb",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9d274ad0-788b-4972-b537-d0190e467739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d489de35-859e-4a78-9390-32b44aff29ef",
        "cursor": {
          "ref": "4e36b6b8-3e22-416d-b2bd-7da833ebe90f",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ef6826dc-ba08-4c7d-b010-d5a8335d957f"
        },
        "item": {
          "id": "d489de35-859e-4a78-9390-32b44aff29ef",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "cb7eddca-5233-4f60-901d-337f070bb978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268ebcb5-0b7a-49a2-9840-25ce0a3dc00a",
        "cursor": {
          "ref": "454aa211-5e34-4a63-be02-5eb61e5cd3a3",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "148ea854-dcdc-46f4-997c-5d239b7ed30c"
        },
        "item": {
          "id": "268ebcb5-0b7a-49a2-9840-25ce0a3dc00a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "63eee41a-06c1-4501-8e7a-5285a4e0c8d3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fbd026a-cd2a-49ec-bbad-829f5b70d2e2",
        "cursor": {
          "ref": "0bf000cf-b49b-452c-94f1-6bb82ad38143",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b14557ce-8388-41ca-a1b0-6f2be24db28c"
        },
        "item": {
          "id": "0fbd026a-cd2a-49ec-bbad-829f5b70d2e2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7798231b-ebb0-42ef-9851-734ebf18dde1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287bebba-4744-4f7f-9dcd-8f639b99d119",
        "cursor": {
          "ref": "293de8e2-aa89-410d-b7e4-a909bd84aa93",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e748a763-5e53-457d-9b8d-3130876e1410"
        },
        "item": {
          "id": "287bebba-4744-4f7f-9dcd-8f639b99d119",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "93457597-aa55-41b3-b8ad-949b2064c660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cfee16e-ed7e-4ce4-bc7f-32ce955fe3c8",
        "cursor": {
          "ref": "33896daf-69e1-4e25-8506-25285e478eec",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d32bcbdf-b717-49c4-a4f5-0e8f4ba69432"
        },
        "item": {
          "id": "4cfee16e-ed7e-4ce4-bc7f-32ce955fe3c8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3114069b-4ef5-4387-a972-f16c9b22ed78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6369b0e-89e7-4e8a-956f-0e7ec58d2880",
        "cursor": {
          "ref": "05626717-bbf0-4c4c-84e3-d56469283c3a",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "15c57347-f46f-4840-a36f-9b5df0f7f2b2"
        },
        "item": {
          "id": "c6369b0e-89e7-4e8a-956f-0e7ec58d2880",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "aef1b1aa-cec4-47a2-9b8a-9873754749d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24281f28-6a08-448e-8d9d-4f60e0afd90d",
        "cursor": {
          "ref": "5c9668a0-b8fa-4dda-9ddb-9918ad7ce74f",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "407647b3-c643-44fd-83d0-5ece7e403f23"
        },
        "item": {
          "id": "24281f28-6a08-448e-8d9d-4f60e0afd90d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "886c9861-530c-479c-90ef-d36cb08fd786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9efff92-b798-4db9-93d7-23ac98d56627",
        "cursor": {
          "ref": "1186f443-eabf-4969-a828-d7af3f39c088",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "811ae3c7-d526-46a3-8e24-e6f6a71ab71d"
        },
        "item": {
          "id": "f9efff92-b798-4db9-93d7-23ac98d56627",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "71694128-a38e-4178-8a72-08a988b62a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c742e48-ac7f-4c35-999b-ff98cf18bb48",
        "cursor": {
          "ref": "80574f2c-fb13-415a-a487-908e3a198508",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4db2239f-e133-4cd6-9839-f1561e629c94"
        },
        "item": {
          "id": "1c742e48-ac7f-4c35-999b-ff98cf18bb48",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "edff081c-d467-47ed-a2af-8de4e6ec5ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50cd204d-f84a-403c-83d3-7357b9d5f5ff",
        "cursor": {
          "ref": "60581073-1ec7-4523-8a34-c15542bec0fb",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e21b54fd-78b9-410d-879c-887438e00cb0"
        },
        "item": {
          "id": "50cd204d-f84a-403c-83d3-7357b9d5f5ff",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1e175e6b-f3bc-4f5b-9641-b88d79470ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb62af2-0919-4cb5-805e-aa14ca719888",
        "cursor": {
          "ref": "a42ee08e-0308-496e-9009-dc492a61e8d2",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2da605fe-1ef0-48ad-be62-f8b8702c1eff"
        },
        "item": {
          "id": "7eb62af2-0919-4cb5-805e-aa14ca719888",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "89546f2d-5e4d-4677-8c89-dcec04d3cfd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6d191b-0da2-473e-81a8-1d97f76968ac",
        "cursor": {
          "ref": "0660c1ec-62df-4fd1-932f-b78abb55da5e",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e06632c6-cc81-42ae-a9b1-11a0ed226217"
        },
        "item": {
          "id": "3c6d191b-0da2-473e-81a8-1d97f76968ac",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7cd9f391-3e26-4e2a-96b5-077aac202cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42fc332-42c9-4ca0-ad58-204e3de16c82",
        "cursor": {
          "ref": "d6f2bb33-d348-4e4e-a6d4-55384b9e235b",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6cd01eb3-7cd6-4124-ac1e-e29b0b9192f5"
        },
        "item": {
          "id": "f42fc332-42c9-4ca0-ad58-204e3de16c82",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "15cbb659-3298-4b63-b971-a307f2acdfff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f26c657-ee22-490b-b78e-04faf7d12e41",
        "cursor": {
          "ref": "6c0d8067-56dc-483c-9fc1-c80ab028d997",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8bfadd94-729f-4838-aca7-22826ea63056"
        },
        "item": {
          "id": "9f26c657-ee22-490b-b78e-04faf7d12e41",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d446cfc7-6ced-45a3-ad5d-0696c01351f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a1708f-0eb6-421b-bb0d-05521460f027",
        "cursor": {
          "ref": "25157a86-f761-44c5-997a-d93420eb4561",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "36079ead-0fae-416a-87b5-2ed6200b8270"
        },
        "item": {
          "id": "56a1708f-0eb6-421b-bb0d-05521460f027",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4f9a5a94-81a5-41b1-8740-84b5cfa26fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f977de01-a143-43b7-af6a-6198bd13a692",
        "cursor": {
          "ref": "7043297e-f30f-4694-a976-34e2ab511e0e",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bbe73cd4-852e-44e2-96f1-1a5ca47444de"
        },
        "item": {
          "id": "f977de01-a143-43b7-af6a-6198bd13a692",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d056ebbd-694c-4fa4-bf7c-946a3fc6bd12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf228774-b5c4-43b1-a41e-3f2abdfa7ac7",
        "cursor": {
          "ref": "635b8d38-c19e-4076-81dc-06cb9863528d",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "09a00f24-4124-4cf3-8c5b-3b401dcc6031"
        },
        "item": {
          "id": "bf228774-b5c4-43b1-a41e-3f2abdfa7ac7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "96ea6739-4a74-42f4-873b-9bd424b2d658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ed8174-509b-45c4-a192-ca32977bf243",
        "cursor": {
          "ref": "b44104db-9d61-4f2a-af04-b3a0a8a93b21",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6175126d-e60e-4a86-8a73-7561d23b7ecc"
        },
        "item": {
          "id": "e5ed8174-509b-45c4-a192-ca32977bf243",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8d909437-9372-4848-9c8a-588904ce358a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be009041-4e6a-4722-8695-f4e7c834c92c",
        "cursor": {
          "ref": "2b7e3c18-8e01-4d29-9b10-7730a269de9f",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5563c5cd-cba3-4547-9a8f-6220a0874fac"
        },
        "item": {
          "id": "be009041-4e6a-4722-8695-f4e7c834c92c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "dc9746ca-c893-4f84-bab7-9b6f70cbf9d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0498676e-e927-465f-bfc4-4d6752b42a5e",
        "cursor": {
          "ref": "0e9bc433-611c-46bf-84be-5c234bca1f7f",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "deb8b90a-109c-42dc-bfa8-0c795d05aee0"
        },
        "item": {
          "id": "0498676e-e927-465f-bfc4-4d6752b42a5e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7b5a7358-2bc7-4b5b-b93a-5580a736386d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe969ce-f25e-435f-ab55-e8f0fe3c4c68",
        "cursor": {
          "ref": "d60ab6a8-b5d9-4f8e-9f6d-b4c6222b7b34",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "979113b5-62ca-41d8-b792-5e3748fd4ddf"
        },
        "item": {
          "id": "abe969ce-f25e-435f-ab55-e8f0fe3c4c68",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0730abb2-5e3b-4797-ad85-b80dd8ec33ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92a8bb1-4b4e-4daf-a4a9-f4120b57923d",
        "cursor": {
          "ref": "04a17991-f4d0-47fc-8ab5-6e2aeb687061",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3c812072-ec6f-4bc0-9c20-9e9283f1a783"
        },
        "item": {
          "id": "e92a8bb1-4b4e-4daf-a4a9-f4120b57923d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b25c3036-b077-431a-b6b4-c44d93ab6111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3626c9ad-1331-4bd6-abfe-410b8839f006",
        "cursor": {
          "ref": "67d91f2a-28e8-4e53-bb70-54a918c57fa4",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "65fa0ff4-6392-4306-88ce-0ddf0be8f664"
        },
        "item": {
          "id": "3626c9ad-1331-4bd6-abfe-410b8839f006",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5997cc31-5ac0-4ee7-b1e2-6bb570fb1bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff6adf4-f632-4492-a355-d2e2b078941f",
        "cursor": {
          "ref": "6c96ee76-0f23-49cd-a7e8-ab80ff18ea19",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3951a9bf-8b60-4880-8d1b-adec42d55cd1"
        },
        "item": {
          "id": "3ff6adf4-f632-4492-a355-d2e2b078941f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b5fb14a4-ebe7-4086-bf35-3d41e74d30e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebb39f1-4bd1-4b56-a07f-d288ae43fafd",
        "cursor": {
          "ref": "408263f3-8014-45b6-8ae4-e1b3ef3068c1",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e5f462f3-600d-4448-b497-769aeca83ad2"
        },
        "item": {
          "id": "5ebb39f1-4bd1-4b56-a07f-d288ae43fafd",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f6f3f7de-cbaa-4c3f-9026-a839fd1eadd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d20e72-4450-4313-bece-adafc3a148b8",
        "cursor": {
          "ref": "0363a7b4-9c06-449f-b230-8244b9e6eaa6",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1308c007-62a2-4341-80c6-46529d04d0ed"
        },
        "item": {
          "id": "37d20e72-4450-4313-bece-adafc3a148b8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "62f37e08-4a6f-42f8-b27a-f3763e1d4568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf40b69e-4c32-4606-88b8-86e0e9c8bffd",
        "cursor": {
          "ref": "a83b8120-3fdc-404a-92d4-f5fa8be35c01",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b78eeaff-a2a8-4280-a349-d60ce3567f46"
        },
        "item": {
          "id": "cf40b69e-4c32-4606-88b8-86e0e9c8bffd",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c6458ee8-0c4e-4f84-aec1-b17a8efff504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a747d8c3-d693-43e9-a589-21331d455036",
        "cursor": {
          "ref": "9df58d24-8e3b-48b2-add9-470fc21e1380",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d13ff25c-b67d-4084-8fc4-78b01b4c6410"
        },
        "item": {
          "id": "a747d8c3-d693-43e9-a589-21331d455036",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "100fc9d3-3eae-4be5-84b7-6771c8b5f2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615cf2ee-b3b3-4aca-b273-008e9c88c6e7",
        "cursor": {
          "ref": "f658cdec-db3d-412e-a2e4-93f3961a0911",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "549b0f42-edb6-4dad-8850-af5b4455b13f"
        },
        "item": {
          "id": "615cf2ee-b3b3-4aca-b273-008e9c88c6e7",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bc99c7d5-a80d-47e2-af50-cc1fb336c4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf6e8a1-11af-4d13-818f-ecaaa3d7b377",
        "cursor": {
          "ref": "54834c4a-cb9e-4245-b68a-59ed4cd8219f",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "865fc512-95bc-472a-a516-fa1275f12cf0"
        },
        "item": {
          "id": "ecf6e8a1-11af-4d13-818f-ecaaa3d7b377",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2ab6ffb2-578b-48bf-9f37-0e0e818bf4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7af443-116d-4095-ba71-8c513500d038",
        "cursor": {
          "ref": "4e3d4f89-58fc-41f8-9ed4-ccf2060f509b",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0ea53d53-f671-4d40-936c-a4eb3d70be9f"
        },
        "item": {
          "id": "3d7af443-116d-4095-ba71-8c513500d038",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "90952d76-d907-46de-b909-3e937eedc99e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb88cde-f184-454b-8caa-2a16bd4ee5c0",
        "cursor": {
          "ref": "e3700579-7504-42f8-851a-3cd47a4b0557",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "173f3f07-9a85-4217-a577-8ce43f5c59de"
        },
        "item": {
          "id": "2bb88cde-f184-454b-8caa-2a16bd4ee5c0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "af87ea34-8509-4e27-ab33-574f5105f6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed944c18-1f39-4cc4-978d-6ab5701a3093",
        "cursor": {
          "ref": "0a7ea3f1-d930-48c0-b27c-676726acc307",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "58dd813d-e841-432c-bb3c-89ebc462be81"
        },
        "item": {
          "id": "ed944c18-1f39-4cc4-978d-6ab5701a3093",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "442e1fad-ccf5-4d72-9680-c57e9a46d88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b81dcb-fc5f-4cc8-bdae-9c15c78ecade",
        "cursor": {
          "ref": "064c7d0f-15b8-45d4-9b85-78d96f5b9e90",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f554f937-b0b8-4ed8-be7a-6e2f8f20022d"
        },
        "item": {
          "id": "d9b81dcb-fc5f-4cc8-bdae-9c15c78ecade",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "717b037b-0740-4521-adea-82342bcaeb7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d1a522-fadf-42a0-ad55-454415d1c542",
        "cursor": {
          "ref": "648ebd9a-ac99-461b-8406-f21624b03b7b",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "78262f02-b57a-46a6-aabb-f4e31532831d"
        },
        "item": {
          "id": "60d1a522-fadf-42a0-ad55-454415d1c542",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "928fdbce-5cb8-4af5-9be8-bd088136b8e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29469c8f-acc3-48d0-b412-3d0f02b04bb6",
        "cursor": {
          "ref": "6b2832a6-52c0-441b-8b12-b411ee391e28",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6e12b591-5e47-4992-b4dc-5662696200d1"
        },
        "item": {
          "id": "29469c8f-acc3-48d0-b412-3d0f02b04bb6",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "78e52924-6da6-4c6b-be41-7167f1c52461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e562a072-0df0-4896-b464-fe1ccc3acae5",
        "cursor": {
          "ref": "5f77f316-4386-4b48-afc6-478e88ef75bd",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4dd14b51-dc46-4897-83ae-78f2f41ecbae"
        },
        "item": {
          "id": "e562a072-0df0-4896-b464-fe1ccc3acae5",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f559c0f5-1ee3-41d9-b97b-0eeace3d739f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c4a394-7f41-4bce-aaa1-657a55f284e0",
        "cursor": {
          "ref": "14ae2ca8-369b-4145-afa0-e5e2db527283",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "15c91c76-c0a6-4c43-9c31-5e3ff07c3401"
        },
        "item": {
          "id": "f1c4a394-7f41-4bce-aaa1-657a55f284e0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "368a3296-9c32-48e5-9c27-c471acfdaaf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa30129-64f4-427e-8d8e-906694b463a5",
        "cursor": {
          "ref": "e9b35337-4205-48ee-81f5-abc8b7480f68",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "176bf4ec-1a3b-41a7-9a42-72eaf70ccea5"
        },
        "item": {
          "id": "2fa30129-64f4-427e-8d8e-906694b463a5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "604bedc2-a878-4315-b64c-b5bbc197106b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3e12a8-3c94-46a3-bb88-3df4d70f2ac2",
        "cursor": {
          "ref": "e41c9250-a84a-45db-aa88-463343e7f1f5",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "74a229c8-8980-4c45-8c29-06cdd94e56e7"
        },
        "item": {
          "id": "fc3e12a8-3c94-46a3-bb88-3df4d70f2ac2",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c108c4ae-ad1c-417e-b282-48a0459c701b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156fa6f1-7c3a-4a90-ba73-49989bbf162f",
        "cursor": {
          "ref": "45112712-d3e8-46d8-928e-e9ba93687719",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2b0326fe-7b78-4687-8c48-7e2f806eb221"
        },
        "item": {
          "id": "156fa6f1-7c3a-4a90-ba73-49989bbf162f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "812f8e31-c1d6-4c72-aaaa-cdfbb43d137f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d970f5-ec3d-415f-a213-48a93e8a7ad6",
        "cursor": {
          "ref": "1180ca2f-cc99-4549-9bb2-d505156626cd",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3c2da41d-b287-4fa9-b21c-fe201cbb2fd2"
        },
        "item": {
          "id": "55d970f5-ec3d-415f-a213-48a93e8a7ad6",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "761bbc02-5b09-4ba4-829d-a1ebf86dea8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d57d4c4-06ad-474f-adc9-d61218613351",
        "cursor": {
          "ref": "89dc1220-fcba-47f0-89b9-09d8c4b2051e",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "425501c2-62e0-4692-bb60-625824ff1785"
        },
        "item": {
          "id": "0d57d4c4-06ad-474f-adc9-d61218613351",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c406a4c4-b189-45d3-8919-078426808a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4522b58a-67f5-468a-a89e-4d9add34419a",
        "cursor": {
          "ref": "a6e3dbb9-268d-4854-83af-239c2df67ede",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e2fcb577-42de-4825-ac57-abd90864f47b"
        },
        "item": {
          "id": "4522b58a-67f5-468a-a89e-4d9add34419a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4c97a17c-0e05-4d97-b6f9-daa7231d2d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176a9c6a-1657-4fde-bdc5-193d2c6445b7",
        "cursor": {
          "ref": "44daa4dd-875c-4ac9-9fd4-594a974b2574",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3f4b85e6-44d7-4a2b-8cd5-b6e334b7974a"
        },
        "item": {
          "id": "176a9c6a-1657-4fde-bdc5-193d2c6445b7",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d50c856a-6592-4c93-9faf-76dbb5556b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17e6ce5-6b59-447b-9833-3a8c1756fe12",
        "cursor": {
          "ref": "a44bc14b-733a-4f01-9c0c-cacee6fbf698",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1bef4041-d923-4797-bfb0-a71ef2d6705a"
        },
        "item": {
          "id": "c17e6ce5-6b59-447b-9833-3a8c1756fe12",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a88f6342-9be2-41ca-a4cd-aee7fa739f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc87cf81-132d-44de-959f-b9dce3285916",
        "cursor": {
          "ref": "ae3f9ea9-4ccf-4afb-8064-744cac853b2b",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0cd85977-bab7-4b4f-be90-54fec6e922a3"
        },
        "item": {
          "id": "bc87cf81-132d-44de-959f-b9dce3285916",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "30410d2b-992f-4b22-b3c4-12e755ce5870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a84616-d71e-4338-b09d-f0d974d7ba8a",
        "cursor": {
          "ref": "c9982d21-75d4-4407-a21c-f725b570bcd7",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "47923f76-9f0e-40f4-8c15-823e057e929f"
        },
        "item": {
          "id": "a2a84616-d71e-4338-b09d-f0d974d7ba8a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "10633f2f-9136-4e98-8c38-1aad8ac8d411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c9cc15-2348-4726-ad56-3f83bb781ee0",
        "cursor": {
          "ref": "06b89abe-54a5-41da-a311-81ff33df8497",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "58b5a319-bc04-43bb-bfff-28bec32b309a"
        },
        "item": {
          "id": "e1c9cc15-2348-4726-ad56-3f83bb781ee0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d902c379-6b8e-4960-83d8-ab33679fc78f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba85f2f0-0ad7-4d9e-918d-57966dc7f842",
        "cursor": {
          "ref": "ace0959c-decd-4c8b-9ddc-434d0c08b588",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "bc48582f-f6ba-4bff-b539-b792a76103ba"
        },
        "item": {
          "id": "ba85f2f0-0ad7-4d9e-918d-57966dc7f842",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "91355707-31c6-4cc1-a5af-c3455b43cb7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67957654-18f5-41dc-ae7b-35abed8f4d3a",
        "cursor": {
          "ref": "3ac66847-22d2-4760-a7f1-58e68e8faed2",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f6c3e3d3-5427-466b-a999-f72f45f5e4f3"
        },
        "item": {
          "id": "67957654-18f5-41dc-ae7b-35abed8f4d3a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f730d9ac-3559-4fab-acd9-42c0310a77d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6171ce7-8e0c-46a2-bec4-536e438fbe08",
        "cursor": {
          "ref": "c410cdb7-42f2-4c60-b50d-4b8d238efdb7",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c6d2e475-c3fb-4bf2-8507-bb50ce3f712b"
        },
        "item": {
          "id": "e6171ce7-8e0c-46a2-bec4-536e438fbe08",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0b9ed3a4-776c-4c56-8d27-777dbfdb837b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f23201f-9e22-4d2b-812a-6c50c9fcb86a",
        "cursor": {
          "ref": "a22c6299-5a46-4ef5-874c-4d15e26311e8",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6ea7478b-879f-4b29-93e0-666bd53f5155"
        },
        "item": {
          "id": "1f23201f-9e22-4d2b-812a-6c50c9fcb86a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3ea4f258-743e-4298-8dc5-ac8eaf5c4600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05077635-ac99-4484-9dde-7e673d9319cb",
        "cursor": {
          "ref": "e92544ec-260b-4101-8e8f-d6dfb94fb3f8",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "310ce029-933d-4b54-be24-8012186d1772"
        },
        "item": {
          "id": "05077635-ac99-4484-9dde-7e673d9319cb",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "fd36a820-560f-4a99-b9aa-5663ff91ce9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01d053e-5d70-416c-8390-602bfcf66bcf",
        "cursor": {
          "ref": "af4dce26-20b1-4a63-be12-3c09c7414caf",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7a6ed61a-1be6-4ce5-873f-7124c22c03fc"
        },
        "item": {
          "id": "e01d053e-5d70-416c-8390-602bfcf66bcf",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "90943e34-6a49-49e7-a8de-170c6fb572b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d18c1b-9e72-4927-bfe9-f98ea723add9",
        "cursor": {
          "ref": "32470a4c-25ba-4a8b-8372-979bf2b6d5e5",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8f3bd798-3f24-4282-b499-7fee87fd88d4"
        },
        "item": {
          "id": "28d18c1b-9e72-4927-bfe9-f98ea723add9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "117aa4dc-b567-45f5-93da-5ad290a89ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4d2736-0960-413a-8080-ad7041d734e6",
        "cursor": {
          "ref": "322c177c-a224-4a56-8aef-c331d7c26f68",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7678ed34-5559-499d-9c88-dcc161710c14"
        },
        "item": {
          "id": "0e4d2736-0960-413a-8080-ad7041d734e6",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "598a482a-0bd6-4745-9d90-c209edcc9d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fee342d-3989-4426-afc1-31a3167353f1",
        "cursor": {
          "ref": "4e72a48e-4351-4633-b78f-703fa87d48cd",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "936d201b-965b-47ca-9828-1cbceb345b5c"
        },
        "item": {
          "id": "5fee342d-3989-4426-afc1-31a3167353f1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b14026a5-36e2-4d6f-bf3c-c5d17cf33f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff3418b-3dcc-4ebe-bf1a-e9e655f29c2a",
        "cursor": {
          "ref": "e84481c8-c1b2-4c96-abe5-c2f4d8dfab21",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ae61b05e-e64e-492a-96ad-5e19cedfc2de"
        },
        "item": {
          "id": "2ff3418b-3dcc-4ebe-bf1a-e9e655f29c2a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f302c490-6f62-4856-8d78-dbfeea713816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce206300-25bf-4ff2-b8f2-7c6840fa6877",
        "cursor": {
          "ref": "a83d45e1-cf40-4ab7-a277-a759d9ead395",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a5296270-fc68-44f4-871d-90ef4276560e"
        },
        "item": {
          "id": "ce206300-25bf-4ff2-b8f2-7c6840fa6877",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c4c09b2a-db1b-428d-96b1-856cb43c3b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648dd01a-1c60-423e-97f9-863411ad859b",
        "cursor": {
          "ref": "8a96e4ec-7a93-4fa8-a7d2-13bbd72984f4",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4103d66c-b994-4461-b955-caa9026bcd0a"
        },
        "item": {
          "id": "648dd01a-1c60-423e-97f9-863411ad859b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ce23d009-5c10-4881-8268-3f6d624207d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d27011-2e08-44a3-89cb-d75200b70602",
        "cursor": {
          "ref": "ffc63027-e4c8-4f6a-9607-51a090d1c80e",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9aff7955-3261-4231-a4f9-8f49896dfcb5"
        },
        "item": {
          "id": "a2d27011-2e08-44a3-89cb-d75200b70602",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "541c890a-204b-49e6-afc1-91a5af4de561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a66bdd-dc33-48d7-8d4a-c6a6898fcc3f",
        "cursor": {
          "ref": "662e1936-1293-44ef-aa91-b55928ae93e3",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3b2218a8-6ca2-4ca3-9a77-c156e8e013ce"
        },
        "item": {
          "id": "96a66bdd-dc33-48d7-8d4a-c6a6898fcc3f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b95bb91d-ad02-41e5-9974-5d0c97ad5393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c0a275-1696-44d6-9bac-83aa90ba8781",
        "cursor": {
          "ref": "6e57bd75-22ac-4082-9860-307e01321dee",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0be33c6c-c2a6-4f25-a935-c7bb1df11812"
        },
        "item": {
          "id": "03c0a275-1696-44d6-9bac-83aa90ba8781",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "db886034-f125-4a52-b7fd-09af61ea04ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1539be-89f7-4d25-bbf2-86019ad83db4",
        "cursor": {
          "ref": "40c260bc-bba5-4605-8163-ef95a27ec116",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b6f44cd3-2c27-4d13-bb56-daf50c531131"
        },
        "item": {
          "id": "fe1539be-89f7-4d25-bbf2-86019ad83db4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ee08b63b-20a3-4c77-9c0a-106905e0cf6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f7a1db-ca58-4e54-ac67-e91c6406a4fb",
        "cursor": {
          "ref": "c0650acc-4f6d-4a78-b5ed-ff042740acb8",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f99fb3db-c444-4026-814a-af05c15c9b92"
        },
        "item": {
          "id": "a6f7a1db-ca58-4e54-ac67-e91c6406a4fb",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8836be4a-8ae8-4a82-9178-6fb8b4849b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6159786f-8f67-494a-bb8f-04ac0d85de94",
        "cursor": {
          "ref": "30c52204-83b6-4156-a66a-3aeca056dd4c",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "480e1d93-0328-40e5-a72b-65bfb18b2dbe"
        },
        "item": {
          "id": "6159786f-8f67-494a-bb8f-04ac0d85de94",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9c811662-80d2-47a3-9025-dcf444ca09e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d91e03-3b6f-49d2-bc63-76edc52d7f9b",
        "cursor": {
          "ref": "038b1715-9f57-4224-b591-a41a5e5c5478",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "40049e5f-ce73-4820-bd64-ef20d8322110"
        },
        "item": {
          "id": "a3d91e03-3b6f-49d2-bc63-76edc52d7f9b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4012d85d-69ba-4604-8cb5-8733b5283b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4c8ca6-eb68-44da-94d6-41165f1030b9",
        "cursor": {
          "ref": "4cbe8e6f-6ba7-4dc4-8c19-d466bdd9bb72",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "683544d0-a63c-4cbe-842c-09692c7f833f"
        },
        "item": {
          "id": "0c4c8ca6-eb68-44da-94d6-41165f1030b9",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "005eb3a5-87f5-437d-9e06-1245944dfd1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666187d1-0b59-4692-b565-546867bbd520",
        "cursor": {
          "ref": "254009e0-72f6-4710-a0e8-b02764e6ed2f",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "fdbb5235-3b03-44a9-be88-8e7d0a853578"
        },
        "item": {
          "id": "666187d1-0b59-4692-b565-546867bbd520",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "354d1900-49e5-4f1a-98fd-b9f2e0405b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c21e13-4294-4cf1-8ae0-a14c421a1bfe",
        "cursor": {
          "ref": "7f47766e-3843-4260-9e91-a27d2c8c6e83",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "98910813-bbd9-46ab-b3eb-53820de71617"
        },
        "item": {
          "id": "17c21e13-4294-4cf1-8ae0-a14c421a1bfe",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "70f739ec-5bfe-4b4e-913e-e92eb258fa75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8038bd-49fa-4116-949c-5396dc22080b",
        "cursor": {
          "ref": "6587848d-3914-43f1-863b-49b47495cc21",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "070e3a38-b03a-4077-b8d2-b90eb6e27efe"
        },
        "item": {
          "id": "5c8038bd-49fa-4116-949c-5396dc22080b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "480a16e4-877f-4191-900d-01824de00482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94df0ca-d496-4b11-b9ed-92f817bcd606",
        "cursor": {
          "ref": "7758a4b0-f793-4c5c-8029-108728a076e0",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d2b8e517-37ea-4ec4-8a29-1cf199f0ae1e"
        },
        "item": {
          "id": "c94df0ca-d496-4b11-b9ed-92f817bcd606",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b2221555-0b9b-433e-b4a1-bed910c6f639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b583f559-a346-4dc2-b3d4-a135176900a0",
        "cursor": {
          "ref": "5eac0cb0-6a64-4d2d-8140-29e67a9187e1",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "7b439a5d-8730-43cb-8558-48cf06a4ea6b"
        },
        "item": {
          "id": "b583f559-a346-4dc2-b3d4-a135176900a0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "61964b57-20db-4b01-b662-f6ad5a407b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f53660-fd74-4b1a-b161-c839eb9d4378",
        "cursor": {
          "ref": "8fde4169-c4c7-49de-9d4c-a968d0fd5aab",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "cf48f50d-ab1c-4344-9ba9-fe36ab3a6293"
        },
        "item": {
          "id": "77f53660-fd74-4b1a-b161-c839eb9d4378",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f6c927bb-feaa-45d8-be67-e1b010c671e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d624f60-2e6d-4063-a4e3-8b79692f008f",
        "cursor": {
          "ref": "964f83ab-cfbd-4b78-a694-191be10a1435",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "1a6d124c-cd22-49c5-9777-995a5a9715e1"
        },
        "item": {
          "id": "3d624f60-2e6d-4063-a4e3-8b79692f008f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e0ff485d-9950-4d00-94f6-6137d61462eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7325ccaf-fbd5-49cb-8343-f4b1e9fe1d10",
        "cursor": {
          "ref": "d26f7c93-1b59-499c-94dd-e114a1c112f4",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "8b92e306-5a28-490f-8910-bc4e0644d0c9"
        },
        "item": {
          "id": "7325ccaf-fbd5-49cb-8343-f4b1e9fe1d10",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a28216bb-1aa4-4701-96ea-ae66fcf69523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6de486b-44b5-4fea-bd97-ac1663a6fb70",
        "cursor": {
          "ref": "48542048-664c-4102-be49-0aa5246bc18b",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "df52da27-2403-45e7-a208-428f26dae4d5"
        },
        "item": {
          "id": "e6de486b-44b5-4fea-bd97-ac1663a6fb70",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "453adfdd-0ae1-4b76-8ad6-f787c1eeffc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550a907e-dda2-4af2-819c-dc5113d960e0",
        "cursor": {
          "ref": "9e106e01-f88c-4e4d-9348-c5f9c662aa36",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "c0d19046-7faf-414e-a3d3-308da77e49c8"
        },
        "item": {
          "id": "550a907e-dda2-4af2-819c-dc5113d960e0",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8b634720-26f2-4248-9736-179d8cfbe0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3d0356-bf3a-46e8-8ffc-87706ea3a99e",
        "cursor": {
          "ref": "a94ef908-1dfc-4874-a958-d88fa2cc01e3",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "18c00c08-4ee9-4935-b1fc-cdf097bc6204"
        },
        "item": {
          "id": "5d3d0356-bf3a-46e8-8ffc-87706ea3a99e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a20c59a8-fa7f-42fe-9722-947fd5ed3500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8c7c61-a9c2-449d-ab21-15d41c4eb6ca",
        "cursor": {
          "ref": "70553d62-951e-4447-9031-82ebde35aa47",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "c363c555-5c5b-4c83-a7d4-67b247b8950c"
        },
        "item": {
          "id": "1e8c7c61-a9c2-449d-ab21-15d41c4eb6ca",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2c81ef10-bab0-4d1d-9aab-81dd5b5e47e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83c69a3-6f2a-46eb-a9f2-6008a8607590",
        "cursor": {
          "ref": "22ea7c6c-6713-4008-9093-1f33555e631b",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "a7df86ad-bff6-4f31-b3a0-bf3472f89856"
        },
        "item": {
          "id": "d83c69a3-6f2a-46eb-a9f2-6008a8607590",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1fcb23c1-9478-4c4a-9bc2-974baa85665a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2530ac7d-6b18-433e-954c-0980be10fd90",
        "cursor": {
          "ref": "31050fa0-f38d-4c0a-a2ef-a54fdfacae4b",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "95b6c9f1-9ab6-421b-872a-f86c9793c9b1"
        },
        "item": {
          "id": "2530ac7d-6b18-433e-954c-0980be10fd90",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3df79ec2-7f9e-4147-b4a8-5d6d01bd985c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d390812e-fda4-4f47-b8e3-7da3a9a68996",
        "cursor": {
          "ref": "6f675e33-25c0-4811-9381-21c3f6c5ba13",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "fc65086b-8925-404c-9633-230320eee8e4"
        },
        "item": {
          "id": "d390812e-fda4-4f47-b8e3-7da3a9a68996",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d4cc397e-d830-48c1-b993-4c7810659280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817e94e8-b8ea-49e6-b9b9-fc65e5940a78",
        "cursor": {
          "ref": "0e1d7148-1e2a-4851-9337-3031b8105b79",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "f6cd0245-15df-4118-9181-9ae35fc2f955"
        },
        "item": {
          "id": "817e94e8-b8ea-49e6-b9b9-fc65e5940a78",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4d0aaa29-1823-40a5-958f-8c2705298f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa7eadb-3b82-425a-9a2a-70f062296111",
        "cursor": {
          "ref": "ae865d01-c489-461e-bad7-40b2b4906702",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "df18f501-9762-4056-841b-0757d6e1efb7"
        },
        "item": {
          "id": "dfa7eadb-3b82-425a-9a2a-70f062296111",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d6d9c928-16fd-4314-ae90-2d90da697481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063dc984-e0a1-4a9d-897a-912848db6580",
        "cursor": {
          "ref": "68fbe7ab-5f20-4851-9bce-7b1f21891261",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "72e1aba2-76b9-4032-aeba-19b9e62bd8f6"
        },
        "item": {
          "id": "063dc984-e0a1-4a9d-897a-912848db6580",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ece7d39e-42b7-4975-a5e7-afbf8af4962b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe61995c-2ec4-4e15-8197-ad67d02e7d09",
        "cursor": {
          "ref": "7ec6a0c3-bba4-43fc-800a-9e84b54d1799",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3d2e1284-8fc8-40aa-8a73-dae8dccdfdae"
        },
        "item": {
          "id": "fe61995c-2ec4-4e15-8197-ad67d02e7d09",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "81149a92-ccd4-4f7f-b654-3a20fa0d9be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a24a99-bbd5-4ea4-b837-5e28298815c5",
        "cursor": {
          "ref": "d74934bb-604c-4111-9d04-6ddc5d88b747",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "84b54ca8-477b-4943-9894-2d1d656f51ea"
        },
        "item": {
          "id": "e7a24a99-bbd5-4ea4-b837-5e28298815c5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b84786ce-4674-4db5-a9eb-7150f0cb6da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9f60ca-5904-48e0-b71d-15b21e5f3580",
        "cursor": {
          "ref": "088a2829-6795-4b6c-9067-375122091ae1",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "73d8bfc2-044d-4ee1-a054-dc489e7517ca"
        },
        "item": {
          "id": "5d9f60ca-5904-48e0-b71d-15b21e5f3580",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7d1cf753-b7bd-4a22-957b-734d95da623b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd324a7-15f9-4757-ac43-099924333d88",
        "cursor": {
          "ref": "ab184600-c2b6-4da8-878e-02fed172704a",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "622cd827-4ac0-43f7-89ca-f863dbb06a08"
        },
        "item": {
          "id": "2bd324a7-15f9-4757-ac43-099924333d88",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0c8dabde-cfde-4f04-bcd1-98adbfad32b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d654151-7217-418c-bb00-e5620602b9ca",
        "cursor": {
          "ref": "a9af11fb-f166-4536-acc3-dd532c1819b6",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "e77d875a-bb75-4283-aee5-5f9267dfd666"
        },
        "item": {
          "id": "1d654151-7217-418c-bb00-e5620602b9ca",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b27fa867-b0e7-4832-b993-46a6cdd2392d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec758c5-01b8-4ef7-ba23-7b0418d7e12f",
        "cursor": {
          "ref": "1bf3591d-5346-4193-a4db-23bdac5e11e8",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "673406ae-6114-41b6-b496-f3a7236d108d"
        },
        "item": {
          "id": "4ec758c5-01b8-4ef7-ba23-7b0418d7e12f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "89b9f954-efae-4d0e-8dba-ebd8d8f35df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3841770-eb50-4c80-8b70-b5bc09506753",
        "cursor": {
          "ref": "d86e3c3b-0f03-45cf-935b-73f6cdb77766",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "cd2c8680-9d39-42ba-8322-d8e9c58aa13e"
        },
        "item": {
          "id": "b3841770-eb50-4c80-8b70-b5bc09506753",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "22f29bd7-f377-4e06-bf8b-cad1569595ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7fd5fa-3e47-4f7a-8e57-a14647ccbdfb",
        "cursor": {
          "ref": "9de78dfa-e1b8-492c-b3ed-a3041a2827f9",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "5fe638cd-026b-4813-9511-79f3f113aaee"
        },
        "item": {
          "id": "1e7fd5fa-3e47-4f7a-8e57-a14647ccbdfb",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7c583804-b3e4-4bcf-8816-75eecf5878c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2209d2e-f010-41f5-8311-40651a11f36f",
        "cursor": {
          "ref": "ee4ffc80-f1f0-4490-bedf-05e342e5e0cb",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c85eeca8-1f27-4107-b66c-450389cd3efe"
        },
        "item": {
          "id": "c2209d2e-f010-41f5-8311-40651a11f36f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "53b8560b-5d0e-4f7c-a5af-8191c8da81ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9371fb0-48b6-4bba-a698-5ad658ea39a0",
        "cursor": {
          "ref": "b48fbb3c-f1cb-45e3-abee-8821cffb35f3",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "b6af1090-17bc-43af-9344-80e5c8ae328c"
        },
        "item": {
          "id": "a9371fb0-48b6-4bba-a698-5ad658ea39a0",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "811eff54-0d74-43f7-a297-bdc9e45b71bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26295edf-de67-4a26-961a-b955eac7111a",
        "cursor": {
          "ref": "5cca8e29-75b7-4da5-b614-42d303ecd0f8",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "211790f9-e6b1-4a8d-9d8c-a189a096e7c7"
        },
        "item": {
          "id": "26295edf-de67-4a26-961a-b955eac7111a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e6f5a85b-f602-41d4-9c03-2bba3e319fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ada00d-efee-431e-84fb-f7e938cf4811",
        "cursor": {
          "ref": "0be6bf26-9499-4c4e-9693-88a227fdae82",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "6a778ae0-15ba-4d34-9ab3-41fa3f77e88b"
        },
        "item": {
          "id": "03ada00d-efee-431e-84fb-f7e938cf4811",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "63ef292c-7a02-4a78-a79b-a16147fc7833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36885497-9f7a-4d33-9841-b5b716fdb31e",
        "cursor": {
          "ref": "5443b5e2-fc65-431c-a185-5f1aadd4ab38",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "63ed5674-c3bf-4c17-ae30-db2d5d6838f7"
        },
        "item": {
          "id": "36885497-9f7a-4d33-9841-b5b716fdb31e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a90c3c8b-733b-4517-9cfd-7b6d298804ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6eb0b8-1f06-46a8-8906-0c2b9a409a6f",
        "cursor": {
          "ref": "194aef35-6eda-4e2a-8899-2d9a7e560b0d",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "609dbb4f-8d3a-472b-b998-f238df154806"
        },
        "item": {
          "id": "1c6eb0b8-1f06-46a8-8906-0c2b9a409a6f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d86d4c30-f341-4b7e-a2c0-8e5c3d1a1b64",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13f496a-cffb-4eb2-973b-af39ff288c92",
        "cursor": {
          "ref": "37f7a26c-d83a-4ba2-90c2-2309fee39410",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "829842d7-498b-46b2-b9f3-c2cb9c22886b"
        },
        "item": {
          "id": "e13f496a-cffb-4eb2-973b-af39ff288c92",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e06aea51-3d17-4727-93ef-ba00f82ef323",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9dda65-1f55-4672-b8f0-7bc13ee52bb3",
        "cursor": {
          "ref": "1d922f24-f6b1-4e1d-a770-4e10c26eff4e",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a22e4423-0370-451d-a96e-8e8a74151836"
        },
        "item": {
          "id": "5a9dda65-1f55-4672-b8f0-7bc13ee52bb3",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "bf1a58ea-8063-4a1f-8bc4-aee8d43bdbea",
          "status": "OK",
          "code": 200,
          "responseTime": 89,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc86658-d97d-4035-957a-cd94783f4121",
        "cursor": {
          "ref": "56f13600-030e-45a9-87c2-544e4c896a36",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "5f35f806-bb34-4f7a-a4cd-bdfa8b5ce8d9"
        },
        "item": {
          "id": "1bc86658-d97d-4035-957a-cd94783f4121",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "95a665b1-dcf2-4645-8e12-c3e7f0ab0dfe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc86658-d97d-4035-957a-cd94783f4121",
        "cursor": {
          "ref": "56f13600-030e-45a9-87c2-544e4c896a36",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "5f35f806-bb34-4f7a-a4cd-bdfa8b5ce8d9"
        },
        "item": {
          "id": "1bc86658-d97d-4035-957a-cd94783f4121",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "95a665b1-dcf2-4645-8e12-c3e7f0ab0dfe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0721bc0-0926-4a8a-ace4-a56f3700583a",
        "cursor": {
          "ref": "d605d115-4f61-4e55-be34-0ef710de15bc",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "9ebffa7b-2741-4888-af30-c032f0c26e50"
        },
        "item": {
          "id": "e0721bc0-0926-4a8a-ace4-a56f3700583a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "84409499-3520-4c6e-b4e0-f2c416b62bfe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1298601-2db5-432b-9ef0-d28cacc9a391",
        "cursor": {
          "ref": "56f0c405-a3cc-468e-913b-f0ce990f28b3",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "e047b22d-e76d-4494-a297-c7a340389644"
        },
        "item": {
          "id": "f1298601-2db5-432b-9ef0-d28cacc9a391",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f68ed3a3-685b-48d8-b23b-ca7e9bc290ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}