{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "fe33d599-60d6-4358-9fd6-090aa6516031",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9fc8a35a-c7a0-413a-8130-57a413132178",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cac139ea-9316-4cc6-a16f-c594e8bf60a0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "507e79ef-92d0-436f-95e8-4685e2ff65e2"
                }
              }
            ]
          },
          {
            "id": "d760d6b3-74a3-44cb-9bdc-436b80736ae1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a15cb572-0694-449b-b099-1b0df07908f4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e56e2702-d40e-4db1-9aff-b88be1a6de38"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c8a08c3c-fce0-4fe9-86ba-800ad83ff489",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "da6fc2c6-7e55-4cd0-a10a-e9c89a043563",
            "name": "Positive Testing",
            "item": [
              {
                "id": "59eea253-3db1-400a-8cad-a69f84aff559",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a70db8ae-43b2-4cf6-aad2-952d897c54da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f674facf-6ca1-4f28-8ee3-120d3582ad28"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ba531b6e-53cc-49ca-bd94-1eb7a22ef504",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fede6898-b28a-425a-8608-ee1350567352"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "28aaf8ed-6b16-4db7-9423-6181c7a7dd64",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "84afca1c-fdd4-4281-ad23-80da9d8586f9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ebc7b9b-9112-4eaa-8b36-d8f88cf628f5",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "12b23fb1-2167-4dfb-ba8f-63dd624f1f2f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f9b6516-3c66-4e05-9bcf-2812243281e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd0d8bd2-1fb2-4d5d-9d69-78fc7771d085"
            }
          }
        ]
      },
      {
        "id": "78708d26-5b8e-4bed-9c7b-e91609fe3c67",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "bc565b25-d2ba-4c2c-8af0-c43bbb5e9cf9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "71cfc2fc-782e-412c-96c2-10c9b8879494",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b2063c22-a744-4a02-8602-0e6c6f7b772a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2a291c-6857-4843-9c64-835254eaf5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8c214bf-2d36-4cfe-8a70-55ba4f30d433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e621099-00d4-42a8-bd66-8d3e1d7b6dd8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e3edf5-ae30-43b2-8c63-4391cab254a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b348beef-a427-45cc-adde-fa9c3d446923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910d9b98-fb69-4af2-88ee-9e2ebafa69ec",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a815dbfe-4eee-4df5-b2e6-0c856df9f417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52a8a9fb-4726-499c-8158-c584638b6a6b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "de1dc799-5c3e-4724-8e41-dcd14b53d9c0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "91e40801-05f5-4d98-aa70-2d1940171885",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4c72ef-88dc-48bf-8b39-896416f47e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cbe17034-bc22-48cb-8f8a-6ebcb885d78c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7423b2c7-d583-424a-9983-c83804d58282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38062d00-2233-4cfd-944a-ea492653a4f8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4529084f-5013-46e2-ba37-f5e68bf37fd4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2f3ceb9b-acbd-4fb1-a0fd-cf5ad0b9764b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebbb6035-73dd-4f18-aa4d-721a3a0ce66f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b1b319e6-9fe2-4825-8a8e-2fa1aefe1328"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a74609c7-4260-4cd1-8799-b2c25422d372",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "042958c4-e127-45a4-8da7-0356da194789"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98be1dd9-c5ce-4ae9-b2a9-71898706593f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "008a5a04-6169-43db-960a-0dd940dae458"
            }
          }
        ]
      },
      {
        "id": "9a27cd3e-a5f7-46d2-a407-151a742b4119",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "316beb32-756a-46d4-8195-f5b56d0c1df3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "74bcb803-0bbf-4174-8efe-228b3dc79d95",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9a0c32e1-e9ca-4b10-90ec-054916ac10d7",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92ca5a3-a3a6-43da-b235-933174da5d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7eac36e-a69b-4ac7-8230-ecffde6b7146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399460ec-8718-495e-84ca-1135010fbb8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "641ec613-a837-49b8-a628-5ed5ffd2a319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff8a2ef-d647-42a0-8115-98f4b0314fd5",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab29d0e-4ea5-4b84-829b-28d1e37eb5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "353906ef-9869-43e6-8370-a65372f6a3d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6032d9e6-b85c-4f7c-85c6-4c622b282884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a6a0291-5343-4fe2-a1b5-cfa180f296b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4114fdb0-c7a9-4c87-9683-8881785fb4e9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "670df5e4-dd87-4173-9fd1-c4f3b11ad621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f3f510b-81d3-44a3-a94c-e13fc204353a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ab5759-e4fe-4a1f-b18f-7e78e3a11751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b62357ca-7366-4b8a-a846-7769796b6a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d957e9a-f058-4035-9473-53be0430d648",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ac0e28-8ba1-4f13-8128-0f236456e909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c8b38f0-b1db-4574-ba3d-48382603fda6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc83e183-4b4a-4f67-9f8f-8648a61d087b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7073dcc7-d98b-4c58-a202-b6fe0f6f0f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dade0a8d-d45d-44c5-968e-e558948ed523",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d3ef06-2ba3-4f90-ab57-77f075b9d098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6039ed6-59d8-4bf3-a8d4-7a69dde4f141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5a7c0a-078f-4d34-a2b4-ff84b1a4f35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1b24d94-976f-4fe8-ac90-f070eb12ac7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a39ea24-1a78-4c35-ad36-c9f2770e85e3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9263fb-938c-4006-bd1b-1848bb0da8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4593c726-1530-4816-96ef-38a6d3f75faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b1716d-1b74-4d3a-9f22-3e1e417e4cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96cc410a-6d3e-4b89-9472-6177059d2b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f72d896-bfaa-4aa8-9693-970e9cc410d4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ec7bb2-ef54-47e7-b8e4-56be8beec3b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07684aed-9622-41be-8af0-5bf744f4f1ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da1e3b47-7c09-452a-8e2e-8a8959218e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa9752a8-26fa-476b-9c66-0990b07a564d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9447c15-137c-4a8e-94a1-d5345c63c62b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d973b5-b609-4f8e-88f7-81b93ef387e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c6ea6d7-2ecb-4b31-8841-125f1cc43f54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d1bace-8adb-4e1e-a1c9-fa940f5e5ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0adadb3-b720-4d39-a542-432a48796694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af72557a-5f40-475f-8f08-cb9b544ce0b4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb187b2-548e-47b3-9574-8a723bd39ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06d3c5f9-1783-474f-9f60-9c8a8ba20ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a3a84e-9690-459a-8459-21bfe1488420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3706787c-2c11-48fc-8b35-4ef70bddec99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83bb8036-cd6d-4e64-ac81-e500444eeb40",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1591791-9625-4023-9dd7-2dfaa5137c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2322c588-0e33-4b94-8998-71d9996b358a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de86a8a-d0b3-43ba-ba49-765c55c3ae93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38c6eb7d-0c99-4038-bf5e-0e3f18c5185f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824151d0-d5c1-4d51-871c-aee68460aa0e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8893b3f4-8245-4102-bddc-696ddb84baf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d64287e7-cd53-4dba-ba00-6799986206d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a195ee-d822-4ffc-b146-474a89d7be4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47db16ce-0f18-4c5c-b0c4-43ef8824cee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50908b1-bbd9-4da5-8c5c-edfb656be92a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "223aaa79-ac07-4b10-b2b6-99d69d5e54f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76ab1b3-16cf-4ac7-8c1c-b0ba2e7e8293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699aa016-647d-4222-81fc-7f1b5809daa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb5c2577-fbe8-4973-a185-1f0d6e7e486b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40738f8-ad37-495b-adec-4e2af372ac74",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26f9371-1e4f-44f3-9f2e-27c024ed1569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "924b5ab4-7ea9-4627-b625-3d2b2d6e9a31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f550397-4f3e-464b-9888-c133aecb9519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b30818e7-58df-4128-9436-3185e0f54a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566762af-df8d-43db-bd43-644f5fae5d66",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "336c09f5-c01f-4c6d-a2fd-507c442e7f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abe171a7-3041-425a-be49-9c6d4f826fb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f582959-19ee-43f6-9e2e-8fbc9c9dced8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbfe9469-cc86-4fc5-8572-9b3257a0b450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df718f1b-43ea-49f1-86a0-8870a9f1c302",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a90761-9b31-45da-af51-1bfca5ce3842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65321c62-45a5-4846-bda4-e672b8baf345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38b84cc-3f1d-4d3e-b1a7-976abe3ac909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dec60f16-2031-4f44-bab8-bb0b96c4afc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d958757e-d2f1-435f-93af-e5856f8f2d84",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8827eee3-4ce4-4825-8eef-e6afc58909cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "621a0ec7-0498-4625-862f-e33fd69e4daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803ea44e-a02c-4335-ac7d-e586ea3a45ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ae8e696-7906-46e8-83a8-668dd9afb7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea3fd71-7adf-4be3-a954-020ae3dd235c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f8ac05-9f37-43f1-b521-3811417113d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2307c3-cdb7-4598-b434-77cce8297ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384a51d4-4a0b-477c-b4b3-90fcecaadcb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d001926-fc15-4d64-a3c7-16f2c882bb21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f1b7525-859b-473d-9a10-ce410e83bdaa",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed4b550-be56-493e-b968-a40027ab3c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8acbcae-e177-4d0a-bb82-eed5699382a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a15a69-9a14-4342-a40b-7a3f879a5adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2400f0c8-ee7f-4c99-9256-d7e65fdbc6f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f864407-eb80-4f9c-b7d4-1987a119bb6e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e292ee-9241-464c-bf45-b868dac10036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3995cb2-3176-40a2-9596-b87cfdcb0c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8897e9c4-42a4-4b87-9f9f-01a1eeeeccbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "04b26c50-91e0-4afa-b41f-eddecdd3fd52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdfe8252-e38e-4c36-bcf8-f497acaf66d4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2052093-6e41-4f1a-a2d5-0d6a8f4a3e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de977f65-692f-46e0-b06b-ed629e82943d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d4c721-e0c4-4dd5-b6b9-9caecdf6e50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bd18c22-09b9-4267-8a4d-a2e86145502a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9823ec1b-7898-46b0-80c3-28005ba32c26",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6df78b4-fb12-4cb7-bc3d-607b59f5f0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4798357-64c7-4907-b427-22abcbb97efc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb580e7-c8a4-4708-b260-9f7416cf998c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d6f8db-8198-435c-a76e-c376d88bf7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8bea897-a4e3-4ca6-a3d7-a2b6347c8c82",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89026cc2-4a26-4e3d-a104-0ac101398d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13784c39-b09b-41ff-9045-13208b8481eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b1b277-99f6-497a-82d2-ed0f5688bd72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "022179ce-a5a4-4bb2-9539-4f09fca6e119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbcc6313-6f90-4e09-9059-3426e5523a4d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1340e211-873d-449b-94e9-221a79268e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc79635c-8d67-4640-b2c8-fca6142e7553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff674c5-2d92-47c6-9df5-db5f81b4fcb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a60b652f-b209-4d27-9aef-ffc764d39d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3021128a-aef4-48da-afd1-613cd446295e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57203409-f71d-4bf2-b2ef-46d98862556c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28e2d97-3eda-4221-9ade-814834f25502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5848221-e88b-47de-aa03-cbaed675adcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8480b72-2f83-499f-aea6-aae9aa7cc6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28a621d-3137-4eb0-8085-c51f9b9e673d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1304fa04-e8a6-4c22-a039-cba8151d1997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c832d9-9f6c-438e-ae45-496f2d7a8680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e611512-6050-47c5-8fbe-89e9a36fe29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "26ad22cc-9ce0-47fe-a86b-79243522de7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336b9494-a3dd-4a94-a7f8-29aa3fbcfc27",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c53581b-0d76-4f37-8fd8-2cf71b046bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "843e2522-a505-4dc0-b482-c3aa17ddd405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd7badc-acde-4967-8808-930e9f5867d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec448e50-1dad-4b67-b41d-7609949ed8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4007bfb8-053e-41bf-b327-1712ea52c07a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "583d881a-f2d1-4e13-a92b-20d00e93d4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "828f472c-65f1-475e-a68c-711dc046d512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9a56ac-d18e-4663-8e1d-2a3db8d8de59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8e90036-10ef-4522-a7bc-225904e98ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704b8d9a-cb35-4029-939b-d3c12bfa6269",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c363ee8e-06e1-4ef7-b601-6b19c39e8b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afdb59b8-6781-4d53-b53a-6b601e263d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a46a09-2aff-485d-a594-24f2152ba5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd7564c0-ffe1-4c47-ae38-b43c6c35b055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5755411-1087-48eb-94cb-12248985799f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bae7fe2-9f8a-433d-8d6f-330ba8496ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2717bf05-c3a6-42e0-8628-2c17fe980d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a07691-6bc6-4bde-bf25-051465eec5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d87c93c-3f92-48f9-a3e5-c00c3589f0a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76fe0e78-bc36-4a61-8e1b-8777b3b431bb",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52bad90-318d-4de7-b094-280f56dd32bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a176e8ef-dd6b-4799-9e5f-6f390a40a7ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb21d345-fb53-4be0-b1cf-c698093da95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "00c6058c-725e-4f31-8a56-2d05dd269751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29bdeec7-39e7-48e4-98a2-7b6837f0dea1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11333354-7532-4f0e-921a-edec97bfc8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5063aa36-c844-4298-83d1-6a5fd36659a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782c78c1-5910-4ac7-8ba3-49171e9138f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "11323a5f-d911-4b44-8e59-77ec38cdc1df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9048afdf-3a7c-461c-bcec-fbb8634fe204",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "184a4f33-09ff-45df-b992-b1d65a4e9e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "620bb4e4-0b7a-4fda-b6f5-4e989f54f782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e9a441-dcc1-4606-9a6c-9bd7211f1614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e06abcb-3210-46a1-9a56-cac19ec4c821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c6e4cf-c156-44f4-92c1-ef16c1486374",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34061f39-5785-43be-bebd-8e2dc8fbc3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee7da76-cbc0-4e16-8464-22b6af2f959e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c5c86f-c614-41ff-9b84-afb8e4ca6c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "605848d1-1ad7-4d86-8fee-17511125f3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72b446e-489f-48e8-9b82-234f706e136d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b327c499-4d43-4531-b1fa-52d7492359fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd6ec6e4-47a8-4608-b7e8-e84517994252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2509a533-1540-41a6-bcf9-088051ac2b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "928dd206-a293-471d-8605-4754663003af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07f36a7-e808-4d73-8a2d-53b9c63922da",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b79c46-12d9-46cc-926c-27ab60ba39ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "264ef017-ba38-48aa-b310-0b7eaa708390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88eece9d-89c9-4e5d-8c64-f787798b6814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d77d82c9-5922-4ff3-93ff-6227be082149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ab8056-c600-4490-9db9-6ac49f13c973",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6240ea1e-41f5-4124-9233-8d06fa4f7974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a1a4983-76d0-4ca2-9e27-6ec1af8b33aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970c64be-d70f-4727-8c4a-b0cb4d2a8dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5b510df9-9df1-4b0f-b058-eafd2a3f58cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5daeef-8483-4393-a4f8-58d1e0a661d7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f8a6a7-cc25-44ec-a0bf-3c2627dc8e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd246e1-1eef-4fb6-914a-908742a8a608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b696a4-4052-4420-ae0e-1c8c167da2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9571756-c8fe-4713-8fe3-ee5999776f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1681886d-f63e-4116-ab83-b7c33f659d30",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af034bf-40c1-464a-b7e1-4fc7a455809c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bef4293-42cb-4cfe-b146-80bbdcf3c7fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ade0ecf-24f8-4efb-a1ee-ff412be5ae2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d50bc983-b17e-4e3d-bcc1-c9fadd84c638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287a84b3-5e8e-4790-b1e7-575500829dca",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11c5eca-dac8-4508-9d7f-2bbaeb831220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b74258e3-6076-44b7-a83a-e910b5d7e4c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b863de38-42f4-46b5-b24b-2b1fccde2aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf6ff2a-f7af-4abb-8dbd-b11f01851504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695435c3-02df-4392-9eeb-70e0b1a05d93",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "202a7102-185b-4d57-ab8a-e3910791733b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c32afcff-a520-4c32-85ae-d179e16fcf5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b94eb3-73ae-435d-9e6e-fc2e8a83e19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "839ea1fa-d9e4-45a4-b088-fd8d7e50e156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc5e147-27b7-45e0-8c26-b09355eb8298",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f895faa6-ff8b-4bfa-8fe1-da5ace3d180d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4b5f95f-7c7e-4349-83d8-82c137dab8e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17156d00-a4d0-4209-b49e-e9db4c14ce9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "58632e36-5c0e-4be6-8b9b-635ed6d77fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d32cda-c73d-4e5f-ac6c-2083cbb18c04",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b33a894-d15a-4b11-8cdb-d7d674c49f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a29996ae-946f-4437-a8c5-8445df57b8b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d5693c-498a-4bb5-8dda-16f6218a970f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb3bee0-c4b1-4b2d-9e8a-c4dcc0025a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d6dda22-c4c8-461b-8c5a-f02de98684f8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c865a497-de40-4aa4-b247-2e94d235b54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c74c591-ca8f-455e-aa52-de1a30838ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a553d08-cf81-4216-be97-262ab403fa27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4e2202b-8320-4c33-b250-b36ca64abdd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b84eba-c2c1-482f-b339-16284046d7ff",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bea3c83-d1f8-4304-a90b-49bdd333e2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c25777c5-dc05-4fc4-a1d8-c00f960fa738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48f87c2-a84d-4b6c-aa88-21b23f8a4387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3227dbcb-d52f-4a3b-8bad-d8d32948aea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8cfb0fd-c87d-451f-8d73-7cdf3b4b5909",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8336426-59b2-4e95-909b-21ef6e600d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b627167-843f-4036-870c-d1f024317347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ec9469-7fa9-4ca8-811f-dd46585d9a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "66ce1d75-e8df-47e1-81ca-d5a4f1dc52e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7b1890-6e41-4417-8202-7194a3a2d382",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19844f2-499b-405c-8654-d74cac8f29fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60134453-28b0-453a-97ed-b82dc8b550cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8275a72-3ca3-4148-be29-11413a519930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d56808b6-c2ae-4b81-ba3d-b3dbcb14d7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d32813-a17e-4307-bd20-b5e6380e6603",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f094fe-e1f1-49ba-8163-eabc3f1d8b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "641b832a-8068-431a-bf44-fc16b19f4b78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6ef948-73e9-4bdc-9870-8647b36ca06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ac67b36-4046-498b-aa5f-49a0a0d4e940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041d4d55-799f-483a-96ec-473c76240aaa",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3f1926-3688-45ac-bcda-f74d07e93319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75f30b6b-136f-48b9-8f07-8ff5d46c0409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3755917-c05e-422a-b25c-b421dfa2b0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e494281-bf95-4cd5-ae61-44ab4df4bcae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7c0c17-aa98-46aa-a81a-6490f4de2568",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06480ac-f70e-4a8b-8b1f-c8a1b05805e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdfcdf23-0db8-4775-8ff8-fb338b183aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bba0de3-16e7-4abd-bb3a-45051da8ed81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b5afec5-3db8-48c7-8c89-f8854287687c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db13a916-cad3-4a0d-a0db-20ade2d6e3b9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4810e100-4388-485b-a402-fa6c636661a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7155534-a839-4125-b094-e67d43602805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1080f8-ed78-4662-b8b6-059bb0093c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "86bb1406-3a8c-476b-8a81-f8dca3c8b06a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b63352b-0209-43e4-b2f3-f657b4e9872b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7b19b1-8185-486e-a41e-b7a661cc9004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57c16bbd-0d47-412f-928e-e4912abdf199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c53626-50fc-477e-8ba2-873b0f922205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6802bc92-0b7a-42b1-b75e-3f6c20a51099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7906358-3090-4a7a-b988-4cef6ac7a296",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df02d8b-82d1-4f4f-a444-83604db86d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b6e168e-af60-469b-8f2e-60721cf72d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea15776-bc27-471a-92b1-845f5e33d412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad952701-4878-49b1-8916-001b5fff8cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf2384e-fa7d-41d2-9aae-be1addf3eaba",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0509b17c-84a4-466e-91bd-8f4986df7455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28509c9f-75c2-4a2e-991c-b31ae34baced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0558b0-3bde-46c5-8473-6dafd788c6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4c49cbd-b434-4de8-b059-514353993618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ccd1d7-a435-40d2-967f-f54146fb3f3d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "094bfcb9-389b-452f-9561-ec217a015c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4665fdc-0a3b-4285-afb5-a3637466d415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a597cf-8226-4e53-b868-febaa192744a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "94d78cb1-b142-4c2e-a5a8-264c0beede44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac72df8-49fb-4dc5-805b-ca852c277899",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b0f66c-8e08-44ea-afc7-329bf609b3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76dda0e7-1ab3-4c03-8f1f-91621c84a0d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad01702-8b16-4e18-aaf7-e15082fb59ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4dccdc2-7dbc-4bf6-9689-97e8c2c9d471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3852a136-22a1-4213-9f26-e76b67d28c6e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6519d630-9786-4276-8dac-cfa0c5610bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83329374-6b8c-46e1-9069-57bbd040c1da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14ff6bb-f2db-434e-8671-2e073fc6cf4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c23199d1-5cc4-47f0-a385-a722832fd69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f635e0c3-b88a-4344-a89d-104721a8395c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d58770d-bf49-4a87-a24e-525ea0620000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c320ec94-fa15-4a2a-b488-9ddf2a44b493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fa494a-a154-487e-932e-c397a08dc193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ab71c7c-b8e8-46cc-8c16-5193227c154b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a95b541-1932-4bd5-8c72-34995c329268",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25e97d1-242b-4dca-bc57-a56ac060200a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb721cc-4264-494a-a02b-a45b5a04c55c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b6efc7-6e70-4bfd-8840-c44a9bbadff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "84970c1b-1037-4900-9c09-a0aa65e30b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d73238-9347-41cf-87bb-9a6e5c21fd54",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d265a75-3b36-4ae8-a4a5-4dd2ac5cbf43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4884015a-3961-4c20-9914-bdcc055a5cbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b3d39b-c7d4-4d8f-aa3f-ef6c5892db4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "86b0b9ab-152b-4d04-b556-f0cc52ece8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602d5322-4ac9-4fbe-b353-ff8e55392de7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a221ddbf-4878-440e-88b0-0a6c449f4dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e62db387-50e4-4696-be44-6fe5818a4299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c02adec-1f8c-4157-8def-5b90b5fdd8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f68cccb-8909-4ebe-b513-c115bddf5757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd63a4e-4dbc-4122-8d4a-265262c5e545",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b29614-c99a-4c51-9f48-d07285429a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c581303-096f-43b5-9e00-1901a289eff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa13a00-9d83-4331-be27-dfb57930e2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e97d6a0d-d32b-4c1c-a064-d2f4be085e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71632a39-7e52-4ee3-8b33-b5b387750401",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9593b0-90bf-4648-976e-4d97814e5357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1356d16-ed8a-4441-9c9e-9d329d42ba7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3576e7-85e7-4a59-b4a8-75bf10145df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a0f1bda-1656-4ff3-b302-5da112023d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfb10d6-7f3a-4f7d-84e5-7e828d856aa9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d24cfd39-f176-4b00-b548-1394ae11822d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "565da1a6-5c28-4868-89ec-7f91e2fb1416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726c5634-404f-4be9-8730-e911314cd4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f494ba9e-1b1c-4464-8f72-d6df7ebc1c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432c8d0f-f2a9-4e9b-983b-b5b165a9c855",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "220ba388-dbf1-460b-b200-b1625fae18cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d43948-1043-44a3-9da1-4248d63c4543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e69469-7b1e-42cb-8d2a-2328b4e50b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3836ce22-86b1-41cf-aaec-91ad70e16cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b1257a-5526-47d5-ad37-909e6794cbb7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d56988e-0a97-497c-9391-1a792b58e74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb3627b6-deb5-4a8b-ae19-85861112a509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21fe2ab2-932d-4fcb-af94-05623a2c80f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ed51bff-4493-4382-9790-8900d2d76fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3745f57-bfcf-44e6-b7fb-f402c3b124f4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad67121-15b6-48e6-b5f7-93d76eac888d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9193c1e-296c-4366-9adf-b05d04d94c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b007b3-8b05-4066-b26a-47717440bb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1ff31d7-cfa0-4f82-be0b-4cb74a9222c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e0eeeb-5b91-4b7d-87b2-bd29f066c229",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa44dd1-82f6-4a81-ab56-1c7e5c02c3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04d5dca3-f636-4d26-a384-efd2393d15a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f146db-a0f0-49cb-8814-bf22b4d06bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ebf3d34a-fbcd-4fad-81ff-2c3e3c43c5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2985d3-491f-46f4-8037-8f587d3931ca",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db634a25-c2f0-433c-9d8f-36c1e027478c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a2587d-9044-48c7-ae47-2bb0a26eb82d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40c7e68-eec0-4aaf-ae8b-a52c39b16bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7988f55-87a9-4aab-8889-0726bdcd05e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78bdfc1f-9bc4-4e72-85a1-5486143349f5",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0b19a5-5757-46f2-90b0-8b0e2114837b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e975e03-7c6b-4030-8f25-9ad4d4efa268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afdb4966-294e-4f1c-965e-f07124839c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d2236d5-26e4-410d-ba53-d339cec6c3da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f6d309-ac17-4d52-98c7-f445ddab75dd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b040e186-0880-4236-96ce-fda4477d6ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7ce1a3-19dd-429c-b288-03a79e370b4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95597bd9-2712-4ceb-987a-c5adb5c6dcbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a04213-b4d3-42fd-90b7-168791835921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4477dccc-78a4-494c-8deb-6c5fb1591c2b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8b6326-f4de-46b9-8b11-d6c3cf3172ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0be3d1ed-5ae6-4e81-946a-4b8164998a61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b9a66e-9f11-4b3d-ace3-b3cb4d2ac3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "514de7c6-5dfb-40af-b438-896ab9e6b738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f37932b-6928-4c14-9e9f-36be12798da2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d35070f-e39e-4e76-8d80-3e285075327d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a062a62-edbf-4422-a287-8d51e8179866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c23678-8dd7-43fa-bed6-03a4d1b95f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f89552a6-aae9-404b-ae77-e29874c78736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6098d9cf-147e-4124-9bef-9354fa838232",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4864ca-e150-42a4-85cc-5dcfee719b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20c32b92-faca-49a1-b345-3522f1a7c35a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3823a160-3405-4de0-b6a2-d5dea985d52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "480d63e3-4d61-4b95-b675-3e8cc3faf95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcb160a-a635-4615-9bc5-79fb6dd8f51c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8b9233-5c56-444b-90a4-b59b5444f614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aae3eaf-dd8f-4cc0-8ecc-0afd8621cbef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a64cb2-e6b2-4c60-b89b-d38b7b509aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b6b02d0-ac54-4d62-b01e-02fe877626d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2297fea6-1ef2-43d8-8655-ac1713b4d5f2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "294872ec-d217-4ae7-873b-a7ca131eb9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb9d5671-3653-45aa-a50c-bfa7f825a551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677b61b2-f501-4999-a2d6-ef7d68b70c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f98ca044-d529-42a1-a70b-c25e79c636df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "819e0fa2-1cf1-4d0b-bd73-f379bde21e31",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "251d7d70-af84-4d22-a0d3-6e6efe2c61e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "457adddc-00cc-4f90-85a1-463d1e7480e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b4180c-b41a-4206-a93d-8c24a017418b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb7a20eb-d87e-40cd-9c9d-208219a60428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb205ec-5c29-4a58-8faa-5abfa14ea543",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a67a30f-8826-4b99-9b74-e785aaa74063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1943d5b-96ff-49f8-ac06-ecbbd2af17af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1550898-31ac-4c78-872c-e8358048d383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd429ffe-f052-443e-8b3c-576a599af10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358d3eb5-dbaf-4e5e-b7ca-810410454d5e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6beae6d-7289-4830-b23b-353f890c8288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd211b0-38a3-413a-99ca-fd6bb9934559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5209cf-a496-4161-92a8-fddeee7c5206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed6e1b7e-3bfe-4392-ae83-bb6cc1f567c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8c014b-7221-461f-9332-f1601796891b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5193a2f6-d505-47d1-adba-613666f590fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a839db7-b551-4b74-b450-371c81bb0d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da260362-ee4b-49ee-b1e2-d4269f20500e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "638f7902-faa4-4d05-b498-822c8e98e98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9edbca4-642d-43f2-b741-6a6632f15f4d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd454fd-aa2f-4e15-a02a-03e551c2077c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed0d5516-bfb0-42a0-8d77-8c4e1563d1fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1740451f-a4af-43bb-8904-a29018758284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "35f100cc-aeb5-4f3c-b274-557aaf12d965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25dc2824-f3cf-4d05-9bc1-c212037302f9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c093e3e-4090-439f-afef-bf1fe564d2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53911e10-268a-411b-9f28-068f8eea7616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09592d37-fdf8-4bc2-a234-5826430cc527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "85096f46-1b97-4f79-9623-5492bc2fdaba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28821ca-d2c8-40fb-88c4-e8e27a69ed5e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b495306-8012-49a8-a83f-70a76229e390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca22d05-77ba-4121-8235-4d4d2c5d4eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd30651-e9aa-44b3-a02a-ac87555e6250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e95bd984-a605-45ee-a9b5-1524b56561de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32960bbe-f5c8-49d5-be0c-66675e8e681f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb7b2f4-042e-4f9d-8ecf-0cfabfb1af5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e35080f3-b1ca-4265-a6f4-f9a7ee79be03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea9330d-61e1-4720-b2c8-0be835a7a0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5829c9cf-1fda-479c-9867-d71e7f26631f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6cdc04e-a027-4774-bbb0-b63027b4c551",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8f6229-ffc9-4142-b91d-c56334c064b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c42b2f59-a7b6-4c05-b8d1-cea2ef700ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cad6e25-dd29-4839-bf03-c16135740e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f2e5d0a-2118-4214-9fc2-d34ff8ac20b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7891f418-34b7-4af3-80eb-763456deb641",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41fab3b0-0f09-4319-9205-71d9ce27b338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7ac3ec9-fb7f-4be3-82de-cbf25d35c348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "591986c2-51f2-4458-8087-15a697809fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "34afbffa-4e5b-482e-94d2-dae264cd1acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5980028f-33b3-4d17-a269-e89869c795d4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f62a8a6-1b44-49e6-bc3d-7f5a402dd2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b516710-4ff7-473b-b072-c27f295ed3c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29c8344-eab8-4d9e-9420-54a87e433308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9eab443-6e0f-4338-bc6c-13dda5a75ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49cb0d3-8133-4a39-8ff2-a21aba46d6d6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e44509-bacd-4ecd-b698-c7a24cf97481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90d98cdb-6a2d-472f-a5a1-44dc95ad0879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa7c37d8-a3ba-41ac-8261-426453540d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "87a485f4-2d6f-41cb-818e-4b3c165e98b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045051d9-e367-4e92-8727-3c040a3a91f9",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9a91bd-3a7f-4d98-82d2-87d81c178d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f476a2f-a841-4386-9b51-a613869a7d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185d2f00-1947-4c01-8bdb-15217e9c8ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba187802-2063-4f6c-8086-6e367e111d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7389578e-3667-4c83-b9af-d139f6ed920a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f98440dc-03c6-469a-92fb-82e5e5d1eb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0918948a-fa61-4c01-8450-a8a6271d3f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1992b6-f0d6-45b7-a93f-60fea97b2955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b7257b-3a05-459b-87f4-1b944dc5c7e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c415d4-4586-4ddd-90e5-9956d08bf364",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "700bfcc7-cccc-48c1-aca2-91d6eee2fb65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec3395c5-30e2-45f5-b3ce-bbc348d14d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a7e9bd-feb9-4275-af97-98c89c1a97ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7305473-f68c-4827-a41a-80e3ec5b7482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b3aa8b-ddb3-4048-b8eb-4af783cdbe3d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "502df41f-4110-4338-aa5b-ca7ac2659461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64017ac1-3ef2-4b6b-8c0d-1122ffab94be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a75bfa-b64c-43b4-9f1c-d1744c6cf552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "93cae265-b0be-426c-bf9d-573b796f8ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e700f3-323b-4f9c-afb5-43ce7ce07e26",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bb3706-ff21-46ea-8991-d1123c30246b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4b00807b-334f-4db9-8385-682ed4c71c95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f977ac6-550d-4f37-ae8f-061987400189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "772c437a-904c-49ae-a0af-2a792ffebee0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9019166d-6673-47b8-8163-900372c54b7f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "408c6c8b-8c80-4f61-a926-0d1ca7f76972",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea48164d-f303-42e9-8dfc-316dfc563fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "042687f2-d068-4969-a059-2327847f7204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4b1543-4156-4328-8b85-28495fdef7d8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13e6f4cf-7416-41f7-9540-567e22bbd1bf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b30ff8b-b18c-4c1d-97f7-8ee36c2be796",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "131ee9a8-5186-4dbc-b87a-968ebfc3ab39"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "17b461b9-a1d2-47c1-b22c-e6ed0b457c05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95c37c2a-b613-4bf1-8ac3-f0979c248984"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e54245ff-df67-4870-af70-8e8f65f4e1ea",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3ee76a34-a9f5-42fa-a218-203a8c3d470b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2445cf72-e2ad-4787-8c3d-e2e4c8a62362",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1059bb7b-e109-4165-aa3f-46086d17b697"
                }
              }
            ]
          },
          {
            "id": "3c988515-3043-4746-8e31-e2a88cbaec72",
            "name": "Positive Testing",
            "item": [
              {
                "id": "95076f70-349b-4802-8a4c-595cc6be2919",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "f427dce8-641f-4fa3-8cff-e675737ef87b",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c33caa-07e5-4ed7-bae9-880f8c61df95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5f6378a7-70f1-4b84-a742-b7e3395dc357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24fa75f8-5f0d-4d96-b8e8-b33af4717ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9e1ffcc-5fbb-4bfd-8643-90ba7ec096b7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "abe3a05b-8a0a-461f-b5de-4cbd6a90cc2c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "373da1ba-0513-4a35-b3f9-7528bde72fea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f2daa48-4343-4179-be80-7fed970b7e9e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9297ec47-d13c-49c2-80f0-e5165f017895",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "aa0c7452-4045-4be5-a409-f798382505d3"
                    }
                  }
                ]
              },
              {
                "id": "24878947-e66d-4a15-a67b-a6b408c9f0af",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2a028f4-9e73-4d5d-acd6-adef74e93675",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b45636a-5b47-403a-ad10-c8d32fed8136"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c5cee68-b425-4fe5-9162-0e8320c50214",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "59ec1eb2-a1c1-48e9-aec0-4e4530a7be34"
                    }
                  }
                ]
              },
              {
                "id": "cfc9f032-49cc-4aa0-9fbf-c9d6c8a4043a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d7a8320-a1be-46e7-a5bc-01e040eeb828",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9eeb428c-0288-46d3-bfad-9ee4e0a7ca71"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5bb626a6-d351-4ad4-85bc-4bc676585795",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c5af683a-7b74-4e4f-b61b-26fb0c8500d5"
                    }
                  }
                ]
              },
              {
                "id": "41b8c66a-c083-4342-aea4-e5b427eb3ef6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6002e6d9-9eb3-4e14-9bb5-f07133c7cd13",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2ee4849d-1a06-49d2-baad-945b4e09395a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28fa2161-3ef0-4b36-9004-bfcfc5382ccb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5aa0f2a3-1fef-425f-99eb-104807585d84"
                    }
                  }
                ]
              },
              {
                "id": "e7f9bbd5-396d-4298-b622-247bca929c42",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1e4b4c1-9260-4798-98a4-12745e9a9cfc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6a5528a6-c030-408a-8434-9792b551f646"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0399a79a-290f-4046-83f0-423725fd488e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "001fd098-915a-4d34-8e14-53c2e935d731"
                    }
                  }
                ]
              },
              {
                "id": "f2dc9a71-9862-4c47-a966-ed807105650b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0925cf05-b112-40a3-99e6-485d877d9298",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6ad9da5-2fb2-4772-9f91-30feef93932d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e145d51e-13df-4c3a-a657-72fb45538aeb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "19a96ec3-3929-4180-ba63-ebc20ab04b85"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cd9ff808-a84c-4abe-8f2c-0761ae40359a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "34ce4366-bc63-4047-a836-fb47562ca81c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "66c958a4-9be1-48ab-93c5-bc8ecaf80064",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4996aac2-1771-463c-85b1-a11594ca91dd"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec15ae87-1e9f-4147-9cad-260b3fd1c858",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f9cb4b32-4a5b-46a0-afed-a9aa43dcecf6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6fa0b7eb-597e-43f1-9ff1-f6390664e71f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "06c050ce-ec81-4c9d-9aa2-1782ff96fe16"
            }
          }
        ]
      },
      {
        "id": "22ff1b50-5254-4639-ad35-9668882f9425",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "41880b8c-a79c-4ff5-9dcf-458d4960be0d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8954ff63-6f71-46c1-88c2-09b78b162160",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cc321b23-5cda-4e52-80bd-4e03ea41324e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d460234-1585-46b1-99c6-d893c54957a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff5f132a-aa2c-4cc6-8e30-4bc34ad2edfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5469f2ec-7b99-465b-b828-33f811488384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed21115d-644d-4be6-b61f-3121ce207a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217b6b05-7d3a-40a2-b2a8-41df6ae5d892",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de514746-fe96-4a4e-851d-5d2f32cb2409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fb77e19-f602-4bba-a61f-359982659fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdeaa3f0-aaa3-4870-a029-923c08f3325f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f232446-b795-46ad-a362-9c316b347850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ac6c71-9cce-47a0-9596-30980aff5b00",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e02e40c-b9e1-464a-bd8f-4d03ba27843b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "400c121e-07c1-4081-86ca-81251b43afff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8406370-eef4-4b86-bbd4-56263efa2b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b9815d1-113a-40db-88d9-489ccc79effb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dbb847f-4db4-4c02-89d2-87da44b22c6a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8128e7-c3a2-476d-b201-841c2d3a7ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d19ca84-4819-4d71-b83e-ab3f5c708a5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e1c752-1afe-4b1b-8085-e7216f23729b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba5f6ab5-9470-4228-b5ae-490466328126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91bbe433-e056-4cbd-b233-449780e8c52c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78cb511c-c232-42cb-a17d-41b55422cdf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b5c07e3-3dfc-4ad6-87ce-862e78d55c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c934d2-6314-4561-ad20-1b7dc7611641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "893a86db-d66a-4e93-8a30-acd5cdc13f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9a3768-cf78-42ba-8a40-f2cbaa4f05de",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7bf080-ab21-48e1-9adc-e173ccb46505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5133079-83d8-46c7-b80f-d81cb98a0258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95a1e30-39a7-45dd-944c-3887d23fcb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "59e8acbb-13cd-4c5e-97a8-392fd10f1540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2db35a3-af0a-4ab6-a8db-01e55649e412",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2489ba25-0bca-4f9f-8201-00e6f752bd53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7587de38-07e4-4368-ae32-3be4247b827d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e92a71-24b9-4518-9442-eb166e6fc206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cb3ed6a-c579-467f-9fae-2fdedf5eb0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea5744b-5d00-4d75-aa7f-22ce77cf1b87",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84eafaaa-0b5a-43cc-913f-fa6a21feb844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc16809d-af9f-4bd9-b669-86412d9b0c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b55b9b9-97ef-4aa2-8136-20ab66db24c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee527f41-6a6b-4f85-933b-e5f0f95f5667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f07723-d9cc-4c12-a25f-e6ffc7e0da7b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1649fbdd-4c74-47c8-9d4e-26f203dfda8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d554a1-a653-4715-b804-0140c298937b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed5d4b0-77c4-4f4b-816c-41fd90dc1734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf3faf0-b577-4a75-8795-e311d500561e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7280d0d-e423-4d31-9570-a21929085490",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3838d8a-48e4-4cb7-9b60-5c11bdcdede4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acbb4710-3d0c-4ecf-8ff9-53380603a3a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18474ec-fcf4-4663-8627-5823f1cbf9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9af3cfb-7d9c-4ed4-8721-279124fd5472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03074783-b270-4193-9e1a-3023248442e7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5fd503-e69f-4d56-a2ca-e3ab702212c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "647c7aac-6391-49c9-8e3f-6ad7fbfd08ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46c03cf-768c-4306-a4a1-0679bf849f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "64a39e24-fca8-4c3d-a637-96abbf4677ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afde16f6-6305-444f-8d92-8aafb9413492",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a1f952-0b37-4888-b1f7-40afad719c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba35ae08-e0ee-406d-a15f-bbb8212d672d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d3e004-18f3-41c4-8257-14c6bdd03c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "598f2f78-5909-4716-9622-7cb8075f16a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b50fd4-47e0-4191-ab77-ee504eb9309a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "429c4b87-3243-4b60-beb9-2f22b4760db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "003fdb18-f46e-45c5-83e9-a907577c386d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b47bde7-95d3-44dc-a14c-688f979a0175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8c01887-d180-4f60-ba76-766ddcc31b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae7fc5e-aedd-4ccd-9a4c-60a5c9dc847f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8481a400-5c7e-4ae5-ad0d-1599490fbd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1893e841-cc8d-4876-8fa2-6cb966896ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64401e21-0842-4f6c-965e-d3930a3e33a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f39b5464-5e95-42bf-a31c-9036a9ca5c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1559dd63-a3c9-4366-9079-26ae732da5ba",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ee6718-7474-4879-9039-d5e49270c4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e237b5-37fb-47ce-8e75-be5a28dfd438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91026618-0c02-49ac-8332-e15c3271f1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4275a02e-75a3-49c6-aacd-47195be91d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c39c055-69ad-45b4-9d3e-6967b2a98849",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8a9d1c-75ea-4b67-90c1-cc8fd7210579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "419b6a44-f930-4b24-bb28-df65fd217388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002965fe-dbce-4e66-8065-a6ded6efdb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbbc49e2-6532-4bcb-8991-896c98719c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09587c91-803f-4593-bf88-b9937393fda5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3d04b4-9d28-4b5d-be5d-a4903023a2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd71e87-a468-409b-ba46-f985969e51f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a11c62-b97a-4be4-9e2f-64e71b318b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "401b8864-5465-41ba-9aae-6fc353ea4311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb2f912-5a04-4484-85ee-0414f6700c0e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c2e7f9-91cc-48f1-9231-879226dc8c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901264fd-fe44-4bb2-bc36-4dae468192ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f77017-514d-4952-96b2-0084bc1b37d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c305844-defa-450e-bca5-fb6865a24e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3885d2e1-d3cd-4443-bff3-1353036dd9a6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1b0d22-c9d7-429f-974d-7e673373396d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "659fbc00-db44-435a-b00f-75952714555f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268af922-2b7c-46a6-9f4f-a6f27fd54b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd20293-093d-4734-95a2-4133632c22d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329fd911-1f40-468f-9d91-03f27cdc8ec6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d3e949-4a38-4ce8-92bc-34ea79d25868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3121e121-11f3-4d41-b8af-ddacc6240237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93c20e3-3537-400e-8581-2465070279c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb280f9-a082-4f39-832d-e1df6297b07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9d9a87-046c-4379-97fa-572c232c8155",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f990ab16-c0f8-446c-a390-07015ed82c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "693d37e4-b1b0-48ed-9f41-ce331fb1360a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2faebbb9-9e47-4aa4-a69b-064cfe0f8aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d03969f-d3fe-4018-b361-d0ee20bc80ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f596a2-8e14-4f3c-b248-9b3937a3217a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e089f929-3947-4f34-ab50-ca15f3f5148d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2058de4e-93c9-4ec4-a5d5-a2715323041a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890d5a4a-0898-497c-9a70-6133b10da9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fc31633-e1b9-4785-8e5f-d528ed72058f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9dee47e-eda6-445a-b8ba-6c78a24e03c1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "361072b8-3fba-4416-89be-0373de25b300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c97b6e00-9b92-4c1f-85ef-cf5711741e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5c7a1c-21b9-4212-80b1-a5b7c520c704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81e7f6b5-50cc-4440-807a-9c5d1336f7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d335a33b-5e5e-4e27-b2a1-d52f7ec2f8f2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94594b4d-0d47-4ffb-b1f0-f4d653114059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4f33283-7caa-4c7f-b4bc-ca55b1c83915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a84151-44c1-4307-bf4b-80e4dfabae99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1e3e926-5044-4353-aeb4-fdb3609ce17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3cf8544-dde4-459c-b508-e81d9c0aca12",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4b68e1-04c5-4c98-b64a-00f9f14c0b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afdc52a1-765e-4064-88ab-27ba389df9fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a70668-df45-4bd0-90e6-eefca1f29e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b9cdfdc-eed6-4e89-8909-df75c9010c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36c43db-062b-447f-81e9-ca0d34c7f68a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7862b16c-d124-4638-acf2-fe1a7fd7209c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b96aed2-7963-44cf-aa13-4f0fc48a3c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fdf077b-f714-4b57-a41e-73ef0f087aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "404b7891-96de-4918-bd86-04aea8ce50ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a0697d-3dcb-4ed0-ac8f-94503f2c6ee2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbdeef2d-35f5-48d0-b15e-2d9066df4809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0e95cb-fa03-41eb-9713-3d13e106e0d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f488f1e-0831-4732-976f-d94aa1c5c533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a71e442-90cc-4777-8dfa-b023430c392a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d74051c-6281-4efa-8b03-375b9910e22d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff917fd-995d-46d7-aac4-b1083ab8999f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "951ce044-0620-4cfa-b94f-a155eaa765a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba64a19e-a342-4d0b-895d-c420d0ba0781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f11d7fbe-72d4-48c9-90c3-5c0fe37dd84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4353380-622e-47a7-873f-e6b7169787c9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2805b8c-5027-40fc-b797-5dc822fe7945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "248a2c2f-af33-49ba-9140-ecd6179b3ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00aee8ae-1ec4-4f01-a9e3-4bcac5cbe114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5739091e-e50e-465e-81a2-c4b208f5cf60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290d9149-495d-4255-9d2a-6a57f05947e4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6fc5591-3a2d-457f-b2d8-b85c5d76879d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa9ac49-738d-4a86-8c07-7629eb098673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa81c06-bbe0-450a-ae32-ea57d9e956c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "125c83ef-37b8-4201-a63f-0ad40eb1626e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8af6731-7bf9-46e0-b2f1-0c0cf02717e0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f7f175-e9f5-432d-8d9f-7687d23413a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4cf0646-3ece-4dec-9f5b-2f7f6ba08642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9f6d41-6445-493c-81cf-ff501ed2ecaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f21f9ec1-48de-4396-bf65-8e2ef4501b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a36fd2d-7816-479c-b779-d9971daabb85",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d82851-d599-4685-87aa-633c8b694dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "facd7fad-ca57-4ae1-b9e9-e34ebb1f914d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd5b601-3f60-4c8f-a4de-8e71fa6b6806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5fbff59-eca6-4147-aede-a44487b777cf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b8ce3e6c-4c02-42ae-bc7d-6793cceb015a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b0e90628-e926-4b8d-9e76-fcf25fb40ab0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad80e57c-2ac9-4d25-92a5-16794b800e94",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "492368dc-7882-4542-a81b-ba459fa2c5c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08046b7d-ca19-4041-94d7-026400b0ecd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33770d32-10b1-486d-95ac-5b872c507f3c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a8d4125-e47b-4b5f-8583-e89ee4e40e7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3d68c2f-7255-4fd0-8cac-ea1771b39e14"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0bc5b56f-8aeb-43cd-852d-adc941cc63a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e032518-aff9-4d66-b8aa-7d4707820997"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8af4b669-81d4-4f97-ab7c-00929bafeff5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5cc4c9f4-3f78-4a97-8213-89f5bbb2af0d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd40ec8c-16f0-4581-9efc-67750874513d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f3e5bd7d-8a14-4a5b-b35b-cae99ad2b1c2"
            }
          }
        ]
      },
      {
        "id": "fc9af707-7500-4125-8d26-4d763c6166b5",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "e23ec917-c2b7-4e2d-b5af-a7505f399011",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fba65800-141e-4e1a-b5ce-8626b1835ddb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9e552371-6f03-4120-8ff9-a4b14f2ca48d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f8fe5e-64a6-4c23-8730-b7dd79956ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63309eff-a3e1-4882-9e57-09c02d14ba20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da9e451-a3a8-48ae-8614-c179939380bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4cea9c5-8add-4789-bd72-ee1dbacf6871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45701d12-f185-4740-b66f-95c59ddf6388",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "358b55a8-6407-49fa-8c18-e298af89e6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "482955f5-e9c7-4682-a30d-ad212ca150b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d18320-62ba-4b3c-9622-200f9aa86247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "01008454-a32b-4581-b139-387495ef1667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e803f08-b0eb-4178-902b-2c5e6a421b77",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "485da4b4-30ed-48b6-99ba-3371987d7e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89866287-5970-4383-b79c-490fb9e6f5ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b3b491-020b-4afe-86f1-980772265de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42163e07-d620-49ec-a88e-5277cf4128df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51efb4cf-588b-46b4-80d2-031f75c9a06c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eda2204-3d6a-4078-a4e0-13ba3a4bcfc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8e0164c-1f1c-48f1-8cec-80a8242a39d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6f3cf4-e45d-42dd-8d54-74f2c1fca2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "277bb7de-5bb8-4383-8aac-337792bdcb30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0caecf73-6a92-4125-b01f-b553573d892a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "509a15f1-55f9-425e-8cda-531ee0f4ee44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "997f1818-09d1-4928-9b7a-9554e9752bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db7743d-a80e-485e-86d1-288294eddf07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b651181-7481-4ce2-9324-7314435c0c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c05e916-8917-477a-8c89-da5e4fa148c5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e67926da-3f34-4335-a066-a786e865814f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2401653b-c7b8-462a-ad08-799c9d5b178e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf81516-6c80-4c7a-800f-3af2a45e2a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "091ac3ac-2a3f-4cf2-b584-b31fe513ebb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ace23a0-ae16-45ae-b679-56119f30d443",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0fa8354-5d71-49d8-a344-c486b5486b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8048c278-7e14-43d6-a160-bb71388e04df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810200ec-115e-40f0-9d75-703f7f3a74c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "59298df6-8dea-4c0b-a9b3-835600fc1e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6eef97-0242-44b5-b1ec-aff565b26dcc",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "554145cc-f923-4163-8736-0aa415831137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c6e6b3-0617-4bcf-b26e-5bf1498ca72d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f642e015-e75b-4f82-b32a-535ba00efe22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06336899-2521-4655-b854-5e9f8c427252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b24f4fb-f588-4da1-8a48-4066b6da6892",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26422928-62e3-415f-94bb-9f0a2e424f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb01d17-7f6b-4663-ad6b-2ba53b19c1ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbda6c8-1d1c-4080-a80d-ca9e0b76c57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f5652e8-98c4-4469-b069-0ed862230ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f9b080-6e26-4386-892d-38fe10be9d02",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "092f7e21-cc3a-4809-a312-f756ac8f20ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ca33e0-131a-4e97-a3b4-e661877c0f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520b3162-1b06-485c-a708-9fefb26cea32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a88b126-5621-45ba-9121-03a8e8acc294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1152fa-d0a6-4e8b-aae8-d08c3d621145",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1d5270-379c-4a68-9315-c770bd161559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b677384-f764-4164-9027-eb20b8be077c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd0ba47-06e3-4e45-a2fc-d888295e3bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d5019082-070d-41a6-9a07-9edbd702349e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081771de-6ca0-4ea9-9e8d-b71585472a8d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3948a59-8418-436f-a8b5-74bb1d998299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d503504-05a3-4a7b-ba2d-38cfab0f3433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d440a31-3f5e-470e-8d7d-aa653925bed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a92e71cd-817e-4803-82d6-83e593390b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e2bf68-6c45-4ad9-a690-1480a063f4be",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9876df64-3c8c-44b9-81df-510d0f1f3182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f645ed3b-0676-4de2-9fce-3347ece4f52c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9a7496-278b-459b-9a3b-2d15eed5dcef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e08b1b34-13f4-4951-b97e-4304c915506c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35895ec6-4ce2-4bcc-ae02-f50313f57b8a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d328071d-3aa0-4dae-b9a4-373cb8a9ce1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38fed9da-6c65-4f05-b234-d74b1e55ffda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1a7da8-e03d-493a-93aa-0c59dc0ad09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7328b535-783b-4abd-b20f-806be9c14ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dde2c93-d5ce-479e-9e44-ce4282f3f7d1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a0f545-e174-4500-8d7c-adf0d4930bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6320e96-d821-481f-abcc-58591b0de589"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6db85c8-36fe-44d9-92dd-be293daac6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6a3a6cd-00d0-4a27-b8f0-3962235c932b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f28d77-4d9d-41ce-b35f-b6909943119a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67271489-8727-4b07-a7b4-e8703ff85c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c2a6bad-3d56-48a1-83f8-f8c2f3500850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "528f7cbf-43f7-4609-8128-65a32dd07709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6793c596-f798-4bf8-9cbf-3a120a103c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b32de8-c0af-4341-aa03-7a625c52cdd1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d01f588-85bd-4324-a831-54de1ffdf394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ff6f0c5-b7a6-4c50-8417-e7f904cb9683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff58846-860c-4154-8152-f96b01d41ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "75b3aea2-9465-4d02-b0f3-05a15ee8f825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8465a3-7ea5-49a2-a6f4-d524f16c25b7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7327096-8b13-47fc-b18b-2baefccd9923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a19bc89-40a6-4fb2-a567-81aa0bffa828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865e07c4-318e-4e44-b2fe-67752d1ee950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "90cb928e-5ac2-42b1-ace8-502dcc5e0e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a367c53e-6c52-461c-b7e4-7ed710a80e6f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff812547-0760-46be-9246-21d6f08be5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99ac6996-85ef-4c52-88d2-cd5e8a2daf02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde40b44-40cd-48cb-9aff-7fba91651983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "892579eb-4f41-49e2-be8a-86431863dc17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb68a2d-d655-4cf6-b2b9-f2e66c19efd0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7174fda1-9262-47a0-a4e4-fb5279da3825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "865d304f-c604-40cc-afff-b505c0dec25d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5b696c-26f3-411d-a488-fd831d7a782a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ff931f0-cc0d-4f68-b097-f03d5cb2ef3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51387f8-ff83-479a-aff6-f33712489b8e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cf9d2e-99a8-4216-adbc-07345cb0f25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e514766-1941-44b1-ac51-980a11651681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4659d4d9-14b8-4071-9dd7-e17c6f092ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5715fdf4-82c4-488e-9839-fd7383988b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ea6368-8120-4d51-ab9e-d8987a8e1a11",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4090c65a-5ed0-4982-ba36-fd371349a7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2816f8cd-f6ce-4cb8-8dc8-fa7c2991117d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681c5e21-df11-4355-b377-df7a5dbc9256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6af177a8-2ca1-49ad-932f-49521a851f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f16d7b7-e3db-4f2f-b698-5ace8951a2f1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60576045-306d-4df4-a235-fe0f0f9fa148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b761078-be2d-4cf8-ad59-bef9bd298662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c902e178-9e2b-4f34-8e9d-ac6a9bbfd03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98b0000e-1f72-454e-8a8d-fb8d05b14179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c44b28-ff47-4c00-8595-cffbad06e34a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a1cdb1-3381-4c5f-8ff4-dfc58e0ea19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee88679-fd21-429d-8800-f61a31554a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eef479c-3ffa-4fa8-829c-ed45406828f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d456cf0-ba86-4566-92a4-7492c541d5dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2eefcc-b925-4799-83a5-1a86feaee5a7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a65694-e4cb-4be6-9c97-7bad3f570e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bec16994-3d2d-4fa5-a5a3-72dbd0846995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd40e15-2fbe-4633-b8e1-cfe71d4332f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c28687b-f4bb-4dd5-8bbf-0c1ea8ef851c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf51050e-9256-4e2f-93ff-07b3e9b9cfcb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d65dc8-a86b-4fb9-b7c1-09b870e95b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c759d111-6322-422c-a47d-bfad8c95e90f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14fc3de-43af-467f-83a1-0c9e0eb4a005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "213bd878-a569-4a40-8a01-eaa939702752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5273efc9-7db1-4619-ba47-8cec41e3903b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b53946f-361e-4f93-8f3d-5fa42510b0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d164b21-a095-44e2-90ff-faa026464202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71232424-41a6-4805-a2d8-af1b1ebf7e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f2f525-a86f-4fc6-b6fc-bd35d03f8e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d70d9c-0db7-4caf-a2e8-b8ba30e4f0a6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd44085-0e5f-4966-b3dc-c15206a9f466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000fd663-5668-445a-8494-7d83e47c4597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8721ecb-8019-4b11-aec9-fcddcd8a1d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c533657b-e823-4a84-b51e-c752e566f801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7059aa-ecf0-4500-a771-246f493159ef",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8263d105-f6b2-4feb-a0fc-63a6eae35a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db023a8c-817e-47b4-b1be-bf79e3d8fb17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657d51b8-0525-4aac-a663-b2bb438096e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb5de49-3e3e-4e67-a993-5714c01db151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eae1281-aaa3-4304-b4f3-5ef28e694855",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c9892d-3309-4703-8da6-443fba3af0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7bb4eaf-a0e5-44ff-91c6-833a110f32cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e79439-972d-42a5-aa3e-75f2e29ad303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb9654a5-6b51-47fc-b043-874ea459701b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25ed8ed-9de3-4d0e-ab15-ed986de87da4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e4c93a-22be-49b1-80ce-90b001711705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2974541-ae21-4d48-b065-1a4f03815156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288e2912-fa11-4b83-8b1b-06493dacf35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d08246c2-334d-4c4f-bb1d-ffc510493ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95154f5-6007-4718-b8b3-598ea297ae73",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4957df86-8638-4e6f-8db1-578cf261d6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b673d2-38d6-4bc5-9c79-fb100ebd6c3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eee9e7b-dd7a-45da-9915-87141327e484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e224ccc8-43b6-4f49-b7ff-bc95b8d39b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd637d3-bc0f-4bbd-9b5e-c5446cf27a04",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6e0f4a-b653-46cb-b232-5d074aae7a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8d2e513-7621-4fcf-ad1e-908acee7ab99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15cb1890-ef1a-483b-b46a-bf39967afe8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba7120d4-039d-4d4a-94a9-6a101fffdaab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a3dbe7-6195-4e12-8c1b-efe4aa19d9c8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0dd921-772e-45d8-81c1-e8228f482cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e447d75-cf75-4847-8cff-f8eaf309e390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931720d0-2ed1-46b3-ab42-f9020f3ea15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7042d054-5a8b-434f-9d1a-5a7834e941f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ecdcc3-2ad7-4e64-ac37-e7f42c0dbc04",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fafc7489-034a-4f09-94cb-1742d59274a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6c2d501-038d-4377-a628-87b8da859685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197ac985-4af2-4036-9164-0c0e2fa9ff65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "408dfff1-73e2-414d-b130-1d1a9059de06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea833a35-708d-406f-8a3c-96452619a675",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06acb7b0-ffab-4b85-ac21-e81e22dcd8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "257f0082-ac9a-4b0f-998d-4797effe2e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4ee90c-3a93-4f68-be58-c10fb7ce74df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de93313b-66de-4f75-bd12-2c8eb7d0bf13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e297a0-dc0b-498f-aee5-71dd825d196f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7780c6db-5be5-4f9f-8b34-d7391d2fa0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7704d55-d99f-4ee3-b9ee-41eb3e899612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ed1376-9151-4bb6-8411-3d5489aefc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "584956b3-7ee6-484c-8241-f720531e766e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f23a3cb0-611e-4bb9-ad8f-cce603e251d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9cfd7c7a-a67e-410e-beba-cd1b8df809d8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec485b33-8e12-4990-a8f2-9afb279b4f5f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ba55939e-4764-408f-9a0f-fd82a2b9c1f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7282635-e274-40b9-a368-d0bbb6d64005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7ad217a-bd01-41fb-89fc-240717424d10"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9eae69cf-4acb-4846-b80c-868b6d808a6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc92807d-f97a-4152-9ddc-e4b59e9f1622"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "676d6e6b-f1fd-4a92-8ff8-36c421466a87",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49efcda2-c1a6-46af-92c5-f48edb90bbed"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "23b963ee-08bf-461a-84ed-9b140f107488",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1b0c7f42-c5d0-4cb6-8d3c-320991627f12"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2719e1f9-98d9-40cb-a8ce-4d3c60d7e6c1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8880f6cd-fa90-4122-b443-d646abe12422"
            }
          }
        ]
      },
      {
        "id": "91f5811a-9e88-4f9a-907a-79a1d8830801",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "53be3baa-e9ac-46c7-acdf-9c67afa8ecff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "841ad067-3538-4583-9409-af26e6d1db4c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "473b0f78-b0ed-4296-9154-5225c36e6e0f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ae0b73-b125-4be4-b326-02524437df91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "704c12a4-8843-4e57-9cce-a6be2d9872ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d393b5-a3ce-461e-9b2d-d99a09713626",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f9e113-bace-4f8a-bf20-9c0ab19a5c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc098dc-b900-4988-8c38-a97c3ad779c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a400904f-91aa-4a34-b028-bc135ec0aacb",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5833b4-9a3e-481a-b1fb-3abf4e361368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0134b580-a9dc-4bed-ae3b-6fde9423eb24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9357f267-8ce9-45d4-9221-2fa8db26eef0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0849eb5d-04e4-4796-acd5-ed77fa14c2ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28711105-6604-4189-b3e7-f6b34908ceed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed156a8a-8e6f-4489-b9a4-b17372783404",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b0d7b6-5d01-4bbc-ba56-0f6c0a8b5ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "330060d6-5404-4110-9d3d-21da906f5b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3b08bd-5156-49de-ac04-1dd8507a5e74",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a99d34-d1ec-41f5-85a2-2e46e0725b03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "406a1123-d449-49ad-b692-b0c39e1d6096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddc606e-ca18-451e-a4b1-40b09fb69dd8",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eed5eea-70ef-4c5c-8fb4-1a1030949ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d5f3ee6-460f-4fbd-b6de-1a383aa9610f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4f127f-d23c-4573-b39b-5cee91cb09c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d968197-29e3-4aaf-923f-07fb73d57fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878fd43c-bd9e-4fba-9f78-6024f1ed5d13",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de42b12c-9d5e-4f35-a339-3b798c0dca45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f5b35aa-1277-45df-8a3d-7bb1e8c37a97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "143e3b03-b94f-45e8-93c0-eba424f16e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c829a3ea-8a67-4017-a26b-bf720b6cb5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e893b4-f1e6-45c9-a0c5-0e149e3f60b3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe00ad5-f346-4075-9d9c-a377bdf56af8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9bbd480-88bc-4d63-b612-d1f345d735f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad53d30-64b8-4bb8-9f4d-c1f2849e75e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48592cf2-13b2-47be-9b0a-dad1c706215a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf3145a-451f-4394-bc51-f5fc3ba1c770",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cca50f4-2e13-4210-93a3-84dd4f0fe017",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a8b7942-5dd8-43ec-a6fa-beda98e4ca5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5938b05-ae58-453c-9321-a9139f3647f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "470db6d7-37dc-4725-8170-1cbd77cc8476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1aea36f-5587-4192-b03f-cef1d2d639fb",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a1e360-e693-4dfc-bcf3-bf2a0fffe635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d884c7af-6ec0-4279-96d2-fa21c4c5db32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0c2227-a1db-4304-81ca-d7113e78a8b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f6774a6-ef6f-451d-9f01-e7b994411b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89dff38d-a778-40ae-a9ce-403252fbb688",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e8e9e6-326b-4f58-9899-7191b30ef04a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "160189a6-363e-4a3d-a11b-878f8c6c7b43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4640a528-8b77-4e0b-acaa-96cf94b42688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9da16508-16ef-4689-8ddb-84e74b926cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91528c3-30f1-4026-9cff-99743a855ec6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a807fac-6d15-4ea7-ba18-f5e5a5ccc44f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ad10c8f-0843-4c0b-b863-5ec5c61a71ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0cadf89-54a2-42d7-a34b-0f16bfdb6500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a6d8eca-ac77-46dc-b399-2599648dddcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faafdfbf-a5ea-49e1-a68b-150b824c8779",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90c2295-288e-433d-bcf9-e3de3020e6fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d54e0ff-97b5-40ce-9f9c-5541d79cf22c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4ab08c-8bfe-442f-ba72-e7a788bf82ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f09ca2cd-eef6-496e-8cb2-c38763e7c5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567ec128-d274-409f-8191-7504edd920fa",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca3a5c6-bd24-4624-862e-5e94ce4eff53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20603280-9f90-4f20-a6f4-ebe35e6de36c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a76dc35-e3d8-43ec-8223-011cf1d937bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f477f8e-1ac7-4941-ace1-fccb4302bfd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc25367a-71e5-4579-9f86-48e73b16825f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf583db1-0597-4f47-8be8-275356f71b83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37de54a9-aa61-42d7-9afc-fb89e8486edc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "345f5726-f484-4875-a389-bd4c3aab0253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97246ebd-729d-4ea2-bdbc-86e6d90144ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a61dd1-286b-43ca-94b2-8e6629a883cf",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff85ba16-1ba3-40d8-a07d-5097c30ef25a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e016e088-a603-43c9-8f41-5e42c6788c08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02ecf2f-9d8d-4329-b808-6b988c6a3d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1acd6dd1-8942-4074-a670-cfe1e1faca2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e337ba7a-4da8-4911-8acc-c2f311bc9e1a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b2635e-2a7f-4703-9a43-beb0eff1466f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c01c3aea-346a-4ebc-a334-dbac55a0478b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2723aa5c-e8eb-4c6d-8db8-d3b378df05d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c85c9a25-65c1-4671-911e-b2a28310c9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e6b75c-fecf-4edb-9964-28ec68156002",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4484de1a-1439-468d-98a3-1f40db6188a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0988327c-a170-4093-8b60-9ab0fe3bcc81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c95c2c-8fd7-4c12-ba53-625b4ad99ea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d727efb7-fa48-4bb4-8f09-258fa5d54482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635fe525-1614-44e2-b988-4c62178127fe",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fc3410-a6af-4b20-befd-8e3eb69761d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce0521bb-ba5b-43ed-a77a-f77331c5cbfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ba15a0-d5e3-43bf-8cdc-6e1f86e4843e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4958b0b-0ea8-489b-98fd-11500cec015b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70017b0d-9f3d-469d-84e6-e07a0cd0ed8f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73e4bf0-6fe6-4bce-8021-d8f2f292ce6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83330b4e-a9e3-4a38-a27c-2f5cbd3c2350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7f4b6b-45d0-4ef7-8b0e-82265d9a2ef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cf38e19-9229-4893-9613-4abe0d619c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf7a0e2-c8c2-496f-a0f2-17cc11cf642b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d777fa1-6b60-4720-8208-59bf098f5b65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1bfd17a-c0c9-429e-a231-86799280b517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3793a34b-da17-4037-9a66-0209d628355a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e70a9597-b460-42ea-a33d-6f5fa9a724d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a8a65c-76de-4577-b0c4-ce3a88698670",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786bcbfc-8d80-437d-830c-61d460f8102a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e451dd46-f422-4766-8292-d5e384dcd6f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd9754f-c32f-408d-8da3-fc3fda7452f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1125926b-e1af-4c7f-b507-ddca787d1635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26292875-7998-40c8-9f69-fc477892472f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816761e0-6aba-4c8c-9f02-8f099f000fde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e36fa37b-822c-410b-b2d2-5575178110bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab0e743-0dde-43e6-afe6-918de80f8965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "426ecd1f-5c5e-493c-a499-92c7c8bf5d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde5f8f3-9c77-4a3f-86f8-2be8c8374746",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff9ee96-13c4-4d4d-88b5-272c9cccca57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "754dd0f4-7e68-4bde-a15c-d29d77e3ed50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c40f3c-c865-4b27-ba3d-e09e61581b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70059f27-ed1e-47d8-a40c-92cc80713c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d52bef-e4c5-467e-a8b8-dc773f1abdb6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9dd0d99-a47f-4ed9-99aa-ba856539c5ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a38b848-4759-41d7-897c-82c64d0fe3c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66199351-4495-40ca-8694-d6a289f1f620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00722070-8aff-4284-93c2-e95426fde74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26093773-89be-4b65-bd6b-1062f7bc5b58",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29f6ee4-dac3-4101-a03d-e66c07100d80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17859598-7eb6-4347-aa08-9a5e5a10f15a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "874b5eaf-a606-4681-9de7-ce631be284af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a99d7121-cd76-4db8-9ad3-302f4fd1791e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa14336-9ef1-46ce-bbcd-0c67bb6e9721",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca51297-eda9-4078-b51e-9bac2c4098c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dd8cfbe-cfe4-4d88-83c8-52bb86c4534a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4922a7a5-5823-4e2e-a00b-9e5c8dd5b138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f242136-6bb9-43aa-a977-7ba7516ade37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db22c93-934a-4092-b711-9a82bc8dd5e1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ded78a8-5545-41c9-aa06-d7cb6db1bd33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "121bac3a-557e-4a8a-8cb8-0a5c6f48623c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28760afa-b468-4aa0-a86e-63bd07ba9c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d630b5d6-7e41-4ac7-9ded-7870938525c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d7f481-fd18-403f-b3c5-26d3ad5c9959",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71340094-cd65-4651-8ff9-af6285909ffe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfa6f2e7-ea72-4279-b775-5d81d2358e6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b695951f-c39e-4a24-96b9-6c47d2513a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c098ddc-daeb-43ae-abfc-53f8f632445b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3930e0-6b36-45cf-81f4-a32801cfd9c3",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05d1493-96c9-4838-a3b7-d59d6230eca9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85f5073b-1d5c-4c58-8f7f-e4da41cec761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c74e3b-e47f-4fa6-a668-8b8249cfeb8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01090f42-a1b1-48f4-94e1-9b87b29b6b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d3872e-1f6a-4081-8cd8-5469184e00a8",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24b3bc3-69d9-45e7-b78b-397eecb0e782",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eec2c656-0234-4cd7-99b5-f7153447623e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78cf470-29cc-4805-840e-f5a02f8ed8b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3127fbaa-b34c-4988-8193-d6d1931fac1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92958d78-e70b-4f9b-9f90-1afc4accabf6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca31f1b-4b09-4070-afc1-120c262f7295",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c32ec92-f4f1-405b-898a-6ff510ad93c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25a513b-5181-4f77-944a-4753331f6a57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "929230bc-3562-410e-bad6-65aa61309984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90893a29-4c34-4204-9b5e-b9d27e882c12",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75f7d9a-7b29-47fa-852b-1937122dbd98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4d61906-f9d4-4e5f-8e23-ce6be214b252"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c61ec8-4896-4bdf-95e5-280ecbccde96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3104f909-16ba-4beb-90a4-d973ccded3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09408a4-8dd0-41bf-ba14-950e703e7370",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa9a623-39f8-431a-81d2-f4078623b747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0027427d-e807-44f1-aa00-d78a64f6c4f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "741adfe7-4aa5-470b-9343-78ea5794bd64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4edda958-7b0f-4f62-8f67-66cb66b317db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70870a0-5f6a-4376-8f2c-8af6328fb144",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4407d5-54d4-456d-9449-8182281882ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc0a167d-353d-4b6b-893c-534fd9b5dfb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f47134-a340-42f7-9498-6dad73639e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "320330a7-47df-47a0-928d-f0226e999004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0972940-1bea-4440-9499-8b8047a4fc70",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d12ac9b-7414-44d7-896a-881cedab5e5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ef9fd6d-a658-410f-b9c8-baf20172ce70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa328fd-750a-467d-8fcc-ce64408719a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ef37da-8490-49ca-9035-98468a22f70e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3cfd9e-c7d7-4a6f-85f3-a8da59c06f61",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e2ad20-53a3-4307-9a66-de9e0ace205a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aefbdf6-f37b-401e-a514-ffad8eb48623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce3d927-355f-4cc6-8327-477b283d70db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c03c009-5e20-4923-999c-b7a4ec0e3c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5440939a-39e7-4293-b1d4-3b3e7c41aa41",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443cf849-c825-43d3-9919-a57a56c26c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee325dd-6aa7-443a-92a6-a29b64debd8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3d9f86-954f-4893-b861-af52e69e1f6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "640aa1c4-9dd6-4b08-86f4-9e34f14f42ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846e80e8-7677-4b39-9b76-5b788306a528",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65205f6a-6c65-4535-9067-ced0430f6356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a59a66e-88c9-4885-9ede-f34c01729c4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c1a00a-9a36-4eb1-ba99-10f59f4fb00f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91cf9e3b-721d-42a1-8c53-40cf1bff8d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1bcc0f-f0e0-48a3-a102-b6d5aca1c4cc",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6211046f-ac01-4b1e-bf23-6e289e6f58e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b46929-f154-47a8-a337-435c57d9f532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a60553f-a0e6-4fff-a27b-911902f306ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c3f39ba-11ba-477e-9b35-cc1e9d9860b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b08b82-c170-466d-93d3-658766a7fa7d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09b69c4-d627-4e1f-bb36-fdb475f8abe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae511a3-49e7-4fee-ab14-ed2c842433be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64260a24-c6f0-4b92-9f2a-d97ed4dd6644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e17f9a06-e85e-43e5-8866-38db3ed24cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484634cd-4086-4d1f-9e60-f4603f98a5be",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe1e3cb-5558-44ac-b9fb-ce26801f3689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a9ea92-7c69-47dd-ba44-ecddafca2f57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a66e368-ff6c-4da9-9f8f-96c688657f6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c7ebf84-7984-4b89-8540-4db871b0b111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e961e3-99cb-402b-b900-71e055b7dc47",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a79166c-fea5-4f15-9557-fb5257d6c331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f11ddb7a-bde4-4fb5-8cc0-398bdcea3d9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "202dd364-275b-4593-928d-8a4141af40ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aec8b40b-9eba-4704-88e2-b2dbef3398a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967ad612-07d4-4795-9593-0f9e8fbe46c7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9188867a-0e36-4778-a5e5-eccf8c6ddb13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff57420-59d1-40f6-b7b2-dff835f8161d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48bea1a8-b9aa-47a7-8c70-ff65406ba7da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f44580a5-00de-472a-a925-d14d849729bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1f1008-825a-4222-acdf-10f64fce0671",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64d27ce-bda4-4f13-ba22-fda473f0e75a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a17f5db-f752-4e9a-a8e9-fedfda1d1a67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "809afb36-bdef-4a57-abac-0513875fe129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a6d5493-4f9e-4b05-b484-dd0fb748b349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445d1670-3308-4cba-a574-66f937a03d85",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d968861b-98e8-4174-a920-8454a7df86b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b352b2db-3e7a-4a4c-9e0f-522dae1666a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d6a5c2-adaa-4dbf-b404-2cdb6c85025a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c58544-ac73-43ad-ab01-a9f4bf390d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc1970c-b88a-4611-97c8-54db70b5bc64",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc3edb8-2f77-450e-a886-a90e580515c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3209a4a5-6a5e-4e6c-ab62-31d9389d485c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f020f5e-12a5-4bff-91b5-fe63d24a8c53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38bf7a86-5dbe-49da-8a1a-c3f2ce544f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59982554-f2b1-4bb5-a22b-17bd21a7d330",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6ccf0c-86ba-447f-8544-2e38b63f4ac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "300d16dc-feab-4aa8-a237-3fc40c617926"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60da5500-9202-4b1f-b634-fbf4c407e810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa630b04-2ddf-48ea-b6c2-602638084be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0310582-47f5-446f-8a33-aa7ca225eb86",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192eef02-7c77-4d07-aad5-b43159128c9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a24d6c7f-62cf-4031-a02a-1ce7e8ace2a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3378b17-cab2-4443-8706-9bc526c7e5d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b23b50c-7882-4907-8941-ac4841813db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be2cee3-bf37-4046-92ce-41b1d85706bd",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23121aa7-879a-4126-9e02-0946715cbcfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b4c7eb1-a973-42ac-a015-355b6ac12499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a603ebf9-a5cf-4870-931f-f73fdc5bfda2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7374e6a0-a91e-4d4c-9519-9e31650ba0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364cb899-2e2d-4ace-abbb-868d7bfaef4c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21466b56-ccff-4814-b6f8-2c6956bf0c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0440ffc-dd1c-4fd7-80ea-44da983c027d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1162e8b-d736-4229-b6d2-e1c5ccf3f1d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba3635c7-c3f3-4d06-ac9e-144b2e548c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81630395-ebef-4af2-b5d8-1d04e2bfacad",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276c7aba-e8f7-43cf-a5f7-9abbd987e631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "306d52ea-db3e-4b57-b54e-7f03fbce8ffa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6a57d6-1a2d-4f68-8dc4-845518cc7d0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4e93165-d4ba-47f3-ad92-eea17f290b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8624af7-e26a-4936-b19f-f36ca6dc4784",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8a679a-99d7-4928-9499-b9032623adad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4824e99-9fe8-4200-93bf-60e37e332af4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ea6173-354b-4187-9856-f2ed042d81d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f23c923-0389-4e54-a4d7-08844c1db184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b64732b-c80d-4833-a539-83434f6178ee",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea9c62e-2ed6-4d52-a536-150ff40a805c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02667650-900f-4b71-bbc6-b31d46f4a2f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78906cbb-11e4-4a31-99f5-149640f8b8c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7b27cfd-21d6-4436-942b-88014b5052a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af9910d-ccff-4c59-9c2a-9b4f135a87b3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34bc84e2-3bea-457a-b5b3-5d550fef95f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dcf9ea0-4e66-48e1-a05a-ecd338a08f8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06133dc5-c992-4b77-be71-3c66190fb7e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa0a9658-0dcf-4d2c-81a0-56cd670cc9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef586adc-90b8-49be-bfa1-28badf18b0a1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90c6133-341f-4992-a51d-b811f0944a80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90da77ad-ca01-4674-8283-8913a14c5ec5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f807619-615c-4574-b35c-5c26e903ac58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e8a469-eb75-427c-8376-8442d109b46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d12fbb-e16a-4db2-85dc-e905980dfec2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95e35c9-4736-417c-b85c-6c052ce25ae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9235b5a9-1982-4cda-b2a8-cc64e2d5044d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d4f156-0f14-474d-a174-8d741ba2ca08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cde86526-9540-44ed-a185-e7e7cb14641e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69af71db-416d-4cde-9a46-dd2deebffd27",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6490ba02-1a2f-4b8e-8e82-c91ed4ee7e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "314123a1-44f1-4834-bd69-f1585a86f4e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9985941b-1396-48d0-b9ac-b73a060893ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6534ef3-3458-4d1f-814c-58266bfc29b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84b430d-6952-4bff-8b2b-bfb615136445",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e99c881-d8f1-4148-90d6-fa0a605156ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4faeed22-ab00-41fb-87e2-4497b24be955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe09c19-c07c-4a5f-8629-c44f4954c4ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fefbdd64-283b-47e5-84d0-be5ec4833c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb6695c-1234-41ae-a14d-f7d0b66e9874",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ce084e-e04f-4dc9-af82-116127eddc26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f423d9b-70a5-4942-b220-8a1ee6311fde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f0c4e5-0763-42f3-abb1-4ad92c889fce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf6ede4c-9c1b-43fc-9096-19788a3cebbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3696ae-faae-4a20-95c7-826a64b1385e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00f7ed1-587b-4396-af4c-0938f2df177d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fa4f104-5d2a-4fab-9d2a-a92e4ed50b6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9927ca7d-ce31-47fb-8fbd-fd7eb9e629df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3569988a-7b76-4efd-915e-9363ee8fc1bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6ee5cd-9ed5-4db6-93b8-b8e70c215a2d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5864c492-269a-4a52-8781-36b375997a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad3a649c-8a52-4b09-8e78-c609b436d1d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b879cd6f-473e-4ae1-8327-66bc581bb23a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9772fb99-dccf-4c01-9a34-83baabbaf76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cdfc39a-e9c1-4439-b404-5142a629a6e7",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b1066c-eb0d-4539-9091-565164c671ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "459d896a-7463-4ebd-96eb-115c8b184de2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f27ff5b-6220-49b1-8e94-c8c568f4d486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b68d1737-e06b-40bf-9874-d2c7b11820b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd67072-9c54-4a06-a368-2db008ac932c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be1c189-d648-4a13-b8b1-eadb0ef4287e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae75ada9-5c0c-4b5e-80f9-ca5677d13ca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f01b95-43b7-44ad-af5e-a619c8a46240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2375080-9d7f-4184-aace-7b3ad9ab6bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f9e279-a315-47c4-940d-39315f232316",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4267cdb7-63d7-450e-a447-7db2ff363974",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef69e475-7a64-4a91-968b-924805034a9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6750e80-99bc-4635-98ce-84866b357d5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ae2725-ec69-4227-8b72-e09827ccd2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d022b5-d0f4-4292-9b1e-f1966d466c9b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec08dc3-0ba1-4bb3-9447-db575b1252f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25d9c9f1-6a57-46ca-941c-e8ccf7f4a133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d95894-114b-4021-a0a0-1dbc58faa516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f6f453c-3504-4495-aa29-7603dec9b20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05053def-d082-45a6-a99e-f085ee07ec95",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3625378e-82f2-4e5f-9818-ec1a1c6090be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "269c4198-ac03-4c02-968e-e11661abe8f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02bd761f-ccce-43db-833c-27c6abb513a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "057b29dd-6a9b-42c3-b124-d171d487a9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120c6899-ddd2-468f-b38c-d90201ed5387",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284a792a-e617-48c5-bd31-0c06b4aad656",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6f3c5ed-2b40-4a0b-a1e5-00d9b736c36e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b02fbe-74f2-4f07-92ab-97c4ec2ab498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acec7714-6ea6-4bdc-a881-c0d3426491d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2af5f2-b350-469a-8054-9debd3537d20",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbafd92c-2c32-4c94-8275-5cb1899f2a9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e77879b-96e6-4024-aa1b-802941e36948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3a7e66-e9bd-4593-8b29-133acdbec48c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e83adb1c-af8a-4384-9840-0485aa39c404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b139387-5ced-4542-8ce2-0ee70082909b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a016799-7535-43c5-9362-81f3dfd17377",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c27a10d1-2419-4936-92e0-4f496d04b694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f491e1-0bc9-40f8-abe8-1c69da818c8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c18db0-996a-4bc8-9fae-5bd1b0db1e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78865ec0-237d-4fae-a3af-7a5849b1312c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c6ea68-8868-49fe-a526-3e7eba980cd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2396ca7d-207a-49f9-92c7-ead2a539470b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e5c209-cd2d-4b88-a433-bdd28c1bf98d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d10c97d-f05d-4c98-ab6b-78b2b2aa5e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13fac33a-1550-4f91-b44c-65d457f477da",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fc6720-0d2a-46a3-bd62-013981706179",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e7dce08-a4dd-4565-a4da-bb59cf373e5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc7680f-51f8-41db-8e3f-0cb4326ab85a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1216044c-5b44-4953-98a7-1cfcbd197430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8cad72-8910-4e0d-80d8-dd909457d06f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8ecfea-2fea-418f-9c22-4a9aaa59c0e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66e0b805-afc4-4012-a68f-313b025b3daa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5449f4f-9b38-4269-9f8f-83e0336dbbbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "368e6059-26df-4629-90c9-dc8377ee12cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9edeb754-fea9-4d8d-be03-f1ff6d5bb14a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c5177d-88e3-48f2-9e0d-5c5403238f41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d340f870-b35a-4605-8bd7-cbab79ae6a73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "990014bf-5840-47e7-9023-3f235ddc3e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "487be75b-b83a-4224-b27c-58fa7a1116c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dddcc27-e38c-473b-bc44-cfa3a596fc59",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff51c4a0-b26a-46e9-8340-f2d9c30c7224",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4517af08-a798-481e-a096-b7872a5163f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fadc0ef3-9423-448b-bd6a-5e45f34a68a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f098a48f-95b2-41b1-9ead-045628f0fe42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2c42d5-4b8f-43af-80be-80c8a76e31a2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344ae6f6-081a-4be7-948c-9ac335cb4a87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaa2c731-2fcf-4d19-b050-d831b743a837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2221c3df-623e-4875-a2b1-9dddf6a38ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6fdae27-ad51-4501-a0f4-a33fa2700f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0574e3-c1e2-4868-9531-54eba26a96ff",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ea47ee-8f6f-4103-affb-1a829e4a831d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d5f5715-054d-4174-b96d-bfc6d94e59f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "188a453d-860d-4314-ab1e-8571edc2a84b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e63ca9a-44ad-4581-b13a-d764e4242e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5e3094-0be6-4940-a8aa-27c729ea24ab",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b42c03-01e1-470c-95c2-a73a82578c51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3bace34-6373-4426-9099-aea29c63f070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21652430-e6b9-4993-8b86-0120f44df412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de8942c-3c01-4dcd-8335-062af603be10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2f6e69-b0cc-4c59-9eec-db3c1106a666",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c79ed5-6800-40ad-88a3-21663e1ad0fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6045bf9b-f321-4d39-934c-48c880622607"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18473df4-2c15-4244-9c8b-e768c4e30daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "750aa961-4d43-4cb2-85e5-43901697e0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e1a084-df9b-43f9-a098-debe6d52a8bb",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e931afa-9406-4aea-a6f5-5589b9c140ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d406ddd6-1f4f-43a4-81a6-603ffbd5bdaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19708d7-2e54-4929-95f9-9c3a1120e859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fee5f36-4fa3-458d-acc9-5db1c8b1248e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb989f9-dcf2-4bd5-b6ed-261ea6306a7e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4de2920-095f-4c4e-a86a-1bb86618161b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d89a7ad5-a3a5-43db-9c23-33b6c5bf486f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb89c7a-d2e7-4866-a798-7cdf4b1d6151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a9fb274-5383-4fe6-a2a1-04647a028e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85750087-ef5b-4679-8efc-e15d08a80b96",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865f4a59-b70a-4862-829c-8f1ef61ff655",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbe7733b-fb7d-4fc7-8e42-5baf4e822303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2caca8fd-cc31-41dd-b9ff-c07dcd6d19bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d37069fe-b37d-48ab-9346-e182570be6ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e64f22e-178f-46d8-a8e2-61ba80b2fe6e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd615ae9-f3f6-44ea-b970-0303100c73b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c48d888b-972e-4439-83c1-1311570fc3c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0517b895-f724-476a-8916-798f9439ad88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0adc9f89-8150-4299-b980-9da4897e11ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c16370-7d3a-45fc-b459-8a8510e8fca3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1590aa92-749b-4afb-9358-93fa20eff04b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f186f300-1e1d-45d9-8ea5-cb913fa3570c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf69b41-4020-4cd9-87a8-9d770dae38f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f7010a8-c610-4a85-bbff-2dd88e0718d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84671ab-a585-4691-a06f-e0283b596e62",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad105a0d-a223-4efb-be72-033a5b6ecfe6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6f61dbe-de3d-471e-bbfd-0d60c85a8f2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a464bc-a1f2-46f0-8e4d-f1198ea2e425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40262bf9-3b64-4aee-b702-4968ea35645f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f1007d-c878-45d0-9b9f-ffb1d5e01825",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a93f65-09c3-41a4-9487-df8d580529fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa34861d-6c74-4e46-aef7-bc245045cffd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6201069b-a18b-4d6e-bab2-1dbad7e433bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028d60df-a616-4ae8-b8db-675c9d22f4ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da36d8eb-7995-497f-a76c-50c8c30ad263",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2930431d-4a66-483a-89ef-1561567d8b46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7332bb28-3591-430b-bb8e-1d8c7348e79c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9f7639-514b-48ae-82aa-4308677611f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8370ac9b-ca65-4c0c-b0f4-49523ba88000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca75c965-b73c-459b-9ae1-1d5616fde3f4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e443e07-7b04-4468-8cef-00f97a8b3bc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e294041-0cef-4eb8-a5df-135776b36522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df4d1e0-7343-4e8e-a0f2-6ef7b919e50a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e408a9b-ede1-42a1-a897-1fa0fa2b751c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a33045-e741-46ba-b3e7-173c95ca34f8",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822e6d72-1814-4ec1-9112-3d4fc185cdf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e86e3707-bad0-4ecb-aeae-6ce6ee13b18c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc778da-0d39-42b5-80a3-491e3c4d8059",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab64c32-efbd-41b1-ab0f-601b2e2bf3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c557fa0b-c7cf-4564-a133-b4938461d8ba",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d7c307-43e8-4735-a6f7-f406954aff9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8575a82-12ef-4ea3-9b1c-429f0dc98711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac21d8ec-6425-44aa-b27c-7f88162b68b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22e8ba9d-424a-465e-846a-58e64d7a0440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909b5b81-cbc7-46eb-a8eb-e4226783af77",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3781048a-2a5a-4302-a5bb-22e7272c7d28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1c95a6e-658b-42a6-b528-2fd3b2b39c56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7f7a1a-1086-4e3b-9759-3d6c2e0b830d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0c6a55b-577d-4904-96f9-1f4ec6df52ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6eb5fd-3f9d-4b9d-ad9b-b36c3d8c9fe1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe4a935-90cf-4ca5-a0a6-a2662df9cb7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ece11f60-1b8b-47ee-8a51-1af104fece12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce779e2-f121-415f-b1b7-79d63ab89b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bdc1a77-a586-4624-b9f5-6a37ca7c1796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80810f2-8bbc-417d-b932-6f106af585bd",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56946cee-5cc6-4e7b-a2ab-a1e082990a24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dabc3538-dfe7-44ed-aa11-eeaf0b9767a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f815eac-4c7b-4710-aeb5-5ba74fb54775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5199c4c5-8318-4049-96ea-e8c4e119a7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8ada1d-1185-403c-a638-59ecdd971550",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34bf336-498f-46d7-bb69-5e135b19f419",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b8911bd-c44f-44b4-8742-54bbfcd176cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3124e658-5195-42e6-8b41-4c1c5aec805e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30950791-7a83-4498-98cb-b8d9c76834d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54bbcc8-c648-4e97-9f65-903c22d26a1d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d4ce4a0-4d04-46fc-ae8d-b05c7f0f1287",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2b10442-2a9c-42df-9ce6-48dc72a8e552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60818e93-a5d4-49a3-9bc6-286ecff96a31",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97788412-55cd-460f-ab28-dad60de8de07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff79e656-1a66-4d70-bdca-9f424b51c834",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21546ce4-36b2-4ec0-97ab-195c5e9b73ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9182d3ab-d008-4768-a224-0019f93e6e8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d99dd6-7630-406f-abcd-1deb10ae3145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac805d97-7976-4a3a-bcb9-cc2f110f44ab"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54b82376-9202-4c02-9e70-42641544726a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55a13925-952e-4407-aa93-ab8d1324ea37"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b44aaea9-21cf-44be-8711-46a96bdf0c8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6b3796f9-bd73-4c3b-9c19-1627f1d18c72"
                    }
                  }
                ]
              },
              {
                "id": "df6da514-86eb-42f8-9c1c-a540e5166c54",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a9f978dc-737b-4736-b649-585f9d895a5b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42d00d8-33b7-400a-97d1-6b63c53472a2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b1838402-11e7-432e-aa7b-0ef2050650d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2d5bab-fbcc-49a7-937d-60b3ea52ba49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62a7cc19-7244-4cab-84c8-d238e3275be9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d65a3d89-813d-4cc1-a6e4-a424ed8544b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba749de2-a197-448b-b461-3fd7b795a756"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ea6593b-2f70-4bb6-9339-1bcba9ec3833",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e21b2dc9-7d94-4c39-bb9e-d4299a66a502"
                    }
                  }
                ]
              },
              {
                "id": "a57d4dfd-edd5-4b7c-9ffa-901643e6f3b6",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4cba1f5b-a23e-4d13-ac18-d41229938c3d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b89d42-eb93-467c-8e44-4bcfb465fb04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "076a2af0-60b1-48bd-aff5-76e44a18f05b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24bd14f0-c490-4d8e-b2e6-0893710cb2be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc443dd5-8ae6-45c0-b593-91b611f7f196"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "589275f8-5ecf-4714-a27c-527eaceef294",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1ea09a2a-e4d1-432f-a7b3-4fa29a82eb29",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "915d389f-f9cb-42b0-b291-e0d3ad677e86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "98cbedc8-9eec-447e-9635-a47098e2a0fd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3092896e-0b5d-4da4-b78d-d4d380847223",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "499e2d45-3abf-4697-9933-ce87dd5afcde"
                    }
                  }
                ]
              },
              {
                "id": "66e372a6-fa8a-4286-b697-bd07edb21eec",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7eb34158-9e8b-4535-8483-67412e02f4da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2152feec-1b9a-46f2-b2d3-df20140d8aaf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7bae2ca0-cd4b-4993-9a44-90bd0ce35b0d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ede4b14f-8a6e-4272-b4c0-b86bbd683f83"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b03d1466-5b4a-48ce-87cf-f5cf213b2237",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b2df5526-e6bb-42b9-a518-d003ef198d88"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6988f0e7-4c1b-4dba-b7ee-c4997fd96897",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77b6c504-f502-4d1e-9466-1231965110f0"
            }
          }
        ]
      },
      {
        "id": "cea077a0-0d5a-4495-a2c3-45d6ed17d0af",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5da38fc1-d164-4912-bbbc-c973aa4cbacf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d349886-f0f2-4408-930e-b406c614e02b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0fb6c44e-665b-45be-a6bf-a335a15d94af",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff1de3e-d42a-478c-b842-77facef19f6c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8c24cfb9-a918-43fb-b610-8c655d55157b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fe8577-1b32-4fef-be6a-92b12c04acdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05f599c8-3be4-42fa-bd40-2f40a92adac7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "464784c8-e5e1-4b47-8947-afbc78a77782",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e329ba40-5019-4e62-906b-94ad670bf3ab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7af9d560-5574-444d-ae48-fa12ae67bb75",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57969112-ec66-4986-9e90-f51736b21673"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c35cd148-1c05-42e3-b0c4-df3db0fd943c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0cef6b7d-0991-4a97-9203-bc76313bb335"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "88426a04-0529-4f58-8251-6e91f03e1e13",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3bae068c-27dd-46e1-91b4-3ed202ffb889"
            }
          }
        ]
      },
      {
        "id": "b7882e38-ff17-446e-b9ea-8ed896d63d92",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "be2aca2e-343f-443d-b2c0-5dc4a0110cb0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "856df9bd-029a-4a63-824d-84640430fdf1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f97ffc5f-ec10-4c82-8549-d4ee3d496587",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c31ed16-486e-4c81-aa69-39a2257b7dff",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6fd443bf-276a-4638-b869-6e0641ac68dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3cfc59-1c69-45b6-a2d2-0c6bfd141a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11faca30-6b4c-4c0d-9dda-0ba63dad8f95"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "109508c0-18dd-4939-b08e-1d79f453776e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2fce3da-3a1d-4427-9414-1f564c5e8cd9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bffb82ff-f5f7-43ca-baec-48d40041ac02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "690254bf-53dd-4153-b901-cd7a9c414c02"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a66110e7-1499-467e-aca0-b866271c923f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c05f53c3-a7ed-44a9-9a5d-0eaef95ac17c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3e7169e-6609-4690-96a5-138a8cfd18b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da827dc2-5602-49c1-8be4-7ed2c7ed6e9a"
            }
          }
        ]
      },
      {
        "id": "f5b27a37-506a-4f24-ac18-42d766ef31d5",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "10afbe90-66cf-4643-aafb-209f5051d36b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0fddbc48-9cec-46ec-8f52-f9fde278a5cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9316ee9f-1e3c-464a-abbd-e24aa191dcf4",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6faf031b-11d3-47b5-a846-e8d07d7752bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4697063-8390-4632-a799-064f3cb47fc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf49b485-9aeb-42fb-9e86-1ff54bd46efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a550acfb-f94d-44a3-8a0c-4cc4bfd506b3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "873eb62c-4419-4297-83bc-ca33371295cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed39fb1a-e6a6-47f0-9f70-6c260a3d248e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfc9fea7-66ed-4ff3-b17d-f04d0d672073",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cdbca473-4805-40db-867b-108e6309aafb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "43be4b6c-b3a6-4bba-8954-5a8f01e61060",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c7aff062-e4b1-4552-8c84-ab8b50436a6c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "42c361cc-ea42-477c-89b7-0b9f25631833",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d0f698cc-07d9-48fd-baed-636adbab6d8b"
            }
          }
        ]
      },
      {
        "id": "1ac02243-5fd0-4c95-8c1b-7ca1456c28c5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9648ef6-2578-4fae-8ab4-12396c3869db",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "db357bda-d918-4b3e-9d21-0e13a428e0ec",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "39572d6f-4cf9-453e-970c-a8a9ceb71e52",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b5653dc0-2562-4a9f-bf7f-97e5118928c6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "26205a1a-5edd-4614-a5d7-7dcf2691f899",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.96842105263158,
      "responseMin": 2,
      "responseMax": 244,
      "responseSd": 25.327241819998477,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699490046319,
      "completed": 1699490057507
    },
    "executions": [
      {
        "id": "9fc8a35a-c7a0-413a-8130-57a413132178",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "82442f6e-9e79-49b1-a52c-4b4b70f41671",
          "httpRequestId": "cb0d6d33-1f35-47db-89b2-cfc0ed5d2057"
        },
        "item": {
          "id": "9fc8a35a-c7a0-413a-8130-57a413132178",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f400bd04-aba5-49ed-ade5-d45e5fe95c6f",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "d760d6b3-74a3-44cb-9bdc-436b80736ae1",
        "cursor": {
          "ref": "b4b46bf0-0765-4c68-b5c4-8b54084a62a5",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5c90330a-cfd0-4c44-a079-2e14a26f400e"
        },
        "item": {
          "id": "d760d6b3-74a3-44cb-9bdc-436b80736ae1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6246956b-d6cd-412a-a102-9fdf7a323521",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "59eea253-3db1-400a-8cad-a69f84aff559",
        "cursor": {
          "ref": "f98e582b-fbf6-4f2b-a268-8b33b3acc1c4",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d2c061dc-62ca-491c-ae9f-78a2824f34cd"
        },
        "item": {
          "id": "59eea253-3db1-400a-8cad-a69f84aff559",
          "name": "did_json"
        },
        "response": {
          "id": "a29daacf-a907-4e7d-a3ec-f37d20baa97e",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2063c22-a744-4a02-8602-0e6c6f7b772a",
        "cursor": {
          "ref": "1b160c76-5685-429d-b9cb-6f448566b337",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "41246910-0d54-41fd-b788-73f88a3601fe"
        },
        "item": {
          "id": "b2063c22-a744-4a02-8602-0e6c6f7b772a",
          "name": "did:invalid"
        },
        "response": {
          "id": "a7a96150-9b51-4019-beb2-02de3ce0f706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2063c22-a744-4a02-8602-0e6c6f7b772a",
        "cursor": {
          "ref": "1b160c76-5685-429d-b9cb-6f448566b337",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "41246910-0d54-41fd-b788-73f88a3601fe"
        },
        "item": {
          "id": "b2063c22-a744-4a02-8602-0e6c6f7b772a",
          "name": "did:invalid"
        },
        "response": {
          "id": "a7a96150-9b51-4019-beb2-02de3ce0f706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e621099-00d4-42a8-bd66-8d3e1d7b6dd8",
        "cursor": {
          "ref": "535b263d-9205-4ca3-b5f3-4581360f8a99",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "dd16195a-0b20-4202-9e29-ca58ee58e7a4"
        },
        "item": {
          "id": "5e621099-00d4-42a8-bd66-8d3e1d7b6dd8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2fe221ae-4e23-4c4b-a6ad-6196a9e5168d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 42,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910d9b98-fb69-4af2-88ee-9e2ebafa69ec",
        "cursor": {
          "ref": "23a09e5f-45ef-41e6-8d29-8ae750d77e6e",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d9598a40-08f9-4012-a06e-c786c6df4a34"
        },
        "item": {
          "id": "910d9b98-fb69-4af2-88ee-9e2ebafa69ec",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a809f9a7-94d3-4dc8-bf19-48ca4b3aa5fe",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e40801-05f5-4d98-aa70-2d1940171885",
        "cursor": {
          "ref": "b226fa38-d063-477c-b2fa-207747f85e5e",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "23111c6c-8d3d-4b8e-86c5-86475404e8d2"
        },
        "item": {
          "id": "91e40801-05f5-4d98-aa70-2d1940171885",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e24fc00a-0846-48f5-b2e3-7d7e6fab1520",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3ceb9b-acbd-4fb1-a0fd-cf5ad0b9764b",
        "cursor": {
          "ref": "e6b1bfd1-fdb2-4dbc-8341-4bddc1481a82",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b9d43f5f-d9d0-450f-b734-43df39f705ac"
        },
        "item": {
          "id": "2f3ceb9b-acbd-4fb1-a0fd-cf5ad0b9764b",
          "name": "identifiers"
        },
        "response": {
          "id": "c4bfff8c-ff99-42a6-9794-337347fa8843",
          "status": "OK",
          "code": 200,
          "responseTime": 151,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0c32e1-e9ca-4b10-90ec-054916ac10d7",
        "cursor": {
          "ref": "a8de34a0-e171-4211-b041-16e3378e18e3",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2cc39f8f-e18f-4e59-b5c0-01f5f2404cce"
        },
        "item": {
          "id": "9a0c32e1-e9ca-4b10-90ec-054916ac10d7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bf5932cb-efc9-484f-8bd8-b8e025fac902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff8a2ef-d647-42a0-8115-98f4b0314fd5",
        "cursor": {
          "ref": "72367470-767e-4107-81eb-59b50dff44ef",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c7fe38a5-14f3-46e5-89d1-0af23907ac9b"
        },
        "item": {
          "id": "bff8a2ef-d647-42a0-8115-98f4b0314fd5",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "190f10a5-008d-427a-82d8-12cdd9b70663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4114fdb0-c7a9-4c87-9683-8881785fb4e9",
        "cursor": {
          "ref": "97334f44-5e9a-4d0d-923e-b12fed941025",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d918ac08-20dd-4ae6-af7a-1ff8d9058e0c"
        },
        "item": {
          "id": "4114fdb0-c7a9-4c87-9683-8881785fb4e9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "fc13b038-4733-43ec-aef1-e8dbf56e3a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d957e9a-f058-4035-9473-53be0430d648",
        "cursor": {
          "ref": "f0050e8a-7ddb-4e79-b053-d7f9a5508ff7",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8fc19e4b-7568-4aaa-93d2-87779b93674b"
        },
        "item": {
          "id": "7d957e9a-f058-4035-9473-53be0430d648",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f298b050-1fcf-4727-99ec-62af26cc034b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dade0a8d-d45d-44c5-968e-e558948ed523",
        "cursor": {
          "ref": "2c7569f4-e427-4b4f-8bea-b39d7cf60373",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "96467309-b1c2-49b3-9d42-f5331d5d489a"
        },
        "item": {
          "id": "dade0a8d-d45d-44c5-968e-e558948ed523",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "cc74167d-9906-4290-b779-800808cc35f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a39ea24-1a78-4c35-ad36-c9f2770e85e3",
        "cursor": {
          "ref": "c63c383f-f595-4502-9099-dcae4b85591b",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3017d03d-a63c-413d-9a03-44c3d6ccdfbb"
        },
        "item": {
          "id": "1a39ea24-1a78-4c35-ad36-c9f2770e85e3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "cbddda13-626b-4a17-b43f-da69dbc176f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f72d896-bfaa-4aa8-9693-970e9cc410d4",
        "cursor": {
          "ref": "3aaba8aa-d9f9-427a-8cae-6f0f04ad5ad3",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9f421c45-ce00-4bc3-b9d6-c8211e802432"
        },
        "item": {
          "id": "3f72d896-bfaa-4aa8-9693-970e9cc410d4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5785284b-03b5-468f-8ac7-c2f97f5cb3e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9447c15-137c-4a8e-94a1-d5345c63c62b",
        "cursor": {
          "ref": "9ed627b7-bf67-4312-a88f-158f382b0e59",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "84dce78a-313e-4360-8df3-2730996e1d82"
        },
        "item": {
          "id": "a9447c15-137c-4a8e-94a1-d5345c63c62b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "930a1b6b-1613-434f-9675-9dd5b801e94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af72557a-5f40-475f-8f08-cb9b544ce0b4",
        "cursor": {
          "ref": "0a1e2e99-4a2e-46c7-acb6-e2cbc236dd1e",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e8910c5c-f635-45a9-afc8-c43ea2400f53"
        },
        "item": {
          "id": "af72557a-5f40-475f-8f08-cb9b544ce0b4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e424f7f1-7260-40e6-9f0c-d7dd7ee25ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83bb8036-cd6d-4e64-ac81-e500444eeb40",
        "cursor": {
          "ref": "20f1c4dc-a57b-4069-866e-e53d2cee6139",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4a9f53eb-e66a-4729-8a41-d3d2ddb728eb"
        },
        "item": {
          "id": "83bb8036-cd6d-4e64-ac81-e500444eeb40",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "32b6e5f1-e416-4be7-8e57-052a94751b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824151d0-d5c1-4d51-871c-aee68460aa0e",
        "cursor": {
          "ref": "1540f74d-3784-4e53-a803-7592b463b1bb",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "cde2ce8a-f108-4af1-ad84-e21ef8b1b608"
        },
        "item": {
          "id": "824151d0-d5c1-4d51-871c-aee68460aa0e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "570a9261-818e-4e16-9b84-5e96217a04e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50908b1-bbd9-4da5-8c5c-edfb656be92a",
        "cursor": {
          "ref": "acda20fa-2daf-4621-881d-6cef0279c57c",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "04813131-40af-4f02-9a27-6dfbb4b07277"
        },
        "item": {
          "id": "d50908b1-bbd9-4da5-8c5c-edfb656be92a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "dba07f2a-02b6-4ad2-95aa-606ff0718741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40738f8-ad37-495b-adec-4e2af372ac74",
        "cursor": {
          "ref": "9a5217e5-224d-4c66-a69f-3e2456e4b48c",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1e6e5dca-113f-4707-80b8-bcebc2faf908"
        },
        "item": {
          "id": "a40738f8-ad37-495b-adec-4e2af372ac74",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "32827a1f-c9eb-4dab-8abf-a51eacb73db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566762af-df8d-43db-bd43-644f5fae5d66",
        "cursor": {
          "ref": "d191fc80-9460-45e7-9420-4646607f6c78",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c54b3f6a-900a-4c79-9eb9-c0d2426f63c4"
        },
        "item": {
          "id": "566762af-df8d-43db-bd43-644f5fae5d66",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7405f8ba-9c27-40b2-9c86-361f473bbfac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df718f1b-43ea-49f1-86a0-8870a9f1c302",
        "cursor": {
          "ref": "1ca40841-5717-447c-bbe9-681a98575acc",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ec9dfbe0-ab7a-4cb7-9ed8-2b7b0d64596a"
        },
        "item": {
          "id": "df718f1b-43ea-49f1-86a0-8870a9f1c302",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4bc2f0ff-a6ee-4f18-8543-1b13cf2a0f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d958757e-d2f1-435f-93af-e5856f8f2d84",
        "cursor": {
          "ref": "d1db6082-b38c-4b43-a117-1427cd448d01",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c4777866-c40d-44a0-a591-d0d3e124e794"
        },
        "item": {
          "id": "d958757e-d2f1-435f-93af-e5856f8f2d84",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "56ff2977-c43d-46b1-84fb-cd5a53b66472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea3fd71-7adf-4be3-a954-020ae3dd235c",
        "cursor": {
          "ref": "8cb4fa68-8125-4b72-8a1f-2cc275ae5ab1",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "cb5a517a-342f-41b4-a0b3-cad1abd22606"
        },
        "item": {
          "id": "eea3fd71-7adf-4be3-a954-020ae3dd235c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8c0b1972-7446-415d-97bd-e435b217a6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f1b7525-859b-473d-9a10-ce410e83bdaa",
        "cursor": {
          "ref": "248e5499-c4ab-4856-90b1-f08e7840df45",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d4bce2c9-8a71-462e-9774-c75e6f404201"
        },
        "item": {
          "id": "6f1b7525-859b-473d-9a10-ce410e83bdaa",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "97bce83e-6d18-4230-8a11-a137f4e4ed05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f864407-eb80-4f9c-b7d4-1987a119bb6e",
        "cursor": {
          "ref": "7c4f9962-2531-4f60-a987-1bfe67ac695d",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "baee7863-6064-4c64-abaf-096d7994ca91"
        },
        "item": {
          "id": "0f864407-eb80-4f9c-b7d4-1987a119bb6e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e1987f2c-0bf2-47a4-b6c4-6494df8cbbf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfe8252-e38e-4c36-bcf8-f497acaf66d4",
        "cursor": {
          "ref": "35a3d626-64f5-44b3-9240-ac2dab73ab1b",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5fe1a902-075a-4d52-b4b2-88e9a9c271c2"
        },
        "item": {
          "id": "bdfe8252-e38e-4c36-bcf8-f497acaf66d4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ea7559fb-1d2c-4b0a-b468-1248e7d31986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9823ec1b-7898-46b0-80c3-28005ba32c26",
        "cursor": {
          "ref": "bd3964ec-57f0-4464-b736-9f33fe7aa728",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0bc7f488-29ca-4d41-8b36-3312ff4fbaca"
        },
        "item": {
          "id": "9823ec1b-7898-46b0-80c3-28005ba32c26",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "eaeb8d06-0c09-4b0c-8bc3-8a94804b19e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8bea897-a4e3-4ca6-a3d7-a2b6347c8c82",
        "cursor": {
          "ref": "3b87dff0-bb67-4d97-8353-795ec2389de0",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1b1d4b45-90fc-4f37-904a-ca0d603d66c9"
        },
        "item": {
          "id": "f8bea897-a4e3-4ca6-a3d7-a2b6347c8c82",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "221847ec-3d9d-4bb0-82db-937fc8bc7622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbcc6313-6f90-4e09-9059-3426e5523a4d",
        "cursor": {
          "ref": "43337a07-6fc8-49fd-9498-dc5ccf329e04",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "205be01e-fecf-48da-81a9-52e10842b019"
        },
        "item": {
          "id": "bbcc6313-6f90-4e09-9059-3426e5523a4d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ae079953-7796-494d-8ba8-ce493f520e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3021128a-aef4-48da-afd1-613cd446295e",
        "cursor": {
          "ref": "0bae47c0-0a35-48c2-b92b-808d3101a7f9",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1e8d8789-daa3-48cc-8585-26ae7f82ec5e"
        },
        "item": {
          "id": "3021128a-aef4-48da-afd1-613cd446295e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "784dafec-88ef-4e6c-8265-63ae13f02c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28a621d-3137-4eb0-8085-c51f9b9e673d",
        "cursor": {
          "ref": "242c66f9-1a23-49fe-a0aa-69ba4ed74203",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2fc93574-2bb0-4760-8db5-36f7f96e0dc6"
        },
        "item": {
          "id": "f28a621d-3137-4eb0-8085-c51f9b9e673d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "156c4b11-11b5-461e-9d16-3743765eee7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336b9494-a3dd-4a94-a7f8-29aa3fbcfc27",
        "cursor": {
          "ref": "b1d0730e-6d50-420d-844b-c357778271e6",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7e212d9b-f571-47e6-9e09-c0403daa8bdd"
        },
        "item": {
          "id": "336b9494-a3dd-4a94-a7f8-29aa3fbcfc27",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "63cd3d1b-dcf6-4f99-be4b-9c5efcc68a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4007bfb8-053e-41bf-b327-1712ea52c07a",
        "cursor": {
          "ref": "c0ff9c1b-902d-4e9e-b5bb-50ee145dfec6",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "67d7ae0e-a1ce-48a6-95db-cc67facf9391"
        },
        "item": {
          "id": "4007bfb8-053e-41bf-b327-1712ea52c07a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "141fd673-db40-48e9-9c42-8f02c8c85ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704b8d9a-cb35-4029-939b-d3c12bfa6269",
        "cursor": {
          "ref": "6ebcf528-3e7a-4556-bdf9-c817cce57e96",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f0549318-707e-428e-81ff-6b74a428f450"
        },
        "item": {
          "id": "704b8d9a-cb35-4029-939b-d3c12bfa6269",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "03abd4ec-b51f-408e-b764-ace81ccef2b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5755411-1087-48eb-94cb-12248985799f",
        "cursor": {
          "ref": "e835bf4b-7ca8-4a7c-b31e-247379040eb3",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c6f8cc73-070e-4f15-ae32-ac9f2bcc6c82"
        },
        "item": {
          "id": "f5755411-1087-48eb-94cb-12248985799f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b7f37034-1e10-4093-b843-984f9663d2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fe0e78-bc36-4a61-8e1b-8777b3b431bb",
        "cursor": {
          "ref": "d9bccbea-d762-435b-a485-4d4425470dc5",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7a81bbbf-bf7d-4dc0-aa6b-a77badb4a11a"
        },
        "item": {
          "id": "76fe0e78-bc36-4a61-8e1b-8777b3b431bb",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2c110137-5206-4b81-92ae-11dc0f76becb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29bdeec7-39e7-48e4-98a2-7b6837f0dea1",
        "cursor": {
          "ref": "e9ead884-aeb6-4586-a36c-de22886ccb2f",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ba7d60c8-6b94-492e-a761-5d5ff25256b2"
        },
        "item": {
          "id": "29bdeec7-39e7-48e4-98a2-7b6837f0dea1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "03a796d1-f3dd-49f0-b282-80ced934f3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9048afdf-3a7c-461c-bcec-fbb8634fe204",
        "cursor": {
          "ref": "2d979d6d-c479-446f-9fdd-ee572c4d1871",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "11581936-60d8-49e1-8410-c04d023c0379"
        },
        "item": {
          "id": "9048afdf-3a7c-461c-bcec-fbb8634fe204",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4ef8e63f-45f4-4cb6-b7f0-a75d94bea653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c6e4cf-c156-44f4-92c1-ef16c1486374",
        "cursor": {
          "ref": "b567bc8b-e574-4fd2-bb97-d25e6ddb46ac",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1755e077-794b-4c56-a4d7-6e29c5068a7b"
        },
        "item": {
          "id": "e9c6e4cf-c156-44f4-92c1-ef16c1486374",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d6c06705-1c55-4f64-8477-bc7acb763c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72b446e-489f-48e8-9b82-234f706e136d",
        "cursor": {
          "ref": "5ef5f52c-0fb0-4623-8f1c-2db6d4f08ed1",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "44b405eb-8067-40fb-93b5-22076ef2b354"
        },
        "item": {
          "id": "c72b446e-489f-48e8-9b82-234f706e136d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fc930574-f3a4-4ba3-98d8-9af931743015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07f36a7-e808-4d73-8a2d-53b9c63922da",
        "cursor": {
          "ref": "eda4fb96-4c6d-42d5-9880-25f9e851aca0",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7dd970b3-b6ed-43fa-85ff-657237a057f9"
        },
        "item": {
          "id": "e07f36a7-e808-4d73-8a2d-53b9c63922da",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b877842a-b1db-47d9-a14f-409e7a95c32b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ab8056-c600-4490-9db9-6ac49f13c973",
        "cursor": {
          "ref": "a374797e-feec-4688-b58b-9b6d4d97d9a7",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c777b957-c683-47e7-a53c-cd6b16a351e4"
        },
        "item": {
          "id": "e8ab8056-c600-4490-9db9-6ac49f13c973",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4f8b3e23-b0a6-4201-8c88-bdf7ed102475",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 19,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5daeef-8483-4393-a4f8-58d1e0a661d7",
        "cursor": {
          "ref": "d4f68024-1b34-434e-8bea-319579b72640",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "df02d7f9-665e-447e-b71f-1eaabb600f54"
        },
        "item": {
          "id": "2f5daeef-8483-4393-a4f8-58d1e0a661d7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0ac8b972-aa61-4272-9784-819219300949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1681886d-f63e-4116-ab83-b7c33f659d30",
        "cursor": {
          "ref": "b0781c42-7bcb-459e-a7fb-ce7ef4cea4e4",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2fdab8a5-6d9b-4979-8511-844a422efe33"
        },
        "item": {
          "id": "1681886d-f63e-4116-ab83-b7c33f659d30",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5f99dd83-5fad-4393-a782-2bf0689577da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287a84b3-5e8e-4790-b1e7-575500829dca",
        "cursor": {
          "ref": "74021e0e-4624-42d9-b577-11e5a4375704",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "07c50c06-66a8-40bc-905b-befe819a655e"
        },
        "item": {
          "id": "287a84b3-5e8e-4790-b1e7-575500829dca",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c345cfb8-4dca-4cbc-bcba-1d5135dbecf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695435c3-02df-4392-9eeb-70e0b1a05d93",
        "cursor": {
          "ref": "480da8d3-a5fe-4607-ace0-14115a6b9d29",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0bf6de24-56a2-48cf-b8f3-cee751939f8b"
        },
        "item": {
          "id": "695435c3-02df-4392-9eeb-70e0b1a05d93",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7aace358-7d56-4da8-8661-37a6ede2ee33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc5e147-27b7-45e0-8c26-b09355eb8298",
        "cursor": {
          "ref": "f09203f9-1886-4054-bdb0-8ecfffdafec2",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c4ee3ae0-0640-4f06-8cbe-662c25f77e91"
        },
        "item": {
          "id": "2dc5e147-27b7-45e0-8c26-b09355eb8298",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "310d8915-49a5-422e-9185-8dd54fd24136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d32cda-c73d-4e5f-ac6c-2083cbb18c04",
        "cursor": {
          "ref": "899b53c0-069a-4724-b88f-0bc8cc6fe007",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "441cfb08-94f6-4d7e-ae26-473d597651c5"
        },
        "item": {
          "id": "f5d32cda-c73d-4e5f-ac6c-2083cbb18c04",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a3fecd95-65e3-43ce-9733-0b7bfc9adffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6dda22-c4c8-461b-8c5a-f02de98684f8",
        "cursor": {
          "ref": "8b2a9e5d-83d1-46b9-917d-7362643436d2",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "26f6d370-4292-40a1-a292-9cafba29d7e1"
        },
        "item": {
          "id": "6d6dda22-c4c8-461b-8c5a-f02de98684f8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7a60e9da-322f-4f66-9f1a-71c5bca321e7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b84eba-c2c1-482f-b339-16284046d7ff",
        "cursor": {
          "ref": "c76c2077-f58a-4268-91ac-eedb45c8d567",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "388ba264-9629-4817-999c-f88de2e956ce"
        },
        "item": {
          "id": "a4b84eba-c2c1-482f-b339-16284046d7ff",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3b74f8bc-49e5-4aa0-9654-ab9d999f44e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8cfb0fd-c87d-451f-8d73-7cdf3b4b5909",
        "cursor": {
          "ref": "bc8160a4-60b3-4ec7-bf5b-faa65ae5a16a",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "92820d8a-0a60-4ae8-ac4b-57330971772f"
        },
        "item": {
          "id": "f8cfb0fd-c87d-451f-8d73-7cdf3b4b5909",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c97cce23-c0a0-4f53-979a-a1b1ad228216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7b1890-6e41-4417-8202-7194a3a2d382",
        "cursor": {
          "ref": "c84aa8cc-e779-44c4-985e-cc766dd9c356",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "40b71b77-c0b2-4e58-b05b-8c430de9ffd8"
        },
        "item": {
          "id": "0f7b1890-6e41-4417-8202-7194a3a2d382",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "cba337db-56f2-426f-95f6-9a2d33bc3c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d32813-a17e-4307-bd20-b5e6380e6603",
        "cursor": {
          "ref": "7e0ba95e-6f4a-497e-9277-e34c7126b382",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a6b12a0a-33c6-41ce-88ae-d472a46dfa19"
        },
        "item": {
          "id": "d9d32813-a17e-4307-bd20-b5e6380e6603",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e826d870-3857-41da-b8bc-9b6e0f579b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041d4d55-799f-483a-96ec-473c76240aaa",
        "cursor": {
          "ref": "beda518d-1223-464f-9087-e6ca94452f5c",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "fff983c2-46d0-47b5-80c4-8a038ffc1fa0"
        },
        "item": {
          "id": "041d4d55-799f-483a-96ec-473c76240aaa",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "54588331-686f-4718-b434-2f8705eacb89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7c0c17-aa98-46aa-a81a-6490f4de2568",
        "cursor": {
          "ref": "6cb55cbe-0ae1-47ac-9ecb-7eee13357bab",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f5c68037-1d28-4f70-b19b-1672b616b238"
        },
        "item": {
          "id": "4d7c0c17-aa98-46aa-a81a-6490f4de2568",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "dd83c3a2-96ce-4510-888c-9534ea93a1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db13a916-cad3-4a0d-a0db-20ade2d6e3b9",
        "cursor": {
          "ref": "b7e669bb-82da-452e-a531-9a2837b05d21",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "90632bf0-cb08-473a-a6aa-2e04a4d42d35"
        },
        "item": {
          "id": "db13a916-cad3-4a0d-a0db-20ade2d6e3b9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c3e13965-6080-4d56-bcdd-6172c144f4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b63352b-0209-43e4-b2f3-f657b4e9872b",
        "cursor": {
          "ref": "580ad5d4-d88b-4ded-ae10-041cbd30dc6d",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "839f4077-3f5c-45a0-ac19-113c8d059a40"
        },
        "item": {
          "id": "3b63352b-0209-43e4-b2f3-f657b4e9872b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "47839e77-4284-48e0-9b05-af6a7e307c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7906358-3090-4a7a-b988-4cef6ac7a296",
        "cursor": {
          "ref": "3b03dcf8-8f32-42dc-acb1-9b0e1ce7022c",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9590ebd7-2fa0-4cae-866b-137c8937f7b4"
        },
        "item": {
          "id": "c7906358-3090-4a7a-b988-4cef6ac7a296",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "de1c6da5-62ec-42ed-bce4-616b69f5dbf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf2384e-fa7d-41d2-9aae-be1addf3eaba",
        "cursor": {
          "ref": "6b1cffb3-bae0-41ea-b822-09864cc2d833",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4482ada3-cbaf-439a-8f43-cd3dd0be336b"
        },
        "item": {
          "id": "4bf2384e-fa7d-41d2-9aae-be1addf3eaba",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fe5f9218-7231-4aee-96c7-cc479915ed32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ccd1d7-a435-40d2-967f-f54146fb3f3d",
        "cursor": {
          "ref": "795afaa1-9d41-4cd7-92da-e1808fc454b0",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "870bef10-c1b6-45c0-bf77-7e543d2e79d3"
        },
        "item": {
          "id": "b8ccd1d7-a435-40d2-967f-f54146fb3f3d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "15cd32d9-7340-40d0-863b-f12248b65d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac72df8-49fb-4dc5-805b-ca852c277899",
        "cursor": {
          "ref": "3af11be0-bf20-47ac-a652-68835f88c2f3",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "905eaa11-6d2d-4b30-bc90-517c215aacef"
        },
        "item": {
          "id": "0ac72df8-49fb-4dc5-805b-ca852c277899",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "89986a96-ea15-4f42-8f24-f84652b72b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3852a136-22a1-4213-9f26-e76b67d28c6e",
        "cursor": {
          "ref": "24b48f94-306f-4909-8bfb-166652a6889f",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b374dbbc-de03-423e-954a-8cfd65acf30e"
        },
        "item": {
          "id": "3852a136-22a1-4213-9f26-e76b67d28c6e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0ba74c8d-6139-4d4b-b03e-d0b11b20ca7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f635e0c3-b88a-4344-a89d-104721a8395c",
        "cursor": {
          "ref": "b280321b-4c72-47fc-83e5-a986d2362b17",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5ba53dc9-5503-4844-a0b3-49fcb3788118"
        },
        "item": {
          "id": "f635e0c3-b88a-4344-a89d-104721a8395c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "350d0087-522c-4a7f-ad43-ff8640603bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a95b541-1932-4bd5-8c72-34995c329268",
        "cursor": {
          "ref": "56ffaa5c-3743-4717-a8cc-11fa5ded17d1",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2b926195-fdc0-4931-843c-5718103d177c"
        },
        "item": {
          "id": "6a95b541-1932-4bd5-8c72-34995c329268",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d722ff9b-f2d7-4539-bf35-5ea79eed8c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d73238-9347-41cf-87bb-9a6e5c21fd54",
        "cursor": {
          "ref": "ba2b6b23-e10d-41a4-8c7a-b96262e7ac15",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ab820ee5-5f4d-4a82-a9a0-6cf107c9f2af"
        },
        "item": {
          "id": "65d73238-9347-41cf-87bb-9a6e5c21fd54",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4186492f-8b0e-498c-baf3-edea630f797a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602d5322-4ac9-4fbe-b353-ff8e55392de7",
        "cursor": {
          "ref": "7e761587-41d7-474f-a47a-03bb37b028c7",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "404cce5d-4a74-410a-89c9-a99c0e67c120"
        },
        "item": {
          "id": "602d5322-4ac9-4fbe-b353-ff8e55392de7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "811d3d12-2ec4-46cf-8386-28c6e285e007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd63a4e-4dbc-4122-8d4a-265262c5e545",
        "cursor": {
          "ref": "a531b805-1a48-499d-985f-ec8abca5efe0",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5c6b7402-ec57-44cf-ac7e-28429e1fccbc"
        },
        "item": {
          "id": "8bd63a4e-4dbc-4122-8d4a-265262c5e545",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "bae68e11-363a-4099-972e-626bea00bca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71632a39-7e52-4ee3-8b33-b5b387750401",
        "cursor": {
          "ref": "7f78ce52-5b68-418a-b116-e91e1d7e7c3e",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "463fdf8f-5f39-40ef-87e2-4a670587b126"
        },
        "item": {
          "id": "71632a39-7e52-4ee3-8b33-b5b387750401",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "bbc61964-2b04-4d9a-9e3b-d2658002699d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfb10d6-7f3a-4f7d-84e5-7e828d856aa9",
        "cursor": {
          "ref": "2ae4962a-fb17-4f22-9cbf-60232f9823be",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a7aade93-6c61-4336-bc65-76e79e9179ee"
        },
        "item": {
          "id": "9dfb10d6-7f3a-4f7d-84e5-7e828d856aa9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4f80b7f4-bc9a-47b9-b700-a511663c6d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432c8d0f-f2a9-4e9b-983b-b5b165a9c855",
        "cursor": {
          "ref": "24175ed9-dfb4-4fb6-8299-2a592ac30174",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c7da2062-bd2b-4d00-9a7c-a2c3e787e760"
        },
        "item": {
          "id": "432c8d0f-f2a9-4e9b-983b-b5b165a9c855",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "cf3c03b6-db64-437d-9ef4-f4f8efd6d320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b1257a-5526-47d5-ad37-909e6794cbb7",
        "cursor": {
          "ref": "a06a1e5c-e2c2-46d4-a0d6-d34c3dd291dd",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "fc9c77bc-29f6-4a2f-99ba-84c8bc491439"
        },
        "item": {
          "id": "f2b1257a-5526-47d5-ad37-909e6794cbb7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0b1aa994-167d-4ca8-b735-91c25bbc19e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3745f57-bfcf-44e6-b7fb-f402c3b124f4",
        "cursor": {
          "ref": "b275be1d-bfa7-4f8e-b6b8-ee954931f3f8",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "81164d3f-0e0e-447d-a61f-3c4060a01eda"
        },
        "item": {
          "id": "c3745f57-bfcf-44e6-b7fb-f402c3b124f4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8fe5b708-525e-484a-a2e1-4a369441db32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e0eeeb-5b91-4b7d-87b2-bd29f066c229",
        "cursor": {
          "ref": "1b86886e-185e-4fa6-ac48-c4f4f7fcc7f9",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3b918d21-7169-4eaf-b41b-591310345d06"
        },
        "item": {
          "id": "b9e0eeeb-5b91-4b7d-87b2-bd29f066c229",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "730cdbd1-13f9-490b-8350-d8e6d8368eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2985d3-491f-46f4-8037-8f587d3931ca",
        "cursor": {
          "ref": "7f997c19-f252-4486-a576-4ede0b89fcb6",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "79c21015-0ab9-43ed-9cb2-e3b8021dcfa7"
        },
        "item": {
          "id": "1b2985d3-491f-46f4-8037-8f587d3931ca",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b0737357-e94f-4de3-aa09-e35c91d6cdb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78bdfc1f-9bc4-4e72-85a1-5486143349f5",
        "cursor": {
          "ref": "481c46f8-4028-4983-b892-bdcddfe0a393",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ccf6b67a-a5ae-43fe-8f5f-bb3d73362cd7"
        },
        "item": {
          "id": "78bdfc1f-9bc4-4e72-85a1-5486143349f5",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "014b027a-3029-48ed-8015-8023327b5a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f6d309-ac17-4d52-98c7-f445ddab75dd",
        "cursor": {
          "ref": "60b29742-3227-4570-8dc2-2ed117e23576",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "2a0f9bdf-d064-4dab-9f1a-7f3b545e3bad"
        },
        "item": {
          "id": "08f6d309-ac17-4d52-98c7-f445ddab75dd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "fa538b5c-082c-4413-bf75-19cf77b245cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4477dccc-78a4-494c-8deb-6c5fb1591c2b",
        "cursor": {
          "ref": "1a1f9dca-acb0-4f10-8e4c-b5c65786fed4",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "bdc0ba61-e668-4a3a-bc0b-f5d857067787"
        },
        "item": {
          "id": "4477dccc-78a4-494c-8deb-6c5fb1591c2b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "688e8b52-8088-4c61-a6d9-68c59a175024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f37932b-6928-4c14-9e9f-36be12798da2",
        "cursor": {
          "ref": "9b6a9a4c-03ca-4786-9f94-9c30c3e5f7d7",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "63b24e8e-8248-46f5-b0d4-05707514b213"
        },
        "item": {
          "id": "6f37932b-6928-4c14-9e9f-36be12798da2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "43bc009e-a233-438c-a01a-46f2600c316e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6098d9cf-147e-4124-9bef-9354fa838232",
        "cursor": {
          "ref": "fa92e1b2-2d8a-4283-873e-bbb0303b1cc7",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d069be03-c597-4b5d-9dd1-b3327b961c6b"
        },
        "item": {
          "id": "6098d9cf-147e-4124-9bef-9354fa838232",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "417bf660-4d1d-4c5b-9d01-7eeb6fc1b671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcb160a-a635-4615-9bc5-79fb6dd8f51c",
        "cursor": {
          "ref": "8684a822-25ef-442f-9312-db8f5cee29f3",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a5f20d38-36e7-4bbf-886b-a613abbaa2d7"
        },
        "item": {
          "id": "3dcb160a-a635-4615-9bc5-79fb6dd8f51c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6f03817a-5ea9-430d-8ed2-f1303cd09349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2297fea6-1ef2-43d8-8655-ac1713b4d5f2",
        "cursor": {
          "ref": "3fc4e3a3-d0df-4a89-9298-aa121d57ac69",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b808bf52-39c5-43c1-8b59-e5bd09ad0fd0"
        },
        "item": {
          "id": "2297fea6-1ef2-43d8-8655-ac1713b4d5f2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c75bc5ce-8739-435c-8350-3a4f26aeae40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819e0fa2-1cf1-4d0b-bd73-f379bde21e31",
        "cursor": {
          "ref": "a163f7ce-34fc-42ab-bb12-c468351c88c9",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3bf72145-5a69-451b-bad4-42ae5c673b9b"
        },
        "item": {
          "id": "819e0fa2-1cf1-4d0b-bd73-f379bde21e31",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c55f23d4-35cd-4981-bc13-3714cfaf4c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb205ec-5c29-4a58-8faa-5abfa14ea543",
        "cursor": {
          "ref": "456efaae-bff2-4ab0-896f-e1b1a4241ce1",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6df354e5-285c-48e9-9bd1-400069dbcb72"
        },
        "item": {
          "id": "adb205ec-5c29-4a58-8faa-5abfa14ea543",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "34e88a29-8041-41f2-bf6a-704657b73e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358d3eb5-dbaf-4e5e-b7ca-810410454d5e",
        "cursor": {
          "ref": "f40d4385-093a-4b69-863a-f51539602148",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "172fd940-93ec-4e44-b90c-bd6e3ea1cd30"
        },
        "item": {
          "id": "358d3eb5-dbaf-4e5e-b7ca-810410454d5e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "cea31704-571f-4d82-a1e0-1db844b85750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8c014b-7221-461f-9332-f1601796891b",
        "cursor": {
          "ref": "5e467947-952d-4777-918d-2f38492a80d1",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a4761e9a-1b00-421a-8399-a8bff9f0597b"
        },
        "item": {
          "id": "3e8c014b-7221-461f-9332-f1601796891b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "af52801d-c8e0-40c0-a13e-69f21796bfd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9edbca4-642d-43f2-b741-6a6632f15f4d",
        "cursor": {
          "ref": "45ee679f-22f6-4574-9fd7-758f94a97a40",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a1f495fa-31b1-4ed2-af36-e057e0c11d4d"
        },
        "item": {
          "id": "f9edbca4-642d-43f2-b741-6a6632f15f4d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0a979dd8-52c0-4033-b369-30b6c4797c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25dc2824-f3cf-4d05-9bc1-c212037302f9",
        "cursor": {
          "ref": "28406281-3f2d-4df8-9cc5-036227ac320d",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "65c66c58-7b2b-4af9-a734-f1ee1578a314"
        },
        "item": {
          "id": "25dc2824-f3cf-4d05-9bc1-c212037302f9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b2e4c1be-4681-49a8-a027-211dd1b70563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28821ca-d2c8-40fb-88c4-e8e27a69ed5e",
        "cursor": {
          "ref": "7a00ef9c-7d3e-40fa-b65d-994676e78927",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4cdc3b43-8588-493e-9c48-1d76b9919ae6"
        },
        "item": {
          "id": "d28821ca-d2c8-40fb-88c4-e8e27a69ed5e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "48e65495-7fa0-4b20-92b5-95adc8ba524e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32960bbe-f5c8-49d5-be0c-66675e8e681f",
        "cursor": {
          "ref": "aff93011-3cdd-4901-9381-7630b9ec2107",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9715b3e4-9e2a-4ee7-b299-7e0cf0f12314"
        },
        "item": {
          "id": "32960bbe-f5c8-49d5-be0c-66675e8e681f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f585e971-e906-4557-b4ce-0d3be05cbfd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6cdc04e-a027-4774-bbb0-b63027b4c551",
        "cursor": {
          "ref": "0efea09e-9318-46f2-b733-492b803a9b9a",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1da79c29-c5e2-4201-b597-06da5c57c0e7"
        },
        "item": {
          "id": "a6cdc04e-a027-4774-bbb0-b63027b4c551",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "43db174c-32d3-4dbd-8d5e-4b9e80a73153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7891f418-34b7-4af3-80eb-763456deb641",
        "cursor": {
          "ref": "fa8fb1db-d229-41e0-b133-8612461ba126",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a9542332-e6c0-47ab-8982-c1bf32aee78e"
        },
        "item": {
          "id": "7891f418-34b7-4af3-80eb-763456deb641",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6e9ddfef-4f4c-4e4b-9f15-79da8d10caab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5980028f-33b3-4d17-a269-e89869c795d4",
        "cursor": {
          "ref": "9bf79a87-6304-441c-8257-d403ceeb2d07",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a2ed9656-8e73-4ac6-b0b1-ffaad798bc85"
        },
        "item": {
          "id": "5980028f-33b3-4d17-a269-e89869c795d4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b5666cd5-744d-4007-8ca4-b935e2fd9631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49cb0d3-8133-4a39-8ff2-a21aba46d6d6",
        "cursor": {
          "ref": "102cf25d-b2f0-409a-a05b-5c733acf5b1b",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ca28539c-f63f-4afa-bac0-b5ef618d292b"
        },
        "item": {
          "id": "d49cb0d3-8133-4a39-8ff2-a21aba46d6d6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9b7b3b5b-5c45-43d9-b43a-10a4c4153a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045051d9-e367-4e92-8727-3c040a3a91f9",
        "cursor": {
          "ref": "6c53f0f6-bb46-476f-831c-dcfe8fe12a93",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fdc124ac-28b8-4b26-ab8d-fdf709503ba5"
        },
        "item": {
          "id": "045051d9-e367-4e92-8727-3c040a3a91f9",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "249e0f96-0bb7-4aa6-9608-30a7c919f344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7389578e-3667-4c83-b9af-d139f6ed920a",
        "cursor": {
          "ref": "b9f5433b-b0f8-449a-acd4-87df01658c3a",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "74b37971-8778-4822-96fe-9e2b5f42e2f3"
        },
        "item": {
          "id": "7389578e-3667-4c83-b9af-d139f6ed920a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a9c4aa9c-c9a7-420b-8075-7343e2be65dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c415d4-4586-4ddd-90e5-9956d08bf364",
        "cursor": {
          "ref": "cc5d4cf7-2be8-4df2-8e15-92330749a8f8",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "fa37cfb0-921a-4287-a097-68d2ec0d2177"
        },
        "item": {
          "id": "39c415d4-4586-4ddd-90e5-9956d08bf364",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ff3c6e68-543f-4357-8d04-3feb055b89ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b3aa8b-ddb3-4048-b8eb-4af783cdbe3d",
        "cursor": {
          "ref": "4985d92e-0e7f-4afc-be4e-62cf5d853b9f",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5609b4da-5a46-4dc4-bc71-5e7544d6eabf"
        },
        "item": {
          "id": "c5b3aa8b-ddb3-4048-b8eb-4af783cdbe3d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a842ade9-2168-45db-a4ba-6dfe9c0cab64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e700f3-323b-4f9c-afb5-43ce7ce07e26",
        "cursor": {
          "ref": "200f9b36-8ef7-4d8b-8009-5a9a480e3c50",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a6883608-2fab-4fa3-9304-c6c695b668ee"
        },
        "item": {
          "id": "03e700f3-323b-4f9c-afb5-43ce7ce07e26",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9a856af7-22ec-42a4-bb2a-263577d0427b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408c6c8b-8c80-4f61-a926-0d1ca7f76972",
        "cursor": {
          "ref": "fe5961ca-a0cf-45b6-a620-8a64160da02d",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "346612db-ed1b-4eee-bd96-d5d9540fa1ea"
        },
        "item": {
          "id": "408c6c8b-8c80-4f61-a926-0d1ca7f76972",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "21c92613-fc01-4492-8e6a-8927215cfa4c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f427dce8-641f-4fa3-8cff-e675737ef87b",
        "cursor": {
          "ref": "aecdf2b0-c723-4855-a94a-1d3f9e00fa97",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ab279fbc-08c7-43a2-a690-7813b1f4864d"
        },
        "item": {
          "id": "f427dce8-641f-4fa3-8cff-e675737ef87b",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "455023f5-c30a-4b1f-ae6a-c47c47726c5e",
          "status": "Created",
          "code": 201,
          "responseTime": 42,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe3a05b-8a0a-461f-b5de-4cbd6a90cc2c",
        "cursor": {
          "ref": "b901ce69-6a5a-40e1-870c-8bc8be4f2eb8",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1a82f278-abbe-47e3-95c5-e984d27cef89"
        },
        "item": {
          "id": "abe3a05b-8a0a-461f-b5de-4cbd6a90cc2c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5ce0673c-32b7-4b6e-b292-409fbfddb224",
          "status": "Created",
          "code": 201,
          "responseTime": 234,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "24878947-e66d-4a15-a67b-a6b408c9f0af",
        "cursor": {
          "ref": "9e22110f-93ee-4efb-bf47-29a5d71533aa",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "cec79d36-81eb-4ea9-baa7-27bed5eeb533"
        },
        "item": {
          "id": "24878947-e66d-4a15-a67b-a6b408c9f0af",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "519975d0-2e1c-498a-8020-ff943ba0fb38",
          "status": "Created",
          "code": 201,
          "responseTime": 31,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc9f032-49cc-4aa0-9fbf-c9d6c8a4043a",
        "cursor": {
          "ref": "80f6afb9-6f0b-4442-afcd-2f91e4dedde2",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "43c06e4c-206f-4429-82d3-9f087dd3f153"
        },
        "item": {
          "id": "cfc9f032-49cc-4aa0-9fbf-c9d6c8a4043a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "972bff98-3ee3-4a70-aca2-08f607a9c4fc",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b8c66a-c083-4342-aea4-e5b427eb3ef6",
        "cursor": {
          "ref": "6dffc83d-d7a7-479c-ba1b-f7680ea76851",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7a0a00a4-506a-4a58-9cfa-ade60ba645bc"
        },
        "item": {
          "id": "41b8c66a-c083-4342-aea4-e5b427eb3ef6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a59cec94-7767-4a98-bea1-3a6586b052e7",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f9bbd5-396d-4298-b622-247bca929c42",
        "cursor": {
          "ref": "26c86fdc-dc5d-4f1a-9252-3299945019c8",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b193ddb4-a06e-4ac5-97ee-281a8529f062"
        },
        "item": {
          "id": "e7f9bbd5-396d-4298-b622-247bca929c42",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "92732cec-1536-4364-994c-388efb6a6569",
          "status": "Created",
          "code": 201,
          "responseTime": 38,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2dc9a71-9862-4c47-a966-ed807105650b",
        "cursor": {
          "ref": "4e54d125-36e3-4bd1-b293-58179d627216",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e4857b3d-6542-4747-a719-30fe5edb9af1"
        },
        "item": {
          "id": "f2dc9a71-9862-4c47-a966-ed807105650b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "955b43a1-a4bf-4866-bf34-d59776d9f699",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc321b23-5cda-4e52-80bd-4e03ea41324e",
        "cursor": {
          "ref": "863d0036-b38a-4bcd-864a-51c2c4542e69",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1f62d3d1-b467-452f-a014-9f2a3f77813c"
        },
        "item": {
          "id": "cc321b23-5cda-4e52-80bd-4e03ea41324e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bb4e9937-8ea9-4d52-b09a-5d99d87e8a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217b6b05-7d3a-40a2-b2a8-41df6ae5d892",
        "cursor": {
          "ref": "5489e315-b73a-4e1e-a414-8ad0caba929a",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2e271292-cadc-4962-b640-e6217a68106c"
        },
        "item": {
          "id": "217b6b05-7d3a-40a2-b2a8-41df6ae5d892",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "200c4c63-048c-42a4-92d2-bb02757886d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ac6c71-9cce-47a0-9596-30980aff5b00",
        "cursor": {
          "ref": "fc5644b6-888f-4734-b88b-2396784c7f07",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "af53bdfe-b589-4471-88aa-4b0ee44e347e"
        },
        "item": {
          "id": "26ac6c71-9cce-47a0-9596-30980aff5b00",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c031a73c-c43c-489c-bfaa-bba9bf25d829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dbb847f-4db4-4c02-89d2-87da44b22c6a",
        "cursor": {
          "ref": "8cf2042c-6316-43df-98bb-70ab62fa9da9",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e8676d52-e855-4753-b7f6-0af9e7ad614d"
        },
        "item": {
          "id": "7dbb847f-4db4-4c02-89d2-87da44b22c6a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "48ca2052-92dd-44f1-8adb-d7b1d54acf4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91bbe433-e056-4cbd-b233-449780e8c52c",
        "cursor": {
          "ref": "9b8bcd02-cb89-4673-8a56-95798b530ca8",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8b0ce9b6-4fc4-4789-ab04-9fed1f206054"
        },
        "item": {
          "id": "91bbe433-e056-4cbd-b233-449780e8c52c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e4f5ae75-5eb4-40e3-8870-c6f81f4f1cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9a3768-cf78-42ba-8a40-f2cbaa4f05de",
        "cursor": {
          "ref": "c965b2c1-0cf6-49af-899f-e2f00579687f",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "bdedced7-3b98-413b-bbf1-6bae4de110a8"
        },
        "item": {
          "id": "5b9a3768-cf78-42ba-8a40-f2cbaa4f05de",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "40f52f23-c581-4302-a359-56fdf5452d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2db35a3-af0a-4ab6-a8db-01e55649e412",
        "cursor": {
          "ref": "cbb91fda-7076-43ad-aa3a-1224aaced31d",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a3dbdda1-cd93-45e9-8ef1-ca20750e6229"
        },
        "item": {
          "id": "f2db35a3-af0a-4ab6-a8db-01e55649e412",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2d50098e-c820-4925-8e0b-4228d3bf8a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea5744b-5d00-4d75-aa7f-22ce77cf1b87",
        "cursor": {
          "ref": "bdb8d184-0dbe-4549-90ad-d2cd4545d96c",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "af0d34a4-4cb1-4218-973b-1038a10ab4a3"
        },
        "item": {
          "id": "3ea5744b-5d00-4d75-aa7f-22ce77cf1b87",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "42e72d73-c149-49e6-88a5-35fd1456f0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f07723-d9cc-4c12-a25f-e6ffc7e0da7b",
        "cursor": {
          "ref": "8d9c0224-f926-455d-8f7a-ac3ed08559a7",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a305c509-2b53-4abb-8548-9b74f0e00254"
        },
        "item": {
          "id": "38f07723-d9cc-4c12-a25f-e6ffc7e0da7b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "12446af3-4e54-4b28-8d96-8cc651ceac71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7280d0d-e423-4d31-9570-a21929085490",
        "cursor": {
          "ref": "8d26394a-8532-431a-aeee-21a229479d4f",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ad18c5c5-7943-4435-952d-d46a2ddd24ce"
        },
        "item": {
          "id": "d7280d0d-e423-4d31-9570-a21929085490",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "588c83b1-655e-44a9-a361-e9f9ec21825c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03074783-b270-4193-9e1a-3023248442e7",
        "cursor": {
          "ref": "5c59a3de-fec4-4ec7-bc9a-c4389a062908",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "568f35bb-0de9-4af1-a718-b4f8c47191d1"
        },
        "item": {
          "id": "03074783-b270-4193-9e1a-3023248442e7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1b7a7724-3a7c-467b-8270-0fdc56b3e0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afde16f6-6305-444f-8d92-8aafb9413492",
        "cursor": {
          "ref": "9aa06c58-1a80-497d-9ee5-7f35b269489f",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7a726139-034b-46c9-9dba-74fae3829d7c"
        },
        "item": {
          "id": "afde16f6-6305-444f-8d92-8aafb9413492",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e405b7a7-ff54-4447-a5f9-30ab7de2a34d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b50fd4-47e0-4191-ab77-ee504eb9309a",
        "cursor": {
          "ref": "217a8956-61b3-45f0-9ec1-3a7a6ee0c5b5",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ab359da2-5e24-428b-8dc5-4b8d26535e36"
        },
        "item": {
          "id": "34b50fd4-47e0-4191-ab77-ee504eb9309a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "79a2fe25-5534-455e-bd54-67c31575b768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae7fc5e-aedd-4ccd-9a4c-60a5c9dc847f",
        "cursor": {
          "ref": "d01dc690-4352-46ce-aec7-57f03594291e",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e5ae5309-1fea-400a-abda-e1472601688d"
        },
        "item": {
          "id": "9ae7fc5e-aedd-4ccd-9a4c-60a5c9dc847f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "933beee3-7082-4528-aa2a-96b4452778e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1559dd63-a3c9-4366-9079-26ae732da5ba",
        "cursor": {
          "ref": "d871fd91-20df-43b6-86ab-63a020d4cb3e",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d0118b30-9592-43bb-89c8-a7e6e122ac6d"
        },
        "item": {
          "id": "1559dd63-a3c9-4366-9079-26ae732da5ba",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "26da1ec2-4cfb-4ea6-9eb8-e9ef26997635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c39c055-69ad-45b4-9d3e-6967b2a98849",
        "cursor": {
          "ref": "2f221d47-9efd-4a9d-a7ec-e6c367389921",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e3ae7f30-5e1e-4636-939c-d2369479b03b"
        },
        "item": {
          "id": "1c39c055-69ad-45b4-9d3e-6967b2a98849",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a9c9c782-4414-4c1f-8890-ab81fcd4f996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09587c91-803f-4593-bf88-b9937393fda5",
        "cursor": {
          "ref": "d98fe0c4-75fb-47ee-a4aa-cf04cb961365",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f75787ad-c9fc-4efe-a7dd-20e99721b471"
        },
        "item": {
          "id": "09587c91-803f-4593-bf88-b9937393fda5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a87fea04-8577-4ebc-88bd-dedca38501a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb2f912-5a04-4484-85ee-0414f6700c0e",
        "cursor": {
          "ref": "197698da-ca41-4bbe-8c8f-621f763e80e3",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3644e070-2e4b-4c0d-bcc2-6e7051dc1710"
        },
        "item": {
          "id": "1cb2f912-5a04-4484-85ee-0414f6700c0e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d28c19c6-6396-4d0e-aa6d-ec25c94d7569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3885d2e1-d3cd-4443-bff3-1353036dd9a6",
        "cursor": {
          "ref": "13f527d5-ee08-46d5-b4bd-28c57242fa86",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e674985c-3776-45e1-a2dc-7fe9d194cf8b"
        },
        "item": {
          "id": "3885d2e1-d3cd-4443-bff3-1353036dd9a6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9456f19d-8c1d-4ad6-b038-351660db872c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329fd911-1f40-468f-9d91-03f27cdc8ec6",
        "cursor": {
          "ref": "407a14c0-5f1d-41aa-b889-51dbb9595cb0",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ebc7115c-54da-413d-a26b-145bffee2ea4"
        },
        "item": {
          "id": "329fd911-1f40-468f-9d91-03f27cdc8ec6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8ebeff6c-3405-46a1-ac89-1221a86591ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9d9a87-046c-4379-97fa-572c232c8155",
        "cursor": {
          "ref": "612df9b8-5b68-446d-bde6-1da80c8055c2",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3b92aace-f97c-4576-9eb3-8c5d325a6677"
        },
        "item": {
          "id": "1e9d9a87-046c-4379-97fa-572c232c8155",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c7806361-f90e-43e8-9303-02f8006998a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f596a2-8e14-4f3c-b248-9b3937a3217a",
        "cursor": {
          "ref": "13fbcfc1-4ba8-42a0-8499-ecf4792731b4",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2b7774e9-4373-4d2e-b6ba-a487e2a1f409"
        },
        "item": {
          "id": "60f596a2-8e14-4f3c-b248-9b3937a3217a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "61aba780-beeb-4cf8-b618-9b9095dac301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9dee47e-eda6-445a-b8ba-6c78a24e03c1",
        "cursor": {
          "ref": "03b31f4b-6fff-4846-be69-33346e1932dc",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7e99eb64-32ec-403c-9ec7-410dec00ed29"
        },
        "item": {
          "id": "d9dee47e-eda6-445a-b8ba-6c78a24e03c1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "88051ea1-c26b-469f-9668-863df7c0971f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d335a33b-5e5e-4e27-b2a1-d52f7ec2f8f2",
        "cursor": {
          "ref": "177162e3-5e74-44e8-87d8-5807f8dd577e",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ffb33918-13a3-43d9-9a90-0ab28b80cfb5"
        },
        "item": {
          "id": "d335a33b-5e5e-4e27-b2a1-d52f7ec2f8f2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "29c7fa79-085c-434b-88f2-cb9bb25763ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3cf8544-dde4-459c-b508-e81d9c0aca12",
        "cursor": {
          "ref": "79b63ff3-24f4-4cf9-b88a-509b6862eeee",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a5d39a64-9892-4a9b-8f96-826f6f2c2a19"
        },
        "item": {
          "id": "d3cf8544-dde4-459c-b508-e81d9c0aca12",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "23aba4e4-4692-4d75-9bdf-7696df27569c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36c43db-062b-447f-81e9-ca0d34c7f68a",
        "cursor": {
          "ref": "6043fb8a-97ae-4ddb-8efc-c0907f368af5",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5da2bd94-aa10-4784-9bd4-b197cdfee2a9"
        },
        "item": {
          "id": "a36c43db-062b-447f-81e9-ca0d34c7f68a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0d337dab-2e5f-4894-91bc-4b8fed9985b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a0697d-3dcb-4ed0-ac8f-94503f2c6ee2",
        "cursor": {
          "ref": "29cbab83-a23b-4ff7-a0c2-c12a5e428719",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d76d72cf-1b51-467c-9bb3-1e5614ecb9b0"
        },
        "item": {
          "id": "60a0697d-3dcb-4ed0-ac8f-94503f2c6ee2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "18289ed9-1019-44ae-a973-c8142ea47dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d74051c-6281-4efa-8b03-375b9910e22d",
        "cursor": {
          "ref": "f0bbf7bc-9965-4079-9cbb-ead1ac60076b",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5695721f-293a-4899-8f12-17d1ceb645b6"
        },
        "item": {
          "id": "9d74051c-6281-4efa-8b03-375b9910e22d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4060671b-f75b-4594-9e1c-580038cb6ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4353380-622e-47a7-873f-e6b7169787c9",
        "cursor": {
          "ref": "a9116db2-51e3-4527-a32c-17b443a3249a",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5c8c60fe-47a7-4c5d-a484-e365dbe0aa0b"
        },
        "item": {
          "id": "a4353380-622e-47a7-873f-e6b7169787c9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b8af36e5-e85e-4b1f-91c5-05eb09f397a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290d9149-495d-4255-9d2a-6a57f05947e4",
        "cursor": {
          "ref": "97af8389-2d44-4fc7-ba2e-07c6e1789ba4",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bd564924-3727-48c7-89bb-bc6a85c49efe"
        },
        "item": {
          "id": "290d9149-495d-4255-9d2a-6a57f05947e4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "592d3e71-cfa3-4da9-8300-62595803b8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8af6731-7bf9-46e0-b2f1-0c0cf02717e0",
        "cursor": {
          "ref": "d2ca8fbf-e0e9-495f-98e8-18596f683ab3",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7e2e2f21-180a-48fe-be24-26ff054ea78a"
        },
        "item": {
          "id": "d8af6731-7bf9-46e0-b2f1-0c0cf02717e0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "eeb36829-424f-498b-bce1-d6927aa67973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a36fd2d-7816-479c-b779-d9971daabb85",
        "cursor": {
          "ref": "6aa7d4af-7785-4cde-bc7b-0265e7311269",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5cb04aad-cdf4-4e6c-ae25-01fe76e84160"
        },
        "item": {
          "id": "4a36fd2d-7816-479c-b779-d9971daabb85",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "3f1628e5-cd5f-46d7-a95d-ea95adfa445c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e90628-e926-4b8d-9e76-fcf25fb40ab0",
        "cursor": {
          "ref": "a2dfa75e-f30b-4574-a238-a9b49904d98b",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "dce3c615-4761-4e4b-a19e-f910eb0a9141"
        },
        "item": {
          "id": "b0e90628-e926-4b8d-9e76-fcf25fb40ab0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0670b119-0a5b-4a3c-af10-64827c21e800",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e552371-6f03-4120-8ff9-a4b14f2ca48d",
        "cursor": {
          "ref": "1df6f4c0-753a-4466-a3d0-ecdf223d955d",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0ef43aaf-d698-4086-9651-0a6548f4a206"
        },
        "item": {
          "id": "9e552371-6f03-4120-8ff9-a4b14f2ca48d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ef1eb4df-44e8-45d4-ac90-b1ff371a6186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45701d12-f185-4740-b66f-95c59ddf6388",
        "cursor": {
          "ref": "32cfdc43-11e1-4efe-8869-01a4908a3f49",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "bfb9b422-cb3b-4021-869d-decb40849192"
        },
        "item": {
          "id": "45701d12-f185-4740-b66f-95c59ddf6388",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ecb81fe8-db87-4813-a1c2-813a4eb55b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e803f08-b0eb-4178-902b-2c5e6a421b77",
        "cursor": {
          "ref": "3cf7de26-c9b6-4d8c-8646-5891c292f045",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "13d40ef2-f4b3-4ce4-a8e4-419a3ef7055c"
        },
        "item": {
          "id": "0e803f08-b0eb-4178-902b-2c5e6a421b77",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1ca28248-0e22-4023-94e7-273fa3583e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51efb4cf-588b-46b4-80d2-031f75c9a06c",
        "cursor": {
          "ref": "ae7be4a7-6296-4c30-b198-2e693ac58ddd",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "528dfc52-6842-4125-8171-53a3850c54a5"
        },
        "item": {
          "id": "51efb4cf-588b-46b4-80d2-031f75c9a06c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8420937a-6a59-4256-ab4e-693928af16a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0caecf73-6a92-4125-b01f-b553573d892a",
        "cursor": {
          "ref": "5fb7b0a4-2613-464d-bd8c-250ebae06ab0",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f0b08e3f-45f2-411a-96f4-1075a46c8f12"
        },
        "item": {
          "id": "0caecf73-6a92-4125-b01f-b553573d892a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fe1208f9-bf14-4411-835b-8dc5311ae872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c05e916-8917-477a-8c89-da5e4fa148c5",
        "cursor": {
          "ref": "83aa1fc9-741c-4813-87e1-0c85e69b10a6",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f2a1614b-d6ab-4c36-ab22-52938bfa4358"
        },
        "item": {
          "id": "0c05e916-8917-477a-8c89-da5e4fa148c5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f52df70e-571c-4653-a308-34611eb6f595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ace23a0-ae16-45ae-b679-56119f30d443",
        "cursor": {
          "ref": "3e0ea469-10ca-49c6-ac99-52647acd3735",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cc49864d-199a-453d-8253-70664c1a0c31"
        },
        "item": {
          "id": "2ace23a0-ae16-45ae-b679-56119f30d443",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cfe4959e-0a75-4e85-86b9-e6f8199a2904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6eef97-0242-44b5-b1ec-aff565b26dcc",
        "cursor": {
          "ref": "6c0a04a9-64cd-4249-b8f2-749a313c89da",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a08eef21-ee37-4815-b023-d48902040b37"
        },
        "item": {
          "id": "0a6eef97-0242-44b5-b1ec-aff565b26dcc",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "60c8c84d-df8c-4a2b-84eb-0d6e57d220c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b24f4fb-f588-4da1-8a48-4066b6da6892",
        "cursor": {
          "ref": "997ffb76-9d63-4a51-9149-ee6b4a524e02",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f48a4288-2bc9-48e7-b38c-2c68c398556d"
        },
        "item": {
          "id": "5b24f4fb-f588-4da1-8a48-4066b6da6892",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "40063e0b-ae5f-4912-ad84-7b9d60db8a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f9b080-6e26-4386-892d-38fe10be9d02",
        "cursor": {
          "ref": "8e70f91e-5322-4f7e-b579-73fc6cf9e50d",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d098e062-f097-4d8e-ad69-2052761a8482"
        },
        "item": {
          "id": "81f9b080-6e26-4386-892d-38fe10be9d02",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "113fb44f-dd14-4207-ab18-06efeef25f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1152fa-d0a6-4e8b-aae8-d08c3d621145",
        "cursor": {
          "ref": "f561f2cb-a82b-42e3-b338-c8fa952e1cd9",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8823c919-575d-4b77-9f52-a7a103ac93b8"
        },
        "item": {
          "id": "bd1152fa-d0a6-4e8b-aae8-d08c3d621145",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "75962ac2-920b-4c00-b190-6a2689ddb97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081771de-6ca0-4ea9-9e8d-b71585472a8d",
        "cursor": {
          "ref": "10a0cbcd-6226-4177-b90d-a10f8069483c",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7fb8cdce-b8ae-4d02-b008-a6f56f700f99"
        },
        "item": {
          "id": "081771de-6ca0-4ea9-9e8d-b71585472a8d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6dbf9d71-9b13-4bdc-9c43-d0d807e5bfc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e2bf68-6c45-4ad9-a690-1480a063f4be",
        "cursor": {
          "ref": "ef35e3cd-d8eb-4891-9935-b9527db87fa8",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d372b0fa-c7a6-4c4d-a0c9-bb3726662c88"
        },
        "item": {
          "id": "16e2bf68-6c45-4ad9-a690-1480a063f4be",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cc21dfdd-2b41-401a-922d-4770da1426b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35895ec6-4ce2-4bcc-ae02-f50313f57b8a",
        "cursor": {
          "ref": "e0782b7f-42bc-4d9f-a429-2dd53a54fce1",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e02617c0-1529-4dac-afe9-10eaa88a4504"
        },
        "item": {
          "id": "35895ec6-4ce2-4bcc-ae02-f50313f57b8a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "82a1d775-5fc2-441a-bd6e-13391e6f1093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dde2c93-d5ce-479e-9e44-ce4282f3f7d1",
        "cursor": {
          "ref": "6db3564e-9867-4958-9400-dbff70b31eb1",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a851c558-8d01-40d6-9137-51722bb48b86"
        },
        "item": {
          "id": "1dde2c93-d5ce-479e-9e44-ce4282f3f7d1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "23b30a8a-d6d7-4a5b-a0a9-747a51b2075e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f28d77-4d9d-41ce-b35f-b6909943119a",
        "cursor": {
          "ref": "83f3261a-1e2f-4139-9a79-e2106eb3ed24",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9ded0533-9913-4fa4-a5d2-02365e89e8d2"
        },
        "item": {
          "id": "07f28d77-4d9d-41ce-b35f-b6909943119a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a9ca80dc-f5a2-42b5-9e75-530e665452de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b32de8-c0af-4341-aa03-7a625c52cdd1",
        "cursor": {
          "ref": "981b2d74-2131-43aa-afa2-4219a0485cf4",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a5e8c6bd-12a7-4091-bba1-9a7d49c673ca"
        },
        "item": {
          "id": "61b32de8-c0af-4341-aa03-7a625c52cdd1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bd1be5db-bc65-42b2-8887-e1e08be46ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8465a3-7ea5-49a2-a6f4-d524f16c25b7",
        "cursor": {
          "ref": "ac7922fc-f4c9-4f26-9ee7-b6bcfd94c6c6",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1b5def81-75a9-4636-9091-66fafda420ae"
        },
        "item": {
          "id": "3b8465a3-7ea5-49a2-a6f4-d524f16c25b7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7b6a5f42-da91-40cf-be0d-aef887d5132e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a367c53e-6c52-461c-b7e4-7ed710a80e6f",
        "cursor": {
          "ref": "cb496e73-5579-416a-834b-50f21847d825",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1921023f-8908-461f-b11b-fa4b55a5b9ec"
        },
        "item": {
          "id": "a367c53e-6c52-461c-b7e4-7ed710a80e6f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e14a1d45-89f1-437f-9705-9ba78648bbf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb68a2d-d655-4cf6-b2b9-f2e66c19efd0",
        "cursor": {
          "ref": "55d9ac0e-bc2c-400f-af19-6b9ab43e93ee",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ef732617-caea-4146-9f54-3da5783b4f6c"
        },
        "item": {
          "id": "3fb68a2d-d655-4cf6-b2b9-f2e66c19efd0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3bd85983-a7ca-458a-a546-4f13420bfb90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51387f8-ff83-479a-aff6-f33712489b8e",
        "cursor": {
          "ref": "86d067f5-5511-415d-81e7-203318166ddc",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "40c3d842-d20a-415b-983d-0d6da4ad6a68"
        },
        "item": {
          "id": "e51387f8-ff83-479a-aff6-f33712489b8e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4b79c870-999a-40b4-8131-1a06695c6a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ea6368-8120-4d51-ab9e-d8987a8e1a11",
        "cursor": {
          "ref": "e0ad6a4d-e5d8-413b-b3fb-a91c3b730379",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ef5c7de5-b9f8-4d25-92bd-0c03049a6e09"
        },
        "item": {
          "id": "21ea6368-8120-4d51-ab9e-d8987a8e1a11",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d144f90d-0e91-4232-ad3d-850323ae8155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f16d7b7-e3db-4f2f-b698-5ace8951a2f1",
        "cursor": {
          "ref": "dfe6cb4c-0875-48ae-8491-9a46e959cc47",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3a3c4198-cd6f-4566-9434-2bd3681e250f"
        },
        "item": {
          "id": "2f16d7b7-e3db-4f2f-b698-5ace8951a2f1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d2d03df8-2a1c-4567-9df9-0cedaf03c46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c44b28-ff47-4c00-8595-cffbad06e34a",
        "cursor": {
          "ref": "2d597d3d-6adf-46fe-af4e-5da7ff11bba7",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9b8a5c22-2f7b-4994-af70-6682dc9f3027"
        },
        "item": {
          "id": "63c44b28-ff47-4c00-8595-cffbad06e34a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e18bb36c-122f-418e-9b07-deff701d6757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2eefcc-b925-4799-83a5-1a86feaee5a7",
        "cursor": {
          "ref": "efc04f15-f411-48ac-83e8-26a2ebd53d04",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c9e9acec-0500-4faf-a6d4-22adcbe0b0ea"
        },
        "item": {
          "id": "fd2eefcc-b925-4799-83a5-1a86feaee5a7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0821f66c-9d96-4573-969c-d9701b448555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf51050e-9256-4e2f-93ff-07b3e9b9cfcb",
        "cursor": {
          "ref": "6aca33b8-c665-4c14-81a7-b835820fc363",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "65148315-6a24-4559-8cdc-528e4aa46380"
        },
        "item": {
          "id": "cf51050e-9256-4e2f-93ff-07b3e9b9cfcb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1c4b1c52-0e93-4386-bba0-c134d4b3c04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5273efc9-7db1-4619-ba47-8cec41e3903b",
        "cursor": {
          "ref": "426e635d-0743-44a0-a6af-d1841cd2655c",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ebb64579-9fbc-4f9e-98bc-eb72e73dfa89"
        },
        "item": {
          "id": "5273efc9-7db1-4619-ba47-8cec41e3903b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fb727289-334d-4040-bf45-1ffce15d9004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d70d9c-0db7-4caf-a2e8-b8ba30e4f0a6",
        "cursor": {
          "ref": "1cee268f-939d-4c83-9090-fae90bdf04d4",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "81c21504-48c4-48e8-aa6a-5a6f28831b90"
        },
        "item": {
          "id": "f8d70d9c-0db7-4caf-a2e8-b8ba30e4f0a6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0a5a2810-3b91-4450-b6a7-277361d8ba70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7059aa-ecf0-4500-a771-246f493159ef",
        "cursor": {
          "ref": "c0d0d0fc-e856-4f65-a6be-534da0278c34",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a543fef0-88db-4235-bab1-9ab8181588d2"
        },
        "item": {
          "id": "eb7059aa-ecf0-4500-a771-246f493159ef",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "794a471f-a8d0-4d7d-9b90-c76da11f1837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eae1281-aaa3-4304-b4f3-5ef28e694855",
        "cursor": {
          "ref": "d39e16c9-b47b-4565-b800-4c6a4121dfe6",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c3a6b1c2-5bf3-402d-9320-0ec106ffe113"
        },
        "item": {
          "id": "3eae1281-aaa3-4304-b4f3-5ef28e694855",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b510405e-28e9-4032-b14d-3f3c6bf29ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25ed8ed-9de3-4d0e-ab15-ed986de87da4",
        "cursor": {
          "ref": "43191702-6fdf-4a93-bd52-89c0b792128b",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fa735ca1-1637-4dae-95de-6ef74fc8a55d"
        },
        "item": {
          "id": "f25ed8ed-9de3-4d0e-ab15-ed986de87da4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9346f925-89be-401c-8a4e-b825d8963ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95154f5-6007-4718-b8b3-598ea297ae73",
        "cursor": {
          "ref": "32cc487a-d93b-4c6e-b38b-0a8a32899aef",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3383a636-33d1-455f-bf46-edaab539063f"
        },
        "item": {
          "id": "c95154f5-6007-4718-b8b3-598ea297ae73",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b5f9539a-0b6d-4040-a90c-f1cf83a13988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd637d3-bc0f-4bbd-9b5e-c5446cf27a04",
        "cursor": {
          "ref": "20cd31f7-948b-414e-a72d-536b1e6a2088",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "687bacdc-ccd1-4c4e-b61e-05d247aa113c"
        },
        "item": {
          "id": "4cd637d3-bc0f-4bbd-9b5e-c5446cf27a04",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "977131cd-cb2a-4e87-9f57-aad6eadb5de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a3dbe7-6195-4e12-8c1b-efe4aa19d9c8",
        "cursor": {
          "ref": "de63eec1-23e2-4340-a50c-426617c0e96c",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c991f2af-3d0d-488d-8862-cd012fa87911"
        },
        "item": {
          "id": "90a3dbe7-6195-4e12-8c1b-efe4aa19d9c8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "0d7bcffe-6049-402b-9245-bd1457dee8ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ecdcc3-2ad7-4e64-ac37-e7f42c0dbc04",
        "cursor": {
          "ref": "734317d1-2794-43e2-8534-46062c03baf2",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "73f947ad-ddb6-430e-a5f4-cec1376a9e54"
        },
        "item": {
          "id": "d4ecdcc3-2ad7-4e64-ac37-e7f42c0dbc04",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c9eb5061-8724-48ed-8fad-b7cc852edccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea833a35-708d-406f-8a3c-96452619a675",
        "cursor": {
          "ref": "a2df26d6-c40e-4849-9d09-691970c20aec",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "29088cfc-8b61-44f8-84ef-1b9f20c56334"
        },
        "item": {
          "id": "ea833a35-708d-406f-8a3c-96452619a675",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "697974fd-6407-40db-a5a4-b040d9476a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e297a0-dc0b-498f-aee5-71dd825d196f",
        "cursor": {
          "ref": "d34bbe52-c6b0-46ab-ae40-9d3b0babf49a",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "89bd1370-3dda-46f1-83f7-eb387e3eb0f7"
        },
        "item": {
          "id": "44e297a0-dc0b-498f-aee5-71dd825d196f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e5e62c86-562b-4bb2-8cdd-738fdfd6e281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfd7c7a-a67e-410e-beba-cd1b8df809d8",
        "cursor": {
          "ref": "7268de37-bbef-49e4-8be2-1f1572a824ef",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4d9654d5-b8fe-4c81-8a9d-6296693f7c07"
        },
        "item": {
          "id": "9cfd7c7a-a67e-410e-beba-cd1b8df809d8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "790f1a3e-5b59-4f64-9c98-825d80a0ddeb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473b0f78-b0ed-4296-9154-5225c36e6e0f",
        "cursor": {
          "ref": "81ed9ae5-d6a9-4549-abde-3abfb2099763",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "46cce2a3-1ba5-4de1-b38c-954f113cc1e3"
        },
        "item": {
          "id": "473b0f78-b0ed-4296-9154-5225c36e6e0f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "98e1ad33-bd37-4be2-94fc-ed681026b2a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d393b5-a3ce-461e-9b2d-d99a09713626",
        "cursor": {
          "ref": "ebfda4cc-3df3-440f-b98c-cc2bd8d109b5",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d8aca05f-e13d-4fe5-93d9-494ecbbd64e1"
        },
        "item": {
          "id": "99d393b5-a3ce-461e-9b2d-d99a09713626",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4c67882b-d33c-4fdb-9633-a66da5d5cb6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a400904f-91aa-4a34-b028-bc135ec0aacb",
        "cursor": {
          "ref": "884b8657-9768-49a6-a442-0cf28557e9ff",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "21f3beed-b7ca-438b-a4b4-441cd4168397"
        },
        "item": {
          "id": "a400904f-91aa-4a34-b028-bc135ec0aacb",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "de3da537-5353-41b1-9f11-379650bc8802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9357f267-8ce9-45d4-9221-2fa8db26eef0",
        "cursor": {
          "ref": "36f0c313-5393-4e7b-8d8f-e11b7dbccea4",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3fda5d36-d32e-4711-9240-4eb60e95d990"
        },
        "item": {
          "id": "9357f267-8ce9-45d4-9221-2fa8db26eef0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6e8136f3-b174-48f1-a832-37fb5a61d63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed156a8a-8e6f-4489-b9a4-b17372783404",
        "cursor": {
          "ref": "2ac3b8d4-012f-4633-a3b4-edf85253365a",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8c4176f2-e443-4d7d-a0da-c8d6ba699b7d"
        },
        "item": {
          "id": "ed156a8a-8e6f-4489-b9a4-b17372783404",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7a0f6814-1afe-400c-8cc4-e56c24ef6365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3b08bd-5156-49de-ac04-1dd8507a5e74",
        "cursor": {
          "ref": "af9964fe-62ef-4075-8834-4796b6bc737a",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5ae34e1d-41af-4f36-9fb0-f703bf83ed8c"
        },
        "item": {
          "id": "ee3b08bd-5156-49de-ac04-1dd8507a5e74",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "163eb5d9-a3e1-44ff-b278-0d1be8594051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddc606e-ca18-451e-a4b1-40b09fb69dd8",
        "cursor": {
          "ref": "f44277bd-3893-4f80-b38d-8edb02de19c9",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "55ee9172-55e1-4c59-b4a9-024716593827"
        },
        "item": {
          "id": "2ddc606e-ca18-451e-a4b1-40b09fb69dd8",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "134960ec-8379-42ec-9acb-4a947cfa9f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878fd43c-bd9e-4fba-9f78-6024f1ed5d13",
        "cursor": {
          "ref": "09aa80ac-e05e-4ce5-9292-13a97de9975c",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "29b5bc79-7ff4-4058-955b-4c83cf260779"
        },
        "item": {
          "id": "878fd43c-bd9e-4fba-9f78-6024f1ed5d13",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1e8269dc-621d-4c97-a753-dc89a00bf821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e893b4-f1e6-45c9-a0c5-0e149e3f60b3",
        "cursor": {
          "ref": "42d40ab1-e3fc-44e7-b3a3-d6641f4c6c82",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a7312a5d-d727-48fa-ac3d-870a987246b5"
        },
        "item": {
          "id": "58e893b4-f1e6-45c9-a0c5-0e149e3f60b3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5f69124f-143a-491a-8d20-5b2bdc426c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf3145a-451f-4394-bc51-f5fc3ba1c770",
        "cursor": {
          "ref": "8da3bfaa-5a05-4d58-8815-98ce7d130c09",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a7c72447-a45a-4b40-a936-517ed8234a76"
        },
        "item": {
          "id": "2cf3145a-451f-4394-bc51-f5fc3ba1c770",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b0db933d-875f-4be3-94f2-e5132ebb4f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1aea36f-5587-4192-b03f-cef1d2d639fb",
        "cursor": {
          "ref": "0951baf6-e1c9-4546-a196-a6528ef48c5c",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "44fed0af-21e3-4e88-a4e8-7234b2572ea5"
        },
        "item": {
          "id": "e1aea36f-5587-4192-b03f-cef1d2d639fb",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6b627882-75ca-4bcd-9168-b35bd3fd7dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89dff38d-a778-40ae-a9ce-403252fbb688",
        "cursor": {
          "ref": "089b40b7-fc2c-4aab-9d70-76e83b9f9037",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "43b76a6b-8425-4467-afd7-392f200a612e"
        },
        "item": {
          "id": "89dff38d-a778-40ae-a9ce-403252fbb688",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "dec07921-98c5-4867-ad3b-781dab4afc11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91528c3-30f1-4026-9cff-99743a855ec6",
        "cursor": {
          "ref": "91b0b1d2-23c0-485d-b3b7-84113aded7a6",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4aaf6707-8cc5-4d7b-936a-8d03dde72884"
        },
        "item": {
          "id": "a91528c3-30f1-4026-9cff-99743a855ec6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "34787db4-2311-46c1-bc26-fdf784cb0093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faafdfbf-a5ea-49e1-a68b-150b824c8779",
        "cursor": {
          "ref": "f453e375-f6c1-470e-bbd8-f108e83c92f3",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1b1865ca-186d-4e97-9541-f21b3ab1e3ea"
        },
        "item": {
          "id": "faafdfbf-a5ea-49e1-a68b-150b824c8779",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c0ae7efa-24f2-494a-83f6-78aeee287a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567ec128-d274-409f-8191-7504edd920fa",
        "cursor": {
          "ref": "819b3f4d-fbfa-481c-a736-3bdd3d52538c",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "989b4cee-941b-4480-b9bb-cc9c9aa12750"
        },
        "item": {
          "id": "567ec128-d274-409f-8191-7504edd920fa",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "db5268dd-3fc8-45f3-9635-582fa64d3fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc25367a-71e5-4579-9f86-48e73b16825f",
        "cursor": {
          "ref": "d099cec8-bf53-48c6-a3ae-500e2e339476",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fdcf8c6e-f288-4b09-b4a0-8bf72e0a66fe"
        },
        "item": {
          "id": "dc25367a-71e5-4579-9f86-48e73b16825f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "28bcf6d8-c360-4ee3-ae04-fa654505964b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a61dd1-286b-43ca-94b2-8e6629a883cf",
        "cursor": {
          "ref": "43f646be-08d4-41ad-b130-623354831837",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "82b900ec-81f4-49b1-95b2-52a6c5fdd1c4"
        },
        "item": {
          "id": "99a61dd1-286b-43ca-94b2-8e6629a883cf",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "cc9d3d4d-0ae9-4cd1-aabf-24523577924c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e337ba7a-4da8-4911-8acc-c2f311bc9e1a",
        "cursor": {
          "ref": "3e3f25b7-ecd0-41fd-bff2-a72ecaf18ac6",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3a4e3f44-d7db-4429-9119-b9ad4763a877"
        },
        "item": {
          "id": "e337ba7a-4da8-4911-8acc-c2f311bc9e1a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "056ec74d-5aa9-4201-a901-66273c94f5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e6b75c-fecf-4edb-9964-28ec68156002",
        "cursor": {
          "ref": "53962f7e-e022-4065-b809-5625a31536bb",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "427f60c3-3ff9-4179-8719-47a7a6e3ff53"
        },
        "item": {
          "id": "e6e6b75c-fecf-4edb-9964-28ec68156002",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2dd2d81d-98bb-4217-b3e6-318d6f1a063c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635fe525-1614-44e2-b988-4c62178127fe",
        "cursor": {
          "ref": "8f10a639-726d-4e1e-a54b-a5ea2c25b047",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7c372c7e-1fea-4159-b815-72ce962ea936"
        },
        "item": {
          "id": "635fe525-1614-44e2-b988-4c62178127fe",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "fe3240da-2773-4574-b84f-c94b72d17c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70017b0d-9f3d-469d-84e6-e07a0cd0ed8f",
        "cursor": {
          "ref": "5952cb49-a993-426b-88f8-233b20ce8cac",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "07c6d81d-97c3-4a9d-a66f-ccc1a624b3e9"
        },
        "item": {
          "id": "70017b0d-9f3d-469d-84e6-e07a0cd0ed8f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1aa40a45-7db0-473b-b670-29f2f294737f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf7a0e2-c8c2-496f-a0f2-17cc11cf642b",
        "cursor": {
          "ref": "33e7bb1a-f604-4eee-83f4-a68fc5554f5d",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b015a86f-07c7-4774-9d1a-1f0d2bf4e491"
        },
        "item": {
          "id": "ecf7a0e2-c8c2-496f-a0f2-17cc11cf642b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "908c38ae-bbb4-4fb7-9dff-5b95d8e7ad7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a8a65c-76de-4577-b0c4-ce3a88698670",
        "cursor": {
          "ref": "8f69c34f-c03b-42be-8d66-a92a61b9ac86",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f1b8aa5a-8fdf-4688-ae3b-7c7862038211"
        },
        "item": {
          "id": "40a8a65c-76de-4577-b0c4-ce3a88698670",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "28ec1abd-9d04-4366-9c95-94e082473aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26292875-7998-40c8-9f69-fc477892472f",
        "cursor": {
          "ref": "321a8bf3-352f-47d3-8be6-a6a613fe8fe8",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "edd450a9-3789-4037-b38f-df782a9fff29"
        },
        "item": {
          "id": "26292875-7998-40c8-9f69-fc477892472f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ccd72e1a-fb38-4c43-a0b5-74d99a4aa894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 204,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde5f8f3-9c77-4a3f-86f8-2be8c8374746",
        "cursor": {
          "ref": "85188818-9cc5-45a0-9955-a958320797e8",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "939fc21e-033c-4938-9563-70d758a4a8f2"
        },
        "item": {
          "id": "fde5f8f3-9c77-4a3f-86f8-2be8c8374746",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "31ce7ee0-4821-45e1-9944-00a085985676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d52bef-e4c5-467e-a8b8-dc773f1abdb6",
        "cursor": {
          "ref": "a5e15468-5da8-4eb8-bdf3-b8593cefd50e",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1e9a9ff2-5ceb-485e-af4b-efb10a6cfe1f"
        },
        "item": {
          "id": "e8d52bef-e4c5-467e-a8b8-dc773f1abdb6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d26829ba-aa62-4c9b-9ed8-596ad11247f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26093773-89be-4b65-bd6b-1062f7bc5b58",
        "cursor": {
          "ref": "1312f48c-3ae1-42a3-aabb-481bd3468d01",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9db17933-47e2-4532-80cd-9dadcf2e43bb"
        },
        "item": {
          "id": "26093773-89be-4b65-bd6b-1062f7bc5b58",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b47c9ada-7eca-499c-8469-8d914e4984b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa14336-9ef1-46ce-bbcd-0c67bb6e9721",
        "cursor": {
          "ref": "d2467902-36c8-4892-835c-c81045c566d3",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9a78dd20-5155-4cc1-acdb-384695679159"
        },
        "item": {
          "id": "faa14336-9ef1-46ce-bbcd-0c67bb6e9721",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "321ad337-5655-4087-bc2c-6a221a80c446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db22c93-934a-4092-b711-9a82bc8dd5e1",
        "cursor": {
          "ref": "f5e4b351-ef66-488e-953b-788f7940d4be",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "031e9a3d-be80-4bde-a17d-8caaa769df49"
        },
        "item": {
          "id": "5db22c93-934a-4092-b711-9a82bc8dd5e1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a4ec89ef-ede2-4d09-a828-ba0c7c9ac40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d7f481-fd18-403f-b3c5-26d3ad5c9959",
        "cursor": {
          "ref": "f348dbb9-08a3-49d0-9ab1-cd73b87d9036",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7eb01ca2-b0ff-43c9-b954-f6c986efe409"
        },
        "item": {
          "id": "c9d7f481-fd18-403f-b3c5-26d3ad5c9959",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "acbfc157-d5db-4c93-b3a2-1ff1402c15cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3930e0-6b36-45cf-81f4-a32801cfd9c3",
        "cursor": {
          "ref": "b274d2f4-150c-4f46-801d-2e64d44b4e5c",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "30852248-8f3f-476e-9780-af6308e3c00d"
        },
        "item": {
          "id": "db3930e0-6b36-45cf-81f4-a32801cfd9c3",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "80467f20-688a-40d6-9ea6-0bf8551cfe84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d3872e-1f6a-4081-8cd8-5469184e00a8",
        "cursor": {
          "ref": "b3394342-f5c1-47d5-8d3d-de8555d79ae9",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d7f77a8e-3f77-4874-b3f8-3fa9c38db35e"
        },
        "item": {
          "id": "78d3872e-1f6a-4081-8cd8-5469184e00a8",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ed905af5-de7a-4f44-b68c-64c9e10620cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92958d78-e70b-4f9b-9f90-1afc4accabf6",
        "cursor": {
          "ref": "481a9b7f-0032-4b89-bddb-50be203b27f7",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "95b25e33-197e-4fd2-aaf7-6273a5573a08"
        },
        "item": {
          "id": "92958d78-e70b-4f9b-9f90-1afc4accabf6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a431a197-f296-474b-b61b-390e99bed98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90893a29-4c34-4204-9b5e-b9d27e882c12",
        "cursor": {
          "ref": "33d68336-9fee-47f0-a427-b6fd1853aae0",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b4030bcf-acf5-4d97-b54a-7827e4452419"
        },
        "item": {
          "id": "90893a29-4c34-4204-9b5e-b9d27e882c12",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ae00b82b-a2b7-425a-a16f-bab376c65faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09408a4-8dd0-41bf-ba14-950e703e7370",
        "cursor": {
          "ref": "d011d6d6-2c71-4d43-b6ac-c44cc4452523",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4fe09b48-58db-4cd1-9c63-44cebd0236e3"
        },
        "item": {
          "id": "b09408a4-8dd0-41bf-ba14-950e703e7370",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e127eecd-afa9-4bd7-9f1d-ea95b423d846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70870a0-5f6a-4376-8f2c-8af6328fb144",
        "cursor": {
          "ref": "a0cb15fc-26fa-4907-abd0-f51e1d748555",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "905e3124-63dd-4be8-8d7c-41155b0e6ac3"
        },
        "item": {
          "id": "a70870a0-5f6a-4376-8f2c-8af6328fb144",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4c2c4191-6b5f-4cb4-8297-8de6acb041ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0972940-1bea-4440-9499-8b8047a4fc70",
        "cursor": {
          "ref": "1fe963c0-ebaf-4e1c-9ae3-b6039fa07aae",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1b36e95d-22bc-4a70-98ab-6d7fc980e44f"
        },
        "item": {
          "id": "b0972940-1bea-4440-9499-8b8047a4fc70",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a8abdf2e-c38d-4762-b3ab-4918479dbf31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3cfd9e-c7d7-4a6f-85f3-a8da59c06f61",
        "cursor": {
          "ref": "b2a9681e-235b-4aa8-986b-5bafcf494658",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "aca72329-4b16-4e68-ac1d-a86e58aa1304"
        },
        "item": {
          "id": "9d3cfd9e-c7d7-4a6f-85f3-a8da59c06f61",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1f37b01b-d8be-4b51-b4dc-a779a95da5f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5440939a-39e7-4293-b1d4-3b3e7c41aa41",
        "cursor": {
          "ref": "8c78e565-d723-4d4e-9a7a-80f92e893943",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ffc4c4d3-86bc-47c0-9ebf-4d02c381378c"
        },
        "item": {
          "id": "5440939a-39e7-4293-b1d4-3b3e7c41aa41",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "dd72f356-1d5c-4e68-9dd1-4d44b7d6d2df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846e80e8-7677-4b39-9b76-5b788306a528",
        "cursor": {
          "ref": "79d6e35f-f673-47c9-af90-9042041ce204",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "819ed688-380c-4dca-a4fd-c91e5098ed68"
        },
        "item": {
          "id": "846e80e8-7677-4b39-9b76-5b788306a528",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b4ee4a38-c8f8-471a-878f-64fc0a5439cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1bcc0f-f0e0-48a3-a102-b6d5aca1c4cc",
        "cursor": {
          "ref": "c7c34cfc-51cb-41bd-b7b3-06503f677c3d",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6aadbcbd-5a01-4ebb-b088-27c56da303bc"
        },
        "item": {
          "id": "8c1bcc0f-f0e0-48a3-a102-b6d5aca1c4cc",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "789aab2d-29dd-42fd-b436-3d1dfb581779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b08b82-c170-466d-93d3-658766a7fa7d",
        "cursor": {
          "ref": "6c3d927d-b6ac-494c-b056-baa526571c64",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "52a0f0ac-e294-475f-93d9-f184087c8325"
        },
        "item": {
          "id": "80b08b82-c170-466d-93d3-658766a7fa7d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b5e8bc66-35bf-47f4-bdec-6001b0b5b4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484634cd-4086-4d1f-9e60-f4603f98a5be",
        "cursor": {
          "ref": "35fa1570-28b8-4019-b878-3d9612f5aac3",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7877f521-0cda-455f-a126-86c8890d908e"
        },
        "item": {
          "id": "484634cd-4086-4d1f-9e60-f4603f98a5be",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c8c30963-333d-4449-8cff-29e643845e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e961e3-99cb-402b-b900-71e055b7dc47",
        "cursor": {
          "ref": "1918b8c0-4d7f-466b-81c9-c150b57bf49b",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8a402f02-853d-4b66-8934-3ccfef3cfa46"
        },
        "item": {
          "id": "b7e961e3-99cb-402b-b900-71e055b7dc47",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e828d6db-5785-4e17-8ecb-872eab0196f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967ad612-07d4-4795-9593-0f9e8fbe46c7",
        "cursor": {
          "ref": "f8760639-b8cc-420a-b020-0fdcb257a41b",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e6e5115d-4d9b-4e9f-97dd-f5df06949fc2"
        },
        "item": {
          "id": "967ad612-07d4-4795-9593-0f9e8fbe46c7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f3d51af0-a20c-48b6-8a37-08e36049c463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1f1008-825a-4222-acdf-10f64fce0671",
        "cursor": {
          "ref": "736d1108-2680-4d42-a306-55d96a78667f",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "23be1540-52ad-497f-9a9c-db770a71f14b"
        },
        "item": {
          "id": "7b1f1008-825a-4222-acdf-10f64fce0671",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5ddb451e-40a5-453e-9c24-2c023fb0f9dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445d1670-3308-4cba-a574-66f937a03d85",
        "cursor": {
          "ref": "f5050bba-ede8-47bd-bf1d-575bbf5f2dfa",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "741ded49-4e25-40f4-917c-310dae711974"
        },
        "item": {
          "id": "445d1670-3308-4cba-a574-66f937a03d85",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c499e39e-89c4-4046-b6bb-d6383b00b043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc1970c-b88a-4611-97c8-54db70b5bc64",
        "cursor": {
          "ref": "757fb65d-016f-4a89-8897-99ae7555df34",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fe332a84-5cb6-4e3e-9dba-49a641cd9d9c"
        },
        "item": {
          "id": "0dc1970c-b88a-4611-97c8-54db70b5bc64",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d5e1cf3e-744b-4977-87d9-3980803fee04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59982554-f2b1-4bb5-a22b-17bd21a7d330",
        "cursor": {
          "ref": "606807a1-487b-41ab-8bf7-6418b863fdf7",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4dcb9d21-2b03-413c-bb14-965073b300d1"
        },
        "item": {
          "id": "59982554-f2b1-4bb5-a22b-17bd21a7d330",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "07372274-29b2-455e-9da3-0de1534ceb52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0310582-47f5-446f-8a33-aa7ca225eb86",
        "cursor": {
          "ref": "38d80365-727d-4cb7-ac5f-d91c9a197cb7",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2ad8879c-8904-4bfc-8aa6-bf8f3ce4782f"
        },
        "item": {
          "id": "c0310582-47f5-446f-8a33-aa7ca225eb86",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "80c118e8-5970-4b2a-ac49-6cfef43282da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be2cee3-bf37-4046-92ce-41b1d85706bd",
        "cursor": {
          "ref": "f3c736d5-e87b-46b5-a50b-db43ba9bd4f1",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3384197b-9639-4c6f-97e5-a39937ff3525"
        },
        "item": {
          "id": "2be2cee3-bf37-4046-92ce-41b1d85706bd",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "126853d9-8536-4148-b62b-28f9dd6fd885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364cb899-2e2d-4ace-abbb-868d7bfaef4c",
        "cursor": {
          "ref": "952e6e68-8e00-4140-b032-f133114e378e",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d91b974e-e33e-40de-af4f-acbadb24d7cf"
        },
        "item": {
          "id": "364cb899-2e2d-4ace-abbb-868d7bfaef4c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "41818700-ff4d-4a4f-a208-ae397a1b50c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81630395-ebef-4af2-b5d8-1d04e2bfacad",
        "cursor": {
          "ref": "a9442fd8-1acd-43e3-a21c-daf5ab1d6bca",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "778389e0-1565-4aee-aa13-38ea5ad06536"
        },
        "item": {
          "id": "81630395-ebef-4af2-b5d8-1d04e2bfacad",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c1cb0401-0930-4dc9-acf7-9180a5fb4cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8624af7-e26a-4936-b19f-f36ca6dc4784",
        "cursor": {
          "ref": "7b85ebee-82ee-455e-b634-b870d7f7659b",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3709b94d-df45-4673-b895-2cb2bced4309"
        },
        "item": {
          "id": "c8624af7-e26a-4936-b19f-f36ca6dc4784",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a0c58a58-0fab-42ac-9765-33fbd1b03531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b64732b-c80d-4833-a539-83434f6178ee",
        "cursor": {
          "ref": "2cafd3c3-87bc-4192-8fa4-b6b55163ba4e",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5daee90b-e667-4e28-a65c-766c1acf4a07"
        },
        "item": {
          "id": "8b64732b-c80d-4833-a539-83434f6178ee",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "07c7d8fe-dd34-47d9-956f-2e6ebcdd5a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af9910d-ccff-4c59-9c2a-9b4f135a87b3",
        "cursor": {
          "ref": "e5d1b9fa-ba01-4913-97fc-f704a9f3a42c",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "995aa949-d6c6-4f81-a712-b95ba07cc1be"
        },
        "item": {
          "id": "6af9910d-ccff-4c59-9c2a-9b4f135a87b3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "699f428f-671b-4fa7-804b-e5ec103e1c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef586adc-90b8-49be-bfa1-28badf18b0a1",
        "cursor": {
          "ref": "baeb9c0b-90ad-4b54-9c03-20251b72ee97",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "fe723934-7be5-4301-bd55-4f6c26b6cd71"
        },
        "item": {
          "id": "ef586adc-90b8-49be-bfa1-28badf18b0a1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "48a5023e-ec79-4312-acb7-ec4d59e62ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d12fbb-e16a-4db2-85dc-e905980dfec2",
        "cursor": {
          "ref": "f8371e3c-68af-4970-a86e-66018b3f8242",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f4d75a0e-9e1e-4bd0-b3e6-9e3804358af5"
        },
        "item": {
          "id": "f5d12fbb-e16a-4db2-85dc-e905980dfec2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a1925ddb-2167-4548-8e52-18742f6cd2bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69af71db-416d-4cde-9a46-dd2deebffd27",
        "cursor": {
          "ref": "08e35bbe-ff10-4717-b3d0-672c6949b1dc",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6aaf10eb-6876-44ae-ae03-9f2e14c9ef36"
        },
        "item": {
          "id": "69af71db-416d-4cde-9a46-dd2deebffd27",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5aa68ff8-60c6-478d-bac4-210bd03a3645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84b430d-6952-4bff-8b2b-bfb615136445",
        "cursor": {
          "ref": "1cb12a52-6be2-40ef-b628-48e63f1b180f",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c95a8e03-2cef-4040-a787-2d85981ba22c"
        },
        "item": {
          "id": "d84b430d-6952-4bff-8b2b-bfb615136445",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3cbb8f5d-158e-4f21-a34c-ebf3b061d9aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb6695c-1234-41ae-a14d-f7d0b66e9874",
        "cursor": {
          "ref": "24aa1f27-3b42-4c02-9a63-232b1cdd9773",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "49c1cb4a-d6fc-4d9b-8ffd-4171836648ef"
        },
        "item": {
          "id": "0eb6695c-1234-41ae-a14d-f7d0b66e9874",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d833b5d1-4009-47b5-a772-6c53dd831a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3696ae-faae-4a20-95c7-826a64b1385e",
        "cursor": {
          "ref": "75fe9620-15fc-4fb0-89ef-37f84eb044cb",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "80672ba4-bafe-40ee-be4b-c198887651f2"
        },
        "item": {
          "id": "5e3696ae-faae-4a20-95c7-826a64b1385e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2b0a628e-ee89-49a1-8941-1543f1ae3491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6ee5cd-9ed5-4db6-93b8-b8e70c215a2d",
        "cursor": {
          "ref": "097bb7d0-6ae6-456c-84b8-4e31b8a1def9",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ce0b06c6-5f4a-49a3-b58b-e78fcdd155fa"
        },
        "item": {
          "id": "df6ee5cd-9ed5-4db6-93b8-b8e70c215a2d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7a9f09e5-55f5-42f7-a463-144e23b7dd6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cdfc39a-e9c1-4439-b404-5142a629a6e7",
        "cursor": {
          "ref": "d2d2f432-0e8a-4cc0-9fd7-da4bd7f651e0",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1992bdb8-da57-454c-b700-de87e8f0386c"
        },
        "item": {
          "id": "3cdfc39a-e9c1-4439-b404-5142a629a6e7",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6e5dd5dd-9373-4ae4-a229-fa511d58e946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd67072-9c54-4a06-a368-2db008ac932c",
        "cursor": {
          "ref": "5bb31123-2b43-45a4-a725-5bb98567f1fc",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "03a2e470-5e03-48f1-9464-eee2d018371c"
        },
        "item": {
          "id": "5dd67072-9c54-4a06-a368-2db008ac932c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e9610f0f-d1a6-4c8a-9519-7cff840d0f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f9e279-a315-47c4-940d-39315f232316",
        "cursor": {
          "ref": "3fb3223b-331f-4416-98d7-c33021db9713",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "65cff0fc-64fb-4cd2-b895-ab32f622d0a3"
        },
        "item": {
          "id": "c6f9e279-a315-47c4-940d-39315f232316",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d823dbb2-b2d2-436f-9e07-9730142c99d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d022b5-d0f4-4292-9b1e-f1966d466c9b",
        "cursor": {
          "ref": "de2454f5-b4ac-43fd-8f25-159a00005acd",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "573e814e-bbf8-4f9b-98bd-ed76fe0814d6"
        },
        "item": {
          "id": "96d022b5-d0f4-4292-9b1e-f1966d466c9b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "443c77ef-291b-4b7a-96cb-d2bc88b3de1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05053def-d082-45a6-a99e-f085ee07ec95",
        "cursor": {
          "ref": "1b793f04-f582-4dcc-8d8f-0e174e4ec73a",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1e78ac6a-9173-4cf8-b0a7-494acf7a7c44"
        },
        "item": {
          "id": "05053def-d082-45a6-a99e-f085ee07ec95",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "533e3ade-8cb2-4fa4-b9c9-88e6e878b565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120c6899-ddd2-468f-b38c-d90201ed5387",
        "cursor": {
          "ref": "03dcfc81-2e66-4da9-99bf-fe19a7111d0d",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d9a3be37-0523-4891-b510-cd7cd0f8c312"
        },
        "item": {
          "id": "120c6899-ddd2-468f-b38c-d90201ed5387",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4168d4e5-ca3a-40cb-bd09-daaac1f87624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2af5f2-b350-469a-8054-9debd3537d20",
        "cursor": {
          "ref": "7e89b884-1c3e-4cb8-abf3-a80790b77eb4",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "781a10f9-5f3c-46ac-b74b-6e0474919083"
        },
        "item": {
          "id": "bd2af5f2-b350-469a-8054-9debd3537d20",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "434eea27-85e1-467e-853b-07a7ceb23309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b139387-5ced-4542-8ce2-0ee70082909b",
        "cursor": {
          "ref": "9be3b1de-30c6-4ac9-9984-390b32b2b73b",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "804c6de0-91f9-4acb-94d1-aff45db0617f"
        },
        "item": {
          "id": "1b139387-5ced-4542-8ce2-0ee70082909b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "86d34015-4c6f-44fd-9a10-76fc98194c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78865ec0-237d-4fae-a3af-7a5849b1312c",
        "cursor": {
          "ref": "dc47954e-ab60-4c5a-8d60-4d14bcc20849",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "048758ac-2ad7-4964-9ed6-e55f2d41e5f5"
        },
        "item": {
          "id": "78865ec0-237d-4fae-a3af-7a5849b1312c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ad8f96d1-fe61-4f93-847a-ec555f49f634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13fac33a-1550-4f91-b44c-65d457f477da",
        "cursor": {
          "ref": "c669a8cd-2b87-42e6-8c55-c1e37b5d9a11",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ff825535-edaf-472d-b0ba-ea4527c13156"
        },
        "item": {
          "id": "13fac33a-1550-4f91-b44c-65d457f477da",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1562eb78-f9ee-46e4-b702-c366e24a6093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8cad72-8910-4e0d-80d8-dd909457d06f",
        "cursor": {
          "ref": "2bb97adf-5a75-409d-8010-c3a52bdfb258",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "2f06f3b5-da99-4bc8-acb3-111d58bf7104"
        },
        "item": {
          "id": "1a8cad72-8910-4e0d-80d8-dd909457d06f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "be7feea5-986b-45b7-af46-2811618d3335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9edeb754-fea9-4d8d-be03-f1ff6d5bb14a",
        "cursor": {
          "ref": "320ef1fa-a9d1-4664-b25f-7fdf3bc8bd22",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "5f96913a-cad3-4db7-bef2-e4e3833ce15d"
        },
        "item": {
          "id": "9edeb754-fea9-4d8d-be03-f1ff6d5bb14a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9468c4a9-64c5-4b6e-93be-6bf12cbedf7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dddcc27-e38c-473b-bc44-cfa3a596fc59",
        "cursor": {
          "ref": "b42f1e89-caff-4e94-a4f8-553b403133c4",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "99d58355-6c60-40c6-8576-8b5b539a97e8"
        },
        "item": {
          "id": "8dddcc27-e38c-473b-bc44-cfa3a596fc59",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b8afc60c-e39d-4d3c-84fc-c91fb5523c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2c42d5-4b8f-43af-80be-80c8a76e31a2",
        "cursor": {
          "ref": "b9c95036-4acf-4061-88d4-6e635c049d4e",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "dbe3da3a-c166-4b67-8f84-7c74aa308ecf"
        },
        "item": {
          "id": "ae2c42d5-4b8f-43af-80be-80c8a76e31a2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ab8526ac-48da-41ac-8521-760c35611baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0574e3-c1e2-4868-9531-54eba26a96ff",
        "cursor": {
          "ref": "d948fc69-51a7-4ebf-b44d-baa1490adeb6",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "e3a8ee71-1000-42b5-ab5c-8ad93b864a99"
        },
        "item": {
          "id": "4b0574e3-c1e2-4868-9531-54eba26a96ff",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b7c7cb87-b44e-4115-b2ab-5c29df7a720f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5e3094-0be6-4940-a8aa-27c729ea24ab",
        "cursor": {
          "ref": "bdf025b0-96c8-4526-90ef-ea64eda14ab5",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a63dd399-e55e-4270-9bc0-6c0b16865f1f"
        },
        "item": {
          "id": "6e5e3094-0be6-4940-a8aa-27c729ea24ab",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5ef4aedc-2443-4c1f-85c2-567d55395d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2f6e69-b0cc-4c59-9eec-db3c1106a666",
        "cursor": {
          "ref": "41bee6c1-3617-42cd-b486-fb802b80ce93",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "64cbe0fe-c2dc-47e3-b569-46d46d615d62"
        },
        "item": {
          "id": "9c2f6e69-b0cc-4c59-9eec-db3c1106a666",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "712c7254-0101-41d2-9c6b-10065fff5880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e1a084-df9b-43f9-a098-debe6d52a8bb",
        "cursor": {
          "ref": "b5407d66-ec7b-4031-a0c4-0bd0d9c09f0b",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "0d1da2e9-3793-4e79-84ad-ad3fbd8a2586"
        },
        "item": {
          "id": "63e1a084-df9b-43f9-a098-debe6d52a8bb",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e6b8c851-d9ce-4482-913f-ef7a9d681bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb989f9-dcf2-4bd5-b6ed-261ea6306a7e",
        "cursor": {
          "ref": "f183d30c-552d-43e8-8925-7c8a7f2cc1a5",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "94d162bc-a2c2-4a73-b0e5-68211b2b3f55"
        },
        "item": {
          "id": "4bb989f9-dcf2-4bd5-b6ed-261ea6306a7e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d3813766-e36b-4259-be7f-c59f10cea286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85750087-ef5b-4679-8efc-e15d08a80b96",
        "cursor": {
          "ref": "63fa2091-aee3-45fb-8cec-b4e00cb00d93",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e07de475-6c17-497d-b354-ef12fc0155ec"
        },
        "item": {
          "id": "85750087-ef5b-4679-8efc-e15d08a80b96",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6316b2d8-0825-487a-8874-9fcaaa0a7898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e64f22e-178f-46d8-a8e2-61ba80b2fe6e",
        "cursor": {
          "ref": "55317f3b-0514-4a62-b361-d52e64b7578f",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "11655553-a27a-4e7a-a595-d0bccc37e378"
        },
        "item": {
          "id": "8e64f22e-178f-46d8-a8e2-61ba80b2fe6e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6f64dfcc-c3a1-4ed1-8351-c51bac6098c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c16370-7d3a-45fc-b459-8a8510e8fca3",
        "cursor": {
          "ref": "6aabba28-7d23-4c3b-9a81-079e03c2b2d2",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "e8a27da1-b941-466d-951e-0afd63b42aea"
        },
        "item": {
          "id": "f7c16370-7d3a-45fc-b459-8a8510e8fca3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3bf96daf-f77d-4d5c-a380-e9dc1c07eeb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84671ab-a585-4691-a06f-e0283b596e62",
        "cursor": {
          "ref": "a9a24afe-1623-4be4-85d5-ab530552569b",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "8a0fadaf-902a-4d80-9c3d-0b3fadd2cffd"
        },
        "item": {
          "id": "b84671ab-a585-4691-a06f-e0283b596e62",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "481b329f-2ca2-4e0e-b0d6-bdafb5e8074a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f1007d-c878-45d0-9b9f-ffb1d5e01825",
        "cursor": {
          "ref": "00857837-50e5-43ca-9729-7090fc672333",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "5c0a6307-c4b8-4b45-83b8-188671a6ac02"
        },
        "item": {
          "id": "c1f1007d-c878-45d0-9b9f-ffb1d5e01825",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8020864f-8547-497c-8994-601fff5fb296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da36d8eb-7995-497f-a76c-50c8c30ad263",
        "cursor": {
          "ref": "cbbc8247-ec54-4360-8751-65461f04acf9",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "edd38020-c740-4ddc-a26d-770f928902db"
        },
        "item": {
          "id": "da36d8eb-7995-497f-a76c-50c8c30ad263",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b3bdbc1e-3442-4c32-8682-f7f6f2e03f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca75c965-b73c-459b-9ae1-1d5616fde3f4",
        "cursor": {
          "ref": "577ef069-4596-4f69-afe7-a410bdbee970",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "51111811-75e5-4691-9b3d-862cc534458a"
        },
        "item": {
          "id": "ca75c965-b73c-459b-9ae1-1d5616fde3f4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "66a88bec-cc3c-416b-8c28-3a22bb078081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a33045-e741-46ba-b3e7-173c95ca34f8",
        "cursor": {
          "ref": "f39b3202-09b9-4a3b-96e2-edeabc2a1a63",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "7457e3b9-24af-43d0-b204-5ceafac5b545"
        },
        "item": {
          "id": "96a33045-e741-46ba-b3e7-173c95ca34f8",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f9319098-8a21-45e2-b4f1-6370b9cebd4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c557fa0b-c7cf-4564-a133-b4938461d8ba",
        "cursor": {
          "ref": "1847c13d-caa4-4e55-a272-5e0b4eed27db",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "613795ae-b703-463a-be74-956cc6f9549c"
        },
        "item": {
          "id": "c557fa0b-c7cf-4564-a133-b4938461d8ba",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8075afe8-8cce-4fd9-aa58-49294fc24534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909b5b81-cbc7-46eb-a8eb-e4226783af77",
        "cursor": {
          "ref": "19e5daca-3c86-4c62-a7d4-d0766a56da7e",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "bc948f33-0ef2-4ddf-9f26-5cb880f9e18e"
        },
        "item": {
          "id": "909b5b81-cbc7-46eb-a8eb-e4226783af77",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6d42def5-f9f1-45d0-ba9b-2d70f2e60f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6eb5fd-3f9d-4b9d-ad9b-b36c3d8c9fe1",
        "cursor": {
          "ref": "5a02db79-b936-4226-b848-c97b34243bfc",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "6405ca4c-f0a6-428c-bfcc-1d85cc2c4dfe"
        },
        "item": {
          "id": "1b6eb5fd-3f9d-4b9d-ad9b-b36c3d8c9fe1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "48fab36e-11be-4f8e-a6a8-88c0c2f66141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80810f2-8bbc-417d-b932-6f106af585bd",
        "cursor": {
          "ref": "af7c0f57-a315-4378-b618-de4e47451ee6",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "7ff39b72-0e7a-44b2-98e7-6774faf540c0"
        },
        "item": {
          "id": "b80810f2-8bbc-417d-b932-6f106af585bd",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d564984a-33c8-4d15-b2d2-1fbf05d2ec9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8ada1d-1185-403c-a638-59ecdd971550",
        "cursor": {
          "ref": "12eb7783-d3c2-4d62-bed3-151de7f0635a",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "199ef9dc-275b-4866-9acf-d90eeb4055cb"
        },
        "item": {
          "id": "bb8ada1d-1185-403c-a638-59ecdd971550",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3ccf7240-7423-4527-9404-a102db2ce0ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54bbcc8-c648-4e97-9f65-903c22d26a1d",
        "cursor": {
          "ref": "cf79327d-d6a2-4845-8833-100b47dbcd51",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "12194dc5-8da0-4b0d-bfba-a49d57d0512b"
        },
        "item": {
          "id": "a54bbcc8-c648-4e97-9f65-903c22d26a1d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "48f6f1fc-7af1-4881-b640-b0bece923858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff79e656-1a66-4d70-bdca-9f424b51c834",
        "cursor": {
          "ref": "b2f9768a-47f9-4744-8943-a13a9f8e81a2",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "b1745713-5351-4c81-ad7c-3e7f24b60a29"
        },
        "item": {
          "id": "ff79e656-1a66-4d70-bdca-9f424b51c834",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8b9a6fca-7818-434f-bef0-5efda80007b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f978dc-737b-4736-b649-585f9d895a5b",
        "cursor": {
          "ref": "01ff14e8-f21f-45ee-83ae-40d9af0a3a5c",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "760ec308-26de-44c1-af5f-aa33c580fd7d"
        },
        "item": {
          "id": "a9f978dc-737b-4736-b649-585f9d895a5b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "94b25bf4-2245-4007-8699-e260681efae2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cba1f5b-a23e-4d13-ac18-d41229938c3d",
        "cursor": {
          "ref": "1e445c08-2895-4c99-ae97-4458508c7b41",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "cef8b728-7496-448a-995c-32013b2870d7"
        },
        "item": {
          "id": "4cba1f5b-a23e-4d13-ac18-d41229938c3d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "efb00ad1-c7b4-4a66-a08e-f523a54fbc82",
          "status": "OK",
          "code": 200,
          "responseTime": 4,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea09a2a-e4d1-432f-a7b3-4fa29a82eb29",
        "cursor": {
          "ref": "b4697b43-1b08-4bad-9706-6e779a92db62",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "a1a3b854-4d5e-444f-a00c-3af4e11b098f"
        },
        "item": {
          "id": "1ea09a2a-e4d1-432f-a7b3-4fa29a82eb29",
          "name": "credentials_verify"
        },
        "response": {
          "id": "53022120-94e7-4e2c-a282-1fb0702c0760",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e372a6-fa8a-4286-b697-bd07edb21eec",
        "cursor": {
          "ref": "3dbd9c01-f04c-497c-811d-4080e75f5e17",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "fa71389d-244b-43a9-9341-48ef08366727"
        },
        "item": {
          "id": "66e372a6-fa8a-4286-b697-bd07edb21eec",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c70d6782-0602-4b96-a22f-9bff1595f7dc",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb6c44e-665b-45be-a6bf-a335a15d94af",
        "cursor": {
          "ref": "f49ccdde-066f-42f4-b429-c9ff05477d35",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "77475ba9-9af1-46d7-850b-bae8e5352963"
        },
        "item": {
          "id": "0fb6c44e-665b-45be-a6bf-a335a15d94af",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d11780d1-48f5-431e-96f4-75e1323bb0aa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb6c44e-665b-45be-a6bf-a335a15d94af",
        "cursor": {
          "ref": "f49ccdde-066f-42f4-b429-c9ff05477d35",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "77475ba9-9af1-46d7-850b-bae8e5352963"
        },
        "item": {
          "id": "0fb6c44e-665b-45be-a6bf-a335a15d94af",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d11780d1-48f5-431e-96f4-75e1323bb0aa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97ffc5f-ec10-4c82-8549-d4ee3d496587",
        "cursor": {
          "ref": "fb042b5f-5176-4a3b-b70c-8faac78faae3",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "51f9d6f5-73bc-491e-954d-3757e897d0ac"
        },
        "item": {
          "id": "f97ffc5f-ec10-4c82-8549-d4ee3d496587",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2ff71caf-a2cf-4e6b-98e9-9d7b7c3ea250",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9316ee9f-1e3c-464a-abbd-e24aa191dcf4",
        "cursor": {
          "ref": "13daafbc-902f-42fb-942d-2a7b00304f93",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "06525fb3-d872-4f9e-a632-4e04dbec03ca"
        },
        "item": {
          "id": "9316ee9f-1e3c-464a-abbd-e24aa191dcf4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ea6b87cc-ec3c-42a3-959e-9ed99a9dae65",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}