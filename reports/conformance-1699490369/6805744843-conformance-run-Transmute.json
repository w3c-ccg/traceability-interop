{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9bf94cea-06db-4ae5-8ad8-f314ee36fa78",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a4d29ceb-8c52-42c2-a236-c18f1f9cc029",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9dba6f5c-c0e3-47a7-89b6-743443f288b0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "00d50181-217f-4bc6-8a5b-7ea704944a74"
                }
              }
            ]
          },
          {
            "id": "4636482c-1ba4-43a0-9ff0-d42dcb6384d1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fe5c3bd3-d363-42aa-b2be-e739d53e707a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0ae5bb30-126a-48dc-ab7c-3802f5ff9f78"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9c01799e-eca3-4473-ab4d-74557e8d23fb",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7acb6d51-3e3d-4e5f-8ce5-ec2d9e256e62",
            "name": "Positive Testing",
            "item": [
              {
                "id": "14cacfad-3ae2-4580-a4f4-6fdff8532f40",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26a2ac79-77ba-478c-af25-47a8033a2795",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ec38f2e4-58c8-4e85-a9d8-577703919d89"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ded1364b-d1eb-41dd-8b7e-36fe04dbf0bc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b28952fb-b9ab-4b68-b902-d1e0d3ce25b6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5d04c9b3-d3fe-4fe9-9506-df7684ab3b50",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0958e651-522b-4895-b46d-006012a5b69b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "62e3e4fc-3c7e-43a6-8737-ba96f98cc8b9",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "61a3c988-5597-468d-a583-0e9b0b43b1d0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "324b9e8e-6ec9-4fab-9490-57d2c7f6649a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43bbff67-8538-47c0-a268-b6cf1ffc9c07"
            }
          }
        ]
      },
      {
        "id": "7539f8c3-bbff-4027-9abc-3f7ca06e8a07",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "71061413-3f23-41de-b3f6-7281e717766e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da0633bb-eb74-4420-b71a-bf7959b9edea",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9ef429fe-3b2f-40a2-b3ca-b41ca1098fad",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84582830-2cb3-4c96-b29b-a78009583253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7bc4ebb5-0d05-4e2c-8c2d-557854a9609e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f86ab6-3eca-4cd3-9fdd-a6c49d18c39b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ebaaadb-7bf1-4bad-b05d-f007c8fd3268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e97983bb-d8b5-4fb0-a33f-b62a7e285c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b5c6f5-6745-40f2-bb5e-e81adb246be0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0595880f-9ba3-44f8-ac00-aa01ab3021c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2b91622e-b7ea-431a-b6a8-bd1ef391ddbb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "43376677-a63b-493b-a73a-4a16bbe193e5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "15baf8e1-dfb2-4ab5-9384-fb9cda05f786",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4f9036-bafc-4739-a3bd-714a5a69daf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8a8e1d1-5e84-4d5d-9cab-99ac7b5e931d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d246ed2-9238-4404-9427-e9906c2af127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40940b5c-56f5-4513-a6fa-7918a480c9e9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cff0a385-db12-4dde-9e20-4e6e8b6168fa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b49703ae-3dc1-4929-90fc-cee7cf21e88f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "34c1d0c9-4328-4aa2-b2eb-57c6dff3b5ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b2d9fc7d-8bca-4c7f-b861-9ea73f659567"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2cde0dc8-de23-48e0-bc8d-25b89ed9eff4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6740fa3e-8c67-41bd-a4da-9c935fde8b01"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce6c9575-d8a6-4491-ae68-a8aa6a590a06",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "01b44344-bab6-40e2-9598-6c9176ec0e94"
            }
          }
        ]
      },
      {
        "id": "9ea5ef53-ba87-437b-a0b8-a3c8134c487b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d782d8b7-2ea8-4343-8404-6f67b493153c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "337e7285-9650-4a3a-ae5d-bba77a7c860c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f3520af0-77ac-4083-af23-3fce7a6b8dac",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0156111-d5c0-4079-89c7-492a4dce9f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7506c0c4-774c-4856-b6de-e8d8ee701a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a7d0df-1d88-4870-bdb7-591a58760e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cab63d32-ba25-4cd1-959d-658c5f423e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79eb5117-89ee-46bf-8591-166283b1d45a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3cc206-a736-4ebe-8d77-821314a08e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798eaf94-37f8-4ac0-b257-989640a68be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4212456d-d5f5-43a2-92f3-c7544899c64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae8ff46a-a4aa-49df-a8ff-d92035c2d122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c878929-7cb2-44df-af69-8bb3a6f04cf5",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1800d7f6-005d-4277-bd90-7db55a5d8599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f6c4228-8121-4460-a53b-b2fb89a95ca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69787968-8b6b-4f15-b19b-1339cfa24060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9378cd46-ecf6-4ced-8d91-e55cb1f10076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3580eedb-0082-4fd9-8cd9-1bda44cee37d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070a98ba-e949-4f9c-b7a5-6218807ced51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7043e0d-555f-4d3d-8956-4223051cfbfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa7d390-7852-42ed-8eb6-1527fd276d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72293927-7003-4ebb-9122-72e3b7b145fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bd63a2-cffa-4841-9ff2-5e5500d21a4d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc995d3-6cb8-4d0e-8d39-0987539b6d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e88e03-3c2a-497f-a13f-df3fe8d32141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d6a2d3-84d4-48c4-bf10-1917af001ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f91cb1ca-00ce-46df-9f88-54c0139b036f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2930e1e6-f815-4c32-9f02-1768fcc69303",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43928f5f-7f78-4e7c-aff4-ee5ab809a2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c453ba0-e9b9-437d-989d-9daf513a8427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a772904f-cd0e-42de-896f-258663306eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdd856ca-b397-46d3-9100-bbbbfd1c44d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ddb7489-f9b4-4216-9e2b-f7b7c5dc22fc",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c5c6e0-46e1-4dc2-986c-caffc659b549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3819eeac-bfd0-497b-9b0e-b703c41579ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6444ca-8843-48ad-a1b0-df5f7178d894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b10485e1-e462-4f77-bc30-f65b009f240f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af9d5f7-9786-450d-8daf-9c21f782b0ef",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6393e087-3899-40fb-93f7-ffaa84db2977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df7a8239-cf54-4276-98c5-ca27305ac91c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de4dbb1-5825-431c-9c23-a86ec02ec20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "691410ff-e35c-4792-a8b3-4876013870a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59dc7ec6-8d1c-418a-be72-42cb4fbe6c6c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af112661-2e58-41bb-a3d4-ebffba2a7678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4bb7dc4-d4ff-4369-be6c-4db21a509020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f230230-f71c-4e4b-a260-5bafa62366ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d2704d8-2029-40e7-b69f-7283a78e764f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6749e9fe-7aeb-4787-8699-7fc092719f6f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f310bdc-b399-4a1e-91e4-4f640afc93c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa4addb0-f29c-4aff-aae3-c73e562fe2cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62991dfb-f29f-4e80-9be3-a0de40fdbe7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afa5dde4-4329-4717-af13-d9e263a07a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a8be94-138d-4020-a4f8-0dbb0b28fea1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "990e197d-9101-41c5-a531-84f65d5a9e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cfb2aef-6afb-46fc-be8a-f67e4b0e0e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87624f93-9763-4460-9d29-b4b4510da2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ae7596f-4250-4cff-bd41-352e95f5cd16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41fe81c4-b20b-42f8-a05b-e266a64dffb1",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ddda86b-573c-4fc1-8635-77f337c054d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "278d29ec-d0ae-4104-bfe7-4b04e375257a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76d9601-cbe5-4067-9a2d-7680be775feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6dd13919-ba54-416a-9676-4888a7b82982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "725bb1bc-163e-4e09-a53c-1fb3bd909312",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47add0ef-92a2-4bf7-8824-1257c55a4f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e29837-b81c-473e-9434-8ce448c36249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5fdce10-b598-4fe4-84b1-cf2e3933d575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1a24cfb-76b8-4013-b084-e202ba5fa9d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef0bfe8-06c1-4b69-b234-3eb0726924f6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f84535-d8ea-4109-a38b-b4939c9f8d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798747f7-7b24-4d3c-8a93-3876b77ecf55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa56c37-fd16-41d0-a673-e36ce8d07a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af89b72c-d18f-48db-baef-ffc55c0f180a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4c9a40-1b3f-4910-bc2b-3431bd919b25",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5980dab9-c719-4091-8fee-f2c604672d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "144921dd-9e05-44e3-9fab-572f1ddc4d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757280cb-7218-4d37-8f34-7ea3ea0175d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "caad1b0b-9bcb-458d-9d17-fc27514556b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6414a5ac-b231-4a96-8ac5-00c13d6a33bb",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02fdd2d2-86e7-48f0-b136-6fa4fde1b4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "133b5200-9421-4881-bf40-9f4f647de537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b359f4a9-5b25-47bf-967f-95d1f67bad56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53662049-c1df-44f3-8f91-22225527c2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c280e439-1175-4db2-91f3-5bbac4e641df",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65016d11-e0f4-4ccd-a915-78114eca8540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6706354-8f7d-4710-abbc-e729cdd8749e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc9ecab-12b0-4e01-875d-5a6f97aaa1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3469931b-d7de-487b-b400-94ca1b551998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2146af1f-4179-43cf-aede-17a3c66091c9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7eb988-e85a-439c-b340-0eddb49907a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7e15af4-f9bb-4492-a176-239e7570e0f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416fce1a-d724-48c5-b556-b888fa2538fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d62827e3-f4fc-4b9b-95b3-48027a4ae0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba88f4cd-abaf-4362-882b-6d3b810a348c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb6f249-ab66-4f3f-b244-a7e1387ed5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3f892c8-67cb-4ab6-a143-a9d26c87e29b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553c9768-d248-45e3-b8b4-2d84fa9c9736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc9986a-261a-40e8-8a7d-6323204cb353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335dbf8a-e211-4bd9-81b1-138f8696b0fa",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04242a39-8ff2-4071-a4a1-541b9a1553bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42694d9c-dbe2-45f0-beb2-a88722d7a3da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cadfc116-7f36-4126-b103-4ce22e87358d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43b1fcac-ceb5-411f-9587-3f69f392c031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e3295f-3674-43b7-a54d-2b22c7608237",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d728452-cb85-405a-80e2-87517be7beca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e3b1cd-10ec-448d-b66d-057d1b2b2b2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb16632-c5c8-4ec5-9da8-c43a97635a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "213da48d-72b1-4ecc-8cf3-efd89b1afaad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfa89d6-cb2e-479f-8e43-5ce3374e74cf",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7307a4e4-b48f-44c9-a34a-8028595dde9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0847dc5-6c38-419a-bf02-cfc2d8352432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd569d2d-b719-44b1-a8fa-f3f55492b009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9d54003-effd-4136-a4e0-c28c9bb7f2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea978260-1852-49be-aeef-7080a2a689e8",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3fe3cd-88c0-467f-938e-7efc1e259662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb16410-3915-43c0-9a6d-c60a10cfc35b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de3597c-80a5-4cb0-a42b-2822193eed25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec08472a-2768-4692-b8fd-86f3a03040cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd2f7dd-92cc-4776-8970-63920e2b8f5c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb41b9bc-a8ca-43ee-a624-b12cfd507514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d7c9ee-be21-43fb-8c19-b6bf1222c57e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abb7eb7-ba0a-4b4e-af19-1ade3ae68895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3bd59fd-932e-4890-8948-ad051034275b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b7c654-1ffe-4792-875b-52c844f5c61d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "124758d9-b919-45b3-bc34-e44171e7ce56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b2b626-691a-40fe-b464-6aca390cc035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13dc722a-6024-41b8-90cd-c6c83a8c2af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a1ce3f8-1f77-4c5a-839a-04abd00c6423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b62304-dd32-4e8f-afee-307f5b8d5fdd",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e875353-8cb3-4710-b13c-3b826f957723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a49de1-e8fa-4c55-b2b0-8244c7d5f8fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3ac825-f522-4db6-87b1-b1f8c280bfd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "50896b89-47fc-4642-9216-cb1938dd9bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87889362-2c9d-433f-844e-037d008a2343",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ebfd2f-1ff7-4a30-bd9b-6e8638451dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af53b142-acf8-47ed-abc2-a0f6435138c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6102d71-e91d-4593-9841-57fd7b7a2b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c191748d-da88-442c-af12-471da92ec709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74dcf13a-e923-4364-9f39-9fac82443495",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4cbd77-ebb3-4664-a225-4ac8f983f1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aadc683f-b792-4623-9ac0-9260f10793f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7880767-fe67-49cd-bddc-8cfb26628175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "09244bcb-e397-4e0e-aa3d-b4fbd2b1bd64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82447c09-09f0-4a63-bab7-621cecf329d1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d30fed-ae7c-42f4-bc95-4f1eaa260d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4299a703-cf23-4da9-884a-c4e5c7b5387a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d4136b-d154-435c-8a6f-1e98671da472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "94e58673-a282-432c-8ab9-168d62b3e0bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb4cb52-6194-4a08-b8ae-ff3ddefe2199",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d60db6-49e4-4d42-8fa8-e79d735e7dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deaf1300-2137-4ed7-9e3e-cf433dd079f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e708b40-9555-430a-aa3e-cf0857525e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc1df661-9a69-45b4-b9b5-733d0242ca23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d47f1d1-e8ec-4f23-93cf-a1a4e1bf95d9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e71426-54cf-4d6f-99ac-cedd2d969b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee3c252-ba70-4f64-9d8b-8f6933c0817b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523cea2e-4b68-447a-b5b4-abaff61171bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "894d650a-1412-48eb-a3aa-cb5c7701f5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c53863-2f0a-40fa-a7b7-f5dee0ec5a94",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4607e2b1-a4c4-4e60-b2fe-ded132c9e6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e721998-0ba4-41ed-9405-7ef8c6099595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ca3256-c8b1-4998-a75e-9c2a3d3b3b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4228003a-d297-4137-b86a-78e59b634c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b751299c-0b14-40fe-bbd5-98fadf339f96",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf20138-7bea-48a0-82ba-bfd8270d53e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a78257a3-86c6-424c-af0e-375b9a978125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8b6940-f541-4689-b5f1-2444abef2b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e883c65-d8f8-484a-b715-7ea574253882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66cb819-63ce-4af7-89e6-0442b2d8e6de",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1871830a-c5df-4701-9aa4-70a84b6ea8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c77edb96-3653-4232-aaf9-ca37e9a5ef3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d3aef1-bb0e-4cc9-9063-8b69b3cd3d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f6607a6-6400-40f5-a024-0c0bae8c1402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc97284-d880-43cc-887f-3cce3fdf06ac",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd5411a-690e-4f1e-a929-241496079cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25eb46d2-3989-45ea-a5a8-3a3ea65e5751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2476e5f1-90bf-4858-b3a0-1408b3880e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "abba0482-98e6-4d5a-94d9-8ca3bcc94811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f46f2f7-39b5-42ee-b43a-ed4de17fa818",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3807f67b-2583-4cdf-9eac-d00812787abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb65c593-cc37-41e1-899e-a7ee4f31912c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ccbcfd6-79db-486f-821d-6bb0d80e2fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7db8366e-af9e-479c-b0ab-d1ed4dcb9016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d75acfa-b831-4a1a-9dc1-7a6ec2c56737",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff79a20b-0697-4180-bed7-759ac085d478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea31f032-05ab-4c72-8cfc-3f61358c17c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92c0c6d-dbea-4dce-b2ac-6f377705b6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f689358-dfca-4a52-af75-182e10054c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd7b1e2-85c6-4cb0-9739-c84d3f4fd53a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a856e858-7ef7-4d22-99a9-b7cf1221f4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ede46b7-3e35-4a2a-9724-f83b0d9ab2b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1121e806-e4d1-4c08-8e37-d62c92bbd64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "46aef245-2cda-41e9-abeb-ead1085cf066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb8044f-4bf2-4808-a906-34948f63cad2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c4e6b0-7775-4f5d-9b38-aa5125421b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91993ca3-a254-4c2d-80a2-025288e5e64f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abdbbe7-4211-4250-b1b4-6334a4bfbb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e08a0465-c4f5-485d-bffa-6c777ae08d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e0e5b9-8bd2-44e7-8aea-cb6b8a47422e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ae8931-859a-442c-8dee-04deefa076ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "715d2c2d-9b7c-43cc-8eff-0766e49e711c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbdb5a7-9fd1-4d40-9e7c-798247313bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "28885db6-ce3b-4bfb-aec4-27272d47b3d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e60565-db6d-4e56-81f1-854774748a8e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4951ff3d-7b6b-496f-bf37-71c655e358d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6d2bafe-2a06-45e2-9a33-f606585a04bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2a62f5-3c15-4547-a54e-804f20724d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "19362572-336b-4f1d-bb9f-77f4a8e00aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e014f0d9-f6cd-4d81-b4de-3dca6d21536d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00cbd725-5b38-4b5d-bbbe-85e8adfbde83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ebf64d-1928-47c2-9cb3-b5252f126a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ca814f-d08b-407f-8bd8-012337b3f3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "10405eb3-1352-41da-a7f5-f292287e57c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2663feeb-fb2d-4be1-a108-8d80672ecfae",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43cd172-4aaa-484c-9d18-2cd5cf5bdc48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a89c40f-cf4c-488d-a96e-4abaaf93f2bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313ef06e-f9d4-49ea-8deb-9e53f718fa5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "03cc246d-3f94-4a0f-baec-3871adf4ed18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbc63ac-4f3c-4f87-9a36-347daa43e0f7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19469872-d726-4eef-a4f3-8a97a1a9d525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd85370-dd0a-4902-ae42-b9d0dd4b11d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01fd98b-0ff5-41ac-bb0f-497dbd9511bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8c9ab7b-2924-49bc-8467-bce087a17006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03bc6aa-7dcb-4a8a-9420-6e0f5c3dc6a0",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cdcf5b4-563d-4a96-a4dc-67dada385125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "173fdbd0-5a8d-437d-904c-1ccd73754aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d702dbd4-12a6-4d72-b868-609bcedde0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c53bee5c-e796-4181-869c-7869bea02785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3b7132-e4ba-4877-83b3-b023b14506f6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d363061-e37f-4457-8923-d9d24c940aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9eb16ed-1d62-4c17-badc-bfd65df927f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ed18c3-8c3a-4692-9db2-69ad5887d61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "04a4f3c7-de11-4534-b43d-1e55f9e411a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb3501d-bdbf-4f13-a48d-eb8593f1f00d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d21dcac-79b6-480b-8ec8-214b73620faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3cde21-900a-4e63-a4ba-5fc46e39b878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9258e7cc-cb9a-438e-bbd2-738e2d52c734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df0f7545-32b0-42cd-947c-fa946c6d3a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c165e03f-19b9-4f0e-a33d-e71c794df31f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7f3b53-c399-41a7-8935-8b76c222582e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0586de15-4eaf-4408-a5ef-2111cd4a78e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c0f15b-29b5-49f4-a644-0d2f395206bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f11d70f-b66f-433d-84b4-0cceaa9d4e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c014472-39f4-43cb-96ad-29548747ca86",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d4f31f-cc85-4065-bb25-432d1c5924b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d512c59d-e09d-41b2-8723-82be8def7ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f013752-2c2d-4a36-be06-68e3ed6dd688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf88c70c-44e7-4d4b-97de-5250e3557aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73b23a0-0472-40ac-9092-647b8063fc4b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62c6535-0935-4758-9055-c4689bd79a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e1f15b0-4bab-43bc-9c53-d25bbed156a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f777962-926b-4571-a900-bcf9b7e91de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "271986aa-21de-4010-a6ab-92be4e84bcc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20654e44-b33e-4449-94db-e84c92742009",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e71291-88e9-4f3f-92b4-212867af00b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "100504a7-a6bd-488f-93bf-d86feff1bffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c89bc1-7fe9-401f-8fb9-35a9764029c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "da977023-254a-43fc-8e76-ef4f009483c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b26d20-c378-476d-830e-2559bbb1059f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "064bbe82-df1d-4d3d-afc9-32f602cc6b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecbe2e12-a0a1-40c2-b50b-470a21388259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2d9ff7-fe39-4286-9e23-6de336bf699b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b46cb3e3-5cf4-4551-b84d-d470bf0d60fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fccf20e-1276-4287-9b2f-7500f6d8c905",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6689f88d-c9a3-466d-b9b1-e8cd6bc17a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35ca3ae-2260-41d9-b65f-a114c14248eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c550889b-aba1-4ebd-bd7e-7bffd0a786a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9faf08a-d650-4bb4-9816-bf93933c10f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2293d8a-0a6c-4111-ae56-d45bf153f3a0",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1667c7b8-ba6f-4b9d-a636-c19409e5383a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61aebe20-feda-49d3-aef7-2a98e890a6df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c2c6ee-0f30-4e90-ad77-8a06604dea08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dac90892-7e36-4cef-a337-46ee80536834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c748707f-c905-4848-bc52-e32e62944162",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b13567-ec01-45ec-a693-ed9ab65fe751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf177e77-9660-4cc3-ae4e-e5e71ec29d13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70236f03-f16c-4381-8f71-b82107592856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ace34a9c-3748-4c07-a619-bccd4fa2ac6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43798d2d-16a0-4782-baf3-1af800345c85",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "393f8d95-3cab-4d26-ad32-074f251c7df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "883fbc33-7331-4468-834f-047519c26aff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de5e15f-9f6c-4189-8ce0-24ff549f38c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8426cff3-bea8-4f9d-aa89-6903f04d25a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6985d74-c7ac-40b2-9373-a9fbb9fa3a75",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c7a828-eeaa-4b51-948f-6fd19c65e886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46c59e28-8f28-433f-b4da-5c3ba26932a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d7f8ff-3ecd-45e0-a5de-fcbd6186c301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "da37becf-9e40-4096-877a-3de015400c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822add34-83ba-4235-a0ba-fa4d0f8131ee",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "069147d4-e339-4ced-b226-8633e0cd4d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cca6d1f8-d05e-4a06-b69c-3bdac3721526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49e2fe1-6901-4c7e-9d60-dd03e4f37917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c66f614-819e-4442-a95c-cd2f37f2a81e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b66594-5fa0-4a60-8420-95ffd969b1d5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc0236e-081e-43b1-b4c4-0b73f1c3dcc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be81978-602e-4555-92a7-04618acc48b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c21783-9abc-4859-8509-910512e3b949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2d41ec3-0117-4dc5-9347-2b80efabe998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9440c9b0-288c-4c3e-915d-4528c11412fb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0cabe3-7fb2-48eb-9c55-8c43c5105de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85f29ae1-e986-4ce4-95fd-e5a02abb47fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c6170b0-6184-43eb-b7d6-cc37b582649c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "35ac46e1-88a8-4dac-927d-3b5db0f6f152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3736f49-5aa8-4209-9a09-9f82e0a3c37e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c202514-fd5a-41cf-ba6c-1603277e5697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "255d65d3-516a-4ee1-8788-b45ec6050d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d73ce80-3f44-4e1d-bd6e-97498870de08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d26ca90-c166-4a64-9cef-ecd0bc183e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c900d3b-5e29-4392-8153-70321b4e6e76",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a904c042-08b3-429f-90e1-e2e899c048ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0819a576-0f31-4b52-bc29-b205029ecf45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558aa37a-ccab-4989-878c-38f9fb3bdfe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddabf469-dc15-46bb-a661-cdba0c37645c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ecdfc6-2f49-4133-94e7-798d70e10bfc",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b0cb09-9181-4f6e-951e-9b70d09da020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ded90cf-0db3-42fc-aad0-114e08347614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab54bf37-5508-4351-94e9-816d97f85b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "65187e14-5fae-4576-a453-572d473be5a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9332a54f-df77-4003-865f-ff887f254f58",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27acf69-a69f-4d1d-b81a-89355a9a76b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78780e69-8b20-4d11-84e3-607cb53f785d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2756130e-0ae1-487f-a4a2-f6c30ac6975d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5456b4b6-6e3c-47eb-a71c-fea1face9f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec671c7-08a7-42f7-83a9-561c548162e6",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efba3cce-6284-4950-b6a9-f8e08f017c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5363aa76-7d16-41f8-8207-92b9eee00029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f4571c-f94e-4d18-a892-0f264133e8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "504df150-5d60-47c1-a36c-9960cd47a251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51fc858-fc30-4608-9d4a-1d0d697fb265",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72a2e21-03bc-4c88-820e-8d480a754b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a6e68d-74ce-4c1b-a139-71fbeeefd1e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b6d770-fb72-41e2-aa33-a2d6f4d6d161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2500deff-ff8c-44ba-90da-a512811941b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf9a666-a832-41ea-ad97-d3460eac5409",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c82255-fd91-4ddd-b065-a09e6f6150d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9264d68e-fce6-45c2-af85-997c318196dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4842b7f1-198f-423a-b910-634350e406a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "186e7c9c-c6cd-40a8-aaee-b7da62e284bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd0ed37-f93b-4b0d-82df-a5aa5761d427",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1df048-ed10-424e-8113-cc9c5b0d352d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1abe656e-9a56-42fd-8730-e8ae0c2cf6b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97919375-3082-4137-8daa-2372622d9d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "99289c37-e577-45d5-ae07-d3ccbcf46b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8173ae-b9cb-4e6b-b112-000924820ff6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df980bd-f288-4184-93d3-1dabb7a8020f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed5bcc72-e7d1-4123-af5b-17db006a49a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2a32e8-2898-4d16-aee8-ecf7072fd0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f4b78a3-7565-4f1b-aa35-692f13ade8c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7872f2-a329-4c93-b6b8-928696697e81",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc82960-9094-4d95-8ad8-38281a3f626f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c5504c-d417-4cc8-aa4f-85b3b994016d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f8d64b-2142-46d3-a234-6a3b798cc360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb1f9aaa-560f-4c0d-b9e7-2edf98425e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d551daf0-e215-47ff-b7d9-68b911f7d82a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2ce5d6-22a5-429a-8eb3-d0d6879c8075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b75991-bd42-4bbd-a273-541054b13adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850d730a-eb6e-45b6-a4e1-1982e768bfe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "176e5f52-f8cb-432e-9afc-d1af5b98fcb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90491263-3f3b-4af0-9606-3e428c3b17c4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3959590f-626d-498a-9e37-2404d9654c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ae1c51-e476-44c8-a83c-2c3275989fc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8565c03b-6734-465d-a85f-b69e29951b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "64d8a59a-6768-4905-948f-f978698bce76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4807b5cf-5ffb-4633-9d34-734903cc6098",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d5ae2f-7023-40f1-934a-70421c7b6a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f2eb0a-f9ec-4777-94e1-d6e3eccaa324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e475e86e-2177-4c7a-9a73-f2b24fc16ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6166af59-18b4-40e7-82f4-0fa54f9656a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f68230c-82d3-47fe-bc6f-214c72fe8dc4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41c4505-cda9-4043-9b89-be8fa32d7f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba9a967-9fa5-4146-a6f1-d50b3968db1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0340e7-20fd-40b1-92c5-766b8a7950c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d33c9820-0f02-4b87-8763-de85cf340447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4d7332-c88c-48e8-b790-50a6e8f45020",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5e8d2b-48ec-412e-afcf-097c4d5670e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "778ab147-d409-4818-ba53-39f7e3c6236a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e157f7-fd95-4d35-8864-8af9f6762c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "603cb74d-6314-4f9b-ba1b-b577416330ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c10bd48-4581-45f8-b9fd-1807658e247a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6900105d-be77-468a-b4db-6836f3477feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6615925-14ae-4617-bd53-51b88288c11f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798136be-e6b0-4f4e-bf39-2fd9b194bb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c908d133-36fa-4b3c-a0a0-7237d7674826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1013dedd-abfd-42db-b627-475960d33a6a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2146673-d699-49de-9d2c-83cf83acc3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "473867c3-2c2c-46db-88d1-86c2e96dcdef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019ad8d6-3f90-4988-8694-3a9840e81c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f73554b-8b01-4a98-b067-6c0b5e9c4dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e466140-9f4d-4641-b85f-8465ee08c5fd",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91041e3-501d-48e4-a034-b2cd8445429f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffe39dc5-ab52-4abd-b25e-f6465fac0e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1ae24f-888a-438d-acad-e0c26da6f05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9356977e-1db8-4b2d-9f62-ac95c2b894b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43258dc3-498c-4dc9-98fa-6ea65a483c87",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d17bb6-ef54-4f9a-b8a7-52ece8036508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1048c454-e655-408d-b9c7-8977a790fa81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c19f5d4-6cb6-49d3-b1a5-5cf40af69f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7250f2ef-76f7-40ca-990f-35bfe7a4c700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781e8631-b7f6-4f26-bee1-b7bf3a0a158a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ffbaa7-3bae-481e-b468-bd4471567970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d58a07d-ed2e-4642-a997-f0dcce1fded2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7d1d41-c980-4735-b1a6-bb96cdd417b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23e2c8ef-605b-4e7f-80bf-662b4aedfcda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359d3f44-d382-45e9-8839-b00f65decc99",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4495bcd-44bd-46e8-a970-7e6ac62fa8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e4b14ef-56ef-4e1d-bda8-95ced2ca38ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759c49a0-d0dc-4f34-a245-07bce2e1c63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0986d60c-d38e-4cf6-a460-f0a2ea9c10b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf42fdc-48e3-4d76-b5e6-d1644b14f448",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e0a4e4-982f-4a18-8fad-acb9b94b8ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed2dec63-a756-419d-b77b-051b989c8729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1af01a0-d469-4030-8eca-69418f806d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcb916be-bfc0-4803-a481-10ff13a8a60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18dd0d33-2fd2-40cc-9a75-272024fc001a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e602e24-39cb-4723-93e3-3c72ae0eb968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3832da01-cad4-432f-939e-abd60f1e3431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec89a467-7098-4960-946f-019c1f1661c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "824b4bad-589a-43f1-bba3-4c685636e883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32796460-6947-4f58-a015-59003ced58a2",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376c1f09-4bb4-4c4c-beb7-ab8dbcd900b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3828f9-9629-499d-a145-b1971c33eef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51281dc2-e4af-4c12-9a47-4cdc6dadaa08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a508cca-8daa-4713-9e79-4b93b2391bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6c4e75-9f3f-4a7e-9ac6-dad7842182cf",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be231d8b-02f3-42ff-9241-1b7b334830a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be6f54e-f815-4d22-8a16-7930535994ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544874c2-79fb-4228-abd4-e99b55243693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d77a38e1-36f9-42a2-8db0-5766eaf2a189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a96aa22-8f2c-4e44-8284-876641e4ae90",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fffb710-3d4f-4ae0-bedf-29bed770b239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c32b9f-6b95-4ec3-8552-1c204be94d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac2ed7a-4744-4cc9-9498-f2aa6aa3e3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3573ad7e-a6fe-400f-9a16-ea9a86c49c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6940a300-e9ae-4f04-8c3f-531d8c03d723",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d881c1-6e1c-4df9-8259-e93276af7bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10cae265-b548-49f1-b950-2369d9966fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f48471-3c25-4ec0-982b-918a031aef2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ced4b3d4-3d14-4049-ae17-5d995e1cd018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d602f742-f2c9-4519-aa29-d2202b421122",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b84ea49-0ca6-4214-ae7d-ac674470a199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e24b360d-0858-44bc-9499-4478e8986770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82721171-92aa-4b05-9c0d-c72d37caa3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "09205212-1118-4c8f-a335-d473e34141e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4e291f-8209-42bb-af3c-7181f8a5d971",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335a4ce8-1bfb-4e56-aec5-1c50734261ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb613c24-998f-4615-ae2f-8ffee3f45ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752c1b7c-4ff3-40ca-86f1-295639a028e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "eff420bf-7144-4100-bd48-9fff5857c45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc3e0f0-f501-4a6c-9cc5-d701ddc5c128",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6a5569-cdc5-4283-a4c8-a92fd5accbd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "838f08f4-f5e1-4fc6-8817-20a9ac914857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277eb899-975e-459e-b953-012bf389c644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8231cf4-9ff2-445f-bf6d-08ef24396983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee1a3c2-e0e9-4c79-981c-046a1baca07f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbdd0c0-30f7-4fc2-8a4b-f55a77871fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c14f8bb-1c02-4921-bbe7-91e547508e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79a2732-c587-4bc6-8ec0-60fcf3d9d297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e65d2641-e19a-4ee6-8e29-accb9c86a193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104dac73-1c29-471e-8163-eb61685ca8dd",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bea0fd-9d63-4fe7-ac58-421f5af816c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bbaadee5-c8a4-4666-b185-c342390cff28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f5b278-fe93-4bab-9417-e514e15d890d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ac85885-dc99-4365-be42-f44a76d23da7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "df6cbba4-30fe-4c7e-a03f-c19898f87691",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "00922029-89f7-409d-bf1a-01448ba17100",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b222ec22-6f81-4d34-873b-1e77ac25ac7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9506cb56-7e80-4fcb-aa39-882d61c637ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c899c9f0-e0a2-4116-8e2a-4e861619391c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ceef5fe-67df-46c8-a042-ac5825a44e4a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c583fe9-9ae9-4dfc-949a-75635ea0e119",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10a40b96-bada-4346-b127-23b34c67e7ed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9724cd18-8171-4bad-8c46-8d5507ea9ddd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43545ddb-cc8b-400c-bda5-c67f10f022a8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "94ffde99-631d-403d-8729-53f7d11a45d8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2250b8d7-4299-49cc-a689-9fc05700215a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "31a36f20-a21a-420d-af12-a3709db63533",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a69be8a5-5740-4726-8c04-44c683950ca8"
                }
              }
            ]
          },
          {
            "id": "4ec8b340-16ec-42c6-b469-67a7701985ed",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2ede102a-a02f-4042-96f3-abaa0424c766",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a67d1351-518e-429b-9b33-d4f0edb7b996",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ac8ca4-6c30-4d6a-8f24-4dd7a582d714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7ecbf165-70f4-4f88-850b-68e0e16f7054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c81bed-f76a-4f41-bb07-7bf2fbc3452e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac1dc308-99ca-4d66-9274-9f21fe0c466d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "99a56648-92eb-47a3-9a1b-fdda2c6b608f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b19c6d66-d363-429d-8043-8cc73637ecd5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fdef0f00-82d4-4a02-a0d6-25f72bf4e9d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4cc00edb-6e55-4c9c-94dc-df7c0d9ca2ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b352ed21-7313-4da9-9d2a-144b376375ac"
                    }
                  }
                ]
              },
              {
                "id": "74a35cd0-e196-413d-98c9-e1eca12be8ab",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba808c78-8673-47a3-89b1-4423824e4ef6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a3ad2ecb-ec47-48e9-9406-b116d0919d4b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ff9f409-4dde-4cf2-a5b9-4d67de15c9f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d25ac9ab-7759-424c-a795-3c13ed8daa3c"
                    }
                  }
                ]
              },
              {
                "id": "19df48f9-d565-494a-a0e0-3047b4adb268",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7191d994-4f97-469f-8fd2-8743ac2eeab5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e163dfd-2813-441d-8988-0184b9d0a361"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ecdecf5f-9149-4744-a5f6-0ea8ed5949b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c50a9160-b36b-4c57-8fb6-a47b0de961cc"
                    }
                  }
                ]
              },
              {
                "id": "81f4a362-992a-4832-9904-fb8c0a303216",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "623b1c36-69e9-4bb7-b412-2415c9342971",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ddecfb9a-cefe-4615-bfe7-d411099e90d3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b6a1e65-3398-4d74-97f1-ee5701db79e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a1fd550c-99b6-4bd4-840e-b4c81c99745f"
                    }
                  }
                ]
              },
              {
                "id": "4e7929b3-bcfe-4894-bd79-22bd49a16d2c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f26d4747-bb78-495b-9799-78d44c4f0d87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9477957e-0347-46c4-b996-520c18b8b223"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0c48d66-b911-49fb-b243-54612a035ee3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3238fdf6-c513-476f-b4d5-d8ca1f62bc4a"
                    }
                  }
                ]
              },
              {
                "id": "263c4e8b-edc2-4d3a-91c1-f3de3a60f9e9",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "14543f44-b00e-46f7-af0a-9d305307f3ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bf7f80a3-c7aa-4602-970d-45e438a90543"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08910372-897e-4690-98eb-7bb482b04247",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "263677af-fc29-4aae-a1df-636210e6550a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "24196dbf-de11-43aa-836e-4daab1e2431f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "059991a5-b6cb-43bc-a310-602e5bf4553e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "75cda171-87fa-453c-bdd2-e16cb8a20373",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4bcea29f-72a5-419a-a2fe-9f13d344477c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed015085-8857-44f8-8e15-394c45e81ee4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9b56138c-c397-4954-a576-901f0b376a5e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c741021-bf9c-4074-a31b-9dbb38042cb9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3dd27298-42ee-4f16-9ef7-08c7436ba755"
            }
          }
        ]
      },
      {
        "id": "b7d8e31c-123d-41c5-9fc4-11f988a8b776",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a1d18329-d1a0-4a35-b8b0-a77c4a09cf85",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3173d2c5-9097-460c-aace-ac0e349ed3d2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fcc276db-1c45-4266-9e77-150d69957611",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "434fc444-f2a3-491b-80c0-45fe3675ce2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7828c54e-0bc9-4c81-93d7-e38f0a13684f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a1f2e6-1d0e-4777-8304-f4ff6111897f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c861635-e2a8-4a28-8e41-266acf4a1449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94b1925-f09e-4b67-b1b3-4a35505a928b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "881601bf-5671-4b9e-9db1-57063bba6288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "067ed119-ead1-48fc-8ea1-1fca0ed99458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb40592-4087-4bec-9ebc-a17c4c31d05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "abdc9ac0-319f-4430-9cff-ac46f5711b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d6c31d-40c5-4cbb-acf5-750df9bb4a0c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7cca23-e505-4b4e-9809-2406fde490e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cdfad5f-c533-46e1-913e-c97a39f1b422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d67de39-74e5-4fba-a557-295dcb00d280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e25ea1bb-d0fe-43cd-91b0-32b4ec3af547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881492df-ab20-4c3b-9aaa-ecb87403d3d7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ca9717-205a-410e-96e3-4172641edf9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e9caf93-2167-4ddc-99a4-736bb55e4145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017d95d4-78cb-431b-be71-8bd8716c84e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a11a1231-589a-4a26-abd1-db8500ca45f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8342da45-33ac-43e2-9256-8fdda033729b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6b4dfb-cbdf-4fff-a7a3-e29e6594d24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d35885-784b-4f2b-a948-7cafaf42d145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e017b80-3970-4fcf-a9bb-e4a330775817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce98a80f-b462-48c1-90a4-deb0d2d82c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ce97e4-9f3e-4bf1-b905-2207f728b3b3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed711363-5af9-40c8-bd80-c3a7f65e4dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4396386a-c334-40be-b4f7-59dbe06ed822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03f3597-5c85-4966-9828-49d3a696e929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a382a393-a995-4aa7-a199-2b650670143c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9da7b70-1470-4768-a9b0-8eb8fb941d17",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479472d0-e18d-498c-85c7-8877286b4e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f7c996-b701-44ac-9094-1bba64d28ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3211dcb5-d31c-4afa-8f76-ca977e6613c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "eeaf4d14-4e18-4092-8eaa-34a879210c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402dea30-752b-497c-9614-8186573137e0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ecd223c-b895-4a6e-b41a-6c908f20edea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1fcdf41-fe7c-4935-897b-233a77ee97bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba165e9e-68a9-4467-9919-259938fca387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6090a674-c5c9-4fda-a18b-5575fcf21efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed06b86a-016d-4a02-b556-e962bd41a967",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e8450e-0e1d-49f4-a63e-e3f9a92848c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d626db-f1c9-48ee-91cc-3418f8b940a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400db22f-4c5a-465e-878a-56b3d1a7c666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2b0eec5-90a0-466d-9108-575b36a55cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf6da02-8307-47fe-91bc-24f03431ae24",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54307fbc-c62a-445b-ab44-996f66717949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7bda993-fbcc-401d-8b6b-78c2709c02ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4383ae89-2d2d-434c-a50d-428702868557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d967d362-3501-40cc-a889-736211ad0068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7769691d-2149-4461-a416-854cef6023f9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7877bd-3faa-44f9-aaf5-ec16ab87e29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ee0bb3-66ff-4412-91fe-fc28b471e641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a87e1f-46a5-4667-9d68-2f08af1cf1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e9860f42-2d72-4c35-8bfc-bb4a098d608c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d374e8-cab1-4663-bf51-84126e36611c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af73a2c9-6b54-4dd2-9f1e-f93ac3e02994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b38b9c7-3531-449b-8504-d9b36a018f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571a1b36-0543-460f-a24e-3f19b1db75fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c84a66a2-eba8-4be1-8a02-e037891a03ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3501caba-f864-4342-b9e8-8e1a75e6ebcb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8776c9c-fc1a-4a29-ade3-90655ccbe588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cdae267-a1a9-4da6-a7f5-8749d23accc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf26bab-65e6-450a-b355-e7d946a937b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "35372c7b-bfbf-49c8-bf43-faf5bdbd03b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61bdf43d-3ce8-4817-b76a-0678b5000043",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "111f3c3a-2665-473e-8d15-8992e223e1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ac6d49-9c17-449b-b47e-36f7065d5fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16789b9-75c3-4081-87b3-8a2c53d082e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9894050e-ab9a-4d47-8cd3-9c75214cee5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e074f870-1e87-490a-908e-c07291c95998",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a32482-cd15-406a-aa52-4fce3857c4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2afd8ba0-478f-406b-bf5d-b41128d97b1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ebc4823-84b7-4cf2-9fef-1a2b78ebf09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f30469f5-98a0-4bd6-86fa-9264dce9eb57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ff3113-9d0e-4ef7-9502-d48c312bf673",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e32b4e7-c533-4d15-8bb3-f404fe5f196f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b23827e7-4140-4a24-b205-fc3cf68d9314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8fa041-04c0-438c-b925-3c0a9016ef55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad5fc06-4786-444f-b355-6b34cc26998d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498775de-fff5-4584-aa4e-d2312f1e82f1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0fc87e0-506b-4e2e-8592-b051a09ad565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83bcb046-7918-432d-a74c-6fd31f47107e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681ddde0-08a2-42f4-bb27-4abc05fbdfd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fc6d193-c8e1-4287-bcd0-4cf07c07a5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5dfc712-1f6f-48d9-b89f-1d12bfec3d18",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f7255e-f852-4cf2-97e9-32c13e0eadc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b05599-fdf6-4e8a-bed5-369a128c7332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2b1a37-c502-4af5-96f6-f420bbb85296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "18dc8f67-13d3-47b1-b18a-195739b9264a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3d0846-a733-46c5-b590-cd162fb8e33d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4953cea8-0385-4a69-9865-eab3fa45ff57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4beef56-5742-4e37-a2ef-21e174c1fe57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66909c9-b63d-4d37-b1b9-ef7f2ded717c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b489e734-6e3f-420c-a3e5-d19e673788dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b9494e-eeca-49f3-8e6e-d888975cc325",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a01793-e180-49f4-be56-0ef30fa8ca0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef62321c-ab6b-4d67-98ad-12ea20c2841f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead643e3-9b1a-4ddb-9406-d0590983f19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcd934d7-6d5f-4948-942c-b7d5b319e4d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976e0d96-ede3-4069-871f-41fc44e1cb66",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51d1b85-f4d3-4ba5-b254-2ffadb93254e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65164cba-8312-4be1-ba4a-8db19e4db519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e2fa6e-37d7-4efb-9c44-274a46f25242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7090bcf1-f953-4e26-8996-babdf03c697c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249c7eaf-f395-48d9-9962-0cb0c7b528dc",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9457ab-3ab0-4e4d-8350-6195dd82c694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b4c23c6-f905-4d90-8cb1-4842ff80ac4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472d7c21-4583-450e-8671-19ece18fcfc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9515a3d1-1cfe-44ee-a181-5acb980b6f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c306104d-4522-4433-a07f-ea84b8ba63ae",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e5d2fb-5ab6-4e95-a577-e74f1eb5f786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "386ed674-afc7-47e1-989d-882e4f411b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ce3b31-7c05-4d8f-bccb-e8068d00f7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bbfc386-8594-4531-a040-74385eb5c762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd57cd2-d954-45c1-a078-c0bbfc4cf34f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59891305-fd96-46de-a966-afe142c41681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c91dbd-b7fd-4df1-a3df-3aecece0af1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac1040c-796c-49a9-b49a-3a448eba9218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "940c7dfb-cfba-41ab-b6c3-f585e13c36ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc559af7-5a7e-46da-84f6-0d52ec3de22d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59d3ba8-c0b5-4353-b717-1523ba313648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb6f684b-0d39-41ad-9b5a-fc3454e4bd1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d90df3-2eda-40d7-a264-eb38fdeb9231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "270e94c6-cf82-4796-b2f4-17e4769c9645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9132b0fd-2551-485e-8421-4c7020007483",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80afcfc-ce50-4cde-a24c-773d14ef945b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d87ff9a-f399-44cb-b6aa-9f991cd34097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638ca2dc-a2b5-4198-ae79-281e26835751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0ce1dfc-77b8-4d77-a007-beb3024b68bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcdcf76e-0987-4619-88fe-6ec6a258e7b6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd11191c-6061-457d-81d8-2a74c0783d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bc71b44-8c8f-4f5f-98f0-e6bf65bb77a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7150e2fd-8eb7-43e7-a572-dc926f91f284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02f2bc9f-3c3a-4c6b-bafa-30a83240c7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60896a9-df61-4047-af49-fab9699a238d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23481c8-48bc-47b7-a167-77c65b4b3415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e1a6c9-9ad9-4332-b968-541caa5ef8db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d13a9e-fc72-40a1-ac96-2e1f3f238e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c5bb1d8-b4e1-4013-bd6a-3e5466eed6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466cb99b-46d3-4eaa-b854-69439d4a1702",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2dbdf5-9cd8-4c19-9e0d-ada130145fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "157e7d8a-f29f-48e8-9344-e795fae1ee23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05bec33a-be14-49a1-88d6-b60b37b61ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38b334f3-e99a-43df-b5cf-6b51d82c2fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec7e5a7-81d1-4d5d-ad36-ad31ec7c1767",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc3187a-21ad-4696-b7d8-918a76dcf9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a59b4388-de97-468d-9c81-bc7b3a951c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75dac734-7c75-4350-95ec-afbbe9feff48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4aa249ad-cedb-4347-a906-b7c010c4e49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa5a5cb8-25e3-48dc-a7a0-285eae6015b2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f38937-4ea6-4ce3-9a60-beb4ce5671fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "685bffa5-6523-44b0-9c47-f52f500dec2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d75e03-2eb0-4183-86eb-654f373d0bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1cc5473-198d-42e9-97e9-d504a650332e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb3a690-2338-4315-aa56-cd4fc2d73e65",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "759e14d7-d62e-4cc3-a20f-75fce03c4486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59fe4823-76d5-4668-9291-249a0209a40f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d9c9ec-b997-4369-9544-bff43a8e4668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f0337ec-30d1-4a65-9ae3-b3dff4be9419"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "822c56da-e9b3-41c8-a667-12b34d38789c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "90037cf0-4bd3-474a-80d6-60ea9157aef4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88c9ed4-b4cb-4fdd-ab33-b2101e9aa388",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "10ae7543-3efb-4211-9c0a-a809ae647a33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e0e9b2-eb16-4680-9a3b-d2fe07fb0c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79dad6b4-0296-4c69-844e-fe3625f3d3c1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4064280-3e04-44f3-b24a-adb8c2b534f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc66e32c-c8df-4266-8d7d-8a51d6e6e899"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8937791c-8526-43a7-b84a-3c8b9fa18814",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90bebcd0-2661-46d6-b555-94c2be8aa80a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6bda1f8b-8f66-4018-9646-c0ff9edbd835",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4a1f4b70-fa7c-4497-bc1c-0417f646339a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "848e2dd8-b435-429f-a137-bf4152ef2377",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "128338e8-e174-4ab1-a747-ce2079c62ddc"
            }
          }
        ]
      },
      {
        "id": "f58dc76e-8bf8-438f-b92f-5ac2fe26f01d",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "4049b102-ae73-468a-871b-3d7505fc726d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b5f0da3-7440-4dfb-8a7d-754dac422bc2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "440a1071-49c2-4a5a-a0c0-6c0988f22d7b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868319f9-473b-4985-907f-4e0345eab159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3431c8f6-fb31-49d2-bd9b-8cbe5594345a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52df0e01-110c-42de-a631-38457686de7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1f486cd-15c1-4f45-8eb1-1479e68e1f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfcf091d-fa8d-4974-9b61-c8e43e90fb3b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb989c70-24e0-409b-985b-b522831ca9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9470053d-e7f2-4532-a096-7ef920cafa32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aeebc1f-e7a4-44e5-839d-9ed8cbdbecb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a8ced5f-642e-4865-8d9d-37943315e711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb498b9d-3c66-453c-82a5-499e0d0f5ec1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15dd3994-41a7-4025-98e9-5c8df1056e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4481a424-0480-4bfb-83d2-b73da769d19f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef2a553-9f2a-4ad1-90b6-76071b805c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9a5d572-378d-4ead-8b57-b399abddedba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e913f11-b2ab-4afa-a199-1b5fc8b306f8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4fe80c-25c8-4412-9892-f06197c98411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b100110-acab-4c54-b3f9-1b5e84a4f364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b047af0-eaf9-440c-9092-4f466beedf28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd402438-d433-424d-91d8-5ac6b4becd03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741f6d08-9fbd-4eb2-a174-de770b47e26a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a75bfd-8bf1-4d5c-850f-44047c307503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a17df29-bef5-4451-b355-a73ee80215bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84955015-b662-4604-935e-3d5f6dabb201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e2b272-4b6e-4fbf-9d16-ebdbde82a5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8b5ff6-3cbd-466d-974f-4e69fb887f83",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf946dd-0273-4ba4-85b7-8b4ca67e8c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "382143d4-0aa2-4e21-b0fe-a87845ab79b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3770a5c2-07b9-4023-bce7-34ce8bbe63bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ae53f8b-7ae7-492d-9381-34ec8cac2f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bceec5b9-8e39-4b53-b5d4-f2179a5bf039",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2150ceb1-0dea-49d9-a7b8-496253d3d86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f68965ac-6489-49d8-8561-c9c3c8b17d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5e3091-e1c4-4709-9585-ef549278c1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4c2df3d-36d2-4fef-941b-2d2fe3752fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f6d881-8899-4e41-9283-437947cdc3f1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d081b0-a383-4dc9-94d4-e0073f119c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da352ecd-96d1-4074-86bd-a8b7abfd6a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c318931-9b53-40c6-9459-4f87720cf34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2acabc5-9fd0-4eaf-9581-e6883a05dd92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb8b23d-4c89-4a6f-9860-414fc86f1d3e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d0b2b6-811d-4456-bd0d-6f384ce9426d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4305f69-0808-4e6b-904b-9b4688d741f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e36d5c-e9bb-4410-bb1b-82f11c4b2ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f74a8e1-e68c-47be-a9c2-2fed63670571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d51b853-5338-4d70-9621-06bc12868f95",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a04ea0-6455-43f6-9b26-ae075664d8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4f8b488-c6e3-458c-a362-3dd1813347cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9a8f84-20e1-44dc-8eb4-dff994da2c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bceed379-828e-468e-95d7-7225be6ab112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9ff374-d73e-4f33-bc40-d488377e957c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92dac60c-f1fc-40d1-b266-efbfbe3a72b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b684fc2-b321-4d7c-9956-d6fe6ddaeadf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c50173-7406-40c6-9b86-0cd6b02d1224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ef4ace12-073f-4d21-8ed8-61f9dbed7eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e6180a5-9f2d-470d-8b66-be8306a95599",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "012fbf82-c059-46eb-82a2-1d52ad6d7895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b0023a-0ea8-4430-9773-f4a4534368a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51cb617c-ec79-4dfc-9c89-1f956be94659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "52bee139-4ca2-4f3b-a635-551b34e4ad1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b30a8c-5097-42e5-8cbf-03d31cbdd74b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ecba36-971f-4ea3-86f9-c3c1c3157fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b1cc3c3-4ce2-4614-91ae-795a7b600809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12522680-7fd2-4555-be9a-9a427bbbcd87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "335ddb22-5646-497a-8718-78a30e932f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294d863f-5652-4d57-8691-f8811e46fa71",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eca3b17-4ff3-4fe0-8f34-eabf5673ecd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee0d91cd-5655-420d-942e-271ba84bf37a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26cbaba-3177-4ecf-ac01-efc3afd83a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "672cae17-2827-4e35-af04-e166e9404c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6641719-5b8b-46b4-b19a-192b0c379aae",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d5243c-b33c-4d6c-9518-e9f42686dbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a572bdbd-4f8c-4714-bf57-35c6989aca62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ebeeb9-f293-4e2b-bb98-4d56bcd54dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c81509c7-23b5-41e3-b83d-6c79b430e47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87ddeb7-fbaa-4f4a-97c2-2695fa892e3c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7f462d-eb07-41ec-a053-dc5209744f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba8400fc-a675-477d-b197-e7ac3381a9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0976c994-efdb-4632-8d27-860dd536355f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d15a0cb8-19a3-4d1f-81a8-378f1130b84e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd97cfa-af9c-4f10-b722-0e9a06f31488",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7671816f-daf3-4bd5-a627-cde367e70551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "906939d2-1bec-47b6-8090-bcae7c47d99d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca65331-7b53-45da-a96b-d86f79c3e5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "621ea043-d334-441e-970b-e6bbd4b15bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4c6b91-346b-4b3a-a132-b544be52a031",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29bb6a5-d9a0-470f-abe0-235f912514d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7b23e81-d106-48fc-82a1-2a4ec9cf1db8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947acd21-499f-40a4-89a9-00b718dd034a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "eccf192d-9c3f-4d19-afc3-55130a72b824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6244c154-ad3d-4aea-9b62-571206bf2800",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b81b33-f209-444c-9772-3a0b6307e5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "149ef470-9759-4cf0-81dd-4b6f35055a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3520a5a-333d-44a3-8cd5-c7cdb3b8dc8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c6a06f-e828-4a36-8713-14ce5734d1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eecaf3e0-a697-41ce-af1a-ba680f0b8040",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "093b22e0-57df-44e8-bb17-b574e05a4e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc368c2d-e65a-4502-95ac-9027a0169d69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e4d2f7-ee53-4e76-b9d0-be24d665e593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e82ed88-61d2-4d20-96df-16bc0081e8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0708e45e-6c53-4e8d-a4a2-89a3677eb474",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8a2665-e5e4-468e-a0a3-0e1b5f01b490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a66eaf-92bb-4c28-9c37-97a89a2dbf67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd2ffb5-b61e-411d-946e-09399ee26963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80c1205b-b054-4593-9087-0628401d3182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20055c95-5122-4312-8079-a3d6b7991c9f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "077ff7cd-3df7-4bcf-8d99-f6d1b84704cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b06872b6-d362-447a-bd94-a186490ca658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f78d74f-0ccd-4090-b0f8-39195e341250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "034c1574-b0d1-4001-bb3b-d2d86ac11cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c995d52-66a2-4c55-8db4-a82613973d68",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea51215-302b-4d3f-a4f5-253a459afbe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15ec3c60-a29e-4ccd-b4ef-f2f678a7a704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc6c7c0-0686-4d2f-9604-d97a4a99d352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "753c8a01-f0a0-43ad-b711-89399c11183e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c005b4fe-b250-48c5-9e74-0aaabbc56e41",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3130047c-c14d-41cb-91ff-0130caae7855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26dc7884-70a8-433a-bb45-a07f8c37fbae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52f157a-d428-4ebf-bbf9-52361f6f30bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71ba03d0-1772-4094-99f2-817f0cff5258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d4dca1-9839-4787-bacd-e246091998b8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "609132e4-d8a9-4794-97ef-0e6cf5d1044e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2109a4ca-14ee-4837-9965-dfa95a34cd2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96dfe780-04ed-439a-9d1f-ae1d1b375e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2c45154-a3cf-4ca4-933a-f495b9dbca1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a11a2ca-6346-4e4a-b8c6-eb273b22f735",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d452840b-2d6d-4a20-8c9c-8e820f8ed342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191e0d3f-57d6-4bee-a7ba-e89aa9405bca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31465801-ae93-4dc6-abad-23b312a3e42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08940a17-b531-432c-a518-06c14a5c064e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7472b2a2-c01a-42fe-bc38-e32ebba22ddf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f0c418-5d4e-4aec-80a9-663923cabbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31fad2a2-15f7-4ba8-a14c-44cc7d083972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7781627-c1d1-4913-ab6b-c48903923a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "050ce6d3-ca85-40fd-90bf-0f2b56e426bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb0e3fb-d20e-438f-8b62-9d791af875c5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5204c453-55d6-4fae-9984-675b5107d511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "322eb312-785e-4437-a9d9-186e3b008cca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2066166-7003-4422-8ed5-e0cfe5bbd726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cfeabd4-11ad-44bd-a61e-4861e387c038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81305210-5e80-400c-bc03-143ea5309831",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e243e20-3d7d-4f2b-9bb5-924517808989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e7be4ac-50b5-4d47-b282-44ca79b5fece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57bf6f86-87c8-46a8-9ba0-a5b532d75fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f2f73ea-3fb6-45a4-9def-8e418c12d2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9d3c89-80a7-4d9f-aa6c-3f7125441561",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a750174-e5c6-43b4-8020-f8c7a85ab474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6141a43a-c183-41b4-9620-36bbaea46cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba0d49b-4d8a-4708-9a4d-412f0ec5607c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc3dac5-bfe9-4ade-900f-cfaeba472741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c3fec4-2135-4336-964c-d1db30071613",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d572503-be8f-4fb1-9a46-cb5af8fb7133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68b9f84b-4221-473b-9878-486a7d87ab20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75beb40-c76e-4e5e-bd9b-ff92ee2a707e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a060773d-57f9-48cf-aaa3-29ae4f7ad008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508cba7f-4770-49fc-a53f-c049c41fdee5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fedf7ca6-b3eb-4932-87c3-6488bbd0356d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a36cf581-77b8-46a0-b58d-e709b9efd34d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4304fad4-6019-494c-808b-9e6222e21280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e05140-d945-47e8-8ab9-edce3d1dbcd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2380cbc9-9166-428f-94da-0339e0d2fe68",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afac8496-303f-46ef-ba84-fcb08b2b3455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "557a5c53-98a4-4491-b866-58e69b521c84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb1cb9d-2b6c-44a6-ba3b-81011ed2f111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7e3b84a-eba3-4df1-9e5c-59e3ee7eccdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2840a07b-8caf-4669-8df7-0c398dcae1c9",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497d1d8b-8570-4eac-9564-cc10c178bdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f0d7f3-380c-466f-a5f2-8f9ca0b90467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab92d9f-dedf-4667-911e-d2ea4a2c0f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e65683-261a-4160-b244-2ad1ec205584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe77572-a26b-44a0-8806-7b24dee61417",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e054dad5-d0d2-45da-a1f7-723ba178d5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0759d317-4fef-4804-b60f-a26f8baf37b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a4947cd-ac87-4964-b92b-68dfd989c7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "532d1a1f-e1a4-41fc-9d90-305e92e205d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3baa32f4-00ea-4a25-b579-2d2f1038fa44",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1dc55ef-7073-418a-a2e3-b74d0520f488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde57028-995f-4f6e-8331-6572e5279d3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d600e85-d9fa-45c5-acc3-660fb54625fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a91fd829-d484-4d38-9713-f520bf6ce0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ef851a-331e-4faa-9ef8-173d778e5032",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a02f4e6-976f-45d7-9ea2-cb816ae52948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abfb8400-8197-49c3-b485-a637bb5f45f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7480d2-4c23-4b21-aad2-c240bb77256b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91e9f681-dbbe-41e5-aebd-14d72fc31b1b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "373de580-ad8b-4a75-a537-39f889fce152",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "51350a46-befa-4025-aea8-8c4161d9d171",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa996b56-65bd-4b11-b28b-8c3bc09915dd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1fb3148a-f279-4255-a14f-ee572f49effd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3040524-73a6-466b-8105-a022fd9f5d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91c2acad-9bcd-4fe7-87ca-345d921559d2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5ab970b-15e0-4ffc-a062-aabe5ef80a9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84adfe60-cef3-4f4d-89f3-8aed5211b1cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "20a2fb09-8f1a-4bb6-9a81-a8998c4c6ffc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34a09cdf-1ae7-4946-b715-278f2f42815c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83678330-9534-4988-add2-5b552447c5e1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b4268444-288a-47f5-abe8-3341efbaebf6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c82bba3-f65c-4ea7-b9e6-b801e5710135",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3fc038bb-e24f-40ad-9890-f2e447f24509"
            }
          }
        ]
      },
      {
        "id": "93e219f5-6ce1-4e91-8195-b2863af8487f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fbfc1942-660f-431e-b55e-50622b2de39e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f6e9b494-84d0-4ad5-a79e-00a46cc0a79f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e55ec53a-7b90-4306-ab96-6f352953639b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7073df-8a59-4df5-bb2c-91dc16b07b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5baf757-93fe-45fe-ac07-8be851bb0efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e3d61e-7918-4f03-8cfa-25bd444f2a10",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "671ab5cd-0870-4921-a27a-b07c079179f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c6b09b8-865c-4aa3-a83e-ba5cef24bc9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed4b31b-cd07-4a5f-8436-1a75397f1668",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e409950-7b08-4fa8-a2be-6881fa296210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b390e419-e148-4bb0-94ae-e2c5e7350b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f5b122-0aa1-4d45-8f46-aef285d736a2",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb2e4c7-6154-4264-97ee-a401d038a0ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76d3344e-4acc-48b0-a5f3-93f11e1b631a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8876e7a8-9e14-4fc2-96ca-4b9301d353fe",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bac6d63-0688-4ecd-8715-bcf93a0e1d0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc1a1bb4-e59f-43fd-b25b-837ca407ac61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c011fae-2184-421d-933c-3e3a34d0147e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54088b7-aa0b-4eb6-9819-174a223c56ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5d2524e-26fa-4c5e-9dd3-e5da89f775ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe54c248-33a0-49a3-8874-80d614bf21be",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67532ac-8afc-421e-b974-6faffe752f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d85e4a-a027-4ce9-9076-b29d21364d30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c3f764-afec-4b66-89c1-a3793eb943c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d18a84-ba68-4698-8d42-beb39d909b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9dfe985-dfb3-48e9-8373-e53efa5c0047",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92682e16-e60d-4e6c-9924-a8304916e822",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "016cf65d-5571-41d9-9cd2-1c1fd49650c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6a9cd5-9097-4112-b907-c83c622a2397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f24bfc25-ae78-4486-9bbb-2e553ba9fa79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40cd6f09-be3b-4a5b-924a-a55c17a6dda7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0062b41a-a784-4813-a03a-8902cb447565",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1a7a794-a10e-4f9b-85bd-122caeee65cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f742e2e-04e8-496a-bbdd-591ca047d128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8871c801-4258-47bf-be08-ff668025c1ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcee14d9-f1ad-4b0e-8ac9-8496483421c0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3612d659-e025-4cc7-8908-b9ef682d1941",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0388982f-5506-4525-8921-46487d6abdbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4801d8e6-cf64-4beb-a457-0c2b24d301c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c9fe54-f8bf-4692-b4df-af86bff26ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a4ac19-07b9-4d36-9c64-dcd4675074af",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d455023-613f-40fd-bb90-3334b546bf37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2b53656-d687-42b8-8bbd-b6d9f911745b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26dbc3a-6ac7-418b-b804-0b4d09a90f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51eb6c3c-8792-4487-a81a-bf712df21fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e4ca6a-997a-48a0-b54f-927300b32934",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649d3231-35c5-499b-a3c6-365a40ee3c9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac66d480-662f-44b3-b38b-bc46b95d248c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b11683a-faf8-423c-8838-6daa56e64eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a4d4b1b-efa6-4b18-bbf5-ba37bbe09016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9331c8-7f5d-4535-bd64-300f3c0d32bf",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5882656a-8dce-4914-ac5c-22611807b45a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5d17e54-ad1e-4bfc-8804-84a054dd0d15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45431f1c-5355-4482-aa53-f765cf9fa5e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cbbb6a8-5cb0-480f-aefe-c2cb3857ec39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87fbfad7-bfa3-4ba1-b4a8-736e04b650d9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f41e42-3e6b-4e42-8e64-c8976eaa0890",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d51f025-6cbd-416d-b22c-c9062d7c85bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ed0edd-91ac-4b07-9c24-a85bcf67391b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63e7ea3c-19de-41e7-aefe-45b813d46461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3d3b0c-75ec-4188-9249-fb1ebbd5c5c0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e04032-0ca8-42c8-9ffc-741d2085e0b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "336bfa95-6123-4832-b14d-d9e6c131eb88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14dbaeb-9e1c-4175-819f-3f04682c970f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5761bc5c-1c73-4381-a088-3ff21c5f2e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f0197b-a237-487b-8b3d-e34e7c6beb85",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fead078-e39b-4e66-84d9-9a75e6980436",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a799dafc-3360-44f8-aa7f-a83552bb4d68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "506bb8bf-ab29-4b58-914a-0cc83a53da6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5f9b822-097f-489d-b75c-916db30ae232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79ca5d3-1341-4403-9292-5058badba8db",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4b0585-4374-49c6-be9f-374913b87d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2519e9d-9953-4d45-9442-710cd292f3d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90226f6a-99de-4dcc-8ffc-cf6973fbbf16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "051966fa-c385-4464-882e-ce7f22fbb4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce3f169-45db-4087-b497-d4c349e02db1",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac676178-528d-4f2b-b459-8926c7421ec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb2bfbd8-ba1f-41e2-adab-cd298e9af31d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b59fbbb-ff28-4ab5-b8c3-ad0e3e3e5809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2967ca16-13ac-45a2-a4a6-05e25622dad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b10f0f2-349b-461d-9ba4-9acb433ded38",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80ccf34-6703-431f-b312-fedfdecab785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10660d5b-6021-4a0d-91a1-ad6bbb100d1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb848b2-2d63-4297-a6ba-9e17e44f317e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7023968-c363-4c3d-8473-f16141cbc875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102615c8-c55f-4b9d-959f-3b88eb724543",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5067df-f852-4139-a3fa-aec35a10fb6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f851aa5-6f72-48e1-bc95-2c0f663919d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc1f5cb-f549-4fd7-a59f-9182c7e54db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f1414c-48d2-4aed-8b80-1149dc50571c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cebccef-bd3f-42f5-9d97-d34980e2e6f9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f50286-b08e-4458-880e-8d2c5aaa7c8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f674609f-81b8-447a-b345-b15ce0fc7839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77510a9-bba4-4939-b372-68466a681635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8384591-ad1a-49b2-900f-d2c3275d4a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6f9594-e7e1-48a0-93c5-8af1ff52c7c5",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f577f76-235b-4fcb-aa28-1fd5794fb122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "596fbff3-8f38-4610-ad82-221220dc683c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11fe4ba-aa24-4311-91e7-592ac8adfa99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "090ca4c0-6c2c-4b83-8244-52ae8ad0c674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fee4d43-4153-4ece-ba35-3ccb4b285a50",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e83d722-47ce-448e-95df-a58e34592fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4be3aa6-8659-4c80-a257-a0e556f02b3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb7e5fa-b0da-47ba-acda-f6b534c55e8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "996abf44-7da7-4cd0-8894-7dc0d40f445b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30711dbb-1c3f-4a2a-8c8e-afbe171ee588",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885cb61a-0cda-4d07-8e0b-5f3ace9a56b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3a38a7c-600e-4c36-b66e-5b752454396a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2577207-3a3d-41c1-9383-50aadb966568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8ea24b5-c175-41a2-bcd1-7df70dca9a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0553ae8c-a8fb-43cd-ab28-8b693c0b8728",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a4cdd4-122c-4736-b6aa-9ca08e398f5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2981c4a-8920-4aa2-8ee3-ad52bef4bbee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c8ad9f-0585-4389-9dac-252cdabd01ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a94f2a97-a939-4f61-9101-011e3f9acb93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35367c6a-5b76-4597-b1bc-89fb8839f63b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782bb1ce-456e-447c-a08d-db084761270a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d15d3a1d-fcdf-4363-a2ea-686e1fe35773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea8fbce-8a16-4227-b7dc-a972e735ebd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce5afb03-86b7-4893-9e9c-dd58d0eb5840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc58871b-65d9-4c4e-91f8-26e324b6e71b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba23ed9-8c57-46e3-8313-c8bdc300bb61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62eac129-329a-4221-999f-a53f0499a92e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2967c0b-77c0-4dfa-9329-faef8cf976d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "323023cf-fbfa-4c88-b3bb-885166d2b33d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162b781d-8538-4a28-962e-9eb9914474c9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42bd4ed5-dea1-4034-af6f-d4ad0e959286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a246767c-72a1-4e87-b1fc-1bb6351a1f06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e3e2e6-2766-4a92-9dad-710f0b20d37b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1e4514-f981-422e-81c1-2d10e906ca7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee90cb43-d908-4f3f-874c-fc58bae4de56",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8df2725-8ff6-497d-82e6-2381b15a5495",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a122c37-feb1-4c6b-b95a-cdf00ac27a02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efefe622-ca25-4941-8a58-5d6a69fa3329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0fae64a-de7f-4032-8e0c-9920be9a2d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1990e7-84bb-4ed9-ae37-75fa9ea82da2",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de14e8a3-e53b-4c73-abe1-12361f22a000",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "813f7fed-094d-4f62-987a-4ab114934edd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18f1d11-a9d1-4120-a9c0-8302993a5daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f0aaeac-8f72-4f2e-ad98-c44788f40e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49cd7ad-c015-4ca8-9685-466bfbfd535b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28b7ef1-3072-4896-bb2d-b09fa042b3ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c67acd43-0ba7-4739-b996-5aa168b0a159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2622f3d-e233-4a71-9b1c-85c63f81ea75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b9e71ee-4fc0-43ba-859d-038bc177c952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e004594-acf5-46bc-a69d-a018182c95c3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6726037-2086-4794-be52-637bca19b9dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2565f07-a3c7-477f-80b0-8994abc23436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b5d195-e0d9-452a-a7d3-1284b30ca317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95707719-507f-4467-aca5-45f758d91e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b77e42-3105-4f9c-898a-2deac2523186",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0bcd93-b458-48cb-a5f6-77cedba3e508",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "244682f3-5872-4b1b-ae62-8509c5deaa83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b11d90-9148-4e4b-8d50-6f707f46dfb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e75dba-5200-428c-96d9-4402315dbfed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530d6715-556e-4949-9809-911a5ad77dfe",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242ce282-fbc3-46bc-98ef-00cad1c484b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d50addf4-6b40-4f69-aa12-a17450fac918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b59a60-2508-4a4f-896f-1b0d5d42eece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26d19df1-d064-4c8d-9aa7-0b50d2312345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c181fe4d-87d5-4feb-a91d-2d71cbac6dfa",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa3f5e7-77b0-419f-acfc-49f94fd7f02d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74de1c97-ab48-4b51-9340-44dbc9c0052d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eebfce5-1dd7-48c7-8c36-1ce333dfcfa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe45d4f-224c-41d8-b4d6-d2e3bcdbb81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059a1490-b67d-47fa-bffd-9d12ba39c5e5",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9ca537-804a-490b-b77f-f0554e386f15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a706a16-dafd-4921-bc1e-c1d3c1678332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "142a9371-9e4f-47a2-8b22-8a7e27eeb459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b562adbb-e6ae-45f4-ba29-6ddba1feee42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d4e927-da6f-4a61-a934-40dd15c8f5a2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb8d94a-0c9e-41af-b3d7-0c97656d6e3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "182fb93d-483b-448b-9129-5c39b1331624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "540b30f2-0d40-4946-9296-aeb99e7405e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7377a5a9-fc53-48e5-9f76-86556eb13f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9c07c9-dd41-4f74-9d7d-566650186eae",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f589c38-a4a8-4a49-bc97-cb5ed14957b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b782c49c-8475-4ba2-ba6a-851da5ce8df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3a769f-b302-420b-a073-da731207dbf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94e5ca28-d8d1-443d-a001-bc4b65b103b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5134c2bc-1638-4dea-a29d-8f010711f212",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6b74e6-a54a-4adb-8f34-c7bdd13a9fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e56b9b26-ff3a-437e-8c5d-55d6a648bd0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4bd3c1-b54f-4507-bf3d-36c1b1da311d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2494688-9404-4233-b1b2-1928d0132088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9cee795-f9d5-4afc-9f18-f6858fe1b844",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d2444e-595f-49c7-91de-c885d8acfe5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46435247-c533-4f48-8b16-7c9df0bfcf69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75168a0a-7154-4453-bb9d-c655b516a2d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b516662-2280-4677-803d-60be8ae055d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348d8606-1c2b-46a6-b562-e143e37c8cdd",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd6f39f-697f-4784-8c9d-5722d8f6602a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2cac435-8f71-497d-bbde-c25765dc66b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5569f15a-87e1-465d-b5ef-ca4ae4215b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "876693c7-ad4a-464e-8244-d07f45a23070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58983d3-fc90-4749-bb81-c0669f2f0f06",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e07e1a-3363-4859-a09e-e9a8d1a62f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f436e2b-595c-4330-a53b-bb90eb596961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4672be5d-980a-453d-8f7b-819853d6d17e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46493f17-d599-4221-b866-f7fc072470aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82fb6470-ca74-407d-85f5-23396b666821",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23802b4c-5aac-4a0c-b5ca-095bb11922eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67dc6ec5-2578-499d-bf64-9f2f0af27d3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7dd2a4-8ec7-4e1b-be60-7609cad0abd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6667395e-1839-4aca-9aee-0627bf8fd093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f01b3e-f60d-483e-a4ee-3ef5b5964cd3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00841d9-ac2a-42db-9fd1-e2b7591d5a9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15670bf-5c79-45ca-bdb4-d3233b2ce80d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c795814f-cf19-4e08-96f5-92d926f8e3db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74da9e1f-1267-49d1-950b-124718366e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614d79f5-8d55-4ef0-abb8-e31368385bdc",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc25322f-4b15-4f58-90c6-de3384061c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c63d39f9-b81b-4168-ae0e-c8b250a80d9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9364a0d1-382c-4c78-8944-54f98b22fc78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4df56d1-971e-44a0-9491-f5a437d4616f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fad9adf-84ed-4da5-86c3-f77ca7d34927",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c044bf-bafc-4b9b-9501-a6a24df6e6d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31843b6a-f89e-4969-89ce-717a1e3453c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2fdfcf-5d5c-4cda-9c31-20b32c5c1430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd39d39-a6ad-4b41-8dcc-5c90da3eb0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191069f0-17d8-426c-8e47-34785fef34f8",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452953e4-ec8b-4a24-8532-bc56c5a94e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a0a6a8f-0ac0-4e9d-bfa5-05c5587e878b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "990a208e-850d-44b3-89b7-007ed1de55c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d787e1f-9e4d-447e-af51-45e2e94f7d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2600c7d9-d10a-4944-bd42-dbab9bca560e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898f1ed2-2fed-43e0-8ca4-098e53464942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f532c13-9721-4c6a-a918-7cc881063708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cac9932-a7ea-4835-9fe3-116affe78673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07523aa0-1876-4dd5-a173-1a8f25150c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223bfde3-c070-4edc-a92a-53d4dcc1935a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a23464-b3fe-412d-815c-3f82fda79c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53378d44-f146-4d1c-8773-521ebf6c758c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d188cc-04bf-4018-9c25-da51d7e2d26e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46558961-9054-4aab-abdb-b129452eb9cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965b63aa-689b-40e3-8076-cbe2cdf9ce28",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d722e7-03ac-4f69-8c85-cbd586036556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7101ce20-9fe5-445f-b329-2006b3f2b727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97bbc2c6-bafb-465e-a9f5-3a9fe3e62baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a7ec5df-4d0a-402e-8806-77e4c4c51929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cfa2434-d8b0-423f-ac16-7f5bcc8dc664",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e885c0e1-a679-4458-9ac6-efa8e3f0b7c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35950e7b-cb5f-4145-bae3-b597ed4a5dca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a8d202-ebf4-415c-ab40-a3286fdc834a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa9c3ca-7128-474f-9b55-0527e4291b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74782719-de96-4d89-b7ba-62ba59f89a15",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e1d201-047d-4f99-9232-df1d6cdc2f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd0d8548-651e-46cf-83b4-1a5f740ca33b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "728ce2ca-3338-42ed-8f40-4eeeadca5d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b82f6f94-9c43-4ff1-bc4d-6e83bdb08e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9468b583-811e-4f4b-884b-4069161b2099",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eaf8005-784f-49a4-8eb4-8d196e0ced86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e5e5af-48d8-40f6-b884-e86115f65b88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d632ba-f428-44e8-b195-c85610842b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e641bdd-61e6-482c-9f78-ffa45e3d7dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8ac002-434f-4144-850d-2e4249a01adf",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926d07ab-e831-4a96-a2fc-4f8d7bfe968f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c09dde9-39d7-4689-a225-767f0aff7fd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5496bd0-aed9-4018-b434-7cee5c55c504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cebc44d-6437-4f31-850a-ea89958516ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8a670d-a533-458e-973b-a12c793faac8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2452e7da-eee4-4f5b-8e0d-489fb5294b2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39965c3c-04cf-4340-b911-1158ccafd655"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d866749-6374-4a2d-8679-270df80f5da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fcead67-5e82-4b5d-88e2-d0d3b9c77f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43eaa6d-555f-48b7-8648-e183e7abff61",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56579fb7-0a33-45b5-9b69-3509dc1ab0f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0aefc43-f571-4d78-ba8b-58a75b543f19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f957242c-4c3b-49a3-a294-7f69b20cf49d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1e17952-05a9-491a-8a00-6682080d87fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d08c31b-bc71-4d03-869c-ab1e43e5b27b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c33bc7d-0494-49a6-b333-2673b6fec306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "088f16b9-885d-444c-aed5-9a71f01c5792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3e8607-67d5-48ad-aa3d-0ed7b77002ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dbc0689-e316-433e-b8ad-2002b5a9f139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d762cd-1d08-44b4-acff-abaa4ca47624",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd7120a-6441-4fb5-b84f-269d819b7795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a2dabae-66fd-4f35-8ad3-a0d2f1159961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "393b0d5c-baaa-4aac-9117-269089ccaa4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72da5682-4ed1-4fd6-a5f0-1ec2cc7ca53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40454942-f541-46d9-a305-e495d641e2c6",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ce831f-acb3-4207-bc67-91fd13fe6a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "008c5f7c-af39-4de4-a261-672fbbd4796b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4acb738-505f-4f2b-a8ca-34d5fe8ef6df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "415804cb-ffb7-4f20-9c9c-e042d4098d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381ab5d1-6d34-470d-a6c1-3c8dc6b9b9d5",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37dbd129-c00a-4489-81a9-48ac8dd68338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62995d06-1ff2-4039-93ab-b1c31f2468d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b2ae30-a770-4b2c-a8ae-b7150eda68f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df484d8-dd5a-433e-8d93-551b8ebe6577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cffb24ae-a141-4259-b60e-9cf20b45928f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1127e6-57e1-4d35-a4a9-1bc106019258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a954dba-85b7-42b7-9be2-aac41759b5d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff524256-f0b4-43f9-97d5-27e6066f2d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45832b8d-0e8c-4902-beea-0b08fd86ae2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb4b407-2917-4607-a310-60a237d4c525",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b10f6e0-9017-425c-90f2-51be3bc37f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9c7d417-8bb4-42a3-a5c1-8e1345a01a0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5a2920-a006-4e2f-acc0-9bbb5fdeb037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4705492a-743d-489d-baf2-1241041913e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e51a63-cb08-4b08-9c1e-7f17c3c31d2d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ee7913-8b8d-47c5-a87c-b3fdc786b655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da07da07-5a38-4ebb-9f50-60bd7aca650e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45040147-1a52-493f-9352-0c720ce9c735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7213675-d0fd-4c22-9673-92bd496176e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc21cb7e-003b-4ac7-ab48-e4621435af87",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c146f6d-6316-484e-8d0f-6024960e22bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d094017-6a90-433b-bcc8-33e08589808f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ba1ee7-358c-4e40-8d13-7496d1d8ee55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1759349a-4a24-4ae9-bf37-250737b95398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53f0f03-03f4-4483-8316-78ffa4dd9cb5",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482dcb23-18a0-41be-95ab-2016ffa12c60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4475db2d-90bb-4eb9-a5a7-4272e7794272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b37b6d-03ff-4065-a54e-fea9f9ad1a6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fddf391-8024-47ba-b29d-4e14842aa73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e524676-267a-41ce-9c07-351845af6b16",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83d813c-1a8f-4046-a245-671595f37142",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bec13769-8ce3-437c-ba53-83ce144be6bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a4901b-7ebb-40cf-87d3-10220b38afea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa76c432-0dd1-4613-a153-80becc497066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c9ab35-28ea-495a-8dab-1401c5545b9d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed09f1c-9966-4109-9c29-10c643dbb7e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f250dbb-2295-45c5-b156-e8e9adb19872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5acf409f-1a16-40b1-932b-8da71c800ac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9196198-d24f-43c6-b225-42de3cce2499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e720e1a4-268d-4460-9066-67714b236194",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314f84a9-d58b-4fcb-a738-a55bcc762bd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffb07a88-50fe-4f35-b0c5-a91c4a9ea047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe75f0e3-b6d6-4389-9d50-853dcde972e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7878e2-d69d-4c60-bba4-aa368a5114ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996ce01a-5386-429f-9e2c-b1cf3781ea42",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9361af-1e0d-4c4a-84ac-421ab8dabc9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbe86de6-1d18-48c2-913b-25d5ebecad84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca53c2a9-4157-4543-82fe-30f40c44d6df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f20ad73-2819-4959-8219-36bae5a5ea81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740ab0e6-8d90-402f-9d23-70c018d568a8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16679b12-dc46-43f3-8ed4-4ed7249e9ccd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c3a0358-d00a-472c-b700-527c7987a721"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0686f953-059c-4260-ab3b-a20ef9dd3a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7eda6c3-8772-4265-9133-0605238a58cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f613338-8929-44a1-943a-03feaf00092a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8acad1-30b6-47ce-959b-b99fdaadd9de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e58ce94-4391-4454-aacb-c14c402e3ef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6390fef-c19c-4850-a9bb-ce424aa1d950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d20ecf5-c408-4731-8e0e-0804327f6861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2877de-9223-4fc4-b69d-011ba4a624ff",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ef80cc-ab46-4adf-af3d-dae09cd2621e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb421ef2-d936-4f4f-b9d3-8de4c34e2be3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf42080c-4830-4c6e-b08b-2d472108cded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d645b5fa-1064-4a4c-87d7-dc06171fb107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8e453e-41ed-45a4-8f14-2270b823b19e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597e9e68-afaa-4778-b634-e5c24075c3b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b995682b-6de7-44b0-a88a-02c971fad99a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "466166fe-1a63-4c26-8824-f872462caf4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea752a45-08c6-4b08-9ccd-79ee404113d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e02a43-89ae-459b-8962-2da1f25d8cbe",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3100eac0-5ab9-4cad-880b-b29a5680a095",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "607b88e0-2119-49a2-9011-33ea4c94c258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc601b29-9816-41c2-b54f-5463e95a48f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f081812e-f76d-4ef2-8a8e-956dfcf958be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0e3079-1673-4045-bd63-130cf67254e3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb1dcd5-9177-4190-96c0-c395044a3f11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c78c5a35-60cb-49b7-85c0-ee4eb7d75ba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f4d557-769a-4748-9354-44e02a6c1d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6fac8ff-147f-45cc-99fe-fe2026ae5885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efdd875-0449-4953-b229-7f649632a73c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3cdc94-2364-4095-a874-993c5f6ba6cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb73168e-b17a-430d-a981-8994fae29b0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8bf8e1-666e-447c-a18c-633eaf6144de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb14fb9-0f80-4e1e-9ef5-dd87041c0024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433b8780-ef88-4f43-b6d5-198d4bc2d4df",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "417b110f-453f-438e-957c-6e7b94495715",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99100981-0ec6-4dcc-97b3-8863689efa31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b110e5-9b52-4059-8d33-77f25ed821aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a79b33-1876-4916-a5c4-6ea19bec41f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da687e6b-6704-479e-92a6-59ffa05317a8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad773968-c392-49e7-be9c-0ebef084a797",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9809a672-0144-4654-9ac6-ed466180c28e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94dd86e0-ee92-4fb1-b3c0-f6d92b089fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "925cb54f-1439-4221-883d-cf838dc9a242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906a7806-31f3-4ac0-944b-3a6c638e5610",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c19f44-c9e9-43bb-88bb-cefe7cb0fd61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "364c0735-c45b-4f09-ab9c-364491ee4aa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bee7808-fe5d-45fe-8ffc-a2ba3400ccdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0128e077-05cc-4abc-bafb-15e8c57ec39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87bd3c3b-e774-4828-bfbf-0b9c7075aeab",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b771c0e9-8a45-4c84-9972-ffc3de65254c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fe20dfc-5c41-486b-96c1-af585a99389e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7abee3db-fc24-4abe-b087-43c68a3d7d65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9639099-6a3c-44c6-bd80-4156858f0167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da53aaa-9f8a-4eff-b929-b483e3cc4240",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249b58ac-cad4-4dff-80bf-8df997b235e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb1b9ad6-8486-410a-935c-f9bd075d7ec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "644956b9-0415-4461-91c3-d9baa90a45d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5b2a739-7e95-4922-8b32-a9ae15f0e4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a193d691-ca6f-46b3-beaf-b9dc42d33789",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deced0ee-352d-438a-a50f-795cbe3c562e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02d0fe70-5346-4241-8b4f-56a049edaec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c54841-bae1-4d7f-b2b2-0572951dd162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27aec2ba-97d5-48cb-8bab-3e0612506d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253e8cb4-a246-414d-a97c-ee4ff7607c07",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a827df8e-ece0-44f9-b486-e77d92b27953",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb76945d-572a-4ef4-8e03-09f37f7157c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6fa79a-192c-471f-98e2-e3bea41daaae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57f6839e-7de2-4094-b29c-c117a3c23e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3560ee70-56a0-45ee-b013-8d920b5cdb0b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8c9666-09ad-4340-ba0e-3840f3db0a13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0f55075-0c09-47f6-90fd-dc1050530280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc328c6a-e510-4e67-ab16-69ef9da3ec48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec4a5e7d-f2d7-4914-aa0d-fce9dad50b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b9576ff-c8e8-473a-9e0b-71f26c4f2ba5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2e9976-5e6f-4988-91a2-8d39e263607a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "584664c8-ff6c-4016-9462-8fd6132f5851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7c0b78-cf57-4a1c-8a1c-bb556a59af71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d37afea-0d24-425f-9152-749ff436cd0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b79a753-49f2-4ab7-a2f9-cc0f04b1d4bf",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ddb9a9-9a36-4e0d-bb90-b0550e255c72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07be6a90-5da7-470b-bee7-0c71172144c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6adf15e-45be-4a28-95c0-a2b9fa15f93e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cef1a9b-d8c9-4f28-8728-ea22a32e0703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f398619-4951-4ccf-bcaa-06a39c60acf5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f691c4a-75a7-48ae-a706-4983a8d14660",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28c096e3-afb2-4477-8f6f-b1fcd29f3a67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "245c7579-3e6e-4c79-aa27-4d93f237dd95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "283fb4e5-405d-4460-8f6c-b3b5b6ed13d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f4b403-a2c5-4115-af69-a6244a9c6f73",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7528a76-d14c-4bc7-ac3c-5c96fd9bddea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7197c071-cf26-4731-94f6-fb610eec9974"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "239e5a41-3ebb-494a-86d4-af0d8a559518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f98ccdd4-2bfa-418e-abde-1ac5170c5a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298190d5-54d8-476d-b067-0ca8cf1cddea",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cddc5d5-b3b2-46b2-bbbd-ccc39ee76f98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0906e2cb-b550-4ffd-a693-84f541cc1f16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d0424a-4ba4-4932-ba78-c71a908dc1fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4558993-02e1-4cfb-b35e-4fd1be2be782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50705710-9cb6-4256-9abc-df8967bc7277",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a107cdbe-91df-4e78-9af4-ac8063af03cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc8322cb-42c0-468c-a58e-a1803b2663f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6abeb0a-6d95-45f0-b45e-c2e3eee4fafb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd61c912-0fc6-4e8c-bd1a-a7ccf0c18f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00236f7a-f42d-4034-bf14-b3575b925bc5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9bd7d07-4e9c-49c9-b9a8-8bb4aeb4a5d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d7c976f-e747-4537-9f1b-85091b04651d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b110d2db-a64b-4e7a-8355-2bca764f29d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01acf4c6-033d-4603-a5fc-e4ae1e2bf8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da17fd68-c34a-415f-8cd6-b867c9b42313",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c5e927-edaf-46f8-abe7-d74b1ee75fb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58c68a04-1b66-4fd9-91b9-8f496a8de77f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7576812c-5c3f-491e-9fe8-ba8c18734f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "645308d7-eeba-4f29-a5af-5ebfc70af820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8198fb22-e582-42d1-b285-beaa0294e8bb",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33970e44-fdda-4fda-93db-9dfc399d332b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d04be71-9777-45fe-ad12-bb771c68b303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3950bd62-87e0-4156-8a33-70a391c6c7db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "889b7b03-28b0-468d-9c09-d7699d515b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467cc041-b72d-40d4-88fc-3a173830bf83",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21466da-51f4-4a21-b58e-0507b323e39d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4509b5e-5aab-429b-8504-28cc060181b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f3dd06-2838-4d8b-bcc8-cd1fbe7e33f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "761984a8-183f-4755-8e6d-421bd4bbbe63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c18cc85-64ad-4067-96ab-347bcbbb4dc4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce09757-60de-42b8-b91a-ee492447474a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e42300c-d1b7-4b7b-90f7-84a488e93eed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb2ce9b-0416-4dc7-a48e-99c6f7603820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d77d79e-bd7f-471f-ad51-52021600883e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a0d5fb-0fa4-47b1-8c37-c6805f5a6d3d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e516fc7-658a-476f-8b9f-afdf582b8a28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33ac0c3b-06b1-4249-8e2f-53bf2774c497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5ea90d-50af-4832-8098-a2fe6b824096",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "049ecbe5-d550-4a21-a9bd-92982f82683a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968aca26-59ea-4470-9117-7993d8e1fd8f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f84a84e-1c9a-449f-86b7-1d7596625b06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0df84cac-7791-4f8a-a9c4-4edd3e99630d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "465f54ba-98cf-4ceb-90d7-f70cbc25e69c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "364ef4a6-5d8b-4a40-be65-c2ab4a1e3d43"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39da3d3c-d401-4632-b9ff-1b1653f28792",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5683210-c2ee-4c8f-940b-de6238093175"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d68b176-a3ee-454b-ac16-2c04433e04b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26753566-ea0e-4250-a117-1910bf730721"
                    }
                  }
                ]
              },
              {
                "id": "7406463e-a22c-4e0c-9366-56daddc359bb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "560da44a-f73a-4dbd-800c-4691530bc560",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba93dfc-93a3-4004-9889-4c71d4ff4743",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8d4eb319-44ff-40af-ae9a-dcf85fca9c44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de7429e-c234-4943-bedf-5383a8b09805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79b6cfde-84e8-44c5-86f9-34c8faa09a04"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca198c17-b963-4d53-97de-6a82bc8ef32c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd5be83e-10b6-4d36-9370-6d3e7dc1d6f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a8db5d7-5999-4bbd-a849-04f98339da8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d6c4b6f-6517-4af2-8e44-612bd93f4a06"
                    }
                  }
                ]
              },
              {
                "id": "d10c7a9b-0190-4c46-88f1-d878f77a9c40",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2c05c3f7-aabc-499c-ab5a-85ba53d5bb68",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6baa35cd-3c90-45cf-84ae-3acc6e0fbc58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0b8f674e-4a52-4535-b89e-8cf72d2f83ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39bb1857-27fa-49d1-ba12-d5825b64d230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "277cf76f-9905-4c07-83ab-e97d3e88a1f2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "73d8588b-06d6-4995-a14a-9128245d7816",
            "name": "Positive Testing",
            "item": [
              {
                "id": "66dbb051-0d66-4c7b-a118-c30d407664f8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b4fff01-ef8b-4c9b-a7c4-dc9d95fd69d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b159695c-7f53-45f6-a95b-99ae369fea5f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9d179aa-299b-4201-af12-8b066f1a0ff0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbd38079-bce3-4297-8724-d4b852264ac4"
                    }
                  }
                ]
              },
              {
                "id": "ef79e385-ef3f-4ed8-964b-76849e84fb19",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed3e482c-099c-4bcd-86ad-8021d7eba273",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "76bd57b9-a563-4559-9a23-b59529ab638b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b6d0cc4-993f-4824-9134-cc4f147683ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e936f76b-7d03-4a2c-b27c-de69108285b6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a979c180-ddd8-494b-99ae-5adbfb181fce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0279e474-d634-4398-b92a-93de477fe22b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f1f1bce1-ff41-4613-96bd-40f3cbcbd42c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b7e94683-0703-439c-a0c1-d0d55975ac23"
            }
          }
        ]
      },
      {
        "id": "663a597a-dc1c-4014-a0dd-e9382451b193",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0c3e0cb1-e4ef-4a18-8b2f-899cdcc7027f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2087dc79-3649-4c3f-ab89-0ff89b8bb99f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "07f4425b-3aad-43e0-ac45-88f59823eea2",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007c8516-6f33-42b4-b3dd-a32a841ab9c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6ffd59b7-0c60-40ca-8d65-dff836adbedc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c58310-48b0-4415-9259-25466c44abb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d2ba914-a9e4-4704-9928-9c7e6e77eafd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "280b9aaa-705e-4735-b536-a2b3c8c64502",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fcbbfdbf-5c46-482e-ac34-bd800397013c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "11dd61df-d5f8-4eec-b36e-e856023ab220",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8638a35a-8db2-4435-958e-27fe3c8a98b6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b41bb1cd-8f13-4b19-bf60-58d207929805",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d93af8c0-4181-4d66-b86c-4510e7300b65"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f13d59ce-c19f-4028-bb76-b14e639b61ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2bb6be8e-eab1-4b3b-9733-2cfaf77f7a0e"
            }
          }
        ]
      },
      {
        "id": "973516c1-d25d-42c1-a793-e3f3ed8d6ab9",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e2719b2c-f7fd-4179-9ff2-400eb8dafd72",
            "name": "Negative Testing",
            "item": [
              {
                "id": "931b0255-3109-4683-a0aa-05daee0891d3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "79629c40-63ab-418c-a21b-5c84f5b02417",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5930f0-26eb-4841-be59-74e8db6ebe7e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc493435-3ab7-49aa-9c53-a707037fba8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36306c9-b8be-49b9-b087-66bfe6f2d1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d6ca71dc-b3ab-4db3-b9a8-fb265c30dc68"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "577db0f6-8590-4c14-b997-9c36f835ece3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "753b7de0-3ccd-405a-b72a-8a4bf0e832b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "380cb92c-8869-48ff-aa64-2dbdabf8f6bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72b487ce-06ec-4575-a34b-8b7be06175ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0880e87-1aba-47d6-8564-467a6c7af848",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b84f0422-b361-4d71-87c8-1edd7032acd8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e7d04c44-5684-4b00-a32e-44e9dffc93ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4b1f7717-a3b4-4014-b3cf-37cd4e5d8ae1"
            }
          }
        ]
      },
      {
        "id": "714431c3-27d4-4307-8b4b-f7aa3fac32c3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2df49814-026c-43ce-9a98-324d328c1d40",
            "name": "Negative Testing",
            "item": [
              {
                "id": "df53c940-c883-4eec-83e4-4f026b0da1dc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "47a8f673-09e6-412f-9bdf-e959338c8ea7",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184c62dd-43c8-41f9-92b3-695f1f3f53d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7626bcc5-dce3-439e-b315-7f88b8202f97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22fde483-7981-48ed-98a7-ec79c3f75c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "67c06a9e-6c91-4996-81c1-2363fe4ece4e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1a9b986-bb09-4157-842e-7e549abf9e3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e847d82-00af-40df-9320-e9a625b41a32"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "12e2139f-fabb-4e8d-92c9-9441b014e210",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d534e7f6-49bb-4a32-b1d3-362b7477ba3b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5be1ad7b-2a19-4e48-99b0-0c408f827c5f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cf41848b-0610-46d5-99ef-68998b170dbd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b6396779-240d-46e6-8bef-1331b60d1ca0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6dd392b8-d867-4773-8eee-8cf0c8c57b0e"
            }
          }
        ]
      },
      {
        "id": "d48596c9-d82b-4e7d-aed0-025431982d4a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2d515ca4-915f-4f5d-a898-14efd1a08a90",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91a046d5-357f-4459-a283-7bb1b94688cc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "195cf8d5-a79a-470e-bb74-6321eee8f25e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9731a2e0-b3db-4472-b311-4ce6d3997a1b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c52b5fe-0b55-4abc-affe-96ce6ac54a69",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 237.83859649122817,
      "responseMin": 9,
      "responseMax": 8960,
      "responseSd": 1102.2727725826214,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699490047322,
      "completed": 1699490124623
    },
    "executions": [
      {
        "id": "a4d29ceb-8c52-42c2-a236-c18f1f9cc029",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c0711500-23e2-448c-8afa-4ced7729a076",
          "httpRequestId": "11a9886c-b65b-46d6-80f2-e75bd23f34e5"
        },
        "item": {
          "id": "a4d29ceb-8c52-42c2-a236-c18f1f9cc029",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d8ec3868-f1dc-4723-a091-890459370b3e",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "4636482c-1ba4-43a0-9ff0-d42dcb6384d1",
        "cursor": {
          "ref": "e1ca8010-1691-4f92-aa9b-c84b370d58a0",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7a82dde8-7279-49a6-b181-ec81b333a2ee"
        },
        "item": {
          "id": "4636482c-1ba4-43a0-9ff0-d42dcb6384d1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "19a4aef8-b4fd-4fa9-b4ae-f963d8a17463",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "14cacfad-3ae2-4580-a4f4-6fdff8532f40",
        "cursor": {
          "ref": "a8ca0e53-1271-40a9-8bb2-dde6c15ae9ff",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5fae84c7-6aec-4300-b9c8-cd04182cb1a1"
        },
        "item": {
          "id": "14cacfad-3ae2-4580-a4f4-6fdff8532f40",
          "name": "did_json"
        },
        "response": {
          "id": "a59e8357-fd9e-4a9b-9363-9053d0090b8d",
          "status": "OK",
          "code": 200,
          "responseTime": 1442,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef429fe-3b2f-40a2-b3ca-b41ca1098fad",
        "cursor": {
          "ref": "7528124d-ed75-434c-bbac-a2d7aa0455fb",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b1045ebe-e300-415f-b64f-3a7a0437b872"
        },
        "item": {
          "id": "9ef429fe-3b2f-40a2-b3ca-b41ca1098fad",
          "name": "did:invalid"
        },
        "response": {
          "id": "cc825c48-d801-4802-a9bb-d47e1786d812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef429fe-3b2f-40a2-b3ca-b41ca1098fad",
        "cursor": {
          "ref": "7528124d-ed75-434c-bbac-a2d7aa0455fb",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b1045ebe-e300-415f-b64f-3a7a0437b872"
        },
        "item": {
          "id": "9ef429fe-3b2f-40a2-b3ca-b41ca1098fad",
          "name": "did:invalid"
        },
        "response": {
          "id": "cc825c48-d801-4802-a9bb-d47e1786d812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f86ab6-3eca-4cd3-9fdd-a6c49d18c39b",
        "cursor": {
          "ref": "e3dc809b-a9db-4b4d-8a29-1a82a9469d43",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "852cb3da-9301-434f-9e3e-1f283d8270d9"
        },
        "item": {
          "id": "20f86ab6-3eca-4cd3-9fdd-a6c49d18c39b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e57c7346-f202-4d49-9519-1a19ea0886a2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 180,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b5c6f5-6745-40f2-bb5e-e81adb246be0",
        "cursor": {
          "ref": "795709ca-720b-4352-b123-056d66770c4a",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7b6b319f-4838-4523-b1bc-196be3b8ef7a"
        },
        "item": {
          "id": "53b5c6f5-6745-40f2-bb5e-e81adb246be0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "38eb094d-5280-480f-a5b6-d531a33f0049",
          "status": "Not Found",
          "code": 404,
          "responseTime": 67,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15baf8e1-dfb2-4ab5-9384-fb9cda05f786",
        "cursor": {
          "ref": "c8f9fac4-636d-4d98-a4cc-3723cbea7e2e",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "43ee59f1-29ce-40e7-a26e-9823b05c6a46"
        },
        "item": {
          "id": "15baf8e1-dfb2-4ab5-9384-fb9cda05f786",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "034da6d8-13e5-4013-b3d4-2d02cfa30abe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49703ae-3dc1-4929-90fc-cee7cf21e88f",
        "cursor": {
          "ref": "ce36475d-2588-4fef-a60a-800de52310b1",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f3fd8a94-2690-4f6e-a5ff-d494c331a193"
        },
        "item": {
          "id": "b49703ae-3dc1-4929-90fc-cee7cf21e88f",
          "name": "identifiers"
        },
        "response": {
          "id": "31576e85-0d1e-4297-85c6-dcbc9e1144eb",
          "status": "OK",
          "code": 200,
          "responseTime": 1232,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3520af0-77ac-4083-af23-3fce7a6b8dac",
        "cursor": {
          "ref": "e7361acb-c4de-4009-99fd-89bd08324bad",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ba643cc3-ac47-4ee8-9baf-1f4b2c295ca7"
        },
        "item": {
          "id": "f3520af0-77ac-4083-af23-3fce7a6b8dac",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9a771f21-ee36-4a3e-b377-84a922709a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79eb5117-89ee-46bf-8591-166283b1d45a",
        "cursor": {
          "ref": "c82da290-2c2a-4f5d-95f7-0d2a2d9bda0d",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bd53dd41-2e7e-4039-b3b0-a88c899a3a7e"
        },
        "item": {
          "id": "79eb5117-89ee-46bf-8591-166283b1d45a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0924016c-3c9d-4bf3-a02e-cb8c18170e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c878929-7cb2-44df-af69-8bb3a6f04cf5",
        "cursor": {
          "ref": "20990f41-eecd-4413-954c-c9c0a282161f",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b94d45d4-8f10-4438-8eda-1d32b8aabc46"
        },
        "item": {
          "id": "0c878929-7cb2-44df-af69-8bb3a6f04cf5",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "169b046a-ad16-4669-b1d0-e46a924a9f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3580eedb-0082-4fd9-8cd9-1bda44cee37d",
        "cursor": {
          "ref": "7e7cf16a-fe23-405f-a508-92fd12ab7968",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a08e436a-d46c-47b9-b494-4fe20c12c63f"
        },
        "item": {
          "id": "3580eedb-0082-4fd9-8cd9-1bda44cee37d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d03f4c30-71a7-483d-8356-22c6a1b011bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bd63a2-cffa-4841-9ff2-5e5500d21a4d",
        "cursor": {
          "ref": "35450aac-6cb8-40db-8c41-d81d3f9982b8",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "06060910-ea7f-4879-9ab9-52c1097c4e22"
        },
        "item": {
          "id": "d2bd63a2-cffa-4841-9ff2-5e5500d21a4d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9e121c86-76ca-4073-b0df-f0f7779ac300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2930e1e6-f815-4c32-9f02-1768fcc69303",
        "cursor": {
          "ref": "6a938af4-ad24-4b65-a748-86b526c7a5ad",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1c5fe550-9e67-4e96-bbc1-cf23fe7a5f8d"
        },
        "item": {
          "id": "2930e1e6-f815-4c32-9f02-1768fcc69303",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "31e1597c-89c4-4d54-a6c8-27380f8e4108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ddb7489-f9b4-4216-9e2b-f7b7c5dc22fc",
        "cursor": {
          "ref": "ce079f0d-6dc4-4c82-8e1e-533297738830",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d3342517-0b77-4c6d-aed7-6253a4996d75"
        },
        "item": {
          "id": "5ddb7489-f9b4-4216-9e2b-f7b7c5dc22fc",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "300b154c-95e0-4d4c-8736-b5b80e1611d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af9d5f7-9786-450d-8daf-9c21f782b0ef",
        "cursor": {
          "ref": "ea060645-303f-47da-af5b-85ae6ac131cf",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6d919597-903e-4777-9d5d-bd9528cdea7c"
        },
        "item": {
          "id": "4af9d5f7-9786-450d-8daf-9c21f782b0ef",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "bb852a25-2885-4dc4-a3c2-6e4267a512ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59dc7ec6-8d1c-418a-be72-42cb4fbe6c6c",
        "cursor": {
          "ref": "aecb754a-76b9-4f19-b133-c3510ff16707",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "915ddc07-fc22-4854-98cc-56810f72f2c8"
        },
        "item": {
          "id": "59dc7ec6-8d1c-418a-be72-42cb4fbe6c6c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a45a435c-2c5d-48ee-ad96-c141151c2db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6749e9fe-7aeb-4787-8699-7fc092719f6f",
        "cursor": {
          "ref": "af9c8755-3d61-4055-b7d8-ed59925d9c72",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3c2b5c6a-487c-467c-b731-41d17fea1879"
        },
        "item": {
          "id": "6749e9fe-7aeb-4787-8699-7fc092719f6f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3a46a3c2-4d2e-4e7d-8221-7783cf4c6819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a8be94-138d-4020-a4f8-0dbb0b28fea1",
        "cursor": {
          "ref": "defc97f3-4c5e-4416-8b62-5460ac8d4abf",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b01ace7c-4ebb-4777-b82c-ab70039051c6"
        },
        "item": {
          "id": "d5a8be94-138d-4020-a4f8-0dbb0b28fea1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "993b8cf2-8598-4ce6-89c2-40789a352b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41fe81c4-b20b-42f8-a05b-e266a64dffb1",
        "cursor": {
          "ref": "55fecd6a-31cd-436f-a6ed-80628987fe0c",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e0ce6cf8-313f-44ac-8810-3d01c8ef88b0"
        },
        "item": {
          "id": "41fe81c4-b20b-42f8-a05b-e266a64dffb1",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "4fe56147-d3e6-4c44-ba03-1c1cfd111bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "725bb1bc-163e-4e09-a53c-1fb3bd909312",
        "cursor": {
          "ref": "5e55be4b-89bd-4255-9e4f-07a4346c2ff6",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "67552ae4-a212-40d9-ad61-4e58c43195ae"
        },
        "item": {
          "id": "725bb1bc-163e-4e09-a53c-1fb3bd909312",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a957b09f-0f8d-4ef1-99eb-b3e009647d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef0bfe8-06c1-4b69-b234-3eb0726924f6",
        "cursor": {
          "ref": "f8a6fc9b-4a89-4f17-b265-890512d1a7a2",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e998e977-57d2-4daa-8e26-49686bca4788"
        },
        "item": {
          "id": "cef0bfe8-06c1-4b69-b234-3eb0726924f6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "576f60dc-dad4-405e-b257-0273193869a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4c9a40-1b3f-4910-bc2b-3431bd919b25",
        "cursor": {
          "ref": "ef4de18a-bff2-4e0e-8089-fcb5561d515b",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "58caafe2-2373-437e-b288-a785a5071e55"
        },
        "item": {
          "id": "eb4c9a40-1b3f-4910-bc2b-3431bd919b25",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "26baf850-9fb3-48cd-899f-1261ae0352c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6414a5ac-b231-4a96-8ac5-00c13d6a33bb",
        "cursor": {
          "ref": "74fb270b-4574-44eb-8979-1713a84f78b3",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "33b24764-7976-4358-9fe6-b44f08f67583"
        },
        "item": {
          "id": "6414a5ac-b231-4a96-8ac5-00c13d6a33bb",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "af5fb1d1-4efc-4ed9-a088-8bacec334b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c280e439-1175-4db2-91f3-5bbac4e641df",
        "cursor": {
          "ref": "598ca49a-ab7e-4955-b004-3ffb43a252cb",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "bee0d1d6-0b7f-4f71-949e-7ae95b2b2b05"
        },
        "item": {
          "id": "c280e439-1175-4db2-91f3-5bbac4e641df",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "69861ceb-b9b6-4f8a-86e4-0525bc2ff4f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2146af1f-4179-43cf-aede-17a3c66091c9",
        "cursor": {
          "ref": "4df2ec6f-a2ae-4acf-9a90-7084d7b3f2db",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c0415090-5d52-420a-8d05-5f6f9e024a94"
        },
        "item": {
          "id": "2146af1f-4179-43cf-aede-17a3c66091c9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e2eaad5a-7393-446a-95f8-806654b2ba0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba88f4cd-abaf-4362-882b-6d3b810a348c",
        "cursor": {
          "ref": "a09fce4d-523c-492b-9a41-3b26b26bac07",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e2070156-c755-475e-bb00-b68c4c4c87e9"
        },
        "item": {
          "id": "ba88f4cd-abaf-4362-882b-6d3b810a348c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "76155a95-5ce6-4207-9270-315703b534f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335dbf8a-e211-4bd9-81b1-138f8696b0fa",
        "cursor": {
          "ref": "7c29c902-300b-4291-8d2b-958b49efebb6",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ac072ee9-2653-48f5-8a1a-d78904e62cdd"
        },
        "item": {
          "id": "335dbf8a-e211-4bd9-81b1-138f8696b0fa",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e91c450e-e35b-4628-bc90-a620d67ba593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e3295f-3674-43b7-a54d-2b22c7608237",
        "cursor": {
          "ref": "0b3d9df4-a893-4792-97b6-8f20894f2b75",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "704640a9-c82a-4dc5-af6f-2aaf9adb5d79"
        },
        "item": {
          "id": "53e3295f-3674-43b7-a54d-2b22c7608237",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "959fe15c-08cb-4c3d-b916-2d25af4ac273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfa89d6-cb2e-479f-8e43-5ce3374e74cf",
        "cursor": {
          "ref": "c6768e7a-2be3-4588-b575-a321742cd1dc",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b8c68cac-90b4-409a-bade-f4ca98675932"
        },
        "item": {
          "id": "2dfa89d6-cb2e-479f-8e43-5ce3374e74cf",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8e951e84-a55b-4444-a936-e72173f1d574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea978260-1852-49be-aeef-7080a2a689e8",
        "cursor": {
          "ref": "a0379067-e5a1-42cf-a78f-0aa6dadc378a",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "fd5441e4-5490-4cc8-bde0-8df51a8f24d5"
        },
        "item": {
          "id": "ea978260-1852-49be-aeef-7080a2a689e8",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "bfd67aa2-c34b-4bcb-a8ee-bfac1467aedd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd2f7dd-92cc-4776-8970-63920e2b8f5c",
        "cursor": {
          "ref": "979e7eaa-a440-4645-b80f-da1ff1c64c41",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b7c5973f-7c29-45c9-88c5-de709e8d7602"
        },
        "item": {
          "id": "0fd2f7dd-92cc-4776-8970-63920e2b8f5c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "578e93d2-da9d-4bea-bcb3-d8679b1505e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b7c654-1ffe-4792-875b-52c844f5c61d",
        "cursor": {
          "ref": "3a982052-c19d-42a7-8f57-9549809c57c2",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "43530e5e-4b76-4f2e-ae18-e26bba12b5d3"
        },
        "item": {
          "id": "62b7c654-1ffe-4792-875b-52c844f5c61d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "59836716-fa70-44cb-a1fa-ecff2d222dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b62304-dd32-4e8f-afee-307f5b8d5fdd",
        "cursor": {
          "ref": "b2c36a0c-a73d-428a-945e-5cceadd381a2",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "44b29723-f334-4979-b360-0ec6d2a976a3"
        },
        "item": {
          "id": "f1b62304-dd32-4e8f-afee-307f5b8d5fdd",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "07ce8e57-01f3-4e3d-bc5c-03f40319efd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87889362-2c9d-433f-844e-037d008a2343",
        "cursor": {
          "ref": "a943756b-fa3d-4b36-ae65-c66bc14a47d3",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b82f44f2-74bc-4c40-85ee-4da4870e25e3"
        },
        "item": {
          "id": "87889362-2c9d-433f-844e-037d008a2343",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f7696d5b-3a7f-4bda-81fa-85344b3b60ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74dcf13a-e923-4364-9f39-9fac82443495",
        "cursor": {
          "ref": "a3c091ba-869f-492b-ab69-0878acc98baa",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "02e36a7e-68b6-49ae-af10-cde60ac841ed"
        },
        "item": {
          "id": "74dcf13a-e923-4364-9f39-9fac82443495",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f191cd19-18fe-4f51-b60c-0e28ab72b732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82447c09-09f0-4a63-bab7-621cecf329d1",
        "cursor": {
          "ref": "f9fbb4f5-a80d-4637-b1c5-9568150350ff",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1db5773a-5b31-4a7e-b7ec-391b6b59a8ae"
        },
        "item": {
          "id": "82447c09-09f0-4a63-bab7-621cecf329d1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9ccb0c62-9189-442a-b48e-4f8c353d32a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb4cb52-6194-4a08-b8ae-ff3ddefe2199",
        "cursor": {
          "ref": "19cd8303-216c-4eab-9705-7aa1a30416ca",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "71e151ff-15c8-4646-9867-1be9d1e7f1f8"
        },
        "item": {
          "id": "8eb4cb52-6194-4a08-b8ae-ff3ddefe2199",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "dd6d931d-e52e-4b8c-9ad9-68e9171d7186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d47f1d1-e8ec-4f23-93cf-a1a4e1bf95d9",
        "cursor": {
          "ref": "689272f4-f125-4ff9-b78d-74faa7dfdc95",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9ef0eccd-44f6-4141-9fb9-1c73097474d8"
        },
        "item": {
          "id": "5d47f1d1-e8ec-4f23-93cf-a1a4e1bf95d9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a48ca012-14eb-4337-8c0b-bcaf1536839d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c53863-2f0a-40fa-a7b7-f5dee0ec5a94",
        "cursor": {
          "ref": "ecf4c237-dc13-49a3-b478-8370186660ce",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a74a6677-1557-4be7-8d69-d01d5f1fa9a2"
        },
        "item": {
          "id": "e6c53863-2f0a-40fa-a7b7-f5dee0ec5a94",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3412e10d-95eb-4650-bf8f-7606b9e034ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b751299c-0b14-40fe-bbd5-98fadf339f96",
        "cursor": {
          "ref": "4c8de428-4196-4484-b286-83b3d5ac4ad6",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "825f1597-b8a3-4188-92ca-4740fb563c7f"
        },
        "item": {
          "id": "b751299c-0b14-40fe-bbd5-98fadf339f96",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "499f9d0d-e953-4e95-b9ae-8dd7537a5719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66cb819-63ce-4af7-89e6-0442b2d8e6de",
        "cursor": {
          "ref": "7f5de9fd-2288-4792-beea-242672b46b04",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2c987f34-15ac-40ec-a9c3-d22ac1e5adb9"
        },
        "item": {
          "id": "d66cb819-63ce-4af7-89e6-0442b2d8e6de",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "cca99981-a60a-402e-a95f-5fda896846fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc97284-d880-43cc-887f-3cce3fdf06ac",
        "cursor": {
          "ref": "15935758-3890-44dc-9977-0bf8dcc65b55",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f5f6eb42-5cf2-4fea-8e3b-d8d1bd59938a"
        },
        "item": {
          "id": "ecc97284-d880-43cc-887f-3cce3fdf06ac",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "547f5157-434f-4f26-adc3-13a0c984fb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f46f2f7-39b5-42ee-b43a-ed4de17fa818",
        "cursor": {
          "ref": "5cc5ea0a-f05c-412c-a86c-96b7e9573788",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4b9fd5ea-1492-49a1-b35f-9dfd4169b888"
        },
        "item": {
          "id": "2f46f2f7-39b5-42ee-b43a-ed4de17fa818",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "12ad0bb0-f073-44e8-bda4-51cfacf2f1e7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1452,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d75acfa-b831-4a1a-9dc1-7a6ec2c56737",
        "cursor": {
          "ref": "89cc4986-9ed3-4dbb-8afb-9d1385b0242e",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "efe9a73e-aafc-4a35-87a1-490a727ec52b"
        },
        "item": {
          "id": "0d75acfa-b831-4a1a-9dc1-7a6ec2c56737",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d1acd3aa-d860-4972-a5a3-6e2accb61132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd7b1e2-85c6-4cb0-9739-c84d3f4fd53a",
        "cursor": {
          "ref": "5effae50-2ecd-498b-94c9-5ebfaf635ce7",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8696a01c-f384-4c2c-8267-5b2aa6e45101"
        },
        "item": {
          "id": "1dd7b1e2-85c6-4cb0-9739-c84d3f4fd53a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b588c45d-d227-404a-baac-bcf241503942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb8044f-4bf2-4808-a906-34948f63cad2",
        "cursor": {
          "ref": "ad32379a-f364-43ac-9d5d-9293b200cbec",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "962c126f-327b-4bee-aad6-b8db2f53ef8e"
        },
        "item": {
          "id": "7bb8044f-4bf2-4808-a906-34948f63cad2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e4997841-c645-4c61-a2ac-27135945d339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e0e5b9-8bd2-44e7-8aea-cb6b8a47422e",
        "cursor": {
          "ref": "7a6d04bc-da86-4b20-a898-a1772789c557",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "efaabe91-bac7-473b-be98-a5188f831c2c"
        },
        "item": {
          "id": "12e0e5b9-8bd2-44e7-8aea-cb6b8a47422e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "47957242-8866-46ef-8e17-f7b74dcb976f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e60565-db6d-4e56-81f1-854774748a8e",
        "cursor": {
          "ref": "df581734-3328-4b10-bd9e-66afcd607cda",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "09e42701-625e-44c8-8b3a-7b10d7d6a99c"
        },
        "item": {
          "id": "47e60565-db6d-4e56-81f1-854774748a8e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "002f13cc-9610-4283-b647-a69aad5ff998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e014f0d9-f6cd-4d81-b4de-3dca6d21536d",
        "cursor": {
          "ref": "e5528780-7d71-4417-a1ba-a6dd98c2127c",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9887348d-0d65-421a-ab2e-2e37553fa482"
        },
        "item": {
          "id": "e014f0d9-f6cd-4d81-b4de-3dca6d21536d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "41057e0e-2e7d-4e73-bb75-44f76fb1db3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2663feeb-fb2d-4be1-a108-8d80672ecfae",
        "cursor": {
          "ref": "94d86188-caea-4604-bf35-e506c5283b0b",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "02d1f213-7dcb-442c-9372-ee39a5ba49c8"
        },
        "item": {
          "id": "2663feeb-fb2d-4be1-a108-8d80672ecfae",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9d99361d-4a3b-436b-bcb7-67d5f2a0e3aa",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1433,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbc63ac-4f3c-4f87-9a36-347daa43e0f7",
        "cursor": {
          "ref": "fd8818ae-81b6-4301-99bb-b48a9578fd42",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "40cecb4f-c7ee-4661-b790-706707249b8e"
        },
        "item": {
          "id": "2dbc63ac-4f3c-4f87-9a36-347daa43e0f7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "cf310b47-5ed6-4960-949a-b61de0e0531b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03bc6aa-7dcb-4a8a-9420-6e0f5c3dc6a0",
        "cursor": {
          "ref": "a8bff23a-84da-419a-bcb1-f67c7bd319bf",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "60ccf6d1-8bb3-4e8c-91ee-04eeb4cecb84"
        },
        "item": {
          "id": "e03bc6aa-7dcb-4a8a-9420-6e0f5c3dc6a0",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9d5e9a7d-100b-49d3-b4c1-6c7532b71886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3b7132-e4ba-4877-83b3-b023b14506f6",
        "cursor": {
          "ref": "7c9adc9a-1411-4dee-9dea-09e562d2b88b",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6aacda14-e336-481b-ab88-4718291967ef"
        },
        "item": {
          "id": "9e3b7132-e4ba-4877-83b3-b023b14506f6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "53a37fb9-0ac8-48e8-bde0-5449949b52fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb3501d-bdbf-4f13-a48d-eb8593f1f00d",
        "cursor": {
          "ref": "c3a57a8c-5afd-4a86-89ed-1c6b0e96b607",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "19c7e8d6-d656-4cdb-b94e-9cf2270b793f"
        },
        "item": {
          "id": "dcb3501d-bdbf-4f13-a48d-eb8593f1f00d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5059a9a9-dee9-46c9-807c-abb26f7d3a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c165e03f-19b9-4f0e-a33d-e71c794df31f",
        "cursor": {
          "ref": "613bb5d6-992a-4213-b86d-bf08d58e8b18",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2ab7f5cd-aac9-4925-beff-043c8f805fc8"
        },
        "item": {
          "id": "c165e03f-19b9-4f0e-a33d-e71c794df31f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d2caeaea-21c1-47b6-98cc-7f349761ada2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c014472-39f4-43cb-96ad-29548747ca86",
        "cursor": {
          "ref": "3e4c91c0-132b-4942-9b0f-dd1237f4b154",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "128395ed-459f-4d84-9323-f4c934a77c2e"
        },
        "item": {
          "id": "0c014472-39f4-43cb-96ad-29548747ca86",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "14990cf7-63f0-475b-bd4e-a9b09b65b75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73b23a0-0472-40ac-9092-647b8063fc4b",
        "cursor": {
          "ref": "7e3d57c7-f7eb-419d-8c9a-101fc41a270d",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "493db594-3950-4c62-99f1-fba3920517d1"
        },
        "item": {
          "id": "e73b23a0-0472-40ac-9092-647b8063fc4b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "47005121-e018-40f4-b8c0-b62c5107307a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20654e44-b33e-4449-94db-e84c92742009",
        "cursor": {
          "ref": "51f5dcf7-c152-4490-b5ca-a5b0c1926147",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "fc2418e2-626b-4afc-be01-2afbf56f9c87"
        },
        "item": {
          "id": "20654e44-b33e-4449-94db-e84c92742009",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a79e7c48-7e49-466c-bf77-7913fcbd7e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b26d20-c378-476d-830e-2559bbb1059f",
        "cursor": {
          "ref": "e6803b65-577b-4e1f-b0b5-2b97693a6245",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e732268c-d2db-4ccc-9848-088ea574d194"
        },
        "item": {
          "id": "54b26d20-c378-476d-830e-2559bbb1059f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8731d294-e870-41c5-94d2-9026c0e8737b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fccf20e-1276-4287-9b2f-7500f6d8c905",
        "cursor": {
          "ref": "d783b05f-5ace-4b7b-ac20-896759bed9bf",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "130a216e-ef51-4e52-8d32-408948e25cd8"
        },
        "item": {
          "id": "8fccf20e-1276-4287-9b2f-7500f6d8c905",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d6736251-1f2e-4372-a3fa-fddd337fb6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2293d8a-0a6c-4111-ae56-d45bf153f3a0",
        "cursor": {
          "ref": "c1658e86-c6e6-477a-8b71-e4e88ed1b4ac",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "aea1ebf8-0695-45fd-ba10-f55522ec4b66"
        },
        "item": {
          "id": "e2293d8a-0a6c-4111-ae56-d45bf153f3a0",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f7a16375-d224-49c2-a5b7-2cba1db03295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c748707f-c905-4848-bc52-e32e62944162",
        "cursor": {
          "ref": "0a1b5b76-c242-4d2b-aec0-305d814e571f",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f600cd0c-8732-4664-94f4-ee7ffbd19736"
        },
        "item": {
          "id": "c748707f-c905-4848-bc52-e32e62944162",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5bf45f84-5f3a-4f49-995d-a6f59a957b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43798d2d-16a0-4782-baf3-1af800345c85",
        "cursor": {
          "ref": "72087b68-9f49-4dc6-bf67-222caec929b9",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8b85ef7d-c9c2-4ea7-83bb-4fe207de702e"
        },
        "item": {
          "id": "43798d2d-16a0-4782-baf3-1af800345c85",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "86397cb9-f46b-42d7-98dc-5c71625a69ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6985d74-c7ac-40b2-9373-a9fbb9fa3a75",
        "cursor": {
          "ref": "3296edc3-99d6-4024-ac05-c915e2ac6e6a",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "94e3a9b0-3a80-4913-8701-d9f66c83f550"
        },
        "item": {
          "id": "c6985d74-c7ac-40b2-9373-a9fbb9fa3a75",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3712483a-40a3-4d0c-b5f4-ddb68b918f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822add34-83ba-4235-a0ba-fa4d0f8131ee",
        "cursor": {
          "ref": "777aaf88-a300-4e47-b392-1858fc84d87f",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b5d928c4-636e-4cfb-9d54-9689a2ac6500"
        },
        "item": {
          "id": "822add34-83ba-4235-a0ba-fa4d0f8131ee",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "1fab8422-e432-4bb6-b0d3-84c06df4cc3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b66594-5fa0-4a60-8420-95ffd969b1d5",
        "cursor": {
          "ref": "d1079c35-68c8-49c2-93cf-97d09106a190",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f0d05dd7-5257-432f-bbee-8edeaa2066a7"
        },
        "item": {
          "id": "d6b66594-5fa0-4a60-8420-95ffd969b1d5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5d72bee9-4c04-4cd9-8ec5-9de430ef64a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9440c9b0-288c-4c3e-915d-4528c11412fb",
        "cursor": {
          "ref": "a3a99bc9-4237-4442-a3e5-41845b0b8c33",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0f618767-7d36-4fa7-a182-b0b96a5b9ed4"
        },
        "item": {
          "id": "9440c9b0-288c-4c3e-915d-4528c11412fb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5beb313a-79f8-4cd3-8318-7fea8318af22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3736f49-5aa8-4209-9a09-9f82e0a3c37e",
        "cursor": {
          "ref": "017a0d3e-2a83-453b-8b4e-61c12baf583d",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c871b61a-9376-49de-bd8b-9df9bf0476f2"
        },
        "item": {
          "id": "d3736f49-5aa8-4209-9a09-9f82e0a3c37e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8bd71caa-3c20-4ea3-8d8f-91b009bc8bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c900d3b-5e29-4392-8153-70321b4e6e76",
        "cursor": {
          "ref": "dea91443-4cf1-4e12-9b25-cdd9e65c00a9",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5ebda4bc-2d66-430b-a9ed-30ec4ef15647"
        },
        "item": {
          "id": "6c900d3b-5e29-4392-8153-70321b4e6e76",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "cd7b5bc1-035d-4bbd-a52d-33418f5ad7ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ecdfc6-2f49-4133-94e7-798d70e10bfc",
        "cursor": {
          "ref": "ba45fade-e2b2-415a-9e95-341c95156519",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ac09f6c1-6169-4fc7-a42c-f6cd0c7f4868"
        },
        "item": {
          "id": "a7ecdfc6-2f49-4133-94e7-798d70e10bfc",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bdb9592e-9c6a-433d-b538-396bbb17277b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9332a54f-df77-4003-865f-ff887f254f58",
        "cursor": {
          "ref": "df407964-0908-421b-bfda-51a905346f78",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b17f69bb-bb7b-4a6d-ada7-303ba32662b0"
        },
        "item": {
          "id": "9332a54f-df77-4003-865f-ff887f254f58",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5ce0e9c6-5ca8-42ed-b8e2-33d6fa484b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec671c7-08a7-42f7-83a9-561c548162e6",
        "cursor": {
          "ref": "d506d44e-d7db-4224-9dca-a4a5eb960eba",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0b1febc7-1cd1-49fa-8ba2-42d1a6365d05"
        },
        "item": {
          "id": "8ec671c7-08a7-42f7-83a9-561c548162e6",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4f81080e-f3b2-4a70-aabf-87d4868b671f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51fc858-fc30-4608-9d4a-1d0d697fb265",
        "cursor": {
          "ref": "fa411bd5-732b-4e4d-8828-6df113d76294",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1790972b-2ce5-4f76-a815-ce11949368ad"
        },
        "item": {
          "id": "a51fc858-fc30-4608-9d4a-1d0d697fb265",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "08cabffc-33ef-4276-a2c4-a8fcbceba185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf9a666-a832-41ea-ad97-d3460eac5409",
        "cursor": {
          "ref": "207fc2ee-0d9b-4ef7-96d7-7b8091e1ef8e",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "937000da-4e44-4026-9b19-e8ffdd9f4cc3"
        },
        "item": {
          "id": "ebf9a666-a832-41ea-ad97-d3460eac5409",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "339be26b-5659-479b-88da-e6a04299e4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd0ed37-f93b-4b0d-82df-a5aa5761d427",
        "cursor": {
          "ref": "a03357dc-8b08-442c-9804-3bf1aa88d8b6",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1d199ea3-edea-473e-85f1-b34224127a21"
        },
        "item": {
          "id": "0cd0ed37-f93b-4b0d-82df-a5aa5761d427",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e237167e-f748-426f-8554-4b4068ddaa47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8173ae-b9cb-4e6b-b112-000924820ff6",
        "cursor": {
          "ref": "9bb82907-95c3-497e-a1c3-9f7b03753b38",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8cbf8c6d-1ae1-4e6d-8557-033369b027c0"
        },
        "item": {
          "id": "5f8173ae-b9cb-4e6b-b112-000924820ff6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8e7bdcac-2a5d-4c29-a23f-736e32883c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7872f2-a329-4c93-b6b8-928696697e81",
        "cursor": {
          "ref": "d87e6767-8eb6-44d7-9195-60e8abbefd45",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "006f6dec-0e54-444d-938c-efbb1a121782"
        },
        "item": {
          "id": "fc7872f2-a329-4c93-b6b8-928696697e81",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ea17bee6-a63f-4324-bf12-38dd0b6cd5c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d551daf0-e215-47ff-b7d9-68b911f7d82a",
        "cursor": {
          "ref": "20cb285b-16d3-41a6-b88c-37d02321fd24",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3ae6207e-d228-486e-bb58-103b6258aeb8"
        },
        "item": {
          "id": "d551daf0-e215-47ff-b7d9-68b911f7d82a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c6f2fb08-4a8c-4202-bf0b-fb46eb187349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90491263-3f3b-4af0-9606-3e428c3b17c4",
        "cursor": {
          "ref": "9d842efa-5f2c-45b5-a2dc-84c5b1b9e630",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "52750e21-c7ab-476c-b87e-9b604fd352fd"
        },
        "item": {
          "id": "90491263-3f3b-4af0-9606-3e428c3b17c4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "637cadfb-7265-42d6-9a4f-3fdc1d614397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4807b5cf-5ffb-4633-9d34-734903cc6098",
        "cursor": {
          "ref": "19d5bf39-2b3c-4896-9f59-3e75066d9fb8",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f2bd53f5-aa20-429a-aa38-e4bdb6419acc"
        },
        "item": {
          "id": "4807b5cf-5ffb-4633-9d34-734903cc6098",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "2d2211d5-7e12-4468-ab7d-3786e88d4476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f68230c-82d3-47fe-bc6f-214c72fe8dc4",
        "cursor": {
          "ref": "f47897f6-9b33-42d3-8bce-199122c92bc1",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2579ea94-3858-44cb-9d87-c9b7db25527f"
        },
        "item": {
          "id": "5f68230c-82d3-47fe-bc6f-214c72fe8dc4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "69be1e18-b625-4cdd-808d-350249c333b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4d7332-c88c-48e8-b790-50a6e8f45020",
        "cursor": {
          "ref": "42994221-360a-4ec3-aade-2d9c5b24e04c",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1121cacd-dfc8-426a-9117-285e1e2ca301"
        },
        "item": {
          "id": "7f4d7332-c88c-48e8-b790-50a6e8f45020",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "83a126fd-5657-4ad8-9523-8926ef993483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c10bd48-4581-45f8-b9fd-1807658e247a",
        "cursor": {
          "ref": "48146ec6-fd1b-435f-8de7-a1ac213291c1",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "25463a6a-b369-420a-b0d8-2bd99ae4310e"
        },
        "item": {
          "id": "1c10bd48-4581-45f8-b9fd-1807658e247a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b9ea66e6-3023-4e87-a109-0814e0e6ebab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1013dedd-abfd-42db-b627-475960d33a6a",
        "cursor": {
          "ref": "c49c0e36-6272-43b2-8638-f43afdc26f5a",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ebe525e0-3b8c-4f4b-a77b-4c7a99c2ffe7"
        },
        "item": {
          "id": "1013dedd-abfd-42db-b627-475960d33a6a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "484fe7f8-e8bc-4a74-9f70-9f1946bde08e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e466140-9f4d-4641-b85f-8465ee08c5fd",
        "cursor": {
          "ref": "0c22d7e5-34da-48a4-89e0-dd282321c164",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "db466f07-ea06-4bf5-b7cd-e3d9511eefd7"
        },
        "item": {
          "id": "4e466140-9f4d-4641-b85f-8465ee08c5fd",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "44885f72-bb28-4d27-999a-6cbe0b1ed299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43258dc3-498c-4dc9-98fa-6ea65a483c87",
        "cursor": {
          "ref": "a93d87cb-3644-410c-9aa3-b03aebcf23a2",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e4a5b3fe-e359-41d1-a9b1-2017fab016ca"
        },
        "item": {
          "id": "43258dc3-498c-4dc9-98fa-6ea65a483c87",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5e397463-6eea-4d21-9948-e6740f55c139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781e8631-b7f6-4f26-bee1-b7bf3a0a158a",
        "cursor": {
          "ref": "180f565e-8c5e-4f4b-9bc5-cab918ac3d2d",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "112f773f-e179-4f2b-8a43-a3139e3a8cec"
        },
        "item": {
          "id": "781e8631-b7f6-4f26-bee1-b7bf3a0a158a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b21d1f2d-445f-4bbd-92a7-ea7949918e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359d3f44-d382-45e9-8839-b00f65decc99",
        "cursor": {
          "ref": "5ac90571-9341-4dfd-9487-b1fe850e79ba",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bb77cdf0-19b6-43cb-99cf-5868321d84b9"
        },
        "item": {
          "id": "359d3f44-d382-45e9-8839-b00f65decc99",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "de3c5e68-e4aa-40ca-8e6d-fc7a5a8be397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf42fdc-48e3-4d76-b5e6-d1644b14f448",
        "cursor": {
          "ref": "9a10f964-aead-4446-b69b-cf8ed7f99c18",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6bd9ca30-f426-4d85-bdfa-ca446c64e865"
        },
        "item": {
          "id": "daf42fdc-48e3-4d76-b5e6-d1644b14f448",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "13d1de54-a56a-45fd-a890-50bd459170ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18dd0d33-2fd2-40cc-9a75-272024fc001a",
        "cursor": {
          "ref": "99bf4b4a-f22a-43ad-95b3-ca7c953c1aba",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "47ba13bf-9236-44df-a115-ef18872e5549"
        },
        "item": {
          "id": "18dd0d33-2fd2-40cc-9a75-272024fc001a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "97251572-f14c-496b-bd2f-2766ac8421be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32796460-6947-4f58-a015-59003ced58a2",
        "cursor": {
          "ref": "f1acd888-83fb-4205-a247-19c8b3e84d70",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0de1e0c3-96d1-41d4-ab95-41feb8733d88"
        },
        "item": {
          "id": "32796460-6947-4f58-a015-59003ced58a2",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "74680bb5-3ae5-4726-bd0e-8c8859936da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6c4e75-9f3f-4a7e-9ac6-dad7842182cf",
        "cursor": {
          "ref": "c28a8a0b-0381-47f2-b1f3-1f3d84fc56c8",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "62ddac09-6809-43f6-a904-e0142344f42d"
        },
        "item": {
          "id": "7f6c4e75-9f3f-4a7e-9ac6-dad7842182cf",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d9aaf1ac-1606-474e-89ad-a68be276ee1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a96aa22-8f2c-4e44-8284-876641e4ae90",
        "cursor": {
          "ref": "861a0ba9-ad65-4fe6-a86c-28083852c658",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1bc4ade3-55cd-48d8-bae7-ccc2550f2490"
        },
        "item": {
          "id": "5a96aa22-8f2c-4e44-8284-876641e4ae90",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ae74d255-4c9e-4406-9ab7-f1c2d507aba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6940a300-e9ae-4f04-8c3f-531d8c03d723",
        "cursor": {
          "ref": "b0075033-9343-4dce-aa41-9d2df43cc778",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3763deba-f6f3-4d2c-97c3-65b6df6a0ecd"
        },
        "item": {
          "id": "6940a300-e9ae-4f04-8c3f-531d8c03d723",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "aad60b80-f0a2-458c-aa94-906d97217e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d602f742-f2c9-4519-aa29-d2202b421122",
        "cursor": {
          "ref": "81c91142-7d6c-428c-883b-fb49fb6cebe4",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "11e9dbe5-a5c7-42e1-8bb1-e75c5c2c72ce"
        },
        "item": {
          "id": "d602f742-f2c9-4519-aa29-d2202b421122",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b7f73785-2fc5-46eb-acdd-ec32213b2edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4e291f-8209-42bb-af3c-7181f8a5d971",
        "cursor": {
          "ref": "a45fb5f9-7d7d-4b71-ac73-2faa2a7564a6",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fc14715b-0206-4587-b2bf-83ae222286e4"
        },
        "item": {
          "id": "df4e291f-8209-42bb-af3c-7181f8a5d971",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "16bcb8fd-4011-430d-83f7-37dfec04d6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc3e0f0-f501-4a6c-9cc5-d701ddc5c128",
        "cursor": {
          "ref": "c5cd9e16-a599-4fcd-9921-4c83ff5373e7",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a41f2682-6f9c-45df-add4-7cfc85b992a1"
        },
        "item": {
          "id": "3bc3e0f0-f501-4a6c-9cc5-d701ddc5c128",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b772985f-8510-4c32-a57c-3e69ae9712be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee1a3c2-e0e9-4c79-981c-046a1baca07f",
        "cursor": {
          "ref": "95812a53-6c87-4915-b6d1-bcc2394fd196",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ea0f7dc7-5ef5-4016-b258-6425b5dc7f62"
        },
        "item": {
          "id": "cee1a3c2-e0e9-4c79-981c-046a1baca07f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c3dee4e5-abc0-432b-855a-f27c59633f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104dac73-1c29-471e-8163-eb61685ca8dd",
        "cursor": {
          "ref": "f1eb3aee-4844-479b-ae5a-71e3fb665cb9",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "67aeda4b-d0eb-4a06-b7bc-ccd1eddde24a"
        },
        "item": {
          "id": "104dac73-1c29-471e-8163-eb61685ca8dd",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8677952c-8cb3-4cb2-b0ec-dec269796555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00922029-89f7-409d-bf1a-01448ba17100",
        "cursor": {
          "ref": "8c83a531-be26-4d7e-a077-0ba1d0bc83d9",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4c4dacb7-a7be-496c-a2ad-06bb80fbfb5d"
        },
        "item": {
          "id": "00922029-89f7-409d-bf1a-01448ba17100",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "554a9672-eeb2-4aab-bbec-2f0bc471c0cb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67d1351-518e-429b-9b33-d4f0edb7b996",
        "cursor": {
          "ref": "5e6af962-8048-4a2e-be75-45826cb2b171",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "cf4ba611-e183-4916-a201-2cb511f67e37"
        },
        "item": {
          "id": "a67d1351-518e-429b-9b33-d4f0edb7b996",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "cf51c562-e954-49d2-94d2-f15ad31065e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "99a56648-92eb-47a3-9a1b-fdda2c6b608f",
        "cursor": {
          "ref": "7dfe32fb-36ae-4345-a334-6d2e9429106b",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "15163e7d-4362-4ebe-a600-a6b62cf63dab"
        },
        "item": {
          "id": "99a56648-92eb-47a3-9a1b-fdda2c6b608f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "beb1cd7b-bfa7-4d2d-83e5-f90d9799b904",
          "status": "Created",
          "code": 201,
          "responseTime": 8538,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a35cd0-e196-413d-98c9-e1eca12be8ab",
        "cursor": {
          "ref": "a45d82a6-56fa-4ad1-ab1d-8bb1855efd17",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5826e8fe-e3a1-40ef-be7f-74609a7b0ef7"
        },
        "item": {
          "id": "74a35cd0-e196-413d-98c9-e1eca12be8ab",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f6653563-bf0c-4138-91d4-aac5f73dafa3",
          "status": "Created",
          "code": 201,
          "responseTime": 8059,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "19df48f9-d565-494a-a0e0-3047b4adb268",
        "cursor": {
          "ref": "4cf02769-ed2a-4fdc-a03b-6b91b2143838",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "61a2aeb2-5058-4a4b-9e61-9f343da96f20"
        },
        "item": {
          "id": "19df48f9-d565-494a-a0e0-3047b4adb268",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b6d0a4a7-b3de-4b7f-870a-d95b819fcdaf",
          "status": "Created",
          "code": 201,
          "responseTime": 8960,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f4a362-992a-4832-9904-fb8c0a303216",
        "cursor": {
          "ref": "6dbf4e6b-b073-4af3-843a-a9785b0a7aa8",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7872d532-52c4-4e0d-b97f-5868876367eb"
        },
        "item": {
          "id": "81f4a362-992a-4832-9904-fb8c0a303216",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ca13fd2c-61c6-4ebc-9490-48e53c0f7c13",
          "status": "Created",
          "code": 201,
          "responseTime": 7974,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7929b3-bcfe-4894-bd79-22bd49a16d2c",
        "cursor": {
          "ref": "c2f86382-e0d6-4718-92e5-37277f4afbaf",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3dce45e3-de1d-4a1c-93da-04db0bab9841"
        },
        "item": {
          "id": "4e7929b3-bcfe-4894-bd79-22bd49a16d2c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "29713527-0a32-45c2-a9c6-6a112eff1be5",
          "status": "Created",
          "code": 201,
          "responseTime": 8070,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "263c4e8b-edc2-4d3a-91c1-f3de3a60f9e9",
        "cursor": {
          "ref": "4f9463ef-a09f-42fc-af82-5c197efcd179",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3d0bfb53-297c-4ee6-9914-2b8c46424d14"
        },
        "item": {
          "id": "263c4e8b-edc2-4d3a-91c1-f3de3a60f9e9",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "812ec5ae-f810-4b43-9cb4-f3a11e85dad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "fcc276db-1c45-4266-9e77-150d69957611",
        "cursor": {
          "ref": "6f1527d0-bf79-421f-b289-8a683e8dbf65",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0f5162c1-3ecb-4b53-92bd-dd8c64cf5a63"
        },
        "item": {
          "id": "fcc276db-1c45-4266-9e77-150d69957611",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a554903c-bd51-47fa-9b09-c021aeea3458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94b1925-f09e-4b67-b1b3-4a35505a928b",
        "cursor": {
          "ref": "c8ecc5a7-c920-48c7-a765-9526af6f1d26",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9b6d9bb2-8217-4446-b2db-c50e88db7b8f"
        },
        "item": {
          "id": "a94b1925-f09e-4b67-b1b3-4a35505a928b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e991727c-5040-44dc-84ea-6f51afc49047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d6c31d-40c5-4cbb-acf5-750df9bb4a0c",
        "cursor": {
          "ref": "63bf1a6d-1fa2-4e43-ba7f-bf68a24c976e",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "934eade1-382f-48f9-8ef9-239eded5144b"
        },
        "item": {
          "id": "47d6c31d-40c5-4cbb-acf5-750df9bb4a0c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b5ce1afe-aa53-4e40-bbac-f6ce552fc769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881492df-ab20-4c3b-9aaa-ecb87403d3d7",
        "cursor": {
          "ref": "23b3dc92-61e6-4516-8e30-f8d6651db59e",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bfeb59d5-6107-4eee-9b57-a09d2ac6a1ac"
        },
        "item": {
          "id": "881492df-ab20-4c3b-9aaa-ecb87403d3d7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5a59acde-7263-4c4b-aa4b-d9406c160c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8342da45-33ac-43e2-9256-8fdda033729b",
        "cursor": {
          "ref": "ac4ae027-b5cf-431f-97f0-afa75b5faa3e",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "57d34236-7717-4357-910c-dac9ed0a5d65"
        },
        "item": {
          "id": "8342da45-33ac-43e2-9256-8fdda033729b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cf8f37c1-7995-42e6-ac5c-9d59d69a6372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ce97e4-9f3e-4bf1-b905-2207f728b3b3",
        "cursor": {
          "ref": "a5e414db-41cf-4350-b8b9-68242216d8a9",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5ec788a9-d042-4e22-a944-e91b796d97e1"
        },
        "item": {
          "id": "07ce97e4-9f3e-4bf1-b905-2207f728b3b3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7b3cada8-8803-4eeb-9535-03e46659842f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9da7b70-1470-4768-a9b0-8eb8fb941d17",
        "cursor": {
          "ref": "1a8ce126-09ec-4b62-b2f7-40548a5a23ff",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "98e815bc-16d5-40f0-a1ae-c781d484e770"
        },
        "item": {
          "id": "d9da7b70-1470-4768-a9b0-8eb8fb941d17",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "dee3daf0-6875-4d84-b94f-4f55d01110d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402dea30-752b-497c-9614-8186573137e0",
        "cursor": {
          "ref": "6a90b563-1da2-4f50-933f-f0835e62d471",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "fc89f659-10f5-4e9f-b6b1-8aee689e85a8"
        },
        "item": {
          "id": "402dea30-752b-497c-9614-8186573137e0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fbafc101-77de-425d-8788-c0013a345350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed06b86a-016d-4a02-b556-e962bd41a967",
        "cursor": {
          "ref": "974b5f08-c4f9-4236-b57e-7a54896b8ec7",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "43fd79c7-d0c3-4fcc-9ca1-afd7280d8aa0"
        },
        "item": {
          "id": "ed06b86a-016d-4a02-b556-e962bd41a967",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "76233eff-9c75-4c54-b8dc-c9ae5e862b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf6da02-8307-47fe-91bc-24f03431ae24",
        "cursor": {
          "ref": "5a99365f-dd6a-4c85-9379-9a94cff16507",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "401c8c35-a95a-4d0b-ba40-686bb7b2ce50"
        },
        "item": {
          "id": "3bf6da02-8307-47fe-91bc-24f03431ae24",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2ea48b77-2746-4a46-aaee-8cf7605ad048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7769691d-2149-4461-a416-854cef6023f9",
        "cursor": {
          "ref": "d0213025-356b-4356-8a94-a16b557a8ddc",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "474a23d3-20dd-455b-972d-af7f26425df0"
        },
        "item": {
          "id": "7769691d-2149-4461-a416-854cef6023f9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "869afffd-fc14-4277-93c2-8d7f02658d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d374e8-cab1-4663-bf51-84126e36611c",
        "cursor": {
          "ref": "f723aa56-18da-41cf-a8b5-1d2cee35a768",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9305d028-5330-4e7c-9fe6-07a586a8ef37"
        },
        "item": {
          "id": "c4d374e8-cab1-4663-bf51-84126e36611c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "54abf52c-1380-4c97-b361-aab49f2f34e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3501caba-f864-4342-b9e8-8e1a75e6ebcb",
        "cursor": {
          "ref": "1558416d-1204-49e4-b071-7c80c05ca673",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d7927593-bbfb-48a0-a422-277d7bb5d560"
        },
        "item": {
          "id": "3501caba-f864-4342-b9e8-8e1a75e6ebcb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e266bb2d-ff85-41e9-9520-ebcbdc23e44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61bdf43d-3ce8-4817-b76a-0678b5000043",
        "cursor": {
          "ref": "8b0c58c0-be2f-4470-8799-8bc1b52a28f8",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "47418c6b-1684-4730-b7ec-d9fdcb7e17bf"
        },
        "item": {
          "id": "61bdf43d-3ce8-4817-b76a-0678b5000043",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "231fafb8-e8ee-4465-b323-de75c7f2ba52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e074f870-1e87-490a-908e-c07291c95998",
        "cursor": {
          "ref": "a5e57b43-a833-4587-b752-54d2551f6c76",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5d27f8d1-a4f6-44c8-8b72-e2e96ca6c581"
        },
        "item": {
          "id": "e074f870-1e87-490a-908e-c07291c95998",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6535a0a4-e901-4966-b4a7-d636fae0b0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ff3113-9d0e-4ef7-9502-d48c312bf673",
        "cursor": {
          "ref": "1c7f3334-8d90-452b-8ae1-44c064410eb7",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4e08d9ab-a056-458d-ab96-2e0317de57f3"
        },
        "item": {
          "id": "40ff3113-9d0e-4ef7-9502-d48c312bf673",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "60040dec-56c7-41fd-b7e0-fd7b287fcd0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498775de-fff5-4584-aa4e-d2312f1e82f1",
        "cursor": {
          "ref": "94bd36ae-bf45-45ac-b2b4-84575da264b9",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "fda4c346-f5fb-4213-8373-2042704d6188"
        },
        "item": {
          "id": "498775de-fff5-4584-aa4e-d2312f1e82f1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bc1ba22f-09ad-4f35-b97e-e8ec1b1cfc2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5dfc712-1f6f-48d9-b89f-1d12bfec3d18",
        "cursor": {
          "ref": "05e34d92-3dfd-44af-add5-07df2ba07c8f",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "307d114a-228d-4177-b855-4c928f583d0e"
        },
        "item": {
          "id": "b5dfc712-1f6f-48d9-b89f-1d12bfec3d18",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a5d99165-a1c9-4519-8389-f56477b4231f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3d0846-a733-46c5-b590-cd162fb8e33d",
        "cursor": {
          "ref": "a886f762-5307-4457-b5f7-9ea1cae824ba",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "71fb7bb5-886d-4ae5-842d-ca46d5eb942a"
        },
        "item": {
          "id": "4a3d0846-a733-46c5-b590-cd162fb8e33d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8c69da41-79c9-4de5-8b2c-b6808677c94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b9494e-eeca-49f3-8e6e-d888975cc325",
        "cursor": {
          "ref": "64b013b2-d1ca-4872-9270-9a57d9cb33e5",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f393f83e-73f1-44c9-af3c-76f569e524cb"
        },
        "item": {
          "id": "d0b9494e-eeca-49f3-8e6e-d888975cc325",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "dc082c9a-0c77-4962-a9c4-7e5ab4048ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976e0d96-ede3-4069-871f-41fc44e1cb66",
        "cursor": {
          "ref": "6497768a-09b5-4ff5-8e47-09bb3fc8da73",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a23dbcdb-c947-4d29-ba55-0072435480f6"
        },
        "item": {
          "id": "976e0d96-ede3-4069-871f-41fc44e1cb66",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "53861870-cf81-4681-a00a-f806879e3af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249c7eaf-f395-48d9-9962-0cb0c7b528dc",
        "cursor": {
          "ref": "af631a95-2a99-41f3-b949-339c3df7735e",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b0ca8b4b-5ecd-4944-9413-6d5e5c33560b"
        },
        "item": {
          "id": "249c7eaf-f395-48d9-9962-0cb0c7b528dc",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ade03df2-aef4-4818-b096-d136b1c380ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c306104d-4522-4433-a07f-ea84b8ba63ae",
        "cursor": {
          "ref": "c4feb6f6-5cde-4722-906a-df1b89a226da",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "62606ebe-948a-41db-a153-ee47c272c9a0"
        },
        "item": {
          "id": "c306104d-4522-4433-a07f-ea84b8ba63ae",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "26023074-7ed7-4436-b0db-0a49cb7f98ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd57cd2-d954-45c1-a078-c0bbfc4cf34f",
        "cursor": {
          "ref": "77af60bc-80ab-4e46-9325-bcbbb0780d66",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "95f0ff8a-23b2-417a-bc0d-d8ca3ae35abc"
        },
        "item": {
          "id": "8bd57cd2-d954-45c1-a078-c0bbfc4cf34f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ec774e98-11b1-40a3-b1d9-2e66a5bb1458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc559af7-5a7e-46da-84f6-0d52ec3de22d",
        "cursor": {
          "ref": "7cde1c60-55f8-4a62-8f0c-9384cebe5567",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "014610b2-7e23-46bc-a3fd-5c66d344d932"
        },
        "item": {
          "id": "fc559af7-5a7e-46da-84f6-0d52ec3de22d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "faec601e-12fc-46ab-a8f8-96e449b249ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9132b0fd-2551-485e-8421-4c7020007483",
        "cursor": {
          "ref": "415f1620-3bf6-4994-8757-a7e8183ffa7d",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c36f073c-584f-450d-ae87-bc51f9d59139"
        },
        "item": {
          "id": "9132b0fd-2551-485e-8421-4c7020007483",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "643effcb-37ef-40f7-a312-cb601c21a351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcdcf76e-0987-4619-88fe-6ec6a258e7b6",
        "cursor": {
          "ref": "a80e2b64-bb83-4457-9199-248d6b5fb3e0",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "578328d0-9c07-4cb8-9998-03387a97a8ad"
        },
        "item": {
          "id": "dcdcf76e-0987-4619-88fe-6ec6a258e7b6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bfa4a53c-a36e-4474-8792-89bee09bdab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60896a9-df61-4047-af49-fab9699a238d",
        "cursor": {
          "ref": "ace4fc5b-78a7-4974-be3a-4dc69f244ef9",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8dc25df0-927d-4c56-83c1-b441318bd371"
        },
        "item": {
          "id": "b60896a9-df61-4047-af49-fab9699a238d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b066ec74-8414-483b-8a1f-e689f7688eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466cb99b-46d3-4eaa-b854-69439d4a1702",
        "cursor": {
          "ref": "bec024ce-76ac-49dc-b675-789020b116b3",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2df8c653-43b4-449b-9f1b-3c503685e45f"
        },
        "item": {
          "id": "466cb99b-46d3-4eaa-b854-69439d4a1702",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1b715f21-d455-4937-8a3d-c41ba3f040e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec7e5a7-81d1-4d5d-ad36-ad31ec7c1767",
        "cursor": {
          "ref": "0c4836a2-182f-415d-ad24-76c5795aa2e7",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1b3b77d1-46ec-4362-a1e4-731528c423ed"
        },
        "item": {
          "id": "2ec7e5a7-81d1-4d5d-ad36-ad31ec7c1767",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ab469a7a-590c-4378-98eb-542936d6eada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa5a5cb8-25e3-48dc-a7a0-285eae6015b2",
        "cursor": {
          "ref": "ad0eb8db-d300-4633-b9bf-a4fbe4bb3f52",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "75984f0a-6b23-4a9f-bcb9-b7a117fd7c6c"
        },
        "item": {
          "id": "fa5a5cb8-25e3-48dc-a7a0-285eae6015b2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4ffe720f-fbd8-4cdd-b99d-dbfa9eb33ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb3a690-2338-4315-aa56-cd4fc2d73e65",
        "cursor": {
          "ref": "7bd11e2b-c0f9-4316-b702-d8d186397ae4",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c12f0fa5-336c-48dc-b38c-c00f28a92a81"
        },
        "item": {
          "id": "9fb3a690-2338-4315-aa56-cd4fc2d73e65",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f8a181fb-b360-47bc-a504-84a634895112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90037cf0-4bd3-474a-80d6-60ea9157aef4",
        "cursor": {
          "ref": "62a948c9-fdf4-4f0a-990b-f83fbb2685ba",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "98912da2-53a7-4fc3-adca-4a0d02197b12"
        },
        "item": {
          "id": "90037cf0-4bd3-474a-80d6-60ea9157aef4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9dd30e2f-b083-49ec-9020-83140a6f1c73",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440a1071-49c2-4a5a-a0c0-6c0988f22d7b",
        "cursor": {
          "ref": "9b40eb37-fa4a-4f81-80c7-4c8369ec6a8c",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "68154ae3-037c-4166-90ac-ed83ec72d7c1"
        },
        "item": {
          "id": "440a1071-49c2-4a5a-a0c0-6c0988f22d7b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "aba1dc73-b8e1-48b1-8476-b79f0fd28912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfcf091d-fa8d-4974-9b61-c8e43e90fb3b",
        "cursor": {
          "ref": "84ceb704-c852-469d-af3f-c2f24ae10f07",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "15847cef-1344-4a40-82b7-70e0fdeb493e"
        },
        "item": {
          "id": "bfcf091d-fa8d-4974-9b61-c8e43e90fb3b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0f449355-be3b-4f15-9f7f-5d8e726074c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb498b9d-3c66-453c-82a5-499e0d0f5ec1",
        "cursor": {
          "ref": "72dd4e3b-3e10-45e7-b290-64c35a2b5822",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "82f8de79-5ab2-4fb8-b16a-e3775a3fbbde"
        },
        "item": {
          "id": "bb498b9d-3c66-453c-82a5-499e0d0f5ec1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3276ec7b-a701-4716-92b2-9b749e8f066e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e913f11-b2ab-4afa-a199-1b5fc8b306f8",
        "cursor": {
          "ref": "a8e6a5ba-3f77-41be-be39-cc339a28c6f6",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b66b8321-ecc7-48a3-a8b7-ba42eeab1ad9"
        },
        "item": {
          "id": "5e913f11-b2ab-4afa-a199-1b5fc8b306f8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "dcd829ec-286c-48dd-b98e-59746327ef54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741f6d08-9fbd-4eb2-a174-de770b47e26a",
        "cursor": {
          "ref": "ae648fd4-2712-44cc-b5b2-d4c247af42ed",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d7e049e8-432c-4944-9a51-b42f372d87c7"
        },
        "item": {
          "id": "741f6d08-9fbd-4eb2-a174-de770b47e26a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "39fd0d01-a757-467f-b8fb-c78f5a69811c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8b5ff6-3cbd-466d-974f-4e69fb887f83",
        "cursor": {
          "ref": "32dc9af3-3427-429b-a08b-f4e147639659",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f652f4e7-78b0-4850-bf9d-9000c9715a1a"
        },
        "item": {
          "id": "4b8b5ff6-3cbd-466d-974f-4e69fb887f83",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "32424769-6364-40c9-a816-e596d3b96392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bceec5b9-8e39-4b53-b5d4-f2179a5bf039",
        "cursor": {
          "ref": "00b0e91a-6793-4621-9ecd-d8248fdf7108",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "03e29190-e484-4638-bbbd-096dc639c030"
        },
        "item": {
          "id": "bceec5b9-8e39-4b53-b5d4-f2179a5bf039",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e9687345-d91f-4b3b-ab36-5b9855bf8dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f6d881-8899-4e41-9283-437947cdc3f1",
        "cursor": {
          "ref": "d3bcae44-2142-43c2-8568-bd6b7d1b3981",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c2de5ee7-148b-4d5b-90d2-35c62f6590d1"
        },
        "item": {
          "id": "26f6d881-8899-4e41-9283-437947cdc3f1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7784e1f4-3f22-4bfd-ab30-5b2d3a300e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb8b23d-4c89-4a6f-9860-414fc86f1d3e",
        "cursor": {
          "ref": "6c779e82-911e-4489-ab9e-c09dd29ee54f",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8c181a25-3fbc-4051-aac7-b957afe240d0"
        },
        "item": {
          "id": "8cb8b23d-4c89-4a6f-9860-414fc86f1d3e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e0f12a7e-c5b0-4795-a080-687fea84617f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d51b853-5338-4d70-9621-06bc12868f95",
        "cursor": {
          "ref": "2982592d-429f-4232-a02a-9d49e0bef1e1",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c19d591e-3073-4247-a5c1-56a2b3bee3ba"
        },
        "item": {
          "id": "9d51b853-5338-4d70-9621-06bc12868f95",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "48bda464-05cc-4774-be1a-be76ed5044c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9ff374-d73e-4f33-bc40-d488377e957c",
        "cursor": {
          "ref": "045c8665-da8a-45f4-87ee-42d5fa0fe474",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d0646402-c46c-44d7-8411-44628a29df32"
        },
        "item": {
          "id": "fd9ff374-d73e-4f33-bc40-d488377e957c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4bdb1512-80a4-41c2-9144-5c331b56732d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e6180a5-9f2d-470d-8b66-be8306a95599",
        "cursor": {
          "ref": "8c709f16-5a9e-4ff7-96d9-f4135d1ee3fb",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "58073c9c-c2f7-4dd2-ba99-6e5cc19ce743"
        },
        "item": {
          "id": "4e6180a5-9f2d-470d-8b66-be8306a95599",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "25957126-56c7-48bf-8596-a139c25437c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b30a8c-5097-42e5-8cbf-03d31cbdd74b",
        "cursor": {
          "ref": "7d314a6c-1d87-49ec-8500-a774922a1280",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8bcf7220-3453-4104-b686-607afeab213b"
        },
        "item": {
          "id": "a8b30a8c-5097-42e5-8cbf-03d31cbdd74b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b7742a9a-a7ca-4e00-9471-93487ac7a8b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294d863f-5652-4d57-8691-f8811e46fa71",
        "cursor": {
          "ref": "9f104573-279f-4227-89eb-d160b1ef902f",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "20de9a0b-1552-47a4-b38f-52631ee5fc1a"
        },
        "item": {
          "id": "294d863f-5652-4d57-8691-f8811e46fa71",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ceeee4f0-3612-4d00-8a23-62d9d31cb937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6641719-5b8b-46b4-b19a-192b0c379aae",
        "cursor": {
          "ref": "b175c223-929b-40f0-bf08-69eb8f6d13de",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a3e1ab1a-802d-4eb1-8616-4d2b762c13c8"
        },
        "item": {
          "id": "c6641719-5b8b-46b4-b19a-192b0c379aae",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ca39a61c-17a6-4e7e-9f8f-6ce805f10b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87ddeb7-fbaa-4f4a-97c2-2695fa892e3c",
        "cursor": {
          "ref": "100dad28-a728-4d1f-a153-de3945370497",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4ad31292-9ab4-4b1a-8ca1-a1af8226dce8"
        },
        "item": {
          "id": "d87ddeb7-fbaa-4f4a-97c2-2695fa892e3c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "aab7be0b-3169-4c51-bc70-af9338dbb032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd97cfa-af9c-4f10-b722-0e9a06f31488",
        "cursor": {
          "ref": "95e2beb2-f6b2-40c8-ad82-351a0421c7d3",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "fae39d72-0146-426e-a1f3-10b751c15767"
        },
        "item": {
          "id": "cbd97cfa-af9c-4f10-b722-0e9a06f31488",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "90da3705-e5d7-46f5-baf0-1f103c947a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4c6b91-346b-4b3a-a132-b544be52a031",
        "cursor": {
          "ref": "d1549e2a-5481-4089-853b-fd12a57e3d56",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d12542a9-2905-402c-9d9b-162f5350cffc"
        },
        "item": {
          "id": "2e4c6b91-346b-4b3a-a132-b544be52a031",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6db5c165-1bb0-45c3-8da9-02ab42226bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6244c154-ad3d-4aea-9b62-571206bf2800",
        "cursor": {
          "ref": "ce8636ad-ef29-498d-8eb1-a6201f2a8193",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "27141aa2-cf68-4755-ba78-947bb663a426"
        },
        "item": {
          "id": "6244c154-ad3d-4aea-9b62-571206bf2800",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e7d8cdac-7803-427b-a9c2-0b3e8ebaa5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eecaf3e0-a697-41ce-af1a-ba680f0b8040",
        "cursor": {
          "ref": "c42af671-5767-4ff6-b211-3ebd3d5d2b08",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "73709888-8316-41ec-899e-1aa67941f9c3"
        },
        "item": {
          "id": "eecaf3e0-a697-41ce-af1a-ba680f0b8040",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "95cfe0b0-5493-45fd-a4df-d1d1a2c53b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0708e45e-6c53-4e8d-a4a2-89a3677eb474",
        "cursor": {
          "ref": "a36c9c27-ba34-4c14-80c8-91c334d616d3",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "061cfc18-ebdc-4665-860c-56444b98867c"
        },
        "item": {
          "id": "0708e45e-6c53-4e8d-a4a2-89a3677eb474",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "695111b6-1b39-4825-b35d-6c5f435097f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20055c95-5122-4312-8079-a3d6b7991c9f",
        "cursor": {
          "ref": "a84fae19-7fed-4430-9bda-1551a9fb635f",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b95c639c-79a9-411b-b196-e67211a63db0"
        },
        "item": {
          "id": "20055c95-5122-4312-8079-a3d6b7991c9f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7de9a5c6-1c24-4f57-9fec-a927efa61d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c995d52-66a2-4c55-8db4-a82613973d68",
        "cursor": {
          "ref": "c67bfd63-2f9e-4661-9de6-9bac1a12db18",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2d14123e-f9d4-4358-9ef1-cb7176c2ad8e"
        },
        "item": {
          "id": "6c995d52-66a2-4c55-8db4-a82613973d68",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ebefa2e9-80f0-4c57-b6df-203bd6491fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c005b4fe-b250-48c5-9e74-0aaabbc56e41",
        "cursor": {
          "ref": "8ae9c133-c45f-45cf-a23f-a95ac689151b",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2a727cda-2a15-444c-b9c8-24e7745f1c89"
        },
        "item": {
          "id": "c005b4fe-b250-48c5-9e74-0aaabbc56e41",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b31428fd-d206-470e-91b6-c205481a5df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d4dca1-9839-4787-bacd-e246091998b8",
        "cursor": {
          "ref": "82c43dc5-c914-41f9-bd80-f3d35385df96",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f65be3de-477c-4d88-8c9f-9cec03e9ee22"
        },
        "item": {
          "id": "83d4dca1-9839-4787-bacd-e246091998b8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "be20066d-783e-4d5f-97ed-25d566661268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a11a2ca-6346-4e4a-b8c6-eb273b22f735",
        "cursor": {
          "ref": "32d3b44e-338b-43a0-b58a-571dec79c1df",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "bbb0c639-8a30-4bfa-aa9e-6406a564322c"
        },
        "item": {
          "id": "9a11a2ca-6346-4e4a-b8c6-eb273b22f735",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "019371ed-4a2d-4b62-be57-c4e325dd3ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7472b2a2-c01a-42fe-bc38-e32ebba22ddf",
        "cursor": {
          "ref": "544c2d7c-5705-4c44-8bfd-a748ad9b4957",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "addffc52-bc25-47fa-b15a-8694bdd311b8"
        },
        "item": {
          "id": "7472b2a2-c01a-42fe-bc38-e32ebba22ddf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a54e6496-089c-4884-9932-02eff20201ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb0e3fb-d20e-438f-8b62-9d791af875c5",
        "cursor": {
          "ref": "3d6b5032-eb43-4b5e-8e52-f120c321bc52",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0eaba8d3-159a-4dae-8862-f6c08ae1b352"
        },
        "item": {
          "id": "feb0e3fb-d20e-438f-8b62-9d791af875c5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "96a80994-8f43-4cf3-b366-53aa8b5c1a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81305210-5e80-400c-bc03-143ea5309831",
        "cursor": {
          "ref": "942b7d09-80f8-421f-985e-ef1217587105",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f9e2ec9c-7243-4fcc-9d24-c668e0cfaa82"
        },
        "item": {
          "id": "81305210-5e80-400c-bc03-143ea5309831",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "945bb88f-eb06-4492-8fd1-523bc0380549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9d3c89-80a7-4d9f-aa6c-3f7125441561",
        "cursor": {
          "ref": "15299a18-1b0c-4404-bf03-f1db88f81f4e",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1aef7b74-6329-48cf-a19f-d17ed0b59c73"
        },
        "item": {
          "id": "4b9d3c89-80a7-4d9f-aa6c-3f7125441561",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b32e7c0b-3a0a-4fac-85ab-1aad74f03b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c3fec4-2135-4336-964c-d1db30071613",
        "cursor": {
          "ref": "3afb53b3-7ffc-4643-8887-51c4b82da524",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "14cfca48-47ff-45bb-9dbd-baf57add772d"
        },
        "item": {
          "id": "c4c3fec4-2135-4336-964c-d1db30071613",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "28f625f5-50df-453c-a62b-086947dfa582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508cba7f-4770-49fc-a53f-c049c41fdee5",
        "cursor": {
          "ref": "f70c1df1-4b5a-49ab-a39b-2a03044ec0ff",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "de1a957f-38ef-4147-886f-99931f38ede1"
        },
        "item": {
          "id": "508cba7f-4770-49fc-a53f-c049c41fdee5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d7ff63e8-0404-483b-970a-804179968651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2380cbc9-9166-428f-94da-0339e0d2fe68",
        "cursor": {
          "ref": "66ad7725-edbb-435c-9b15-f17a4b0b9dc2",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e2555071-707a-4523-a523-4c8c8b95f9e8"
        },
        "item": {
          "id": "2380cbc9-9166-428f-94da-0339e0d2fe68",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f9c53a9e-33bf-45ee-adab-76609c649630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2840a07b-8caf-4669-8df7-0c398dcae1c9",
        "cursor": {
          "ref": "3e9c1350-e012-4774-80c9-079d936ff2b7",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "64048c4f-47c0-4666-be0d-699fa9d78d43"
        },
        "item": {
          "id": "2840a07b-8caf-4669-8df7-0c398dcae1c9",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "72333975-04d6-4030-b31b-5683013d1ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe77572-a26b-44a0-8806-7b24dee61417",
        "cursor": {
          "ref": "3ed63b6c-beef-435d-9ff6-f263110fbc4d",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9ff97781-11fe-4072-8e9f-483bbd6206fb"
        },
        "item": {
          "id": "bfe77572-a26b-44a0-8806-7b24dee61417",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "89a7a60d-4942-4c62-8b45-96f06a6879f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3baa32f4-00ea-4a25-b579-2d2f1038fa44",
        "cursor": {
          "ref": "32e9bcf0-1a2a-427e-82ae-195e95486039",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "263cfbef-dc9f-4a6a-9908-a3b307e5ad2d"
        },
        "item": {
          "id": "3baa32f4-00ea-4a25-b579-2d2f1038fa44",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ae9ea55b-c80d-4560-9073-03c1dd70c55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ef851a-331e-4faa-9ef8-173d778e5032",
        "cursor": {
          "ref": "0f4468a7-b157-469e-8fa2-c58eb0aac5fa",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "85b2bd93-1cbc-4cc0-b288-cd871b7b4c83"
        },
        "item": {
          "id": "69ef851a-331e-4faa-9ef8-173d778e5032",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "13cbdfcc-8d60-4a65-b53a-e05319a9b6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51350a46-befa-4025-aea8-8c4161d9d171",
        "cursor": {
          "ref": "3832dd20-6e4e-4260-85dc-9c3aa737127f",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ae83bda4-afdf-4114-a5d2-449d40b91595"
        },
        "item": {
          "id": "51350a46-befa-4025-aea8-8c4161d9d171",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "89505cf2-90e8-4de0-ad3d-533cda85bc44",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55ec53a-7b90-4306-ab96-6f352953639b",
        "cursor": {
          "ref": "c27448f8-7c5b-4f77-9d73-77d5da440075",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d960d54e-4f97-493f-885e-24130b45f9ed"
        },
        "item": {
          "id": "e55ec53a-7b90-4306-ab96-6f352953639b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "602f3398-9d53-425a-bff5-b08af8f56e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e3d61e-7918-4f03-8cfa-25bd444f2a10",
        "cursor": {
          "ref": "9404d019-3779-4f44-a270-5bb4ec816e0a",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "816dfbe5-0fd6-4ddf-9a47-64bb71f2c8e8"
        },
        "item": {
          "id": "07e3d61e-7918-4f03-8cfa-25bd444f2a10",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1bca6d22-d246-45a2-97d0-006f234f716d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed4b31b-cd07-4a5f-8436-1a75397f1668",
        "cursor": {
          "ref": "34281f17-e61a-40b0-8e75-9db11b694c74",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "86910908-5a12-41c6-b0d0-4d1957cde27b"
        },
        "item": {
          "id": "eed4b31b-cd07-4a5f-8436-1a75397f1668",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7a721d5e-2acc-4e34-8593-cbb52ad09e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f5b122-0aa1-4d45-8f46-aef285d736a2",
        "cursor": {
          "ref": "7abfe879-509b-4888-8057-c88b2dd9f876",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d3d5efe2-62ea-4e3f-a8ed-121334b9de3a"
        },
        "item": {
          "id": "91f5b122-0aa1-4d45-8f46-aef285d736a2",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3b455d71-6353-49b2-ad04-12444853e6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8876e7a8-9e14-4fc2-96ca-4b9301d353fe",
        "cursor": {
          "ref": "1f906be0-5193-4ce3-837f-de8c60ee8174",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "30229cdf-9706-4ae0-8db7-49073c8b9c0b"
        },
        "item": {
          "id": "8876e7a8-9e14-4fc2-96ca-4b9301d353fe",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7ce1fe1a-6b8c-4538-9a2b-b90a0e26d703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c011fae-2184-421d-933c-3e3a34d0147e",
        "cursor": {
          "ref": "62effa14-c6a5-4d36-9742-506db3f0610f",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8fecd512-6e4c-4c2e-846f-459d05bdc4b7"
        },
        "item": {
          "id": "6c011fae-2184-421d-933c-3e3a34d0147e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5464d5a1-4384-4757-b7b6-07ce6e6f16d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe54c248-33a0-49a3-8874-80d614bf21be",
        "cursor": {
          "ref": "348a9e08-ac3d-4582-8063-035bee8903f4",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "872209b3-5e7d-4e87-bd1d-f57a07494b51"
        },
        "item": {
          "id": "fe54c248-33a0-49a3-8874-80d614bf21be",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a7c66625-2769-4e21-aa2a-d3d87f795cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9dfe985-dfb3-48e9-8373-e53efa5c0047",
        "cursor": {
          "ref": "50d32e21-cd15-4e2a-aaf3-ebce04d193aa",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "46560853-74f4-473d-9cb1-12d254dcae4d"
        },
        "item": {
          "id": "a9dfe985-dfb3-48e9-8373-e53efa5c0047",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "07148a6b-f13f-48f8-b589-7d9d80b6a2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40cd6f09-be3b-4a5b-924a-a55c17a6dda7",
        "cursor": {
          "ref": "ff4786a5-2284-4612-99d2-fbdbed0bf46f",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "386b54e6-bdec-4795-a324-7a5abe293d67"
        },
        "item": {
          "id": "40cd6f09-be3b-4a5b-924a-a55c17a6dda7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b8f3dbc0-a9f8-441a-b6e9-b18ac2ab72b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcee14d9-f1ad-4b0e-8ac9-8496483421c0",
        "cursor": {
          "ref": "90084bee-7420-4bda-904d-5a770e147fa7",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1579415d-4f01-4bce-928c-bbe8a9a7f05f"
        },
        "item": {
          "id": "bcee14d9-f1ad-4b0e-8ac9-8496483421c0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b2c269c3-6f36-424f-ba04-7d1e796dea12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a4ac19-07b9-4d36-9c64-dcd4675074af",
        "cursor": {
          "ref": "deaa3039-db26-4519-a9cc-02fddd101915",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "53b85fb3-765a-4e4b-bcf3-467be6c7d497"
        },
        "item": {
          "id": "a4a4ac19-07b9-4d36-9c64-dcd4675074af",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7b163dd3-4c8b-45f9-9f7d-8d0095d7c9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e4ca6a-997a-48a0-b54f-927300b32934",
        "cursor": {
          "ref": "831f5900-75e7-47d7-9d9e-a3c652288358",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9025c204-1411-40b3-b27b-ea1877dff411"
        },
        "item": {
          "id": "49e4ca6a-997a-48a0-b54f-927300b32934",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a5b78e25-6786-478b-9fee-b939c05a69a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9331c8-7f5d-4535-bd64-300f3c0d32bf",
        "cursor": {
          "ref": "bd629474-2f1f-4f1a-a50a-d8a2f1d58750",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5ba4c3ac-e5bc-4030-9ff4-6e649fdcf5fc"
        },
        "item": {
          "id": "1c9331c8-7f5d-4535-bd64-300f3c0d32bf",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "239dbe31-30d6-4d36-aeae-4a04c3ec534c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87fbfad7-bfa3-4ba1-b4a8-736e04b650d9",
        "cursor": {
          "ref": "07c5349e-0eb2-4133-80cd-d03c20b2769e",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7bd8562d-ce5a-4997-bf9a-cc4dd920d205"
        },
        "item": {
          "id": "87fbfad7-bfa3-4ba1-b4a8-736e04b650d9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e336c483-94cc-4ba1-8818-4de8c94d4f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3d3b0c-75ec-4188-9249-fb1ebbd5c5c0",
        "cursor": {
          "ref": "2e24853c-df7d-482b-bca8-f5467ac5a072",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "aae356e2-5d09-4a86-b878-9880179fd4e3"
        },
        "item": {
          "id": "1c3d3b0c-75ec-4188-9249-fb1ebbd5c5c0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9f563ae7-6a31-4bbd-a3d0-d7d762c17d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f0197b-a237-487b-8b3d-e34e7c6beb85",
        "cursor": {
          "ref": "435549c8-e612-4ada-81f8-49e1ccedb616",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "06e238f3-6b2d-4845-9962-f64277e37c8d"
        },
        "item": {
          "id": "10f0197b-a237-487b-8b3d-e34e7c6beb85",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "dd13f955-4a18-4090-ae11-9f21e5d9dfa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79ca5d3-1341-4403-9292-5058badba8db",
        "cursor": {
          "ref": "00541161-1f59-490e-a2e5-9d39b057882b",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f07f6f9b-b328-4456-aea1-c76705af7465"
        },
        "item": {
          "id": "a79ca5d3-1341-4403-9292-5058badba8db",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4186d7f9-10e5-43e0-a74d-9ad1e3068fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce3f169-45db-4087-b497-d4c349e02db1",
        "cursor": {
          "ref": "152dbb3f-999d-4248-bc9f-2c5da3da4e33",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0a1dcf10-4470-452b-8ef6-b7e18c6019dd"
        },
        "item": {
          "id": "cce3f169-45db-4087-b497-d4c349e02db1",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9c042c59-8df1-4049-a331-70508c598085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b10f0f2-349b-461d-9ba4-9acb433ded38",
        "cursor": {
          "ref": "e779bf20-b8b3-4dc3-acea-fb07b71e1e98",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "56742565-4efc-40ce-9083-04a0b6e93961"
        },
        "item": {
          "id": "4b10f0f2-349b-461d-9ba4-9acb433ded38",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8762c17d-4142-47e8-9260-549f4d0df800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102615c8-c55f-4b9d-959f-3b88eb724543",
        "cursor": {
          "ref": "89cc7092-5a61-47b8-8400-df50ff94dc08",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0df0889e-1a43-4597-ad87-3349726be6db"
        },
        "item": {
          "id": "102615c8-c55f-4b9d-959f-3b88eb724543",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "94a86492-f6ab-42c8-ae6f-946df4f1b925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cebccef-bd3f-42f5-9d97-d34980e2e6f9",
        "cursor": {
          "ref": "d63cecad-5f46-4fe4-9011-64ab014ceb3e",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ff19c5bd-4f17-4d7e-b1fb-f68c2d1877b0"
        },
        "item": {
          "id": "1cebccef-bd3f-42f5-9d97-d34980e2e6f9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6d5c0472-daf5-4c05-8bf5-0d0d2f4bda72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6f9594-e7e1-48a0-93c5-8af1ff52c7c5",
        "cursor": {
          "ref": "0cb3e7c9-c1fa-4014-a6b9-2b44a1638a0e",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7108415d-f960-4ced-8bc4-8c5e3fc266f3"
        },
        "item": {
          "id": "5e6f9594-e7e1-48a0-93c5-8af1ff52c7c5",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1b266812-af49-46e4-b986-10d2de260c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fee4d43-4153-4ece-ba35-3ccb4b285a50",
        "cursor": {
          "ref": "cc3d0cbc-5764-4a81-904c-fca06ca9a2a6",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "105951e5-0712-47bf-a27b-847c8d5a41f1"
        },
        "item": {
          "id": "6fee4d43-4153-4ece-ba35-3ccb4b285a50",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "41b9f636-8ed9-4b85-b254-62a6b313843f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30711dbb-1c3f-4a2a-8c8e-afbe171ee588",
        "cursor": {
          "ref": "6ed2d8e3-bcd1-4ba9-a9f8-651d777b9d08",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e5955bb3-58ee-4fe5-a112-296b5a0da057"
        },
        "item": {
          "id": "30711dbb-1c3f-4a2a-8c8e-afbe171ee588",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ad421a72-cd14-4d90-b462-483eec76c414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0553ae8c-a8fb-43cd-ab28-8b693c0b8728",
        "cursor": {
          "ref": "91cbc3cc-22c5-4355-b225-7b472a7db321",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d9ce42c0-6352-4c23-aad0-96cdbceee701"
        },
        "item": {
          "id": "0553ae8c-a8fb-43cd-ab28-8b693c0b8728",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c9a5f24d-6185-49e6-8803-9c3f9d1f8189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35367c6a-5b76-4597-b1bc-89fb8839f63b",
        "cursor": {
          "ref": "cd4554c5-cbcd-45a7-91fe-33909fce0d34",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b494950f-3ef7-4c94-8ef5-8b631039ed9b"
        },
        "item": {
          "id": "35367c6a-5b76-4597-b1bc-89fb8839f63b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "adf61460-67e8-4d5b-a24d-689c1c85e0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc58871b-65d9-4c4e-91f8-26e324b6e71b",
        "cursor": {
          "ref": "96283cd5-b78d-465f-8c5e-54dbabf395d1",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2fba1877-4b23-4b94-85bc-a2829d6f8deb"
        },
        "item": {
          "id": "dc58871b-65d9-4c4e-91f8-26e324b6e71b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e47dd9d1-b0c9-4c30-bdb0-b2668d127a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162b781d-8538-4a28-962e-9eb9914474c9",
        "cursor": {
          "ref": "a7c4df14-9c8e-4555-bd81-439e671e4ff3",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7fe4bcb6-e4ac-4688-a0f0-73731079a7ce"
        },
        "item": {
          "id": "162b781d-8538-4a28-962e-9eb9914474c9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "16eec0e6-01b3-4a59-b582-5fb28ac028e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee90cb43-d908-4f3f-874c-fc58bae4de56",
        "cursor": {
          "ref": "85a7cdb9-875f-47bf-9ab9-7c95f6e931fa",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4c00d3b6-2ea1-46b0-a459-141ed0729903"
        },
        "item": {
          "id": "ee90cb43-d908-4f3f-874c-fc58bae4de56",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "692ab205-3aa8-4feb-8b4e-84ff0903d2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1990e7-84bb-4ed9-ae37-75fa9ea82da2",
        "cursor": {
          "ref": "788cb7fb-e2da-4436-b341-e36f24f966b6",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5365ec3d-87ba-4247-8299-1fb66e6d2fd3"
        },
        "item": {
          "id": "da1990e7-84bb-4ed9-ae37-75fa9ea82da2",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "957daa47-ffc3-4391-89c1-0d21b3836db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49cd7ad-c015-4ca8-9685-466bfbfd535b",
        "cursor": {
          "ref": "712706ac-3ca7-4ca1-955e-a2653d3bdde8",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "bf56ddbf-cb8f-4e58-b1d1-e7345bcb39c2"
        },
        "item": {
          "id": "a49cd7ad-c015-4ca8-9685-466bfbfd535b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "88dc1b05-11c7-4778-afe6-e3d2abd04860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e004594-acf5-46bc-a69d-a018182c95c3",
        "cursor": {
          "ref": "fe778131-63fe-4cbc-a070-7fe624eff604",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ddcb9ae9-f40e-46df-86a3-550521affc3f"
        },
        "item": {
          "id": "7e004594-acf5-46bc-a69d-a018182c95c3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "103da522-ba94-4731-894f-83da3bf568f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b77e42-3105-4f9c-898a-2deac2523186",
        "cursor": {
          "ref": "c9bac89c-fb2e-46ff-a4ea-fca8d8ed9ad8",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d989fdd3-3400-440a-9a8a-b5e418856c47"
        },
        "item": {
          "id": "e7b77e42-3105-4f9c-898a-2deac2523186",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c7e6177a-d6fe-400b-8376-f07d53a57112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530d6715-556e-4949-9809-911a5ad77dfe",
        "cursor": {
          "ref": "3738e5c1-92d9-4e24-ae36-0e1ea47ebfbb",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c8f0574c-b2d8-433c-b4f0-eaaf2e3096eb"
        },
        "item": {
          "id": "530d6715-556e-4949-9809-911a5ad77dfe",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f6dac9fe-cf7e-427d-b714-abe7c5d12fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c181fe4d-87d5-4feb-a91d-2d71cbac6dfa",
        "cursor": {
          "ref": "42304b02-3c89-4c84-8f20-b55d4801824b",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "77326bb0-df7a-4bf6-b1d9-281a9fadcf78"
        },
        "item": {
          "id": "c181fe4d-87d5-4feb-a91d-2d71cbac6dfa",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1e09b5cb-d169-46d5-8ed7-57f9c856fe89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059a1490-b67d-47fa-bffd-9d12ba39c5e5",
        "cursor": {
          "ref": "095b73b2-df28-4244-a1c9-17af721c5317",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "06393fc0-14fc-4241-8c4b-96cea2bbad67"
        },
        "item": {
          "id": "059a1490-b67d-47fa-bffd-9d12ba39c5e5",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "62e6e39c-34d3-4ef0-8e1b-4b6fc5c397a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d4e927-da6f-4a61-a934-40dd15c8f5a2",
        "cursor": {
          "ref": "51bb74c0-8b7e-4ddb-9b3b-e12d8078aaa7",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0076bb65-2b73-4050-8090-7e888086793f"
        },
        "item": {
          "id": "15d4e927-da6f-4a61-a934-40dd15c8f5a2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1a759168-8cc2-49af-b08e-adb0f563887c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9c07c9-dd41-4f74-9d7d-566650186eae",
        "cursor": {
          "ref": "1c2ef9b6-955e-4a73-b7ab-678a080384d5",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "66ef2af0-0b69-45eb-8f0d-501a5c7aad7f"
        },
        "item": {
          "id": "ef9c07c9-dd41-4f74-9d7d-566650186eae",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "241d7d00-5b8d-4a50-90d9-406e29afa178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5134c2bc-1638-4dea-a29d-8f010711f212",
        "cursor": {
          "ref": "e8a9ca46-59a6-419b-b98b-983d2955f938",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f6bd0f31-ea7c-47e2-a323-a83fb6b3df74"
        },
        "item": {
          "id": "5134c2bc-1638-4dea-a29d-8f010711f212",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "29642a7c-3b52-40ff-bd87-cb5a7017ff65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9cee795-f9d5-4afc-9f18-f6858fe1b844",
        "cursor": {
          "ref": "cbcb1ca0-3bcd-4725-839d-87328f3b50ad",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2cf6de01-0527-4de5-b7e5-42598025e766"
        },
        "item": {
          "id": "f9cee795-f9d5-4afc-9f18-f6858fe1b844",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "44c249eb-4f31-492c-9334-564fa5503e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348d8606-1c2b-46a6-b562-e143e37c8cdd",
        "cursor": {
          "ref": "8f0d2eca-9958-4310-b835-3e4d1d13cf18",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0f597271-8776-4603-b9d4-6f202d7b51a3"
        },
        "item": {
          "id": "348d8606-1c2b-46a6-b562-e143e37c8cdd",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "970b35fe-d134-4c5b-babf-f7c46ff7f74f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58983d3-fc90-4749-bb81-c0669f2f0f06",
        "cursor": {
          "ref": "1770be1b-640a-468c-b89d-9124de7ce39a",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0b1bf8e4-12aa-46a6-902e-87241ea5ad32"
        },
        "item": {
          "id": "c58983d3-fc90-4749-bb81-c0669f2f0f06",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c524095c-c15e-4c5e-8eb0-05278e1ee9cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82fb6470-ca74-407d-85f5-23396b666821",
        "cursor": {
          "ref": "5739a8ed-f493-4c50-af12-100467ace45f",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "059a101c-83e9-4af7-aa3d-75f63b8555f4"
        },
        "item": {
          "id": "82fb6470-ca74-407d-85f5-23396b666821",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1d76a2fe-370c-42ee-8996-f1e2dedc04f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f01b3e-f60d-483e-a4ee-3ef5b5964cd3",
        "cursor": {
          "ref": "203246c5-a20a-43e1-b30e-b50ad82cddd3",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "360618d5-1688-48e4-a121-05974512d583"
        },
        "item": {
          "id": "56f01b3e-f60d-483e-a4ee-3ef5b5964cd3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8db7038f-54ae-4524-8131-d39418ddc038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614d79f5-8d55-4ef0-abb8-e31368385bdc",
        "cursor": {
          "ref": "57a6b28a-bc62-416f-a436-3a793cd77960",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c62dea88-e416-483a-83ce-006aad2c4b9c"
        },
        "item": {
          "id": "614d79f5-8d55-4ef0-abb8-e31368385bdc",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2205b6f3-3a9d-4907-9ea5-8c6a7bc5b35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fad9adf-84ed-4da5-86c3-f77ca7d34927",
        "cursor": {
          "ref": "1504e8a5-9bbd-4d61-9605-0919661ac1b2",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2d20e154-f68d-4733-8a32-43d316d77e86"
        },
        "item": {
          "id": "2fad9adf-84ed-4da5-86c3-f77ca7d34927",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d4859383-b612-422a-bd8d-1a7527855b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191069f0-17d8-426c-8e47-34785fef34f8",
        "cursor": {
          "ref": "bbfabe61-3db4-4f6c-865c-c8c890498267",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "59bb799d-3d37-4999-85a4-9abdce29b2e6"
        },
        "item": {
          "id": "191069f0-17d8-426c-8e47-34785fef34f8",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1bd3802f-f045-4261-8339-d59ea162a99b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2600c7d9-d10a-4944-bd42-dbab9bca560e",
        "cursor": {
          "ref": "45637fd7-a10d-4f95-918c-fabd53abed1c",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b1934d01-0281-4f2d-bad4-2ec8a0483df4"
        },
        "item": {
          "id": "2600c7d9-d10a-4944-bd42-dbab9bca560e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1367b23e-98d8-42c6-8a2a-4a285aa93bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223bfde3-c070-4edc-a92a-53d4dcc1935a",
        "cursor": {
          "ref": "f236e2f5-27e2-4e68-9702-c46955864f33",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4ce7f684-4687-42ff-82f2-78e62a48bf9c"
        },
        "item": {
          "id": "223bfde3-c070-4edc-a92a-53d4dcc1935a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3fec7d3b-2dcd-4896-87d3-7afe194c3493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965b63aa-689b-40e3-8076-cbe2cdf9ce28",
        "cursor": {
          "ref": "c18674a0-4766-4547-b4d7-c41c61a89f5a",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "df3659d9-d70f-4d26-af44-489a797766eb"
        },
        "item": {
          "id": "965b63aa-689b-40e3-8076-cbe2cdf9ce28",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9014de45-b18d-4ad7-b543-2aa9add4599c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cfa2434-d8b0-423f-ac16-7f5bcc8dc664",
        "cursor": {
          "ref": "554c4819-3b99-4da0-8ec3-6db6822ef916",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d763ddd1-e81a-4295-9b88-9b17961cb2d9"
        },
        "item": {
          "id": "6cfa2434-d8b0-423f-ac16-7f5bcc8dc664",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4b73a9d3-961d-4050-88a0-92ad16b2bbaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74782719-de96-4d89-b7ba-62ba59f89a15",
        "cursor": {
          "ref": "195b6926-a537-4c64-835b-ed7ea06487fa",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a092ba0d-7dea-4a65-ae0d-8d2f703791f7"
        },
        "item": {
          "id": "74782719-de96-4d89-b7ba-62ba59f89a15",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4c4bc433-4b0a-4555-a8db-1e1c34bdfe82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9468b583-811e-4f4b-884b-4069161b2099",
        "cursor": {
          "ref": "e1fca84a-5ea4-4eb8-9ed1-702394acc689",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a172d0d1-46a1-47de-934d-9d84f9013517"
        },
        "item": {
          "id": "9468b583-811e-4f4b-884b-4069161b2099",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d991e619-a920-4cd1-870b-b5876cc8edd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8ac002-434f-4144-850d-2e4249a01adf",
        "cursor": {
          "ref": "f2dc5bc1-27df-4c7c-9623-6218cd8ad0cd",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b3ce3763-302d-4d5c-a0ba-6ee15cfa6c3f"
        },
        "item": {
          "id": "5f8ac002-434f-4144-850d-2e4249a01adf",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "16d9a22d-a71a-4984-8fc5-4cd20963dc7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8a670d-a533-458e-973b-a12c793faac8",
        "cursor": {
          "ref": "00cea350-048d-4852-a64e-7cdc75c5f165",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6eae4940-a920-45a6-ab78-5d80e6675495"
        },
        "item": {
          "id": "1c8a670d-a533-458e-973b-a12c793faac8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "eaee5c72-cd80-4b36-8c45-b89920b41adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43eaa6d-555f-48b7-8648-e183e7abff61",
        "cursor": {
          "ref": "1536e4b4-60b4-4d12-8b06-ef30718a4382",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "21152d9f-fc73-4072-9d3f-bef3f9f799f9"
        },
        "item": {
          "id": "d43eaa6d-555f-48b7-8648-e183e7abff61",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "29952a72-4fd6-439b-a5a3-70353947644a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d08c31b-bc71-4d03-869c-ab1e43e5b27b",
        "cursor": {
          "ref": "8caf62ae-f96e-452e-a154-6ae38d0ba37f",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "42165348-60e1-4a0f-8128-bad96ab48f9e"
        },
        "item": {
          "id": "6d08c31b-bc71-4d03-869c-ab1e43e5b27b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "539d5f5a-d31a-4c0b-9426-2dfd12b53e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d762cd-1d08-44b4-acff-abaa4ca47624",
        "cursor": {
          "ref": "ed3d7e8d-92eb-402e-8e02-8360adbcf844",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5ab9c9a8-430a-4f8e-b5ba-734556a8a773"
        },
        "item": {
          "id": "04d762cd-1d08-44b4-acff-abaa4ca47624",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7ee0c137-409a-4948-81ab-4daa4facc023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40454942-f541-46d9-a305-e495d641e2c6",
        "cursor": {
          "ref": "8bd53e39-945f-4e13-8307-851083bd9504",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6b9923e2-b702-4f62-9c4e-ff17e3de7b87"
        },
        "item": {
          "id": "40454942-f541-46d9-a305-e495d641e2c6",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "512ecd5f-1082-42f0-9fd6-8c7237fa4ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381ab5d1-6d34-470d-a6c1-3c8dc6b9b9d5",
        "cursor": {
          "ref": "b644846f-204d-477b-a3d3-97fcefaf4bfb",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0596bd1c-a6f1-48c5-a346-48704cb74485"
        },
        "item": {
          "id": "381ab5d1-6d34-470d-a6c1-3c8dc6b9b9d5",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f6f55efd-ffc5-4c17-87de-96986805ed67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cffb24ae-a141-4259-b60e-9cf20b45928f",
        "cursor": {
          "ref": "840e0e03-6556-4b00-9f2a-6a2dbbf73de7",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "bcc98eb9-738c-452a-8f9f-18d45ec72e17"
        },
        "item": {
          "id": "cffb24ae-a141-4259-b60e-9cf20b45928f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5ed83e18-1286-4d2a-8cd9-971e68a848f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb4b407-2917-4607-a310-60a237d4c525",
        "cursor": {
          "ref": "8f5fa4d0-bb2c-4d7d-b861-b26f917f1297",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "07892bb7-9fee-43b8-9a92-f65117e18992"
        },
        "item": {
          "id": "2cb4b407-2917-4607-a310-60a237d4c525",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7644e6f9-4a0f-4fa7-9242-03a5e50ab769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e51a63-cb08-4b08-9c1e-7f17c3c31d2d",
        "cursor": {
          "ref": "ff968017-7150-4928-97a5-6598230573e0",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "79c8b8e8-0c38-48ee-9ede-cd1e16359181"
        },
        "item": {
          "id": "b9e51a63-cb08-4b08-9c1e-7f17c3c31d2d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f93e82a6-711b-4a44-a90b-e68b0256294f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc21cb7e-003b-4ac7-ab48-e4621435af87",
        "cursor": {
          "ref": "8882b2f1-327c-4e2e-9e07-00a1eba3a5d3",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ce796fc0-7a5b-4a2a-b5fe-99168250fed3"
        },
        "item": {
          "id": "bc21cb7e-003b-4ac7-ab48-e4621435af87",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2c31d271-5c68-4f8f-b403-99a403658e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53f0f03-03f4-4483-8316-78ffa4dd9cb5",
        "cursor": {
          "ref": "154df365-4d9b-4ed0-9dc0-89cbc1e015f0",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "66643b79-d4ed-4f2c-9ab8-eda46ae7b536"
        },
        "item": {
          "id": "c53f0f03-03f4-4483-8316-78ffa4dd9cb5",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f3354016-6a2a-4474-a215-897d76df37ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e524676-267a-41ce-9c07-351845af6b16",
        "cursor": {
          "ref": "e5bd1e9b-c5a3-4fc9-96e4-9eb605470936",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "93dc90f1-7b96-415a-b3e1-607397dfeaa7"
        },
        "item": {
          "id": "9e524676-267a-41ce-9c07-351845af6b16",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "29212871-5578-49fa-8dbc-f91c50abb65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c9ab35-28ea-495a-8dab-1401c5545b9d",
        "cursor": {
          "ref": "e4f1091f-1af2-465c-8e29-efcf04f477e3",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c28c1753-3669-4a05-a000-46a1c35febc4"
        },
        "item": {
          "id": "d3c9ab35-28ea-495a-8dab-1401c5545b9d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f4066991-ba68-47ce-9c62-98bfd4358da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e720e1a4-268d-4460-9066-67714b236194",
        "cursor": {
          "ref": "2b83f815-958d-4c24-9bee-b2baf7cffcb2",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2f0b1a03-58f6-4cd5-a46c-279f6f725f2d"
        },
        "item": {
          "id": "e720e1a4-268d-4460-9066-67714b236194",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bee7312a-252b-41a1-a952-1c14d82cef51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996ce01a-5386-429f-9e2c-b1cf3781ea42",
        "cursor": {
          "ref": "af27c6ec-a2cd-46dd-9c6e-1e464cbeabf2",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "103173b6-2a0a-4731-947b-2e0bf48e3a8a"
        },
        "item": {
          "id": "996ce01a-5386-429f-9e2c-b1cf3781ea42",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c75bb693-910c-4698-987d-89be90e44025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740ab0e6-8d90-402f-9d23-70c018d568a8",
        "cursor": {
          "ref": "32ebd347-aee5-4857-b642-f96e12748225",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "86c1de81-278a-459e-b0b0-962c2f5a7123"
        },
        "item": {
          "id": "740ab0e6-8d90-402f-9d23-70c018d568a8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9b425874-0691-4cce-892c-4c03521c34ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f613338-8929-44a1-943a-03feaf00092a",
        "cursor": {
          "ref": "bbf9a9ce-a56c-44c4-bd40-25bf0562415c",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9a12c5ea-9755-4266-af1b-b0335646a81c"
        },
        "item": {
          "id": "5f613338-8929-44a1-943a-03feaf00092a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "04cac07d-f03a-489a-8c7f-6397ec2373d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2877de-9223-4fc4-b69d-011ba4a624ff",
        "cursor": {
          "ref": "1d678bd6-7395-4172-8268-7d3c93480420",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "fc3dd46c-a0dc-4401-a1dd-c59770d344eb"
        },
        "item": {
          "id": "ce2877de-9223-4fc4-b69d-011ba4a624ff",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8d9aeac1-c010-4a9c-9005-fc3c3aed0a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8e453e-41ed-45a4-8f14-2270b823b19e",
        "cursor": {
          "ref": "44ba764d-edba-4fd0-b498-bdde603aa1aa",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "1b2bdede-71de-404d-b497-d56a389ec136"
        },
        "item": {
          "id": "5c8e453e-41ed-45a4-8f14-2270b823b19e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1de1745f-a4b0-412f-b3d4-68a6e3ade68f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e02a43-89ae-459b-8962-2da1f25d8cbe",
        "cursor": {
          "ref": "cfe7b645-ae76-4e1d-8476-7f69c0b5e1bd",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "5ad2ce2a-1443-4371-8af0-c67185e7a255"
        },
        "item": {
          "id": "67e02a43-89ae-459b-8962-2da1f25d8cbe",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6e66d92d-31dd-406a-93c0-eb963ae8b80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0e3079-1673-4045-bd63-130cf67254e3",
        "cursor": {
          "ref": "97bd5ef8-32f2-4bae-8210-0ef7b8add14e",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b4e0d296-cf4c-4768-ad64-b1f17557bbfa"
        },
        "item": {
          "id": "ac0e3079-1673-4045-bd63-130cf67254e3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "dc0e4afa-07f5-4787-8785-046a2e12117b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efdd875-0449-4953-b229-7f649632a73c",
        "cursor": {
          "ref": "bd99f9bd-c959-452a-b66d-f636c7b5e714",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "89a912ad-3a9b-43a1-8c79-06395d838e84"
        },
        "item": {
          "id": "0efdd875-0449-4953-b229-7f649632a73c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "184392eb-cd9e-486e-8cba-0e7d72882395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433b8780-ef88-4f43-b6d5-198d4bc2d4df",
        "cursor": {
          "ref": "fe3fc96d-fcf2-4039-a488-bf25061278cb",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "ea744262-17b1-44aa-a51c-12f833db18a0"
        },
        "item": {
          "id": "433b8780-ef88-4f43-b6d5-198d4bc2d4df",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "78760f4a-a7cd-4181-bf06-e256e4256eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da687e6b-6704-479e-92a6-59ffa05317a8",
        "cursor": {
          "ref": "c6f60920-0a88-43d0-87e8-91628c95b45f",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "4de83813-9763-4c94-a897-42ef0fc7a33d"
        },
        "item": {
          "id": "da687e6b-6704-479e-92a6-59ffa05317a8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4c17be3e-c389-43aa-af20-d0555bee7a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906a7806-31f3-4ac0-944b-3a6c638e5610",
        "cursor": {
          "ref": "9719e076-48a6-409d-bccd-dfaea7b368a4",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "e9c6c314-d47c-432a-b4e5-8298b33376fb"
        },
        "item": {
          "id": "906a7806-31f3-4ac0-944b-3a6c638e5610",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1b635493-a166-46e6-897f-376dc778b0c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87bd3c3b-e774-4828-bfbf-0b9c7075aeab",
        "cursor": {
          "ref": "2ab63bcd-a406-4b04-b1ad-5d8e2234dfab",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "213f768f-d99e-420a-893f-9fde478c2c7f"
        },
        "item": {
          "id": "87bd3c3b-e774-4828-bfbf-0b9c7075aeab",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "439eeb10-532a-42eb-9fe8-e614d9bf1e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da53aaa-9f8a-4eff-b929-b483e3cc4240",
        "cursor": {
          "ref": "aa0ce40e-6eae-4030-b544-8f0f0a3ec83d",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "be65adcc-d14c-4c9c-8a2c-d7a7db8d3348"
        },
        "item": {
          "id": "4da53aaa-9f8a-4eff-b929-b483e3cc4240",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ba3e92c1-785e-4da7-b4ed-cbed1cdfbb8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a193d691-ca6f-46b3-beaf-b9dc42d33789",
        "cursor": {
          "ref": "a4cfc4c8-61bd-49c7-95b7-aa7a9ba11190",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "7c086773-d507-4c53-a3e6-e7aa8577dba6"
        },
        "item": {
          "id": "a193d691-ca6f-46b3-beaf-b9dc42d33789",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1b24d924-f2d2-4c8b-8f32-e14ec82cfe37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253e8cb4-a246-414d-a97c-ee4ff7607c07",
        "cursor": {
          "ref": "45d7c1c8-2182-4fe2-af4c-07e2da4777bb",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "1568a3af-63c2-425f-a165-35821faf5b3a"
        },
        "item": {
          "id": "253e8cb4-a246-414d-a97c-ee4ff7607c07",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7d1dedae-5081-4ce4-88a0-cecc534e5a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3560ee70-56a0-45ee-b013-8d920b5cdb0b",
        "cursor": {
          "ref": "cc3283c8-228b-4f7e-9e2a-a922f55d60d0",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a3f7b24f-c9f6-49e5-b3d5-6c7b31363a69"
        },
        "item": {
          "id": "3560ee70-56a0-45ee-b013-8d920b5cdb0b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ebfb8534-9829-49cd-9fe8-53d55344b189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9576ff-c8e8-473a-9e0b-71f26c4f2ba5",
        "cursor": {
          "ref": "1d8875c3-fafb-4c07-ada0-b76a1faffc34",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "d97ad319-1e60-4c90-b67d-f5d30ecb8b5c"
        },
        "item": {
          "id": "7b9576ff-c8e8-473a-9e0b-71f26c4f2ba5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0d8b8394-9c0c-406e-a1a9-7e0bc8c309e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b79a753-49f2-4ab7-a2f9-cc0f04b1d4bf",
        "cursor": {
          "ref": "b7544831-3d5f-497e-a18c-d6b79082cdfe",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d923be9d-8c4c-423b-a2ce-608a1d619e60"
        },
        "item": {
          "id": "2b79a753-49f2-4ab7-a2f9-cc0f04b1d4bf",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "71dfe0d2-41a4-4366-b408-a331f57ed8d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f398619-4951-4ccf-bcaa-06a39c60acf5",
        "cursor": {
          "ref": "34bf6e54-6629-405d-9984-2fe3fbe6d548",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "8d5b2e14-b714-4bfe-b40f-2372cd14ac29"
        },
        "item": {
          "id": "7f398619-4951-4ccf-bcaa-06a39c60acf5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0b5d110f-079c-4381-ae3c-50867c7a885f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f4b403-a2c5-4115-af69-a6244a9c6f73",
        "cursor": {
          "ref": "ad90ac21-ce15-4929-9339-f93b2cd87c44",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "fd096bb9-302d-4639-ab39-350ef27b3bf5"
        },
        "item": {
          "id": "d0f4b403-a2c5-4115-af69-a6244a9c6f73",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1245aa10-dd76-4022-906c-4f70539ae48e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298190d5-54d8-476d-b067-0ca8cf1cddea",
        "cursor": {
          "ref": "f333d888-bdda-48e4-96df-b55dadc35425",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b50e8392-fe4d-406d-890b-58b45ed1cb5a"
        },
        "item": {
          "id": "298190d5-54d8-476d-b067-0ca8cf1cddea",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7387d5db-6b5e-4a4e-be06-609bcb26823e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50705710-9cb6-4256-9abc-df8967bc7277",
        "cursor": {
          "ref": "b1ca817d-4491-4622-ae31-b3e12d4c0671",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "7b8d7381-b8d5-4cbf-9982-22ed39ad64fd"
        },
        "item": {
          "id": "50705710-9cb6-4256-9abc-df8967bc7277",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "42006900-3c6e-4346-924a-7b197acebab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00236f7a-f42d-4034-bf14-b3575b925bc5",
        "cursor": {
          "ref": "f834428c-2f63-4af8-8055-c4c94a33e49f",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "c931db53-aa59-4e24-bc9e-9f3c1fd14be0"
        },
        "item": {
          "id": "00236f7a-f42d-4034-bf14-b3575b925bc5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a17e9092-c26c-47b8-a36d-516310879ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da17fd68-c34a-415f-8cd6-b867c9b42313",
        "cursor": {
          "ref": "136e5aa0-265f-463a-84c5-6dfd589bc659",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "b99de9c6-0e24-429b-8756-d6f007875193"
        },
        "item": {
          "id": "da17fd68-c34a-415f-8cd6-b867c9b42313",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "77910056-2aec-45df-ac40-84f3771e4028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8198fb22-e582-42d1-b285-beaa0294e8bb",
        "cursor": {
          "ref": "a6d3bf63-c6f7-4cd9-a822-8c11f719d45c",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "eb51726f-51fe-4a49-a857-cdf4ec376c37"
        },
        "item": {
          "id": "8198fb22-e582-42d1-b285-beaa0294e8bb",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "51c1fd47-6320-4502-b68f-55fdaa1f43c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467cc041-b72d-40d4-88fc-3a173830bf83",
        "cursor": {
          "ref": "20e00896-373c-4c95-a4e5-373e57b90001",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "17eb942f-4c0b-4f3a-904b-6012d12f3b2a"
        },
        "item": {
          "id": "467cc041-b72d-40d4-88fc-3a173830bf83",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e592f561-4f2b-466a-83ef-75396d9892ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c18cc85-64ad-4067-96ab-347bcbbb4dc4",
        "cursor": {
          "ref": "f9927a9c-fc6a-42d6-b267-5a6f0e7cf61d",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "bded88a8-9276-4d15-9e62-7ff3d419fcfc"
        },
        "item": {
          "id": "9c18cc85-64ad-4067-96ab-347bcbbb4dc4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1ec982f0-8b52-4f1f-ab9c-33ceea52d223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a0d5fb-0fa4-47b1-8c37-c6805f5a6d3d",
        "cursor": {
          "ref": "b4c41cd8-5ef4-4052-b4d0-dc19f2f122ee",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c14bdbe7-c558-4f34-b85a-d65901c636c6"
        },
        "item": {
          "id": "30a0d5fb-0fa4-47b1-8c37-c6805f5a6d3d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "769c226c-ffec-48c3-9e29-ce6a5d1c6433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968aca26-59ea-4470-9117-7993d8e1fd8f",
        "cursor": {
          "ref": "59103a4d-1a99-4b72-a229-0cfa22278f04",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "0931944a-f9c3-4205-b04a-f805407f18b2"
        },
        "item": {
          "id": "968aca26-59ea-4470-9117-7993d8e1fd8f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "16b82377-5ba5-4ca9-be60-ac07364c2c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560da44a-f73a-4dbd-800c-4691530bc560",
        "cursor": {
          "ref": "0a709043-f913-4ef0-9c3e-160de1cee673",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "32783e5f-9273-4bcc-911c-2f4b85d371f1"
        },
        "item": {
          "id": "560da44a-f73a-4dbd-800c-4691530bc560",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "dec21689-ec80-49b9-854b-c55be6db6573",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c05c3f7-aabc-499c-ab5a-85ba53d5bb68",
        "cursor": {
          "ref": "e3440a8a-e1de-4a48-b770-67f7e0e27628",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c08c725c-dc25-498f-b8a6-be07b1474843"
        },
        "item": {
          "id": "2c05c3f7-aabc-499c-ab5a-85ba53d5bb68",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "12c8a52b-1866-41d1-af2e-17c2453a7233",
          "status": "OK",
          "code": 200,
          "responseTime": 105,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "66dbb051-0d66-4c7b-a118-c30d407664f8",
        "cursor": {
          "ref": "b3af9d91-48c8-443a-966e-fd6cda75888d",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "8b71a282-3625-4f1a-866a-8ff07d16e8f3"
        },
        "item": {
          "id": "66dbb051-0d66-4c7b-a118-c30d407664f8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9e005480-89f1-40a4-af08-4361d97d1373",
          "status": "OK",
          "code": 200,
          "responseTime": 1590,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef79e385-ef3f-4ed8-964b-76849e84fb19",
        "cursor": {
          "ref": "b4dca4d4-a78f-469d-99ce-8e321bc1be91",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7052ee5c-b08d-4b8c-8edc-c386c120c945"
        },
        "item": {
          "id": "ef79e385-ef3f-4ed8-964b-76849e84fb19",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "87bdacd5-a223-42c3-a9c9-f86d47837bf0",
          "status": "OK",
          "code": 200,
          "responseTime": 1565,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f4425b-3aad-43e0-ac45-88f59823eea2",
        "cursor": {
          "ref": "9b077175-7167-419c-963e-5d3668c09f8e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "ff487a8b-1c25-4adb-9bde-4f1951b1c476"
        },
        "item": {
          "id": "07f4425b-3aad-43e0-ac45-88f59823eea2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2d49d28a-ff2a-4482-954b-128daaf5b0b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f4425b-3aad-43e0-ac45-88f59823eea2",
        "cursor": {
          "ref": "9b077175-7167-419c-963e-5d3668c09f8e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "ff487a8b-1c25-4adb-9bde-4f1951b1c476"
        },
        "item": {
          "id": "07f4425b-3aad-43e0-ac45-88f59823eea2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2d49d28a-ff2a-4482-954b-128daaf5b0b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79629c40-63ab-418c-a21b-5c84f5b02417",
        "cursor": {
          "ref": "c168ab7d-0c57-41a4-9dd7-aee60c9d8f67",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "b70b7cb5-5761-4d88-a127-3fa535dde98c"
        },
        "item": {
          "id": "79629c40-63ab-418c-a21b-5c84f5b02417",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8460a7a8-ea25-4a08-af65-5bdf415c6142",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a8f673-09e6-412f-9bdf-e959338c8ea7",
        "cursor": {
          "ref": "14c91b62-7b62-4d55-8595-fdb344e7f0e7",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "cddb5017-5986-4a92-bda2-fd5c1a86fc4d"
        },
        "item": {
          "id": "47a8f673-09e6-412f-9bdf-e959338c8ea7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e74e20bd-34c8-4d26-9f84-aa7ab6afb668",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}