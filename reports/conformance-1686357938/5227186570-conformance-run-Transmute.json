{
  "collection": {
    "info": {
      "_postman_id": "e9c7f21a-ef69-4217-8f40-0424834c0fdc",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e7fdd858-b70f-4801-86cc-e03321336ffe",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d3602506-1adf-41e2-8f0d-256341aa031d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4a1c0b06-a7ff-42a2-a26b-6b286f91587f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "77156fee-59ac-4ba3-84a0-1e6a55675d51"
                }
              }
            ]
          },
          {
            "id": "c60268b3-ee2b-45eb-89a5-456c33fa90a7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1b058808-f2ea-48d5-bbfb-7966a5f7b747",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "44a3c784-9b90-41d4-923e-d13eb71e9297"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "50314e6a-0c27-4beb-8d3a-33c0850d3a3a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "11fdf912-2221-4080-83ea-290827932571",
            "name": "Positive Testing",
            "item": [
              {
                "id": "275928bf-7422-44e1-927a-aed6564797d7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8a1a157-3239-4954-9d7e-65b870d437a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1bab6077-58f3-44c7-82ea-39b761df4831"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e2ca49ee-f480-4170-b2a3-2f12e5a151f5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6b845217-b0e1-4a95-84f1-ec73da30aa2e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e39f5d5d-a05d-42d1-bdf2-87bdc600bdc8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "412a8454-38e9-4276-80ae-c32803189b91"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe490726-6077-40b8-9e43-9a54f3aa0a38",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4a1b53a8-0ab1-4531-a383-8854defba0f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27777de1-6777-4a81-91c1-8f14e797e990",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6d358ab-07ad-435d-8768-2b9429c62dcb"
            }
          }
        ]
      },
      {
        "id": "9c65b974-5c8d-43ae-831c-4b74db807739",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c31427f8-04a4-4aae-b126-866d115218ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "08e86e86-da85-475c-aaa2-e0527d968fa5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2893231b-0401-4328-b157-66703f2abd4f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07fb00f2-7fb5-435a-9062-817974b76c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0526e13e-dd5d-49c6-91c2-3224c6f3ae42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1ed24a-01da-4ac7-b227-232a0ef39f09",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3d631c-722d-46bb-8a7a-fce0bb5467bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac624f5a-bfe5-4b07-b51b-f3347d9d230b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5893ed-45cc-4757-b1d3-a6c56a45d1b1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9acbab5-9f2a-477f-a1e1-5c5e31664ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3514429a-9f10-4201-8da8-c467249cb0fe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e94b3fc8-03b2-4146-9780-a917505eee00",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "85d37e7e-408a-4168-ac31-28ffff465a32",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b859021b-b732-4625-8785-5d7905c4aeff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c28f1c89-4d76-484d-9dd7-425f90e218d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ec7dc9-b08c-4eed-a576-3605f03cfd93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2648aea7-9685-4fa1-80b0-aa1f882cb1b7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ac2d8acd-a8f0-4849-9c8b-3269fca7bae9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4fcc8051-d237-4210-9fd8-aa00199d1fc9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7625f64b-c2f6-49af-8a55-37ad97bb453e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4c911be8-55a5-43d2-a35b-f379f3689d84"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "545fe774-2d5b-4439-affb-a5d2e6db0be2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6c0a3884-83c8-40ec-a240-0d96bd06ebc9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aae9e55e-f82d-4f83-b1d2-231736b7399e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d1b5b2c1-cc8e-48a5-a8fe-45dae4af04ee"
            }
          }
        ]
      },
      {
        "id": "699a0eba-82c6-42a8-9d61-0c699b9d3d49",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7f128d9c-f695-45c0-90c4-f729beb13f6a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "24637019-f3b6-4e3e-96b1-3867436331bb",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "2934e776-af23-430d-bdf5-c13624b0beb0",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f26902f-c3ea-447a-a20d-fdedd3207b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "276fa992-05f9-43fd-af17-df9776319012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0deef7-7096-4f90-bc5f-107497022bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f359cd6-498e-4098-8541-b627e4c900da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce1288c-e691-44c5-adf0-0f01ed6bb3d4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e61ec7-3dc4-4a3e-83c1-816d7aab0914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99d12b8f-52aa-4156-aa43-7dd6212c4008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d068d6f9-2e62-4593-b70c-a598b3815f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33edf35a-c64b-496f-b904-3d6f0db93884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5799dfc9-20f9-4dc8-ac8f-fc75c04f8fc4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef23bcb-89d7-414d-bb0b-fb001f4747c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baec05b1-b198-44a6-8464-c2076b58fa13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d30c6b3-e841-402e-a261-b5dff32413b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0aa7b9c9-11d8-49f6-af28-27a519829dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8a34b8-d6ed-4d2e-970f-d110f25fd07d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e36c954-270c-4e38-8e83-5d3b54b93a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4dd2641-1f2f-471e-a2be-07d1bdff4798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0144f6d9-a33a-4326-a803-c0eee4b80a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eada4457-ea7d-4d40-9740-e812bbdc4508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c533c327-5ab0-4cf0-94f9-a8080f6e042d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bfad2bf-cbba-41e1-bca1-d23e6d8ad1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeb9c5c4-bbba-4154-b6f4-dd0fb180b168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34a3788-69ab-4491-be2d-3dd75546de5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae3cbac4-8688-42e0-8e4f-34105cf20d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68504f07-26de-404a-bd44-70c816226c48",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d95d9e-cfc2-4bfb-8c96-921e488ad8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9232d9a-a4ff-4c9f-a528-f98010829a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0901b4-cb48-46f2-aaab-6617a92d4eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11fdf8e1-01a2-4ccf-bbea-2a1c46a4fa53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c24dbff-a7f4-4402-8d7e-12708a4c78cc",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f32332-518b-4664-b55c-63c363290929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ffe17a3-6afa-46ba-a81b-37739e8f787a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863f85e7-6ad7-4983-91f3-6f1a1b389df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd4a5d8d-c452-4169-9f02-9b520fa96fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d763f2-0280-445e-803d-55292906bfa0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0095bc-a720-410a-a3b7-c174de4a8926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e69fa6e0-3315-456f-9726-04e54d0cf4ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71afd8bd-f2ee-4e1a-b9f8-cffe49b33808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fafbd075-0589-47a9-a8b3-d9eefe2bd2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10870bc-da8b-4e7d-ae75-5cf7728bce9f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b4b516-7fa8-4629-9c74-6f671f0de9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5676b33-319c-4721-bac3-6c89db63f687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba16b37-aff6-4636-81fa-8c935a2a22fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c7ace58-1b0a-41a0-91d8-8e9e64503e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532c46e5-1b0d-4da4-a401-174ad0f51209",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "997fa1d0-e963-4171-bff8-87e9a9adec35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e24c3a79-c761-4de5-8f73-10813844ef69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c733ab-dc06-4073-96cc-3a7404c7010d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a4a7ab3-a164-4865-9f4f-0197fdd90da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d6f6be-3b31-4a1d-9625-64f38e4614ef",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf432985-e804-4411-9d4b-0c7d8b1f9552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90d1c3ed-46e9-4d45-981d-6fbcd3bc473c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5a8e41-557f-4a0e-af24-eba24e43d6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e5d6e16-c808-4103-8ec3-51d2f53445d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99390666-0338-4dd5-b655-9ee0e6a130f8",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "325d9828-c23d-49e6-a6d8-82cb27a07aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0dbb25a-9c5f-41f9-a60d-628ec87f3cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f7d3f7-5e2a-4f7e-a994-e5a3e7ca451b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82d7a34e-db7f-47a4-9f85-c1231e93b598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5e4c8a-2951-42ab-af7a-415eff88cb50",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "580e09c9-e983-495e-8eef-1f012ae93645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f52526-9e0c-436c-8b17-802ab1708da6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940f0781-b7e7-47ca-8ec3-9ea3d312f1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4bcb2702-cf87-4ef6-8cfe-48217701d37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39e2aa9-8cce-4551-b75f-7496b3ae76ef",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc726f28-5c33-4d8a-a7aa-b55366633a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e3ed338-2b6e-425a-a341-bbf0c3b71720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73be358-3793-4068-9a23-96e81dfd5cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a4f2ebc-95a0-4482-8e72-d51880dbca90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a564d20-494e-4355-835c-60c5eeedc285",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbca4481-1d3f-4bc6-ba89-e1160d849873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7111329a-d3f8-4d31-8813-55432d9723bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1975c1-5da0-42b9-86c7-7267765c4d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13b6bbee-17a9-4974-ac45-abc51aa3f20b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b721f786-9090-4ef7-a996-971a80489d44",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de42142d-92ca-46b2-8a0f-6f7997186cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3870a74-f830-4ea2-8bb4-f08d44fb14fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef58b8b-7744-4b3d-aa3f-7192c2b8dda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a97264f-8a47-4b41-801d-fdc159e14066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2203653-88f2-46f9-b8f8-da0bb6bccc35",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8389f24c-4887-448e-8e81-83a3fafa3c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2645ef09-df87-4305-b8f5-f7337db3eb01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a0c9e3-7a1e-4fa9-a756-4cb45d5fe20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61cbe4d8-abbd-4979-b8f0-f150f2c5abda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3b60f3-d0f9-4ce0-a25b-0f39197c8c8d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0f3a92-e119-4922-af91-dedf073c9342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a1bd619-a751-4527-9417-c1c2a037469b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30b3fdc-4420-4892-afe9-43f952693488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "833863e5-d123-462a-aaff-8b77d09ac339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "990667a7-5cbc-45fc-bdae-af8d3bbf77da",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dca6076-f587-414c-b344-01b51570ae73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c83b90b-1f66-40f5-a243-54f5a5518015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4a45c3-fc48-4ab2-98bf-05f55b855ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdb4c70c-2427-4bb8-b982-e04ca02013db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a1d2086-f0ea-4656-848f-b75834de1ae5",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66d138f-4dfa-4e1b-ab72-23ceb17d3621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dce89bf4-87f4-4a52-8873-d86c0f87aa27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d636e7-11ae-4c6d-9baf-666fc883200c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de328780-cb71-44fe-bcee-e0243e9d305a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34fd871d-2425-4af1-a6f5-cb7e21509743",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8650428b-0d0b-4d91-a523-f78c7529e9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5250a63c-e8b1-473b-965f-e5f7c60c8b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e4d778-c5fc-42e9-9c7a-f17e21b4619f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b697e6e9-e585-4679-ba5c-b8c1a47cb0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f3d3c9-8cba-46d7-bb58-73b5f8520ded",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5314ccaa-8928-4b22-bb40-eb02ac864c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c392b1da-d5e4-4b10-a4b9-abb51b5a5bed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b7a1f5-b13b-4c4a-ae69-e52130bbde49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "32a5fa2b-bf11-41b2-a86f-0183bbc47e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ce95c5-72bb-4d49-aba3-8198b6a807f3",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f1cf10-fa0d-4eed-9c14-30bccec592c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8769d16-768f-4069-9152-c18a183f4a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3afbbd5-0dee-4d12-9d2c-ec5b668ae724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3cc96315-1539-420e-a40d-cfe35265a21f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca67efe9-4303-452a-82c7-eb043c2aaed0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3b0587-0185-49b4-a93b-82cc85d1aaba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b6499f6-08d1-444b-9d47-d6bfe7b90770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b386ce2-82d0-4c17-ae5c-c0ca2ef16e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "62951295-876b-48cf-801a-9ebcfe9e0433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557fe546-34d8-406c-b541-cde413032b3e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d9c669-6090-439f-acbb-3ec69eeb896a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000191b6-1888-45e3-a3f5-6cfe2fc392e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee326f6-e1eb-4cb0-98e7-39784ded7698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa2421de-0ab7-44d2-a5c1-d0ee61ac885b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f4a0b0-0a56-427d-af8e-90e1f5c2e41f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5c5125-d0f9-4957-9383-ef6fccee275a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4370fc1-2a01-4020-8e28-3a60cc425113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f310332-5ae4-4ee7-9b0f-dd82bd5f85e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf39f543-a712-488a-89e8-6e58f04e9f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb399e4-9ca1-4c08-9aae-6206dc98c957",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e01bf6-0a31-4658-ad0b-7bd8972b2da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10337291-a144-4d99-8bbe-8d4b53ee1a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281d483c-96db-4a7e-aedc-9bf91f68c2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f764528a-a2fc-4afe-b2ac-87c6a3d0d6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6e5ebb-d19c-4e2f-9869-8dcb049762df",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87647da3-75c4-4a76-b7c2-1ea72007d4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca27d8fd-53c8-425a-8967-29520b0998ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679cf9cc-255b-47b9-a8a0-75245e2a2fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb426ace-06d8-41e1-9d9a-976f0c5b7259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da47760-8c16-4784-bc52-a30ffec33a19",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d67e70c-8b9b-4f4b-ba78-379742be419c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "997454ef-f44a-43e8-9192-8b6e7f225aeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0069d2a0-d5ec-4908-85e2-e57ba2288697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "445526ef-13db-40dc-97a4-5f4e38b7df64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6742f8a-c83f-4eae-b579-e3b7ca10b907",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4afffc-3215-4536-9c9c-9a1f62d929a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd3ea1c3-0dcf-4d24-b9a2-d1de1d24f295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6daa2c5b-f93b-4d75-a27f-e26a41172179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "684a208b-7a21-4c9b-ae04-eb4c1ee44ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c6a906-fc5a-4d1a-84a8-208210d72c70",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64102773-7698-4c07-80aa-806e2a43bf46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "382743cd-9c9f-4f24-98f1-9f514ff49feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfd88d8-a7d8-465c-9b05-c827d0a7077c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dafff4c-a3b0-488b-8930-543366803c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "688a1f34-0fb2-4919-bbee-534152a5cd7e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30724b02-f36c-406a-9f08-1b2f61746add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b020b3a-c586-445b-bdfc-d02c800f4cf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1bca51-805c-4bce-bd4a-d1d541675fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7feb5b5e-708a-477b-a05f-90481dd94d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a046c294-be9e-4644-8181-9d911d3a97e8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4f3a25-76b7-480a-b225-70093fa1f51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a7095a-3381-4f6b-8cfc-49d9d4ef7594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082104db-40d6-4bb6-89a3-0eb23746b357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7450fe50-2a10-46f3-8f55-0be4c9a71a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534f7eb5-f758-4828-87df-e357d9985954",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c23038-c52a-4d4c-ac9b-363f96363103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0332287d-d278-4d25-bfc0-404059fb7a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2158b189-3879-4ccb-bdf9-9e1488b76db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f876f230-4890-4c7c-bc51-69d371dc8b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7226ae1-eedf-4fd4-85fc-e74985ab9883",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "799deb13-7c41-454e-a3ed-e85e066f3322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48431584-50f3-405c-bc9e-33d4a4cfbded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa9bc64-5333-4beb-8a27-6bec0c6db8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9dedcb25-d3e0-4b14-b58a-33c88ddb4154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b0c1e1-33e7-40ac-b9c0-2e3bf5a5388b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cac7b44-5a92-4a6b-a400-46003fe76dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56351968-5258-4999-bbd3-e5b1821c1c3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ddb91d6-e39a-43b7-9811-5945bc5a9ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db09d86f-3c1f-4c0f-9b48-a58f54cd753c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7942f6-0a85-4f42-9016-cdd599551b6f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b011738d-fa11-4b45-a174-e8459240cced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3e1c001-f769-48f9-9412-7efa62228b87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fe1417-2ab4-469b-aa89-8bada1fcdade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "92bb1e7a-7c38-43e8-9cf6-e56cd4ee04ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0426001d-2012-48e8-a56b-582bf860e9a2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "668d8886-fbcb-49fc-b795-7bf42672709d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f40ff163-fded-4796-a554-0ede6a7e1f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86672e64-d445-4ed7-a602-91d1f8b3faaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "95bf0bea-4937-4add-b209-e1332b3e4d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbaba016-32a9-4467-bdfd-7cb9209a3008",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93fb20d8-36b2-44e5-ac4a-a48ad1374aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd90dfb-1d5b-422c-b793-49700b9ea975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0179c9b9-b302-4d98-ac3c-2d0faf930550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5da70ed9-54ad-4cce-a260-d557158a9630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d678eb-df8f-40d6-bf94-c1a1202fbaa7",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6456f37-6965-4300-9dd2-93b4f947e600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ccae620-399f-4508-9868-10cbbef524d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935458bb-9562-4ac3-9f32-b3e9abdbc77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "968dba98-df7a-447b-b8ee-ed7d63424618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aafc8dfb-c123-4e57-9fea-daff0e66200e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26cc40e9-4367-4888-b5e2-38e36ff430ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20888407-dec2-4fc3-bbfd-2d79c657a8d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b0451d-aeb1-4f20-90fb-43c9bed90e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef624794-089b-41c3-890f-7b001aa181a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfab7ab-dc9f-46a5-a773-5914ec835839",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404bff5b-314b-4015-ba9d-11c9348dca5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad246bb-f4e7-4871-ad92-84df7a00595d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e438fa55-994e-4935-8a44-f554a6abeaf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ff60b7ab-e06a-4321-b299-3da8e3ed7170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ce3363-32a9-4ce6-801d-c63ca0e4f152",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9f2020-53da-489e-acee-1b6fefa34689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40a0aa58-36c8-4270-a25f-58fcdb523d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dcb4f84-a1e8-459f-bc6c-fc6d3d3c22bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "263a36a7-cc30-4d17-8cbe-41088122a238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c629dc-3062-443e-a5bd-c7e9d3ad3edb",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65daf307-881a-4747-8b80-1734d5567475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf3402ad-b45f-46d5-b8c2-7ff020c8cbef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52a827b-7764-4793-be75-65c0d313e49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "92b68586-c151-41bc-848b-cb2d520bc162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5939a4f0-f930-4cc5-825d-0a7fdae99a42",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9918d0b1-fd69-4647-b4aa-c65e49bebd6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20a03661-9362-4f8c-a357-6af5cb2adb04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9997c9b-62ab-4fc9-b6e0-8c3f6fbf8b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1114f06-998c-4fed-a649-c83c9cdfe261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96777e29-6c59-41a9-867f-b0d83367a02a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8620c0b7-42d1-4d5b-a31e-36a17546d342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "110acc33-cac3-43be-b626-58c0a4aae4ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0160eb-5fff-43fe-a11b-25e79c6350bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "73c424ea-d339-48c0-9662-dd4b1c4710b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0aeaf1-dacb-40e2-9265-be30c93f3a7d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e14940-9035-4b51-805b-788be02c4ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c211b4b0-359a-4d3c-b725-188791a7a7b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fda125-ec96-4092-b96e-e2d123d07309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bea3500-450b-4ba7-ab97-90f50ab9f638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba441ca7-4365-4f74-989a-58df6804ce6e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5978d5-2f73-4e00-b00e-6d3949a25dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a00c8abc-d070-4226-ac13-a807f025be54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9675ce2d-7061-4d83-bdbd-b9ae5010065e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24081855-6c01-4be6-8bd1-87945dff66d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4be7e17-7ca3-44c2-83a7-24f23094b71b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6544243-fbed-4d8f-9a67-df4e37f2bbe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d082ce0-d948-441d-97a9-6e1accd611b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd4d51f-1911-41ce-bd1b-1c2b1743671d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5eee3e7e-c8e6-435a-bbcb-b180d63e6232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf4f5cf-34a7-47b8-b98a-dc8d2d617986",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150dd790-ee33-41d1-9a81-41feeb5720d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51c96af8-a458-41f0-9f2f-6bb425ef3a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91da595c-4296-4a70-8f26-03b7c2791881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bffe7a61-b082-434e-a8f3-7fda17b31fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8281eef6-3b75-4c42-938b-014795f000a3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d478bf1-6541-4f31-8031-3c5345abafca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73e305b-40ef-4a16-b6f0-8829855acfde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c19f67-fa90-47b9-8d04-209f7ff79e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c56c329-52b2-47c6-9ccd-fc45f85b1171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5bf8cc4-2cc7-4d3c-b16c-481b044b2dc5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1db3eb-1fd0-4890-8a2f-237722560aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da56afc-b9a0-4f73-8d89-8f577dbb0584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3c9f49-e8cd-4872-a3fb-743b04edecd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6910608-429f-4409-8dc2-64f30e4dc993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92a35d4-6070-45df-9cc1-245c59cf694d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b44536-bc67-440d-be80-64f694998277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a907ffb-ba4a-441f-8772-17e26374fae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f58ed5a-3f4b-4e53-aa7a-3622362b1eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b83539dc-fbc0-46a7-8bd2-799004dd2570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4cf18e-633a-4775-8a2b-721e0335d54d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a3c79c-983a-46b1-8ea9-728735d07c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbdf8ce0-8969-4717-9b8b-e642d39d5316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab7c051-81e6-48ed-b28f-2764062ed1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e41f736-5928-4936-b393-e69de38d05ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29406615-4850-45a0-9af3-e9ac078ddb9c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f42decf-3b91-4766-9f29-3b168f3da90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc220bcb-a41a-4cb8-9b52-da657a7fb655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d803b10b-9a26-402d-80b8-0c5810da45b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e75e47c-ca44-447e-893d-719136668640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0fc67c-178a-49ea-91ff-5b8449e85e45",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7a719e-efbe-4714-b25f-d47e1603bef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c65275-8f2e-4829-8062-5c41f1f35259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772ae83c-f5ed-476d-8da9-0707307ce9b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "63a332c0-b4de-4a59-a788-2fea5674f304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42cf4f4f-bf0e-496b-b375-032da9a08636",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a7ad06-4bc0-469e-a5bf-2499779ff6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0833c384-2111-4838-ab6f-0fb94e711b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0cf80f-6efb-4733-b107-5b36599a3102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "958e6136-20fa-4593-b488-8d198de425cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac24fc90-2c0a-4e1b-91a6-f2c3ae84865f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "909d2b2a-d9da-4a55-b8a0-225f5949bf7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb27c4b-ffee-4bae-8d7f-ae3b9360525e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bced839-f73d-435c-8fcd-30f9754940d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf374d0c-24d8-4be5-9b99-0330942f9ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4689efe-265e-45e4-a21f-047f9c54f6c5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a53b2b-a85b-4fea-ad4c-9b3a61e52460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "524a8a24-f12a-4fd8-890a-3f81e12bb62c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0bbaad1-c267-40c3-9d42-0410dd4b4ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7821ecc0-a1ab-4156-9002-50fb5c4cf216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1fe165e-f9dc-4edd-8e17-91780ce9035f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04094025-cdfc-4683-8944-e996c8416f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54265925-e7a7-4bf4-a664-ed79dd17c991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1678255e-a60f-41d2-8ae6-6081df607f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6e595c2-706c-457d-b9cb-85397f31e5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7c6bb3-b90b-42d7-8780-dd20c954d50a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb075113-637c-4d2d-9d31-4cc478d7b989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55527a01-677a-40d1-960a-b960a544008f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d52c93-5c48-4614-ba54-8a1a8f51d5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "50ef41ac-ca62-4c87-8840-99075f6d998b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e6906f5-646d-47e2-a836-e0a7a16ea37c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac89327-5741-4801-92ab-091240f08b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f84dc699-45be-4035-be58-6c6513ba5ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b21882-d9df-4e17-801d-a1344353f6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb182d7-c0a5-4a3b-9b5c-3f14f0b61a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2d78c1-90d2-439c-a567-3827359c4dbd",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cdac4e3-fc40-498b-9619-f4cf7dc1552e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c02f19-0158-48a6-83f3-cfa4531e3551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61250d1f-bdcc-4e7b-abb0-e45cd89133a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "616692c0-5a8f-4dd2-a3bd-6b1c41bb417c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a20043-0f76-456d-8427-94432df6cb07",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f9317b-f177-4c5c-b4dd-9e3db75fdd1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "303c3153-d86e-4b2e-b0a4-2f2f23fcbacd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20bac6e3-cb4e-4b46-835e-742ba2757537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8781fe8b-3ca4-4463-96df-e47aa7080b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c982a0-dde9-4cdd-b4de-eef2983f1e5e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "628bfd10-8b8f-4fe0-b3e7-62cd72695a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b350a3a-7d47-4e44-819b-1d65e24b2fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75f79f2-b098-4c98-8f87-c41f0b3422a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf669c9d-5434-4031-8799-f2396566db3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde48cbe-a70d-4a81-962f-2f0eb985f192",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce03d78d-b65e-47d2-bfa4-a1103872b141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d87b92f-428a-43f6-a430-4a149e797aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca838ad-7899-478c-ba2a-cd1f93337041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "82a12b69-b099-4d43-af37-09faf672c589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa28976-8e65-4a69-b664-e082d8568556",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "278c902d-d315-49e5-ae84-cbc5a1aaf6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "695884a5-3a15-4fc8-8985-086ac3c47baa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376b32ed-2e7f-4040-bc15-8992b7e7c6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8e2405ee-9922-43b2-9b01-12f6a3462821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4cb653-60d9-4937-8000-ec3967d76845",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a091833b-ac4b-4f01-8d30-b375e90aa5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b39983-ea0c-4973-af6a-5743d6ab1f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226409ce-e723-4411-8ad1-75e7a3435070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed3130d3-1c58-4981-a266-1bbc9152a4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f9d785-4283-41cf-be0a-fc3d8c5b8f3c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3baad7-b237-4f83-ba7b-54105e94ec97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe8646c9-d6d0-4929-b430-4a4dfd2031bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a442a2-6ba8-4458-b88b-ebc864cd0bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba52ed5c-5ae7-4a5c-adbe-a180fbd3e027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0d3e56-fe54-4157-8c3d-715adde0230e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3872f44a-3d12-4927-915b-386913f0214f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "390f4b9d-a2fb-48e2-8a79-5321de8f9288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e28fa00-30d0-411b-9c3e-f5c55097fb8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa4ee20d-bce0-4456-9506-b82e76efdf54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc4f724-d9b6-4609-93be-175e36a49a63",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49603e49-d1c3-4c42-b4bd-3afc90fdf1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f11682d-94a2-4cb9-b863-613fc232ae2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781c9300-2906-48fa-a690-a1bc3020147c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a3bf8f9-d08b-413a-9ff1-0712dd728a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bbce209-d3ba-4441-8c5c-24131a49ecbb",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4348509c-2ed8-49b6-bc48-096c7cf055c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09ab805-ce78-48cc-900c-66469a32e8b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3a1473-9c21-451a-8898-e171ce57fabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a50fe97c-7e89-4575-a67d-c7245343d955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f008de3-9f79-40f3-b4e4-3f9935ca8e72",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12eb049-5ded-4e20-9a09-160f6103c3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e05f9349-35c8-45f9-ad4f-a403b4e868ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a339d49-f6d3-4bc0-a6f2-bb5cef9ac96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "adb55e95-9ef4-4455-9ec4-c9b0e4e7b601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb26fc4-f11c-4756-8c4d-038d1537e5da",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73ac573-f877-4fcc-8d6e-acc4bd2c5843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff81af0-7a61-44ba-ad21-9b3c30a9286f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126460dc-a999-4de1-9116-dd401f8d82af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "21eeaea2-b753-43ac-9294-d3d5a9bb2b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9fe6ce6-e45c-45c4-a3d5-2c9a371f16d5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08f5089-aefc-45f5-988f-2e8d1e7c7015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "447cb8fc-4d7e-438f-99c6-bcaf6f61147e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82dfa787-5267-4f0b-9254-4fe7b23cf38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec2d9b9f-a932-4b33-b045-d2c1a7518273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa94e9b-e7ba-4d40-b695-1a470bb809cb",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7a2316-582f-4398-b41b-6d7f7ef35f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa2eb788-3cc8-4c58-b948-d1a2c9e6eea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b505bb6e-a177-4a4c-ae1a-ea40e9a4099e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ba18288-e574-401a-a26a-304f6ada67e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef9d937-5550-4d33-aa0e-f1d7d3e6ab20",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94434e58-9d9a-448e-a11f-5f8451705099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc0c3e8-f23f-4d93-9e5b-3867f97e12c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f9c721-6cb8-436a-b802-cb16db7f0d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b03b028-8a96-4b15-9831-0d23938fb903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1590d8fe-572e-4924-b1ca-302bea1d903a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f531b37b-70af-4a65-9300-5ada5443bc43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6614776-84cb-4da3-92e4-d308d218b123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65243a7-0ef5-49b4-b7d4-e71fe6c78472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad18e91-948b-4078-b395-726201fdc8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a003b89d-74d9-4f5c-8579-9768f3f11744",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "714e6827-254a-4155-a5e7-df31b7fde370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45fbc6ce-2a52-44a0-b75e-860db785067f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298e3f13-f88e-4492-a6f5-09c0c311e5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f05a796-02f7-4539-abb6-3c1b38b90894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f839cd05-bb08-4316-b9a7-0526ac2b0fcb",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef3d077-f442-41cc-97b9-eb998f7b8c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ad94480-1af6-4755-8d40-aa00a27fbf4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673ff3b8-ce25-4030-a75a-d18b1495bb6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c1ee817c-8950-4f4a-bb84-2526c4852f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ec4fde-7145-4afb-afc2-0593b14ef209",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae72ff43-7e90-479c-9806-9ac359fed462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc4045ee-2ef2-461d-98a4-927bce9bb2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f38442-a437-4de9-b17c-2836349ecc80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "033223f7-65eb-4544-b1d9-fa8fe4377a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad3c643-2c0a-466d-ad08-e4ffe46528f5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c36332f-276d-4099-bd21-aab075512881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f75740e-cf2d-473a-be93-7231e825fe3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032564dd-0206-420d-830c-b8750762052b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ace3509-7b28-4138-bf6a-235e87810d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8b8df6-6012-4d7c-8cda-29cf401065f2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3401728-ccaf-4dea-bd9d-7a31556fcbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f08b0e5b-24dc-435c-8f3f-f0b8d4c32525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78bc8457-00e9-41a7-8e8c-4dcff5a0786d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2166c3ca-3787-48be-9bb9-09406ce64b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc652bc-f3b3-4ad2-b51b-381094b2f40f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b9f057-95e0-4712-8965-afe845cb1ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5c3e2cd-f697-4b55-9bc1-e48084ea89f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82acef55-056e-44d5-9fba-70c3dc15f709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1b4c7c2-e622-49fa-9638-030b8e722037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b10cc8c-da38-4a9a-a65d-091946eeccc7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d44e178-d69e-4094-be16-ddb1c78c170a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38ed3c7b-ed03-4159-8267-3943ae7c81a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8513fa1e-8a25-4d31-99dd-f5479855013b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dfbba3e6-6164-4684-a2a2-5ab7634539f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cad3144-fdd6-4754-8b20-d3be97d7fc41",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a2203e-2f3a-4deb-98e0-184bd0bb7955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210f2977-595e-4885-b195-ec855c1eae97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb8f4f5-8560-4e6a-b4c8-4c6f087d455e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "993d15b1-8f46-4859-99df-f743c1b0997c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84616a2-5a11-4f3c-b9eb-894b0072d41a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3edf6e-12de-49cd-a865-b7f31ab59e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bba4ae2-a275-42af-8976-4cbe488f758b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d944fc0-dd32-4cd9-80f2-098f7ea05cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "daf546e7-53df-436f-8bbf-b030ef39e343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d41b31-4d2d-4b9f-aa28-2e9159427074",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00234c11-0430-42e5-8684-775acd767649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51fc9dc6-6732-4581-994d-a40d6521e39f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919306f8-bf64-4ee0-a42c-505d5163b2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "57a344a2-180d-4d8f-9d2b-b95a5f985859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b435147-3ac5-4f5c-a5e4-99cbea87e0d7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70ab443-52bc-478a-b70c-fd0f3f929511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed35656a-816b-4b12-8bb2-11eff78fd1ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50bc933f-fcb9-4d7b-a5bb-f88d69f6b45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1abe3258-8109-4062-9018-c4c6aa5e5e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d161f6-8dd8-422a-ac2b-e8ce147df5e4",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46d6b64-cd95-45c3-89da-18e54b19f0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ab3600-3dde-4b1b-873b-ae166efc54a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2098d54-d021-46ee-8b4b-5df1ff188282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "888695a5-5a75-45eb-a0bd-2e4ca6f27fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cd1d6a-f747-42e6-9575-faa36d3a60e0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f720218-97bd-4335-aede-2c4e77cf803a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03bc3a3d-a674-4352-990b-384eb7a641aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b35a96-128b-41e7-93a7-fb53818e67d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d77c451-351a-4ec9-ace1-823b912817cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5824bdda-c891-4af6-8882-f21c5630f46c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54032e41-645b-4a5f-b24d-0fb92fe15a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7a9c29f2-e33a-40b6-868d-0e337f2afc2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65f0d44-71e7-48d5-8b6b-cae1d1e36d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7784162-3485-419f-aade-b1d7dfccf798"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7ce93398-03ca-470b-8910-2417877f555a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b661ccde-0822-4292-b5c8-cc638faf1f65",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca055d6-f0dd-4245-b793-30bf729b4f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "113e49a0-eacf-4a03-adf2-c6011fb95668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c2a44a-31f4-4995-9aab-1a7d4eb136b6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69d6d17e-fabf-4f7a-a9ad-1740eefcbc1f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b032aae-65b4-4e9e-b412-8aa374fdb03d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc751cdc-f288-4ef0-8534-5b7ef1b471ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6cf6878-ab39-4f85-90f2-87a92075386a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d917f19a-139f-45b2-b2ae-4474981f6162"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5770eb6c-4c03-4495-ab0e-5948b5ae8095",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ab5ff03d-4b93-4937-8ccf-824018210ccd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fe144b07-89ab-4a29-b76b-2a2e05414ae9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6840d467-10e7-4587-971f-8c27397fd311"
                }
              }
            ]
          },
          {
            "id": "ec9a54cf-f347-479a-91eb-0c6219f4e6d7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0265915c-0310-4a8d-8c0c-348b680fee2d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "976ad3d1-d211-452c-bc18-09764a31c5ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "34e3e755-9f5b-434f-92a3-e6a38c4b792e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06ba7451-75d3-4c5f-9d50-4ad90a2fc26e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "996098ff-6ecf-45ab-9cf2-2f0ad7ed5646"
                    }
                  }
                ]
              },
              {
                "id": "8c543587-2cf6-4f57-871e-d2c4a39df066",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1c88292-b881-4787-8e96-4cbeb140aa5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e1a98a46-4c37-4e0c-b081-f5f483f253e6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a51d7709-9aba-4706-a0be-bc70d8bc05a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6cd77459-7ea4-43fb-bae4-865f4217be62"
                    }
                  }
                ]
              },
              {
                "id": "efca2803-a06f-4289-be18-34df05621642",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbfd8fd2-acb5-4e40-b75e-3c81127bcf52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "24a60402-7d87-4bc6-ae6b-3331c44db8b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "574c1f5a-f466-4b0c-9d72-a171482d9f2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f6dcc8f0-639d-45b1-a695-8530ff44c71d"
                    }
                  }
                ]
              },
              {
                "id": "1933e26e-b463-43ba-b637-54aa6ca38e3a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9752477c-a7a9-470d-b966-707f624fbd1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "51bb80ae-9d7f-40c0-b153-a278b009cad4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3325b72f-4f04-4726-a796-d03d3a058c94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c172ec38-eaef-413f-b227-226cd955426a"
                    }
                  }
                ]
              },
              {
                "id": "7286c040-0fed-4130-a4d0-cf22db56a72a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53f17234-f099-41b6-a63b-e048b9409d34",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fa4cb619-9472-4732-9186-e132c05a2888"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4bd3219a-98e9-4d5a-b9a8-c8af0e742135",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f369e7f1-2fca-4b54-a60d-eea9cd6aae25"
                    }
                  }
                ]
              },
              {
                "id": "70ceb42a-20bd-480a-a23a-062f33d0aea3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5109238b-36bb-4d58-9186-7183a387ce58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "770ba30f-497b-4057-ac8f-1fba6ce059bb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c279ba7-5dde-47db-bfa6-d87f5ba7e9ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "722df6e8-7403-450a-9dec-0d2213f1e1b6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "75cc2547-1307-497f-a225-62aac7f43003",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c472245b-6d73-415d-b1b8-0259f8bc3514"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e2bb539a-3439-4397-a0cc-4075e57fa839",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4d1d3b90-b9d7-434d-960c-7529f53546dc"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1035fab-05f2-4d25-8705-4ebb45745097",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d988dff5-d423-48a6-8c6a-ef751cbaac5a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "849282c2-67c0-4279-b7e7-312b6d3cf810",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dfe12daf-55d6-4018-9a34-20db9e017e98"
            }
          }
        ]
      },
      {
        "id": "8e709d7f-2dae-4ddd-a397-4e168a4be5c7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8f30231c-9263-47f6-aa7f-c1ae3973312a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f4f2f204-7fae-415d-a9bf-8b99201f2943",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e1352c65-9fc8-4fea-9477-aa5b0ff5c78b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6befd865-7ac8-4ac3-8ce2-b6ae2341b9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7948fd0-8bd2-49ba-a116-3ae50c61a67c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea12e3e-039c-47e5-bc12-da562c72b45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b882336-36d7-4e25-bee9-e04f276e2ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c78cd5-3cc3-4467-9997-d680eb25eb87",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15fd05a8-3bb5-45fc-9877-18dc00a4734e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e7307eb-6a92-4efe-ae27-c4f6798405f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8229471b-3ba5-474f-b280-ed2ddeb9869d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8104986a-ce65-4e0b-a310-6149a3d14c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61fc42ee-997b-475c-a7e3-f310835b704e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3765a212-1df1-4885-a312-cad11510c982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f877f1-be22-4b88-b068-38c160a0c393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab818f88-6202-4135-8586-d597b1ec388c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec0a8c1b-bd85-4c71-8713-c529917a47b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e3e552-89a7-43b1-ac6e-18db8e4d6a50",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffde0779-46b9-43bc-ae64-f40aa9a8e8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "994ee402-6eec-4463-b0be-4e77ef059ebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5354b133-0a15-4094-a122-826a2570afbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a947ebd7-9dde-49e7-817f-9ffd8f54aa09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e5d711-fdfc-4c49-b4c8-d407dc717e7a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4189ab4-d96a-4ad7-af91-85de8d47aba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cfb64a9-a7bd-45b6-b4ac-f27dcae83f3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c451c7f2-e8e8-43b4-a451-d0acaf345531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc392c8c-5623-4c59-a911-0de30f52a6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d85b866-2125-41c0-a7b0-8b3f495660cc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ce9cd5-6529-4374-9bb7-09508f2d9f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa9dcdd-9a0a-441e-abd0-80b345cda045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b8d988-63db-4777-8e8a-4198b6f4e155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "279cd722-92d2-4a78-8a1a-37c86b92a26a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51abfac0-769c-4d4e-83d4-610b6e10f7a3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b173f27-7ecb-4d91-a40b-4d2fa0161d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e1134e-2a3b-4a45-8808-47dbc62d4456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89eb625-278f-40a0-b5da-45372f87647d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2749edce-f69f-49d2-8b4d-870476662f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8775731-6f3d-4817-b197-e2d263dc9571",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0919111d-9119-4101-bf0d-b2282a96e96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "787ed4ff-ec72-401e-b11c-2d99e58e1257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d05d1d-26c9-454b-bdf7-aadb371790d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0892f78d-9601-4849-9ae2-608a0904c74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229c1d8b-7df2-40c2-aaaf-63c1f79e65b7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ba6aa1-87a1-4a4d-a931-b1dae6c8ff2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e70bc3c6-7df8-4ba1-a590-a481bfe01ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad3db2b-a226-4b73-ab8d-b39699743cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f1c6fc8-74c9-48f9-b4cf-c7527f3c7fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf501f0-f82c-4101-8742-b5a13d9a57c4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca3214a-793c-4138-bafb-7426e9978948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c659f18f-4282-466f-950e-838baa8e02ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3784373a-fb87-4e77-9e98-ba2f6057c34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac7fa1dd-1bca-44db-a251-2982519589bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d7d4b0-fdeb-4da4-9b30-2df21be1196c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56275dcb-b5ce-436c-a691-40fd1fa4b897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b61b383f-aff1-4077-8269-8d2121c0c046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff43a14c-0cf2-4791-b7ed-56f3cfce800d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fffd2375-567e-44f0-b078-526b8bb45606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3496565b-bc09-4d3a-8aca-cc99424c502d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a371ddd0-8b4c-40c9-962a-14de1bc55424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3a6374-c1ca-4ae0-aa0f-973fd3f01b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16024e6-0e65-4bd5-8f16-8d57659f217e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aa0c081f-beae-43b9-8ac3-9e6833da8e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11612501-b4ae-4e45-9467-6abbe421fd47",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ce849d-45a4-413e-b131-ca36c989861d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ca51d64-f831-485f-9862-2cfc78799fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1052a59-be89-425d-a71b-aa15ad1d7df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c05f910f-bce0-48c7-9a1d-276a60f4aeee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68198b92-9eda-4c08-90b2-384e15e5fb7e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99020c5-0d6c-4279-8f67-900c1810f6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef734f82-bf1d-4d6b-969d-a6304768e5dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b79bfef-610b-466e-a6d8-66e830b37765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd10eb23-f629-4419-992a-e82fa5946a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "725ff4b5-ae7e-4180-97e5-96c3abe79bdc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ed2718-c34d-4d8a-b2c8-2d2560668a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4461b461-0341-4f8f-b760-7059dd70aa37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2576f9a5-6723-4acf-ace9-4e4777e131e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "135cf969-af60-457f-8d72-d205d7f93e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9750c6e-e5eb-4801-8db1-329c3f3a0c8a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77440bda-9046-4426-b492-1de6591ac1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47aef6c1-fd3e-430a-ab66-a078faaabc73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe14d32-7c70-4f9a-bbc8-2bb2b9a588e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e1c0794-ba7a-4455-a576-00cbb303bb69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8093b36-07da-466e-9f82-81f7f29d52fe",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13910c92-6edb-47e5-afe4-c9baf2818b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb35659-f453-4263-a25c-0846de4d6181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578ee6c8-a863-4cf0-a318-0e261e9be49b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "66ed64a7-049f-4b1e-af59-de75e2b9767f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33d3aab-6334-41fb-b13c-05b3b83bd010",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7e9832-0d7f-40b6-9c7a-12db123d6a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a222ab-417d-4eb8-b464-d8f28c61f7c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c70999-f8fb-4156-bf20-bb32560baffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "548f56e3-7d9d-43ca-a268-7d4d212482cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3bf3921-d45d-48f8-872c-d6da08c7e869",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0ffc4c-f552-4f5c-8aa8-c9d98118a441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59eb6b6c-8409-49cc-840e-ae95790fa48f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cec43f9-1b77-44bf-b0b2-614a0438646d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "636c7ed5-22c5-4f44-97d2-2fd0292f7a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d3ef75-ae77-4155-9988-fb8fbfa82f5d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "625fa21b-e9ee-4251-957a-8752c37cc9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80674592-e0c0-403b-a819-1187a160285c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d10f21-8296-4c7f-bfba-bb514f0a9bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff92d568-adf1-4e39-ad2f-ec3cc28b527b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b56f0b-24f8-4a4f-896e-011b94bc6b0f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c090e1e7-a126-428b-80af-88a8d243b140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbe12d0e-ba8d-4c2d-a2e6-272d57dbf4b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b3adcb-3956-4a41-abf1-d7cdc2c57925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e348c2e-7c42-414d-bf1b-f8136d649780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bed35e-5d5b-4849-8207-2831e5cf481b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "311689c0-80d0-4ee6-83b4-78a825e0b221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca3eba11-25fd-405b-8d21-47466a9c6aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37204f56-aae5-45aa-a82e-5e160ac5845d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39219c39-314c-4dfb-8683-1bf1783a7dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f692a518-f6e3-499b-9340-b88e7cfd5a8f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1a7374-492a-40d2-b694-49f4016699d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c73529-0549-4fa9-88ac-f73f177cb495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f21f4933-69a4-43e7-b9c4-0d8a4ee9107d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18acf272-7592-4c4f-b2c0-b54881da9e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e31eeb-da75-418a-81dd-a5590d8f7993",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d59613-43a8-421b-9de7-251f6fbe35ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b951906-1983-428a-acd5-92633ba8cf19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1a6c26-3bcb-474b-b930-b10a9e147aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64e8a75c-f4d6-4042-894f-5c8b3c18d56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da7f5051-0192-494e-a0c7-bb0276fb5880",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5a2f94-e4e5-4c05-826d-48b30fcaf5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "048ec023-507f-446d-a985-f408396a277a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6935b13-1747-4e6b-9fb8-0d57ce785e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0311d72-03aa-480d-8179-76a3d4abafa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e6bca22-3581-4ee8-adee-37e21edfd8f1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9068e74f-166c-49d3-8d24-329ac272147f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b35024-301e-4fbe-91bf-b1fe3956a480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d4fff8-18f6-4dcb-bcc3-cec7c9cf63e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "825ebea7-1634-4a80-8879-17c614e8cd1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c734375a-1b2d-4619-a320-2a5a03fb8354",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "368173cc-2b5f-4173-b5d2-10bd8775993d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f6651d1-dcf5-4a04-bfde-db4b506ed97d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e690f023-44e7-4489-a0e0-bea737c52970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b583e057-3ec3-49f4-8677-99d55dd76145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b6eccb-3fd7-42b8-ac5a-d2f6db8cb5d7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7fe583-c8c9-43e5-be01-e77d71fba060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a258bd-aa39-4140-a998-0ec0cc463c53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17181c3-8903-4a1d-943d-9f9664022bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf94271-ec78-4af9-8d6b-9a8f1317fe5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d7e399-6575-4d10-83c1-ea800773bd5f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd231be-3b23-4cfd-986a-2fabcc42997d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44b0406a-13b4-4e87-8baf-099409910b73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1084dc6-dd7d-4f1c-b928-40c7dcc3a329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "997caa01-c138-44f2-936a-2c824701f5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f20a4a9-154a-4b29-8b89-80c79797fdf5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee91351b-79ee-4778-949a-2f99c288fc5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6cb3eb1-5e90-4386-9f28-b68d2b72348e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c071cf6-5fe1-4f6d-a46c-5b5768005a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cc7f4a0-c78b-40ec-ab35-9130357adcb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd387ce-706b-4ded-a3e8-d69de797d412",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d402d15f-e954-4613-a59a-d094be07184e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a755bdc1-9140-43ed-87a2-d49beb6f1b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76b295f-bd77-4af1-8ddf-1d38af067137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab3f6599-2c98-4748-8b3c-9fdb4731cec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae67f9f-7e60-4c5e-9539-6cf5304a03c2",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ffe0c87-752c-4664-a210-e95d42419bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a88c32-8e5a-488a-89ad-05ecfb932bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fa98e2-f873-4967-8528-974f1cab5069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58ce2c53-5929-4047-bc0c-684eb552094d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "74489a7d-8bed-47c1-98d9-b07510dd533e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "38225871-12e2-4c2b-9620-6a0884d5c15e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd26c2b5-2730-4a55-a58c-4dfe2e95c790",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4eab4105-3aee-4da5-b4fd-7cc1ecec4f3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58179f78-2f2a-4a2a-a83b-6a4aff171047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28aa6fcc-d436-469c-b101-8e5161284ca1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0f94d13-cc78-4c54-8c21-918bd3b5dc94",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7514f379-9dcf-4f99-bea0-8268fa1eb3b8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f7ac8cc-8f76-4770-a5d2-f86d7d5f3246",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8cd4c9cf-3539-4693-ab95-3a9eda182953"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a61a015c-99f5-421b-80fb-4cf86f6e30f6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4f015bfd-8d54-4656-990f-7719c2d88ef0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "684f80e3-59e5-4eb7-9f86-6f5735af2781",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e9581b8a-ea94-4e9b-ba0e-a15e65d38416"
            }
          }
        ]
      },
      {
        "id": "2b8777dc-076e-4f96-9485-6f091bec8d0c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a27d9b35-fd90-48f7-8809-52219d023185",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9192a912-8e1a-4872-ba0b-d3f1da921793",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "46b10872-8609-41c5-903e-82becb3ab8d6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8baaed3f-6d7b-4d30-b735-67d32d371dbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db6ba3de-c8e6-4c3c-8712-76a0b703884b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d96a190e-425f-4ca2-9ece-82425d815f18",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a81b24-2d17-4c72-a8db-d46dbdabce95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2396373-26cf-48f2-b0b7-30f32d947a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0c0626-ad61-4831-81e6-cd063f8d2055",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c95722-c972-4fa5-936a-f5f662757cbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89e76156-5127-43bc-85e3-f3b3ed96a16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f88b69f-9ddb-49c7-b7f5-ee5b13ec2482",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677de72e-4382-4d11-acee-627af54df92c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e873c329-8c26-4f6f-987f-bff155d11ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc538db0-4096-4956-bb93-85166ad6988d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b18e2b4-6cca-4675-aa1c-a4c43a039b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9615d640-46a7-4adc-9fd4-3be231b71a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f980f83-dae9-4b27-9007-a6496697f85e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b80d13d-10ed-476b-8f91-6fdd1308cf13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44593228-db7f-4615-ba90-58bf4506e182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a78021-cc90-486b-9b42-e90d0e6322a4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00d833d-526a-466c-bd76-ae64b6ad9f3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1e245d2-e1f5-492a-b3a3-4801012fbe9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27065d15-c779-4297-adbe-d268f47cbc6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37582fe5-0805-46f4-93dd-c7db465e6ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec20364-af45-4b43-9d48-14c7356a14f1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e8337e-6426-4ca7-910e-0c3268afcc1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5f89dca-3b6d-4df2-bea5-b9e609a8ce76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f2a8f9-0217-4cac-afbd-0297daf8f676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df667a1d-068a-4372-9dcc-94f0abe16a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9693c9a0-f3ec-46bf-ba31-6f6f12700e8a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769468a9-f2f9-4d95-bf12-34e19cc5e381",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abb7c724-d866-4d73-ab25-061f168252f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd53cd88-96d6-477d-82ed-a5df5e7aead7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5265bddd-a91c-446e-b070-14ee1e56f299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b66874-59b0-43af-ad88-c13501e601f8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e9a320-a22a-4ff9-bf1b-a42331ea63d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36e26caa-6e4a-4511-8e53-9d94ccf41c78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5822d70-c176-4c35-929a-c5d3d5873f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56a30d1-5fa0-44ea-9e8d-120762e562b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643808ed-59f2-4243-9613-ab4040bd83fd",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485ea5c0-63ef-4245-a38b-0dc3bd12bbde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "900d8a58-9bab-409d-9791-2955dc1eeb83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd79c36-5280-4ab5-9dc3-a1366d72fa5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2b1fcdf-65bc-455f-b96f-0fba8a436a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77d2771-daad-4770-8314-70edbda40931",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0467a663-73d2-445f-9bda-9eac5624c9f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da306dcc-0b3f-4a1e-a3ff-0982558b8d4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12c9f7a-1f53-44d0-b6e8-840b7091148c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "617ca76e-98ae-4960-b9f5-d009aec24dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0308005d-35b6-4e0d-9fb4-efed7a2cdf0a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d070f4-5f53-46e9-93c5-b4d422ea9f13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8be6306-fcaf-4a00-add7-e04630cffc7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f126a2-1bdf-496c-aa42-5d5797403e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84fcee2a-ae3f-400c-986e-73b8a9a86696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9e55e0-71cc-4ed5-bc8c-c6df70457395",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fbca254-f5f3-481c-a669-d1e8b42dec30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "200439b9-800e-45a5-bbc9-cea04a018a97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec14ce0-c73d-4226-ac84-92dee8adf55e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ab7f805-f904-4d30-a7f5-2e197f3e71c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7d9f6c-6f33-4ea8-a1af-b4a2844b8628",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3438f3a-cd15-47c4-8bfc-ff29de6d5080",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f2ef31a-c7ee-4d24-b48e-c9ba93fef656"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e083c7-7e66-4c22-b72c-f98a333345ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfa5b083-96f1-4e18-842c-aaf54f19a434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128becae-ac78-41fc-ba83-5b4b8f7c3758",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84586b24-fe49-40e1-a36a-d2a90a81a49a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "888e6dfa-15cc-4a4f-8c1b-13ea8bace433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3fa1ae2-5c14-43bd-9a70-b16dc23a3871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b667ac-0e7f-4e75-9008-ef231d9039f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1048d842-cf0f-4f2f-9f53-88cce0b78abf",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8b3b7b-3aca-4d3d-b253-3b390c88c3bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30ea4c83-6101-4ed5-aebd-acf3973c93e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b580f445-88d9-4ffb-b434-ad6c5f1648fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8da5e3b-b176-4fa6-a55e-7b4f426a36df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19361a63-f777-4f24-ad7b-bac08f67dbd5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98437cd-65e3-4aaa-a223-066c5844a658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f38472c2-c739-4dcc-81a7-177babc79667"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c00ef72-3665-4c43-bfbb-e01b47d9d268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c46bd57-75b7-408d-868b-8c52755a4daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89556619-92ed-4dbc-9881-29ada0968614",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e269af-22bb-4bbc-b48d-8b8a4ee95715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3091ff11-cb20-45f5-8337-5250099c4b18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01454bc8-82cb-4a20-8db7-d122ac7c2528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a4bb49-15f0-4592-8845-f0029a0a04b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d042e3ee-f668-4164-8d06-e1c35a58bb6e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e959b08-19d1-4ba9-b7f9-9d893a038cd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fb47018-4b46-40ba-bf15-9d9af26dd0d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a778de6-2a3e-4c79-a723-28a89f6c50fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec77565a-7e2b-4cfc-90ae-7103d8d1412b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e14698-d21f-4606-8f38-8ef63401b153",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1b1058-94d6-438d-b057-6b49670445c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac5146a-30ce-4860-932e-9207f0305b46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0db1c89-67a5-45b0-99c0-755247d56363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afca7726-86c7-469f-9a24-f9318f601799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "971c3d95-6111-4328-aeba-792d6f0321e3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2d297b-6403-4967-879a-d3af3a964582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a144c71-a59b-43f8-a09b-1e615096529f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3e0e7e-2c84-48ae-8ec4-230cace76cf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0af44068-1d13-4235-ad89-a9f356cd632d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6792b8-641b-4f8c-8bb1-ea814f4f6a5b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "214b84f5-1944-471a-836e-fbfd2d0acdb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "792850c4-c148-4a40-8d46-5c10ab35b2cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "356a39c2-8674-48b3-ad6e-b1e3f900b0b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34c68082-2810-41c2-b4f4-dd5a620881a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7129fe9e-2edf-4a9f-806e-07c389acb489",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4dd98e2-427d-4ab6-bc6b-9ff7270fcba2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "457e3ba5-32a8-47f2-ac7b-0f5dd7b48b25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b98ba3-5ff7-4953-8802-c180a42ba4f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3229e661-4c15-41f3-a36a-8d9abfade376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b09b57-3104-460c-bc0d-75023e869ab9",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bfd81f8-e22b-4174-a263-5e76756c4107",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95987fe3-187f-4759-886d-6deee19cf374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4d1402-7ebc-421d-9d6d-1bc67736ab46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "012fa810-9071-4da2-91e9-15ba5319b7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55dd27db-ee7a-4b18-a267-5da8ed9bac9e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aee7b3b-2c94-44a6-ad18-721cef014dd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "807dc2d8-766c-4af1-b97e-5c0c30d3e877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "016cc470-5b88-4095-bb33-0f925103ffea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b786d67-3b7a-4ef7-8819-7eb6c6f2d0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db27d540-ff84-4ae1-b56d-2b856360a3a0",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d2a3af-dc3e-475c-9c96-33f9eee2201d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9382e6a6-5dac-4dfd-b1d8-4cab70450167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da121ea9-30db-4f6b-814d-0604f6d8c9b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24efe11e-0501-486d-ae47-335984a69efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3996ff66-a4d9-44da-bcee-dd408d95e055",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47efbcd-83ff-439b-a4cc-d32aba569c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc8187ec-65ad-4a45-b86d-b9f51dfe0263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1575327d-4914-41d8-a8e6-66c97f96d642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a19c4606-305b-444f-a23f-49565f2eadce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b97467-b44e-4a00-9c9c-72b1e550ac02",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215a7456-4b8b-492a-abb5-5daadc0531d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c42cc1e0-1ba5-4a47-873b-8ba85c0f250b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31edf41c-cc58-4c50-9ff4-e110e01aedf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afcaebe9-1900-45c4-8dd9-c3337fe3f2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471c83ac-1795-4188-b7b7-faa5480579d7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1460e40-d388-483d-bf8d-9358771013b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fce2aca-d262-4717-ba2c-47e7d999514b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cacf4b0-d384-4ec7-8cff-debb06711fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "917d2406-8617-4fb6-835c-5d41b1780ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8728974-cdc6-4634-8da5-8ee7daa19deb",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96812ddf-f2bd-4d2b-befc-d7a871e76a76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7d9ef1d-ea76-4bbd-a4fa-5dba9d7d273a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11ea324-9918-468a-996e-bd588a5bb3ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec88427-4460-4555-b91b-f39e9e49a9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56697ad8-bd37-4f02-9ad1-ed52df83d12f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9c6677-1b19-455d-b8b0-c872d6689e1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f88f0d5-7388-4c38-bc86-a521d38fb373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f9a2f5-57ac-4a97-8ef8-91bee93228d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab07f5f-5f72-4057-97e7-c057fed1e261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c942c66-7abb-4cc7-9f2a-44d8dc33c98c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ae6766-0124-4767-ab10-4d9bf6371fee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ba3308d-f19f-4c4a-b30b-7784f60f1a80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47656183-05ed-4e2e-8cbe-9505f657f681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d01eba33-b815-49e8-bc4a-5f6ee07b8019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f15c3e-96bf-4703-a532-924f6d07a3d1",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1c0af6-e8e4-47bc-b447-de035695f841",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "409ed139-157a-43ba-8894-8ccd5248bdd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "455be612-8836-4130-8de3-5f778fd2c569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2638962b-4821-4418-a1fd-486bdaef9798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3357190-9cee-4d94-9268-b137221d517f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f9c901-0844-4942-9496-42b7f2482fc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a65b7b-8db9-4ecb-a1cc-03907594bd39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7015ef6b-e49d-4d8b-b5ca-b4eb13e4a554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab78ce28-4530-4c6c-9b05-8f004507d4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0d95d9-c565-47b8-ba97-aca246cbd049",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc370bae-dd52-41b2-a8ec-2ee8fc4a0335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1052f6e2-9229-40b6-88f0-6f60f8166c2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6b6cb0-be0d-4d74-9996-5f1197adcd82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb477232-cd3e-46e9-9a3d-687502fed39b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea54ea60-a08c-4c37-8fbe-84e9d4123b4d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828fd30e-b662-4a2c-90ef-8c5d9c5bfc7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "499524dd-2b66-4e2e-a753-98fc537d28ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ba8e00-91aa-4456-9aff-fa9417d0818e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f70c73-c445-4804-ae18-971b5a9e2d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c298f08-ef46-4f04-a671-3232ad2bf198",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d89af28-a436-4799-ab81-1d368f5dbc8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdbab104-409b-4c00-8b0e-90123a84ae0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b951ec78-b713-4ecc-ade6-a90cead3bd78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d8609a4-a4cf-44bd-a6cf-541798dfee57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0fac7a9-7690-44fd-a9ac-3da8c330c187",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f58ab0-cf75-488f-8ae3-899e31a40a8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "945113de-3118-401e-b652-19aff91cfabd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7614ac3e-b246-48ad-998b-7c89e62cf31e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a48b11-8f8a-4020-85e7-361a9c355a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7b94ff-05a2-4d23-8cf6-dc0605c23d5c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49f5528-7d9c-4415-9bf8-4d970b7508f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e02bef57-5961-4cb6-a40b-4439cdcaf057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b05720-9488-4f9c-a4db-63d92ede3d52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d081051d-8bd7-425c-a6a2-091e2a9df248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6361bf19-0710-4b7e-940d-c6418f602379",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d53267b-6f04-4df7-ab52-ef1cb8ce7287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b737b8-7187-472b-926f-8e90e5ec6a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0ff423-dbaa-4dda-b584-3d7c742f0771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a611d551-c66c-4345-bcd2-1d4d59f01ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be53686-fea6-4545-80e0-aeeae7bc2e6d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b05007e-b383-4f7e-9897-bb13833bc20e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29b45f45-ed7a-4ffc-9600-75fb907be699"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9498fb65-cfdf-4536-9bae-04788ca8f759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3284ad03-fae9-4d5b-b0bc-554c579c9a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9ea100-09db-4814-a028-26792ae5f9b3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043d2db1-0471-48c6-8caa-e2f2ac146a82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b3a50c9-4ed8-4f3f-83f3-555b704e8c96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ca4c37-f3e1-4e02-84d9-403bfb11cc2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f72fb9ef-5bf3-4010-ad3a-812a39ee2c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e70022-1d5d-446b-b699-758c880ffcf0",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbe9950-cfac-47cf-893d-c2f83a740054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5357d9d1-50af-40da-af91-d24887bccc74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51dc3139-adb4-45ee-b059-c80218764657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed3a1fe0-cc18-4a4c-bd9f-a058228b7707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e93fea-a17a-4255-87e4-abe5d8858cb7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd40ac0-036e-4318-86b3-ef6cdc5c8175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f16e82c0-cab7-45c5-8f84-8d4ff439d1b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b4258e-037e-472b-b1a0-8a2d79ea2533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7da2ad4d-10ba-4816-8e7a-d408818036ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89a0046-e311-441b-bd40-bbfdea4dd84b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299c83dc-5cf9-4627-8ce6-82ae698ddff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f47144-8b7f-46c9-98a4-beeb64022d00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bceb6f7-ec81-4e58-a45c-99b2dc37a1d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91d528c1-01f6-4507-9838-ad12a89ff536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915ba26d-ba32-4a2b-84da-ee45b8d03f19",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9285c3c-fe70-4784-9dc4-6bb67547e226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6eb424b-fb82-409d-9c78-25a175028b31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "040968c8-cc9b-4a4b-9d58-736acd52f9ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5d08b92-093c-4659-aa2c-67528204a52f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc569d8a-ea34-4b5f-9e73-f072ff7894fd",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee0f863-321a-4df1-be7e-97a229a51ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4167300-4270-429b-8126-090676582cb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59325cb5-56a2-42c7-8562-968c320d8737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "359f94ba-d090-4c2f-841a-5ff4d23cbcf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2891a334-5906-417c-918d-2f3089925a16",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab08634-4d06-41e1-b5fa-406c733fd5ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b1ae391-30d5-4e23-85e7-8b59c502585a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a7bc47-ac3a-43cf-bc22-0b88c8843489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e32773e3-277b-4318-ae72-0fda8f4c7e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f255ab4-c0ef-4c8a-975a-cbdb0931fa73",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1def94e-9cdf-4aa4-b12e-5ba62a674907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48fc9776-6bf7-43d7-9c6d-77847a0a71e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3288c3f-352f-4fe5-93ae-60a2b5207ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed353847-da86-4aff-944c-e57a88d208b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca373f16-8e9f-47ce-9d7e-e213a402454c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235f92c5-9406-4d95-b6d3-dca393d81072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f2a9ee3-86c8-4d6b-b0e2-ddd88d44a37b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78ad228-b05e-4e7f-a39c-cae3266c444f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f44451ba-a0cb-4ee1-9e9e-82ffd077d47c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae965c5-cc31-45d3-bc1b-168f68e2441f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bdfe645-408f-40f7-a7ca-e2e8956fd619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ed863d-3df3-4124-a30e-112cc2063e81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3266e322-8e97-46e4-90cb-007d23babd76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "228fc6e4-279d-4079-823e-dbf3be3a1101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a508199a-d918-404c-af8c-5c001cde5eb9",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50fe9ab7-3e0e-4b11-acb3-ee704ee5cdf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e38cff42-6cea-4c35-8cef-28ec66ae238b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dfdac45-7db1-4448-a4f5-eef5dadf6bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a612d0c-e224-4c3c-ae38-ab51de1bdb0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb731e8-70c4-4097-8f77-f6cd2108f0dc",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d58797b-4a89-43ae-960f-97dfb3754e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b90c87ce-0c4c-4c17-b03a-514b3bc09f91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f29bc5e-a70b-4b51-9c29-f6f682fdde99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "678a52ae-19f0-4a90-978b-3b0ecdadb013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fccd452-3227-4e41-8cfb-4068c0919077",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8bf248-5c5f-4b84-bd03-a1954de71223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f406edb-1d8c-4024-95ec-f14d5694576f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "434bcb50-fd16-4811-8c5e-e26c8ad94f36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41178518-d13b-4f7d-b2da-0a5455d739ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5755955-359b-481b-b33a-fad3b72fd7f4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ad4c3e-6fc0-48a5-8a4c-0bed1341227e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cd3d518-6b0c-4508-bd69-dd243272cbfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dfe0317-502a-4d80-9f5a-fe0c0c6960de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "485da318-1401-4ea2-ba84-524fa7c18bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40e3dfc-333a-4827-b192-a45b87b72012",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634623b9-5e7f-463c-ba62-4dfc753f79db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b56753b-b896-497f-9a6a-8977d70a848b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8159f48e-b1a1-47a6-b8a9-143c0dc1b445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b750ec-432e-423e-946b-d41bb25c68ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c80911-bca0-40db-b64b-c27394d25a02",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533e3155-6bc5-4d1c-857d-8ff61c3c1f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe43e31-d5db-48ef-8e83-6b9043d72937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e468b828-96cc-4c65-8e3f-fe73177a9571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d1ab66-762c-485f-bcf5-f6e7b9948195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02ef90b-7b6a-4f33-9b7d-736a4f667959",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73af4b7c-18b5-41d6-acac-4a4057f31e27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1344f827-20bf-4be7-8a88-ebd6db344567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92d1496-e06b-4dcf-9aa1-0a566014af32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d8b4e33-8a2a-4bea-9923-0ba421b588b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cfa8580-008a-4906-90e2-0878b677597b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ba3a6d-6dcc-494e-8d33-eb01377059f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17253f84-c75c-4721-8f39-1718914b684c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da224dc3-639f-4961-b77c-18448a428378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0cb8462-158b-437a-b0a5-1563209705a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d9b86c-7062-4fab-bccd-e29eb1abacfc",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eee4eea-3594-45b1-b8db-c0abf1c380af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7941fd2-7bae-4540-b8fa-4ded62115322"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d5ac38-1b5a-4acb-911f-e8c99938cc0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78bb8116-2c65-4461-b13f-d7141ce39355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd993086-e071-43a2-a739-50c748bb9772",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cab30ef-4682-4505-9cc9-9adbd60c2204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe0b92de-a3d7-4d99-9967-309c44635289"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "800f5a47-e616-4e15-b0b4-2a2704024e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f307d9f-7d24-41ec-a75d-9d0997cd0b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68fd3f2a-8e4e-40c5-866a-069d2711ec62",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf04578-fd4f-47ef-b9c4-7ad4522e5a67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f8e9cbb-c4f5-431d-b9d5-79d2a302829c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb3d110-802b-45fb-a366-0bec061a55a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb811aa-156e-467d-9c69-ed10d366b50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aacc7964-87fd-4d47-9bc3-8e7fc54108f1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42bd8056-badb-45df-8097-c259633e0ba2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c708b3b-37bb-4240-801a-ce666c34f4ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b1c9ad-1d4a-4fda-a959-11f4c0392193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21ff8f41-e38b-4d7b-a027-c2969a1e8967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd439017-3f22-4908-a34c-b03e131ea5f6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7dc502-4a8e-40d3-a439-573b1ba4435e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1aa2030-3b1d-4a45-91e7-104ef768ccf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa8f4d0-e209-428e-94cf-e513e13d970f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f95602a9-b86f-4dc6-9274-9bfa297aa07d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59082796-506c-4ea8-a3b9-690be9f83001",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20cc98de-ee36-4cf8-9f15-f0add236dc43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be7d490b-4cf2-4905-9017-28a3eec9dac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57c1d39-4730-4faf-bcaa-6b2639648348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1546e59c-d35f-47bf-b971-b2e56208f400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094fbbe3-313c-4fbf-8e8d-d0a6e942753c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e687c28-7a0a-453e-be2c-95756bb4adaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05d1e2d5-4f74-4ca5-9cec-1c93b2a8a19b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55225c5c-24cd-460e-841d-73708bf88a8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07744589-78a6-4884-a711-2d7fbc140946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8462fe72-1c7e-45db-8080-2022ff84cb86",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df99f761-2724-4cdb-bd9e-9a29fd25e9ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac548e5c-92b9-4e36-aa10-d9c235a977b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b916d424-e6d6-480b-aaf6-1c3147a85f4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af48b859-faad-43b5-8248-819fada5b3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da0bbb5-0adb-47d5-9b35-5dda084fbdf9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ddecc6-3ed5-4085-a648-b3aed1bbe5e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f65244d-0599-45e7-9730-f7f5d779b6d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f773101-f0f8-4d00-9e71-26d89e98c53c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "064a3691-b9be-45f6-a14a-42ab2a549820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15dede7b-d12a-4d14-9f88-4a3302b6f1e9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32537824-22ca-4b09-a8d2-cd9b08ccf263",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ba9e04f-019a-4ccc-9264-97e5b5ad26ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8aa811c-5264-47b1-8a42-bca0e7cfb271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "945aee9d-e930-4a4b-91c4-1194f75f9cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b3eec2-2976-4f05-88b9-ce8a91c6c8a4",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80816ed9-9c8a-499c-960f-addadecb0213",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d8b5a94-7bca-4c1b-9ac9-2cb23fa39a3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aeff61e-5d8d-46ce-af35-b757b60ea4d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f254d4ff-2e2c-4866-bf86-c54c248e23e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd4cba7-bc98-48e2-bb18-2c6d1ab4dd29",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1eab07-4bdc-45c9-aadf-bda23852ebec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f233cc8-6546-4766-8d18-3a819700d28f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3187af6-d2ef-4ef3-a4e0-6239f20b2a42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c75634a-094a-4178-b6c4-06e56731a3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c259b7-f34f-4d1e-abba-3c47bb0db7d7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a0f073-0774-426e-8f3f-246a6b498cb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "842099f6-d7b4-4b0a-b846-32b92a913f5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a84303a-7a99-4fb8-adbe-c93ab669c8e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca9b832-ea3e-4dd1-bff6-54d6774fd6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75fbb79-0041-47d0-a644-1a80f5eef7fb",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b0b7bb-f125-4a26-9cc9-066c2c4bc5f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2cb68b7-265c-4d3d-9cb7-b2a71803d67f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67f6bd3-1c76-41bf-8802-37c97f11d892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e94e0437-a789-4535-b905-8eb5180c0a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e7ca58-44c4-4d79-bb9b-7af6bedb32a3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48f606a-9719-4259-a216-ac1dc30ebc31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8ee6a2c-e9d4-4bba-b5ba-295e3963da00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5ea8f6-42ed-40d1-836c-5182c20f2ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa146d2b-cd74-4968-af84-b0d2391cd584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80fdffb1-c353-4f20-99d6-766cf37c291b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7220f48f-b50d-4b3e-ae73-748cafe7aa10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73f70674-0aa3-41c3-99b1-dc60dedd352e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fe781d-491f-450c-a7ec-2b06f3294773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47222dfa-d814-47cc-a4ae-89ab3bf48747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357ccd1c-3c6e-4886-9584-595a6730c8b3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef76804f-6e49-4894-9b91-1b0fe55c4058",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ce174b5-886e-468c-bd78-77781310d196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd4e879-44f2-4a97-99af-cb07b8f27975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7846aa2c-ba35-4551-9d88-3a8916bc5211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ca1221-a000-4807-bc6c-a89f72c8f3c7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb295b3e-4944-4ddc-a12d-f72ce11721ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3d3c0f2-11c7-4443-ad91-89312cb2c98b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b9a0ed-f587-4757-88da-34e2d2a854cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "224b589e-3142-4ad3-8490-7c3d27408423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f942913f-e469-45ef-aa67-5fa2afce8ff1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e642c72a-58ef-4bea-8632-7e14a47e1e59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fdb1ffd-4382-49de-92a1-2562322a6156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ea7c51-8306-4b0d-a656-27d5e225d608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "319fbaf9-529f-41f1-9cac-a04b774f6ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef090368-e9b0-46ae-a546-267992bf2edf",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8847f759-eb5b-43a1-aba5-b4e99d54d283",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7054281b-a38d-40fe-b262-4de9b7f77e09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "252eceb1-4d94-4142-800d-31bdd986dd62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a55c475-7d44-48ed-8443-761c9b14deba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cac4980-f2ec-41f8-8014-e7c5ce7a9d2b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4150630-064b-4ea4-9b6a-09f5d64b34b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc2a2e95-c625-41dc-9cb4-b3238e3f8b5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f597ff0b-eaaa-4031-8fb1-1638bd107617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fda94e7-34c4-4aff-9dd1-9f46b1aeeeaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5916be0-0d65-44e8-8f97-7e9acf93301e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d1d26b-6b80-4237-8c52-0f173d8b5993",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "773d52c6-11b4-4a5a-9305-f3d7b791663f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44eb915f-0eb1-442c-8b2b-b02ef5eb1d9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "829c190a-e9f1-466f-befb-4d946a176089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbf249a-5117-41cf-aabd-bc7e2c52d76c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c4bc65-996c-4811-b461-47340e175596",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf4ca48f-ff29-49db-8e82-2d9905d3a176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feef6ad1-5a5f-48f1-a5e6-3f300e5ea750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38d4199b-2494-496e-bd9e-879ddf827b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a66ad3-42a5-40d7-96d4-a7f3c8f1dc88",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d860cf9-4dba-4554-8e57-40a7eb94455e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc2900e5-4e74-4258-96b2-f4de515adc7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa46bf7-562a-4d71-8c3c-6c2eaf1d7970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1609102-c23b-41ef-873e-7d0ffd79bf00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0802ef99-5f44-4095-9676-145eb6f60a44",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f0ccce-0345-4f18-9991-dbc4e94a5457",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31b6c0aa-9d9d-4857-aa5d-404cc722767c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e1d990-bc47-46d1-8741-e1c5832015f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49fbbdf2-4ec2-4da3-937e-5a13b66b1026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2391c0dc-7574-4bca-adc4-44e27e9842e2",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf14eaa2-4e72-4b9b-9098-971e86bcb9bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8813ec09-36ae-4f74-97f4-dab49e24e4aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2c644c-e60c-41ca-bfdf-b12d18c04533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "156eceef-afe6-480e-80e0-92abb51d8049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a38598-bd30-42af-8aa4-e5f291212891",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2286bbf-b583-4271-a7cd-14e8765280db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a43842ba-09db-41f3-99f5-2921de03589f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7f9a0e-a8a9-4c32-bd70-f283cd7857ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a347e1fd-fbf5-4c21-beec-f9a8821835c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee6c37c-1c5c-4287-971b-3e28d0e0c5b2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6e04de-7ce5-4afb-a834-96bc490e774a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4bfc43c-3b58-4375-969f-61f6ad56b115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12333214-60a1-4412-ab23-d150f207b53e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86473bdd-47f9-4129-be73-d5d89526d2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f715c2b6-c0d9-45a3-8ada-864fb9c81591",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d34ec3-fc3b-4450-8715-ee912181c02a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "179aee3b-0a91-4e71-8993-d5cea9fe4485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea541bd7-9c74-41b6-ba3f-86dde644abb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "128fe480-f79d-4143-a53d-b8592a1fae64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d22d6c-e97a-41a7-a806-b4ec4e6ee07d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4291cea0-288d-4c4e-b041-9f1ba3a43ca3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab85e1b0-74bd-4eca-a2a7-c9f4901d3a44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd40efd-537f-4a4d-9ebe-ba913567990a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4494738a-2081-4cf6-b9fe-d5ff8cdd59b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68ff7b3-c410-4c9f-9fdb-73d83abc4e23",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f45010e-fa70-44dc-8441-da876dbdaa12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abb1e3cf-4540-43a9-9411-0414391326ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "500023ce-1a33-4614-ba3c-b4a1828c3b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c2744e-a429-4159-815c-6b401ebaddac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696e21b7-78f7-48e7-b5a7-880d9935a87d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef6d52c-2bcf-4659-90cb-fd69d77c896c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c70d654-a8a0-415f-ba72-d4418db3a074"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ddde27-9516-4eb4-bf10-732ae0c860aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "885aa7b4-431e-4257-bf13-3cd80a4fc837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd568cee-745f-4a91-bdba-ce9fd07be847",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090d76c9-34f0-46cf-9e3e-c4d895aca8ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d963e499-e2a3-44ab-81e0-5452e93e9275"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2df1dd-f14b-4297-a453-df55e4eceadf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aa9263f-630d-4239-a198-f10e0e541c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20b7815-d835-41e9-8469-7b830342c3f0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c05aad-ae88-4cea-87a1-8a4a5e5fdb87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be3a2445-f909-4cfc-9b40-d00e2f4c8d7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e252d0a-921b-4173-a931-aa729bd5fa3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e450d92-f836-4c34-b769-a9e639df151b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5278ce34-9722-4805-a1a9-2d65336c2583",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05e09b8-99fa-4d2d-b7cb-2deaec8763a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c291b0f-5887-4d0b-9918-aed303cace81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2600501-3d0e-4e1f-ab2f-25191dff4cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4de281f-f800-4427-aea8-4f99829584ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a994eb84-1d30-4f85-b6c1-29f1bf3796bc",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2752a768-f608-4f31-a0bf-108c134bafc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1429ab0b-4ab2-4a04-8bd5-42242f37a9cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7bafadc-35d2-4e72-a57c-f5f1051bd92f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdf8d97e-67d5-466a-b209-af915e465f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940e4cdd-6d52-4bf8-901c-8f5e41453770",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883dd068-c9f6-414e-a313-626e2886cc38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8801bf5-869b-4d8b-a2a1-fbba1da8c68a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2930e36-04d4-4031-af88-91225dbcfaa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e49ebb7e-ec09-4981-bb7a-dc01e2987e93"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69d12836-f1e9-42e3-be08-9875afbfe0c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5591023c-a856-4865-b94e-faf370407383"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "922e5564-722b-4ba8-8de7-35e403e689be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fc905da7-76db-4647-aef0-90a89bbadbb7"
                    }
                  }
                ]
              },
              {
                "id": "c789059f-8613-4ce5-a10e-3a1e360a0fc9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "36f940b6-7fbd-42cd-aabc-b334c6d8da47",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b606a666-9725-4f58-a037-301e422cb152",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "16ed7b6e-a7be-4a1d-9e6c-81317ac4a12e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7731ee-c4ff-4a80-bb84-3ba272ff6eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8215a986-3e3a-4a6e-9960-a3b1c55f929c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8915483f-49fe-4d84-baa5-6c3ad984321d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa05850f-71d9-43a7-be99-1ce0c1d6ad83"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ba332bf-d526-4609-b945-48b4a5bf3375",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d5bc8f5-666f-4610-8dfa-4362c014c84c"
                    }
                  }
                ]
              },
              {
                "id": "18f91e80-7763-4eee-8e9f-14134bde3ea3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8355b7de-8e0b-44e3-ab53-24a0d2737d8b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6f2823-902d-4360-9e04-12ddb4909c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "dda8b629-3af3-4b20-ae58-39d4f8c654dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ad42d3-5d26-4288-a08d-fece8f767241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c404e81-6c27-4544-8fd1-e780d3bbef0e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a0640dc4-0da3-4c11-9eef-92c57aeb8864",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e4b60218-0d18-4078-b0c1-103707d14572",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dcd1ddb1-7169-4375-84c0-92bf635b88cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c0cc5548-e0a8-4abd-b7ed-b62b6b854b14"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f861ee4-dded-41e1-b0b5-239d22e459da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a57d1e66-a859-46df-8b70-3ddac1e0794d"
                    }
                  }
                ]
              },
              {
                "id": "e4983efa-231c-4361-bd84-72943c375ce8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "679b7793-fd8a-4797-a5d1-d001a21ba6fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d6466a3c-654d-49df-b5ef-105f37b1c1a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56e0534f-e668-4316-b9e6-faf4b1aec4be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6aafb4bf-81a8-43c5-9187-234fd5bd7de2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4aaebf3-854f-4626-88cb-0c9f03ec25fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fd766455-e41c-4d12-b02c-630f119c79d3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b911da3e-c605-4e68-a22f-c55feb1f07a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8cd5b295-858a-4c24-8b1c-640474e73e10"
            }
          }
        ]
      },
      {
        "id": "cb61b549-9f8d-4e68-bdaa-7f2f077bc685",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e417c7b6-facd-4ee0-9743-dcebd431c53d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8353ae61-b4c0-4e04-847f-b2167f1225b4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "53d0fd61-a315-4baa-b6c8-1487a31feb0a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d129f373-74d8-4d10-b8d4-5d90be47baca",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a841afcf-e940-41d2-8203-673ee2559cc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "273643f0-5247-473d-9b40-68867f3252aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d6bbc79-45fc-479f-b00b-756b2fe0e782"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb82975f-5926-41ca-8a8d-da7b939112ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b6a4d42-1742-4411-a92f-0913f65ba1f5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "54da9832-d8d5-49f6-8a42-2787ada72d4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd68765d-1c99-471e-af38-6f168b56759b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3acae693-c305-4b55-a938-15b7dd286db9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "32350e89-7ee0-45ec-ba25-b1f2d9b85e6c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00039ba8-0730-4a94-9978-4b78daa38e75",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ba0c566-8e69-4699-8676-a3b5ecf7e018"
            }
          }
        ]
      },
      {
        "id": "79dc0dec-c312-41cc-874d-4b2f384c2a93",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "30fb6ae6-eb2c-4ca9-9543-fc8a33dabe2f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "22e462a5-173d-484a-a02a-4246997cba42",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "30e0d17c-978f-4a10-8f9e-5ab186976f0e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c90bc14-ee15-4742-bb7a-4d4de427cbfc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df8a43f2-03a0-4ed9-a93a-e4241301a23f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb71b61c-4dbf-4c97-805f-89296d8df59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4eb7547-7ac8-4366-bc22-70e672707b99"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a25b7b8f-4060-493d-9cfd-f4543a70ed91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34351590-dc82-4410-8f09-36113935e717"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1e7a353-b0c0-4ec1-aa08-443990717277",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8bc5e26-d743-4f00-9207-4b6d77e7188c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a26524c8-9b1a-4ba0-a488-afa60114cd02",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2cb9ac14-dfbe-40f9-91c8-48a8c0b694a2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6b53ce9-48d8-40a9-9ce8-3a27321297c5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed03189b-9192-4935-9134-48cfc8189859"
            }
          }
        ]
      },
      {
        "id": "11ce5aff-932d-4790-b3bb-6c2f6febb2df",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "66786a78-4449-46b5-a6ab-ba5082ce66be",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ec077ec0-70ac-41ac-a879-70b0d40dcc3d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "096d151d-ce9a-4ba0-bd9d-77cb07df62ce",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400d9569-960b-4603-92dc-a3986ff564cf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0a7c127-b8d3-4deb-b561-84b786ae9926"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2240d3f5-2754-4d9f-b854-b7a936a400e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2212aca-3508-4893-b5a8-afb3459c7795"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf8d5f06-f0ad-483c-af0b-722e82fd6f3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "603cea6c-3cc8-4523-be9e-52837653e14c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "09f4c4aa-6533-4543-871f-9a998f93e2b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f03655d-6511-402d-8a6f-c87281e85b77"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5de15759-500c-4cf0-9717-6a63bfcf0d9b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e3280da1-f6a5-467e-94ff-d4595e25807b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e041c0cb-80cf-4eca-9d60-14ee4bf1bd41",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "76108140-0c2d-4257-899a-00b9885d0c68"
            }
          }
        ]
      },
      {
        "id": "e3c5a7f7-f408-4f1b-8549-9fe23fe97a5f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a3de52b9-0c84-4a4d-b760-4affbc985f0a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b50e628-1924-401d-ba4f-fbe3876a15c7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ea5758f3-0a85-4a6f-ade6-fdce4b60de92",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f0a9417-9eee-4d36-b698-875e4cda2fc1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b3cfa069-4b29-49a0-9e50-73fc6c3b5dc0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1853,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 246,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 495,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 931,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 922,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 709.8617886178862,
      "responseMin": 11,
      "responseMax": 7233,
      "responseSd": 904.6265799711496,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1686357587652,
      "completed": 1686357773969
    },
    "executions": [
      {
        "id": "d3602506-1adf-41e2-8f0d-256341aa031d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 244,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2e960422-46b5-41df-95c9-c27a57edf303",
          "httpRequestId": "ef9280f4-9b30-4d40-bdd7-71fcfac48fe1"
        },
        "item": {
          "id": "d3602506-1adf-41e2-8f0d-256341aa031d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d4f77346-a1f6-495a-8b4b-5a1126de8459",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 0
        }
      },
      {
        "id": "c60268b3-ee2b-45eb-89a5-456c33fa90a7",
        "cursor": {
          "ref": "1b633a39-180a-44b3-bfa1-b54450a55bd2",
          "length": 244,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "888616de-fd23-4cc8-b7cd-e0e1b2063e30"
        },
        "item": {
          "id": "c60268b3-ee2b-45eb-89a5-456c33fa90a7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0d744294-0ac0-4bbd-ac94-e3afee575c8b",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "275928bf-7422-44e1-927a-aed6564797d7",
        "cursor": {
          "ref": "2cca68bb-ca66-4105-86c4-ebd6b481b590",
          "length": 244,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2ebb383a-612b-45d6-8811-207106820464"
        },
        "item": {
          "id": "275928bf-7422-44e1-927a-aed6564797d7",
          "name": "did_json"
        },
        "response": {
          "id": "a942bb24-c351-465d-9544-b0de6e77b8ce",
          "status": "OK",
          "code": 200,
          "responseTime": 1410,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2893231b-0401-4328-b157-66703f2abd4f",
        "cursor": {
          "ref": "72db47b4-14e9-477a-afb2-dbcf8be60414",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e386a118-16ef-4220-b55e-b59c62364f8c"
        },
        "item": {
          "id": "2893231b-0401-4328-b157-66703f2abd4f",
          "name": "did:invalid"
        },
        "response": {
          "id": "f0fddf22-7707-427e-ae36-ccaafd1a3ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 908,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2893231b-0401-4328-b157-66703f2abd4f",
        "cursor": {
          "ref": "72db47b4-14e9-477a-afb2-dbcf8be60414",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e386a118-16ef-4220-b55e-b59c62364f8c"
        },
        "item": {
          "id": "2893231b-0401-4328-b157-66703f2abd4f",
          "name": "did:invalid"
        },
        "response": {
          "id": "f0fddf22-7707-427e-ae36-ccaafd1a3ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 908,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1ed24a-01da-4ac7-b227-232a0ef39f09",
        "cursor": {
          "ref": "b14ee6d2-6430-4fe1-b7a6-9831d6ffa45c",
          "length": 244,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a49e9153-37ab-4433-bd40-56b374ea286c"
        },
        "item": {
          "id": "9b1ed24a-01da-4ac7-b227-232a0ef39f09",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "99fa47b2-b852-458a-8c34-e9350c5046e7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 810,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5893ed-45cc-4757-b1d3-a6c56a45d1b1",
        "cursor": {
          "ref": "a6e7966b-b9e8-4e32-a2a4-c15d0de6747a",
          "length": 244,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "53fa2a72-6bf3-410f-a70c-94e726021753"
        },
        "item": {
          "id": "ca5893ed-45cc-4757-b1d3-a6c56a45d1b1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6ac95b33-b023-4660-b964-f422bd0d7cc7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 661,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d37e7e-408a-4168-ac31-28ffff465a32",
        "cursor": {
          "ref": "87c737f7-648f-4f85-9a3e-605a4a3de247",
          "length": 244,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e9b62f5d-047e-43fd-b2c8-d36548784f2c"
        },
        "item": {
          "id": "85d37e7e-408a-4168-ac31-28ffff465a32",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d4e8e7fa-c3f8-41de-bb40-0f39388e5167",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fcc8051-d237-4210-9fd8-aa00199d1fc9",
        "cursor": {
          "ref": "a02eeb36-304c-46d1-9b84-864a588d8863",
          "length": 244,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "95c2597e-1c6c-4f48-b781-37c8cb4a9b6f"
        },
        "item": {
          "id": "4fcc8051-d237-4210-9fd8-aa00199d1fc9",
          "name": "identifiers"
        },
        "response": {
          "id": "07ee7673-497d-4ac6-b29c-5e0d7cc8d478",
          "status": "OK",
          "code": 200,
          "responseTime": 1398,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2934e776-af23-430d-bdf5-c13624b0beb0",
        "cursor": {
          "ref": "2253a2dd-4258-4359-8de1-5648cb6c4ffd",
          "length": 244,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d5de47d0-9485-4339-875b-bf53b624cfcd"
        },
        "item": {
          "id": "2934e776-af23-430d-bdf5-c13624b0beb0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "84267758-2e4c-4318-9dda-fe92de153a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce1288c-e691-44c5-adf0-0f01ed6bb3d4",
        "cursor": {
          "ref": "126c16e9-ab90-456b-852d-9ee817fa3549",
          "length": 244,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "645fae9f-c698-4168-bfff-c42a9f9d5138"
        },
        "item": {
          "id": "fce1288c-e691-44c5-adf0-0f01ed6bb3d4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2dc7594d-c810-4282-97d9-4bca6aa3122d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5799dfc9-20f9-4dc8-ac8f-fc75c04f8fc4",
        "cursor": {
          "ref": "25d4486b-0b77-4299-8ce6-6e7050d5c688",
          "length": 244,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a6ffccb3-159b-4b92-8b30-068a89b44245"
        },
        "item": {
          "id": "5799dfc9-20f9-4dc8-ac8f-fc75c04f8fc4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "50838fe2-6d1c-4a97-8439-9f4d002aca2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8a34b8-d6ed-4d2e-970f-d110f25fd07d",
        "cursor": {
          "ref": "fb72a1b3-4fbe-4844-a3a5-4bf0438cd489",
          "length": 244,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7c45f2c2-4cf4-48d1-b34c-7081d8d87036"
        },
        "item": {
          "id": "5f8a34b8-d6ed-4d2e-970f-d110f25fd07d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4e6e57c3-ea23-4f11-86ec-65f06edb147a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c533c327-5ab0-4cf0-94f9-a8080f6e042d",
        "cursor": {
          "ref": "afd86c7a-a8a5-4b99-8974-2071a49c3771",
          "length": 244,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "71e22521-0356-4618-8771-8f1f5386342c"
        },
        "item": {
          "id": "c533c327-5ab0-4cf0-94f9-a8080f6e042d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1f948a36-02a9-4e7b-a383-53674f3e58ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68504f07-26de-404a-bd44-70c816226c48",
        "cursor": {
          "ref": "80d54123-258c-4d4a-86f2-026df698aab1",
          "length": 244,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6f090b7f-ef7b-42b0-a551-528dff178abe"
        },
        "item": {
          "id": "68504f07-26de-404a-bd44-70c816226c48",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "052e1360-1a22-4484-96be-14bea021b706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c24dbff-a7f4-4402-8d7e-12708a4c78cc",
        "cursor": {
          "ref": "c280dd7a-3c52-4eda-9568-d4cbee8d8420",
          "length": 244,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "79352343-3cf7-4be7-834f-b7ff7985073b"
        },
        "item": {
          "id": "7c24dbff-a7f4-4402-8d7e-12708a4c78cc",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "dccb1efc-8668-4e53-b41c-937e32d06661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d763f2-0280-445e-803d-55292906bfa0",
        "cursor": {
          "ref": "a1d8b8b8-442b-49e4-a4c7-ec39ce0a249c",
          "length": 244,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "578b1880-a830-4d5f-8387-f1eb2e122e9f"
        },
        "item": {
          "id": "e3d763f2-0280-445e-803d-55292906bfa0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "be6835ee-47dc-43e5-be1f-aeaaa633a79b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10870bc-da8b-4e7d-ae75-5cf7728bce9f",
        "cursor": {
          "ref": "545053b0-0bcf-4901-9de2-1d667518e54f",
          "length": 244,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c46d59a6-7a2e-43b5-a701-963553cc0a2f"
        },
        "item": {
          "id": "d10870bc-da8b-4e7d-ae75-5cf7728bce9f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "eb870a3b-fd69-445e-b23c-6172d275e081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532c46e5-1b0d-4da4-a401-174ad0f51209",
        "cursor": {
          "ref": "7cb7346e-397b-43fb-913b-782b3bc05443",
          "length": 244,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "75e4c5d5-d946-403c-b3e8-76fe557eee8d"
        },
        "item": {
          "id": "532c46e5-1b0d-4da4-a401-174ad0f51209",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "9432f17f-9df1-4e0e-a92e-898a1ea57ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d6f6be-3b31-4a1d-9625-64f38e4614ef",
        "cursor": {
          "ref": "a0ed34c3-f737-4071-aa60-d3bbb71558da",
          "length": 244,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "438dcf14-7b34-4bda-b4ce-f6a573bcf1fb"
        },
        "item": {
          "id": "30d6f6be-3b31-4a1d-9625-64f38e4614ef",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ba17129f-387e-4e62-a01f-7055706d0f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99390666-0338-4dd5-b655-9ee0e6a130f8",
        "cursor": {
          "ref": "da1594bc-d392-4670-bfab-7ec39f3f2235",
          "length": 244,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a1f4df2f-ea41-4e26-ad69-f237d6d1b21a"
        },
        "item": {
          "id": "99390666-0338-4dd5-b655-9ee0e6a130f8",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7c6c2a3b-fb0b-454c-875c-eadaefc9e73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5e4c8a-2951-42ab-af7a-415eff88cb50",
        "cursor": {
          "ref": "3aa127f3-9bb9-426a-a63f-24de5b01f5f9",
          "length": 244,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b90ac177-6c44-4428-964c-53049a4938cc"
        },
        "item": {
          "id": "0d5e4c8a-2951-42ab-af7a-415eff88cb50",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8794a8e2-0579-40a7-9447-15369eea80e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39e2aa9-8cce-4551-b75f-7496b3ae76ef",
        "cursor": {
          "ref": "b3aeff73-ffd6-46ee-8740-3be22a7da045",
          "length": 244,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5dcf9b94-1162-419e-873d-1e868eb1ce42"
        },
        "item": {
          "id": "b39e2aa9-8cce-4551-b75f-7496b3ae76ef",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8edf1d09-1713-4322-9501-8b3d7cf9341b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a564d20-494e-4355-835c-60c5eeedc285",
        "cursor": {
          "ref": "7317ad11-3a47-4d0a-860d-46a93e535a21",
          "length": 244,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5bc50fb1-bdb9-4208-8e1c-5da178d46f99"
        },
        "item": {
          "id": "6a564d20-494e-4355-835c-60c5eeedc285",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "faad08d6-4070-46f7-bcdf-ec183d890871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b721f786-9090-4ef7-a996-971a80489d44",
        "cursor": {
          "ref": "ecb05757-cc40-4739-a7cd-98a3a5b6089f",
          "length": 244,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "46a95fc0-5255-48aa-bd77-f133d489413b"
        },
        "item": {
          "id": "b721f786-9090-4ef7-a996-971a80489d44",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b6f75dfd-b463-4128-aee5-3969a815af79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2203653-88f2-46f9-b8f8-da0bb6bccc35",
        "cursor": {
          "ref": "f2804b46-7471-46a2-ba99-e4f04936b246",
          "length": 244,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "92c53527-618e-4e15-bb97-948ce0801c78"
        },
        "item": {
          "id": "c2203653-88f2-46f9-b8f8-da0bb6bccc35",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4c77b215-ddc9-4055-8f03-9b40400d4016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3b60f3-d0f9-4ce0-a25b-0f39197c8c8d",
        "cursor": {
          "ref": "e4a3ae40-f4cc-4806-b9ab-6b1fd24d1cb6",
          "length": 244,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c1622aac-e28f-4d3f-b3b8-cdf17d3dde49"
        },
        "item": {
          "id": "6a3b60f3-d0f9-4ce0-a25b-0f39197c8c8d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "df4fa3db-f62f-41bf-a4c3-e25821156bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "990667a7-5cbc-45fc-bdae-af8d3bbf77da",
        "cursor": {
          "ref": "8d73fc78-5ad4-4be3-a0d0-b178ad2c88d9",
          "length": 244,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fee86e50-b426-44da-8e71-29ae1f4d9acc"
        },
        "item": {
          "id": "990667a7-5cbc-45fc-bdae-af8d3bbf77da",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6a70c912-00ca-4ad6-967d-c00cdb8e0908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1d2086-f0ea-4656-848f-b75834de1ae5",
        "cursor": {
          "ref": "452dd0dd-1626-4eaa-8bab-6489f65fca57",
          "length": 244,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "011ac269-3327-48b7-9870-602c09b11f9d"
        },
        "item": {
          "id": "3a1d2086-f0ea-4656-848f-b75834de1ae5",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1a305fe3-924b-44ac-8d20-a55c9a844773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34fd871d-2425-4af1-a6f5-cb7e21509743",
        "cursor": {
          "ref": "0065e806-7651-4f48-8f7b-5c0fe457576e",
          "length": 244,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "601601f4-f644-465d-a4fd-078080b3c819"
        },
        "item": {
          "id": "34fd871d-2425-4af1-a6f5-cb7e21509743",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e487a119-132a-4a49-9b3f-2cc3f17ca1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f3d3c9-8cba-46d7-bb58-73b5f8520ded",
        "cursor": {
          "ref": "b8686c0b-84c9-4f24-adfb-26d54e27fd66",
          "length": 244,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2d262a6c-3f5f-439a-8925-247233aeb706"
        },
        "item": {
          "id": "85f3d3c9-8cba-46d7-bb58-73b5f8520ded",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4f4f6a28-e23e-4014-8270-42a7388b8b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ce95c5-72bb-4d49-aba3-8198b6a807f3",
        "cursor": {
          "ref": "cf29dd85-acd0-415a-b19b-75a9652360e4",
          "length": 244,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "fc2fa18d-8d90-4cf8-98c8-21ada75a9589"
        },
        "item": {
          "id": "08ce95c5-72bb-4d49-aba3-8198b6a807f3",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a3ba107b-0283-40e3-aa9d-1cdb05f20ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca67efe9-4303-452a-82c7-eb043c2aaed0",
        "cursor": {
          "ref": "59a5c67f-3922-400c-9dc5-9602ee1b45e5",
          "length": 244,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2875a661-3db1-46fb-9605-c7f6543e50ba"
        },
        "item": {
          "id": "ca67efe9-4303-452a-82c7-eb043c2aaed0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "03d7579f-a5fe-4b69-9b7c-c0fd6ad62dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557fe546-34d8-406c-b541-cde413032b3e",
        "cursor": {
          "ref": "f26ec381-ee8e-4315-a49a-a072fb44b57a",
          "length": 244,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0d91b25e-96a9-48df-a690-c2f197bd3e1e"
        },
        "item": {
          "id": "557fe546-34d8-406c-b541-cde413032b3e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9ec28b00-ad7d-4d8f-baba-be23b461bdab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f4a0b0-0a56-427d-af8e-90e1f5c2e41f",
        "cursor": {
          "ref": "f166fa04-9f1c-476e-9117-b72c8d061c94",
          "length": 244,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0a57b48e-a034-4957-83c1-3ab04e85cdce"
        },
        "item": {
          "id": "e8f4a0b0-0a56-427d-af8e-90e1f5c2e41f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1a49e051-f479-46e3-b32b-1b5e888d5b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb399e4-9ca1-4c08-9aae-6206dc98c957",
        "cursor": {
          "ref": "1faafb51-b00c-4642-bc30-b40e3a5aa089",
          "length": 244,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f62b9d00-7508-4d9e-ad86-a3f8404aee17"
        },
        "item": {
          "id": "5bb399e4-9ca1-4c08-9aae-6206dc98c957",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "20805212-02b4-4ecd-a7b1-2d750214a57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6e5ebb-d19c-4e2f-9869-8dcb049762df",
        "cursor": {
          "ref": "d0c84241-59bc-4f8a-8106-6d5e653e387e",
          "length": 244,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0d194d95-48f9-41b3-841c-ee8518a1376e"
        },
        "item": {
          "id": "2b6e5ebb-d19c-4e2f-9869-8dcb049762df",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5386fc2b-b344-4e75-a66b-b49cd17bd1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da47760-8c16-4784-bc52-a30ffec33a19",
        "cursor": {
          "ref": "54bce675-48a8-47a1-9987-4b7eec7905d7",
          "length": 244,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6bf9163a-7133-4731-b798-f7ba78029f2f"
        },
        "item": {
          "id": "5da47760-8c16-4784-bc52-a30ffec33a19",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c3efff0e-fa94-4a12-83ee-8cbe081c8540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6742f8a-c83f-4eae-b579-e3b7ca10b907",
        "cursor": {
          "ref": "95884a15-a1cd-4944-b477-f9d7cb2947a7",
          "length": 244,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6b81ce1f-0eca-43f5-aa6d-3a77b1b4627c"
        },
        "item": {
          "id": "c6742f8a-c83f-4eae-b579-e3b7ca10b907",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0a205df8-5cbb-4d88-b142-43f7eeb2bf9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c6a906-fc5a-4d1a-84a8-208210d72c70",
        "cursor": {
          "ref": "ff7189e8-d9d0-4528-a3f8-a8e83cb37063",
          "length": 244,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d513256b-f042-4e88-8717-d7c884aaba8f"
        },
        "item": {
          "id": "53c6a906-fc5a-4d1a-84a8-208210d72c70",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c9ab736c-58db-4f81-b5b0-0c05521c0304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688a1f34-0fb2-4919-bbee-534152a5cd7e",
        "cursor": {
          "ref": "e1857525-e873-4a19-ae03-dca19718802b",
          "length": 244,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e70aec91-9520-4e27-99be-633ba08b9e6a"
        },
        "item": {
          "id": "688a1f34-0fb2-4919-bbee-534152a5cd7e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "85ce0471-68fc-4bed-8770-df5e1e090db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a046c294-be9e-4644-8181-9d911d3a97e8",
        "cursor": {
          "ref": "c61ca9ff-255f-4ce1-9866-0bf90f23903e",
          "length": 244,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "50ed1795-d87c-4002-88b1-6a5ded29b4e1"
        },
        "item": {
          "id": "a046c294-be9e-4644-8181-9d911d3a97e8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "54c71571-5d7f-473f-be73-1d53e3ca55da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534f7eb5-f758-4828-87df-e357d9985954",
        "cursor": {
          "ref": "67a8632c-36c4-4b4a-891d-42baf8afb674",
          "length": 244,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "39568d27-34f2-424a-8214-bd9f5fd4db07"
        },
        "item": {
          "id": "534f7eb5-f758-4828-87df-e357d9985954",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "20b1ec3b-2c33-457d-804e-2c61cc95cd46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7226ae1-eedf-4fd4-85fc-e74985ab9883",
        "cursor": {
          "ref": "8115d68c-7495-4b9b-ac75-e0cf95120798",
          "length": 244,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "04df17ad-d31f-45a1-8a15-72b651a17992"
        },
        "item": {
          "id": "b7226ae1-eedf-4fd4-85fc-e74985ab9883",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fcf7ebe2-24cd-486e-b921-7f4a2e49b82a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b0c1e1-33e7-40ac-b9c0-2e3bf5a5388b",
        "cursor": {
          "ref": "537c225e-d94f-4ba7-9efb-aa7cd8701577",
          "length": 244,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ca563c44-f5a1-4913-a026-a4eca3622dce"
        },
        "item": {
          "id": "a9b0c1e1-33e7-40ac-b9c0-2e3bf5a5388b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "44895cd2-dca9-4285-914d-55f4292b6a82",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 857,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7942f6-0a85-4f42-9016-cdd599551b6f",
        "cursor": {
          "ref": "eb001a39-cf77-4841-bb45-254c448cbc00",
          "length": 244,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8201e1a8-aa30-4fe4-8730-3a83ab691129"
        },
        "item": {
          "id": "cf7942f6-0a85-4f42-9016-cdd599551b6f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "bf6e9f2e-5aff-420a-b43c-04f3e5aae2fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1322,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0426001d-2012-48e8-a56b-582bf860e9a2",
        "cursor": {
          "ref": "8a39bea9-7354-4ef8-ac0a-dbd74b5bf7b6",
          "length": 244,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9c30401f-3e85-4e43-bd3a-d86a062caeb3"
        },
        "item": {
          "id": "0426001d-2012-48e8-a56b-582bf860e9a2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f32b2527-41f7-4eab-8ede-340ba3a57bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbaba016-32a9-4467-bdfd-7cb9209a3008",
        "cursor": {
          "ref": "802adb04-aaaf-471f-8b70-b82d809bee0f",
          "length": 244,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c0e3be05-7f02-48eb-b8a4-ff4b1ce38775"
        },
        "item": {
          "id": "dbaba016-32a9-4467-bdfd-7cb9209a3008",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ab61c4b6-4312-40ac-b05e-480bf11208e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d678eb-df8f-40d6-bf94-c1a1202fbaa7",
        "cursor": {
          "ref": "6637e6fd-e6a9-451d-b054-46e259374350",
          "length": 244,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "072c691e-b901-4de4-a811-13a0183cd34c"
        },
        "item": {
          "id": "77d678eb-df8f-40d6-bf94-c1a1202fbaa7",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3daf917f-7477-4e50-b490-e2209833cd25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafc8dfb-c123-4e57-9fea-daff0e66200e",
        "cursor": {
          "ref": "f47eefe8-d99f-4760-86ca-eb5111b675da",
          "length": 244,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "dcc31527-c4f4-4559-8dec-073dd59ac8a8"
        },
        "item": {
          "id": "aafc8dfb-c123-4e57-9fea-daff0e66200e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f0b6479e-175c-4a02-a42b-58e34e984a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfab7ab-dc9f-46a5-a773-5914ec835839",
        "cursor": {
          "ref": "5ba993fa-91b8-483e-87e3-4c4f5edeb5a9",
          "length": 244,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4e08b831-3506-4baf-9039-8eb6a3e1c1cf"
        },
        "item": {
          "id": "bcfab7ab-dc9f-46a5-a773-5914ec835839",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f157f844-81df-49d6-b95f-fadd368088a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ce3363-32a9-4ce6-801d-c63ca0e4f152",
        "cursor": {
          "ref": "725b08a9-7c53-409b-b44e-2c119e8a2449",
          "length": 244,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e297e08a-530b-4e48-bf69-ae35b4c35fe3"
        },
        "item": {
          "id": "79ce3363-32a9-4ce6-801d-c63ca0e4f152",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "06ce3789-b3bd-4785-8c0e-c19175622baf",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 783,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c629dc-3062-443e-a5bd-c7e9d3ad3edb",
        "cursor": {
          "ref": "3abf7eea-72ce-4ca8-ac59-a26b85f3e350",
          "length": 244,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5d37bb6e-6146-4a2b-8316-7300c715241d"
        },
        "item": {
          "id": "d2c629dc-3062-443e-a5bd-c7e9d3ad3edb",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8bed0da4-32ca-4139-a563-5cdbc6f31004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5939a4f0-f930-4cc5-825d-0a7fdae99a42",
        "cursor": {
          "ref": "e5f67c0b-4591-41fc-9438-d00d5e2b110e",
          "length": 244,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b4d89d9b-433b-4ff3-bc66-7692de9e01f7"
        },
        "item": {
          "id": "5939a4f0-f930-4cc5-825d-0a7fdae99a42",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d58a1e02-6ef8-49f8-a037-61eba8bee400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96777e29-6c59-41a9-867f-b0d83367a02a",
        "cursor": {
          "ref": "f5efc5bb-4aff-4672-afa7-7312e53361e7",
          "length": 244,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d3cc6922-8e6c-4c88-b36e-695c0f279d6e"
        },
        "item": {
          "id": "96777e29-6c59-41a9-867f-b0d83367a02a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "723ccd87-e45b-48fa-9482-64fa05ccec9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0aeaf1-dacb-40e2-9265-be30c93f3a7d",
        "cursor": {
          "ref": "7e3766a0-7a1b-4611-9db6-084f4eb320e4",
          "length": 244,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fe095c28-5a1a-4f57-b2f9-e4593e48f667"
        },
        "item": {
          "id": "2a0aeaf1-dacb-40e2-9265-be30c93f3a7d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b35f1d1b-f116-4b79-b644-f168610c98ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba441ca7-4365-4f74-989a-58df6804ce6e",
        "cursor": {
          "ref": "610b41cc-8eff-47ef-9717-cc93e6922d57",
          "length": 244,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "84a38d6c-396e-42a0-b2eb-2d4473dc5d5c"
        },
        "item": {
          "id": "ba441ca7-4365-4f74-989a-58df6804ce6e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0fb80aa0-c671-435b-81e3-0fc704e5e970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4be7e17-7ca3-44c2-83a7-24f23094b71b",
        "cursor": {
          "ref": "b457b024-0e15-4c5b-a12c-cfc4fba6a113",
          "length": 244,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "44c689e6-641e-471a-b984-e6482593cc73"
        },
        "item": {
          "id": "d4be7e17-7ca3-44c2-83a7-24f23094b71b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d61ffd61-7af8-41b0-a00b-c8dfd99b6189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf4f5cf-34a7-47b8-b98a-dc8d2d617986",
        "cursor": {
          "ref": "29ae051f-a2d8-4a29-874f-56fa70564c1e",
          "length": 244,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8cba72dc-4971-49a3-b477-cac6bc0c9f51"
        },
        "item": {
          "id": "aaf4f5cf-34a7-47b8-b98a-dc8d2d617986",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ec14f5b1-8284-4bfc-b7dc-bbb3a9f61320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8281eef6-3b75-4c42-938b-014795f000a3",
        "cursor": {
          "ref": "26af8914-d10e-44e7-ace9-c3f0e816ee1a",
          "length": 244,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9d270219-bcaf-4932-9109-43279db8fd3e"
        },
        "item": {
          "id": "8281eef6-3b75-4c42-938b-014795f000a3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d35dd246-ccb5-4538-84cb-2d50457a8c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5bf8cc4-2cc7-4d3c-b16c-481b044b2dc5",
        "cursor": {
          "ref": "5b8d0cc1-8484-4ed9-969a-59daf5b3d8b3",
          "length": 244,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a8529aec-1c17-474f-930e-9c173e33e22d"
        },
        "item": {
          "id": "a5bf8cc4-2cc7-4d3c-b16c-481b044b2dc5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "637967cd-4df9-405f-bba5-134010658593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92a35d4-6070-45df-9cc1-245c59cf694d",
        "cursor": {
          "ref": "9c978e8d-8936-42fd-b102-c2f18ebfce19",
          "length": 244,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f767af59-8128-40c3-929e-8f72f5fcfe5e"
        },
        "item": {
          "id": "b92a35d4-6070-45df-9cc1-245c59cf694d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "512154d2-fdd3-4ffb-bab9-6feb86ca2d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4cf18e-633a-4775-8a2b-721e0335d54d",
        "cursor": {
          "ref": "eddee255-4a20-4582-a0ed-ab572c834d2a",
          "length": 244,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d591a708-9369-4a7c-a717-dd568d6356a1"
        },
        "item": {
          "id": "3c4cf18e-633a-4775-8a2b-721e0335d54d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a6720b44-aa3f-4342-96b9-289f8325508e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29406615-4850-45a0-9af3-e9ac078ddb9c",
        "cursor": {
          "ref": "c02ec57b-897c-4592-a7b3-98798182febc",
          "length": 244,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "67366104-1adc-4dac-a7a6-3c36fffbdfca"
        },
        "item": {
          "id": "29406615-4850-45a0-9af3-e9ac078ddb9c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "93ec7b40-9fc0-4905-9d55-53d068cb0645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0fc67c-178a-49ea-91ff-5b8449e85e45",
        "cursor": {
          "ref": "565c656b-ba0e-40fd-a3c7-f7c565c91e42",
          "length": 244,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0df47491-b184-4de3-8f2e-ff2a9e3ba7d3"
        },
        "item": {
          "id": "2a0fc67c-178a-49ea-91ff-5b8449e85e45",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "02934f40-cc70-404f-afd5-05d7dff73d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42cf4f4f-bf0e-496b-b375-032da9a08636",
        "cursor": {
          "ref": "b462b3b1-5cdc-4956-bdf1-2c33957b9da3",
          "length": 244,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7d23db8d-ab53-438f-82f4-dce2187d9cf1"
        },
        "item": {
          "id": "42cf4f4f-bf0e-496b-b375-032da9a08636",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9f4cb9af-3d38-45b9-81a4-eee74eeeb78c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac24fc90-2c0a-4e1b-91a6-f2c3ae84865f",
        "cursor": {
          "ref": "21ca3821-2807-4f84-afa5-ff31a2286f57",
          "length": 244,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d1ecfd96-1945-4771-bf0e-bb0d2a6f7bfb"
        },
        "item": {
          "id": "ac24fc90-2c0a-4e1b-91a6-f2c3ae84865f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "93a4d2dd-50c9-41b3-9010-98b1edbbb040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4689efe-265e-45e4-a21f-047f9c54f6c5",
        "cursor": {
          "ref": "41c20c0b-1069-43e0-8d6f-25cc58d38afd",
          "length": 244,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d3b28dab-4b97-4e37-a9d6-7fae729eb3e8"
        },
        "item": {
          "id": "a4689efe-265e-45e4-a21f-047f9c54f6c5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0619a77e-8435-4a14-b5b6-7e649882dc8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1fe165e-f9dc-4edd-8e17-91780ce9035f",
        "cursor": {
          "ref": "66df9407-b7ac-4ba5-b5e4-4fc4eba88c55",
          "length": 244,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f8b3e9dd-7cc2-43da-a6da-c8f52006c80d"
        },
        "item": {
          "id": "f1fe165e-f9dc-4edd-8e17-91780ce9035f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ccdca40e-892d-4e33-8519-dbb4d121e967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7c6bb3-b90b-42d7-8780-dd20c954d50a",
        "cursor": {
          "ref": "4ffa50a8-12cd-4e6c-b060-016f189c4aad",
          "length": 244,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "601e78fa-6566-44f2-a19d-9707a66fabae"
        },
        "item": {
          "id": "ff7c6bb3-b90b-42d7-8780-dd20c954d50a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "707bbb98-b040-4fee-8019-30b9c53e2fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e6906f5-646d-47e2-a836-e0a7a16ea37c",
        "cursor": {
          "ref": "f413dc1f-c302-4028-9ea8-3b0f57c919c3",
          "length": 244,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7686d91a-fbdf-4717-8843-64f0a41e7603"
        },
        "item": {
          "id": "4e6906f5-646d-47e2-a836-e0a7a16ea37c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "bc45ae49-f270-4693-91db-1366c7cc2786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2d78c1-90d2-439c-a567-3827359c4dbd",
        "cursor": {
          "ref": "e91e9f8b-fb1b-4d43-b4fb-25ee1a10da02",
          "length": 244,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "291f4631-0635-4681-915e-f147dab1ebeb"
        },
        "item": {
          "id": "bf2d78c1-90d2-439c-a567-3827359c4dbd",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0c5c9996-94e4-424c-b3fe-b1b7a14f2ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a20043-0f76-456d-8427-94432df6cb07",
        "cursor": {
          "ref": "211fcb2e-ea59-41a2-bb61-28c23846eaed",
          "length": 244,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9bc4e895-1de3-4655-b37b-778fa07bd9bb"
        },
        "item": {
          "id": "81a20043-0f76-456d-8427-94432df6cb07",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "176a838c-3d57-4b2f-998e-b868c19cfd4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c982a0-dde9-4cdd-b4de-eef2983f1e5e",
        "cursor": {
          "ref": "09f74990-8e5e-4c29-9f2a-479a5f569f68",
          "length": 244,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "18d1bf58-4846-45cb-a948-e097046fccc7"
        },
        "item": {
          "id": "26c982a0-dde9-4cdd-b4de-eef2983f1e5e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "87c4d765-773e-4baa-ad7a-5d430d0199f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde48cbe-a70d-4a81-962f-2f0eb985f192",
        "cursor": {
          "ref": "179d5f7f-8e11-45f0-bfab-e3346d13cef8",
          "length": 244,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "63dbfcd5-afb9-442b-bcb0-312ef4ff2d4c"
        },
        "item": {
          "id": "fde48cbe-a70d-4a81-962f-2f0eb985f192",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0b0978ba-a49a-41da-94d5-a8528e762b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa28976-8e65-4a69-b664-e082d8568556",
        "cursor": {
          "ref": "69db5d8d-cea2-427c-96e6-c0f32de35e0e",
          "length": 244,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6f226429-a9ab-414f-bded-4d27627cb13b"
        },
        "item": {
          "id": "7fa28976-8e65-4a69-b664-e082d8568556",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "440fc861-3ba5-48d6-9f27-be5d69430316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4cb653-60d9-4937-8000-ec3967d76845",
        "cursor": {
          "ref": "4bb9221a-bcbf-47e3-a1f1-78933a9f9f9a",
          "length": 244,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b8150b8c-b75b-44be-8b05-1595bd12942e"
        },
        "item": {
          "id": "5e4cb653-60d9-4937-8000-ec3967d76845",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ed083355-ad51-4e68-b6c7-e991f5f3330a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f9d785-4283-41cf-be0a-fc3d8c5b8f3c",
        "cursor": {
          "ref": "2693a2bd-047b-4956-92df-841c05ef7c73",
          "length": 244,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "afe47b92-d47f-45c3-a35f-e0b5985a84e6"
        },
        "item": {
          "id": "31f9d785-4283-41cf-be0a-fc3d8c5b8f3c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2f3d1050-8645-45c1-bcad-3d8f3d1554b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0d3e56-fe54-4157-8c3d-715adde0230e",
        "cursor": {
          "ref": "8939d60a-a5c6-4bbc-90d0-a4c92c122c6b",
          "length": 244,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4220c7dd-33eb-4d59-929a-640c24a0fdf4"
        },
        "item": {
          "id": "9e0d3e56-fe54-4157-8c3d-715adde0230e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "44c0dac6-5933-4da7-a74a-a16fda9922ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc4f724-d9b6-4609-93be-175e36a49a63",
        "cursor": {
          "ref": "04258fb4-30bf-4a84-9b5f-680ee126fc6f",
          "length": 244,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ace9a7ff-183a-4b96-a519-748572185f8c"
        },
        "item": {
          "id": "0cc4f724-d9b6-4609-93be-175e36a49a63",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f092bc95-a851-4a62-82ec-a0abb653099f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bbce209-d3ba-4441-8c5c-24131a49ecbb",
        "cursor": {
          "ref": "1533360b-b6e1-44ac-aaf9-3c50fe200e55",
          "length": 244,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4f59845c-f9b2-4127-8311-9d4d9b5fa277"
        },
        "item": {
          "id": "1bbce209-d3ba-4441-8c5c-24131a49ecbb",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f9df1b4d-2e96-48d9-905f-591e5b05c2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f008de3-9f79-40f3-b4e4-3f9935ca8e72",
        "cursor": {
          "ref": "42777ade-03c7-4a1e-a4cb-aae4b6758ea2",
          "length": 244,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "aa13fb3e-682c-4d12-9049-4a8386c0547b"
        },
        "item": {
          "id": "5f008de3-9f79-40f3-b4e4-3f9935ca8e72",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "95230d72-e027-49d6-b5fb-f822acabc567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb26fc4-f11c-4756-8c4d-038d1537e5da",
        "cursor": {
          "ref": "b017cc7f-a8a6-4dcb-8a6b-ef85e349f388",
          "length": 244,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b8788f7f-e71f-4209-9f39-c579a8f8b9f8"
        },
        "item": {
          "id": "2eb26fc4-f11c-4756-8c4d-038d1537e5da",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6c98e7d7-619b-44d2-bb89-ac63a43d9500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9fe6ce6-e45c-45c4-a3d5-2c9a371f16d5",
        "cursor": {
          "ref": "a4ab9f26-5069-4900-b6a0-596eb6e281c2",
          "length": 244,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "abf2ada0-52d7-405d-9e76-bd87874ec1f9"
        },
        "item": {
          "id": "e9fe6ce6-e45c-45c4-a3d5-2c9a371f16d5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8ca05195-03eb-4ce0-94f4-8669d96b9e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa94e9b-e7ba-4d40-b695-1a470bb809cb",
        "cursor": {
          "ref": "07dbb9ca-6809-425f-870b-66d8138e5d3d",
          "length": 244,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7e73cb88-bf31-4eaa-9907-7f744cab69cd"
        },
        "item": {
          "id": "efa94e9b-e7ba-4d40-b695-1a470bb809cb",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9f333fa3-ba16-4309-be50-9aca430f0702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef9d937-5550-4d33-aa0e-f1d7d3e6ab20",
        "cursor": {
          "ref": "c211c19d-96fa-45f5-bba8-470d16ab5012",
          "length": 244,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4d96829b-243f-438e-8e9a-e40f5056ce2d"
        },
        "item": {
          "id": "7ef9d937-5550-4d33-aa0e-f1d7d3e6ab20",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c1c73d59-18ad-46ee-880b-20609cac0467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1590d8fe-572e-4924-b1ca-302bea1d903a",
        "cursor": {
          "ref": "b7862c82-f5af-4607-aa30-82a204412c5e",
          "length": 244,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "72afd7d7-bfbc-4116-a95c-c6069a18f9e4"
        },
        "item": {
          "id": "1590d8fe-572e-4924-b1ca-302bea1d903a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "346c6594-f772-4c3c-a1d3-ddeced876d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a003b89d-74d9-4f5c-8579-9768f3f11744",
        "cursor": {
          "ref": "e9ebbae3-6c4a-40d9-817e-6a86efcb6274",
          "length": 244,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "48b6af10-7c37-46d2-83c0-fe611ed28e43"
        },
        "item": {
          "id": "a003b89d-74d9-4f5c-8579-9768f3f11744",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ee816111-23ec-4423-9eba-4187d855942f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f839cd05-bb08-4316-b9a7-0526ac2b0fcb",
        "cursor": {
          "ref": "bff0656d-2bbc-40fc-9476-23d3393256b1",
          "length": 244,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5225d608-1693-47ba-9d36-3b2d06ac9298"
        },
        "item": {
          "id": "f839cd05-bb08-4316-b9a7-0526ac2b0fcb",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4b3f6928-f495-4b02-949a-bb1ed8ee9e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ec4fde-7145-4afb-afc2-0593b14ef209",
        "cursor": {
          "ref": "f0aa04f0-e3cf-4b5b-9de1-a5a966bcac9d",
          "length": 244,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7279bae5-3687-46b3-b6c6-2c48e6048b9f"
        },
        "item": {
          "id": "84ec4fde-7145-4afb-afc2-0593b14ef209",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9c43643c-54fe-44e1-a8ad-47e73fd89fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad3c643-2c0a-466d-ad08-e4ffe46528f5",
        "cursor": {
          "ref": "efe4dd45-6369-4f39-9a57-dd668c07427a",
          "length": 244,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c336ba71-3746-4c89-9fc5-251660b5eca7"
        },
        "item": {
          "id": "5ad3c643-2c0a-466d-ad08-e4ffe46528f5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a06a1f55-55aa-4c0e-bf92-5be3408f25db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8b8df6-6012-4d7c-8cda-29cf401065f2",
        "cursor": {
          "ref": "ed704074-b36a-4a33-957b-a490faeac2d4",
          "length": 244,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7afcc623-e604-4a53-b403-841ede46547b"
        },
        "item": {
          "id": "ff8b8df6-6012-4d7c-8cda-29cf401065f2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "fac1ecee-f2e3-47e7-8d52-7d8cb5d490f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc652bc-f3b3-4ad2-b51b-381094b2f40f",
        "cursor": {
          "ref": "b4b8d331-a45f-43c6-b2aa-ae361732d936",
          "length": 244,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6829493e-dd1c-4d3c-bdf2-91a60b2a2418"
        },
        "item": {
          "id": "bcc652bc-f3b3-4ad2-b51b-381094b2f40f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a235b740-a3ab-428c-a387-d915812a2871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b10cc8c-da38-4a9a-a65d-091946eeccc7",
        "cursor": {
          "ref": "58c65c12-7b32-4fb0-9d97-eae18da713fe",
          "length": 244,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7e4f7009-69a1-450b-9635-c7788ea4439e"
        },
        "item": {
          "id": "1b10cc8c-da38-4a9a-a65d-091946eeccc7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "92202646-0c24-4db1-b3ed-d4cfdca4e649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cad3144-fdd6-4754-8b20-d3be97d7fc41",
        "cursor": {
          "ref": "1e7c906a-5602-40bd-a769-e5926d06544f",
          "length": 244,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "18d7849b-e362-4540-bc03-82d0857a1e4d"
        },
        "item": {
          "id": "3cad3144-fdd6-4754-8b20-d3be97d7fc41",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c97a61e2-fbac-4881-bba4-067ee8010d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84616a2-5a11-4f3c-b9eb-894b0072d41a",
        "cursor": {
          "ref": "2a398387-6701-4594-82b5-dfe0913b65ad",
          "length": 244,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4c9ab352-2389-4c50-bba1-e6b01a1425e8"
        },
        "item": {
          "id": "a84616a2-5a11-4f3c-b9eb-894b0072d41a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "67275100-d818-470e-80f2-f392bc014766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d41b31-4d2d-4b9f-aa28-2e9159427074",
        "cursor": {
          "ref": "64a6cbf7-3bdf-47ca-b3e4-d88ab96438b2",
          "length": 244,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9360e31e-c64b-4ace-b188-4f50da85496a"
        },
        "item": {
          "id": "72d41b31-4d2d-4b9f-aa28-2e9159427074",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "df4857d9-de84-456b-bfa0-3d1f290d72f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b435147-3ac5-4f5c-a5e4-99cbea87e0d7",
        "cursor": {
          "ref": "cd6ba411-0346-4f05-8235-9e6910303fd5",
          "length": 244,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "90b91de6-9d4a-4a1a-92cf-4a07cf8f826d"
        },
        "item": {
          "id": "3b435147-3ac5-4f5c-a5e4-99cbea87e0d7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c080c01a-09bd-405b-a673-0650269ed260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d161f6-8dd8-422a-ac2b-e8ce147df5e4",
        "cursor": {
          "ref": "1fd4b247-0067-48fa-b389-2da6e0e6dc5f",
          "length": 244,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2bf201df-994c-46b7-a719-c166f0faf64a"
        },
        "item": {
          "id": "21d161f6-8dd8-422a-ac2b-e8ce147df5e4",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d80ca141-588a-469b-a940-66c0e6194c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cd1d6a-f747-42e6-9575-faa36d3a60e0",
        "cursor": {
          "ref": "bbf61b25-9972-4a98-b275-f397e86ddebf",
          "length": 244,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "508560e1-fa08-4e6d-912e-d4851a91b167"
        },
        "item": {
          "id": "88cd1d6a-f747-42e6-9575-faa36d3a60e0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "386495b8-3fe8-40db-a2ee-d7e9f5901e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5824bdda-c891-4af6-8882-f21c5630f46c",
        "cursor": {
          "ref": "30779694-3285-4518-a71d-4ffa330aafaf",
          "length": 244,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d8c3063a-88c3-4558-9015-e988080ff151"
        },
        "item": {
          "id": "5824bdda-c891-4af6-8882-f21c5630f46c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2ec8a5e1-341e-4827-aafa-341883b8461e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b661ccde-0822-4292-b5c8-cc638faf1f65",
        "cursor": {
          "ref": "5d12a636-fab1-4852-be8d-1ffc3a3f7794",
          "length": 244,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "67248f67-ca34-4536-a79e-9ff746406807"
        },
        "item": {
          "id": "b661ccde-0822-4292-b5c8-cc638faf1f65",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4b9c3736-4fac-4f4a-8c0d-c3c3a4571e78",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0265915c-0310-4a8d-8c0c-348b680fee2d",
        "cursor": {
          "ref": "69783845-f52c-4733-8f5f-ab92b6b5619c",
          "length": 244,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c419ae15-4693-490e-a62a-603a2fa13847"
        },
        "item": {
          "id": "0265915c-0310-4a8d-8c0c-348b680fee2d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9182e392-5e0d-4566-8beb-8c962260c5da",
          "status": "Created",
          "code": 201,
          "responseTime": 6370,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c543587-2cf6-4f57-871e-d2c4a39df066",
        "cursor": {
          "ref": "6d2a6441-ccc4-4dbc-ac22-474a957bbd76",
          "length": 244,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4f680099-63c5-45fd-a76d-d73d0c429f40"
        },
        "item": {
          "id": "8c543587-2cf6-4f57-871e-d2c4a39df066",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d0353182-ee3b-4438-aaef-dab6fccbf4a5",
          "status": "Created",
          "code": 201,
          "responseTime": 5691,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "efca2803-a06f-4289-be18-34df05621642",
        "cursor": {
          "ref": "57c8b3b0-d182-4801-a1fa-dc47af3be980",
          "length": 244,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "eda408ad-56d8-463e-b656-17e404b76c87"
        },
        "item": {
          "id": "efca2803-a06f-4289-be18-34df05621642",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "97e8de19-be3a-47dc-afee-c73265d3cd91",
          "status": "Created",
          "code": 201,
          "responseTime": 5856,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1933e26e-b463-43ba-b637-54aa6ca38e3a",
        "cursor": {
          "ref": "f08b7bc9-72b0-4b18-b7e6-3a9e7a1c7798",
          "length": 244,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4869b307-4087-4872-ba18-6678ea862757"
        },
        "item": {
          "id": "1933e26e-b463-43ba-b637-54aa6ca38e3a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6eb39534-8519-4ec0-87e5-2fddc696604d",
          "status": "Created",
          "code": 201,
          "responseTime": 6655,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7286c040-0fed-4130-a4d0-cf22db56a72a",
        "cursor": {
          "ref": "44033e23-4be2-4330-8af0-63784f177f99",
          "length": 244,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6f021a92-f715-446f-91aa-55cd2abe9746"
        },
        "item": {
          "id": "7286c040-0fed-4130-a4d0-cf22db56a72a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0deabd30-214b-435d-aacf-7352afbed3df",
          "status": "Created",
          "code": 201,
          "responseTime": 5808,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ceb42a-20bd-480a-a23a-062f33d0aea3",
        "cursor": {
          "ref": "39a712c9-26b0-4506-91d7-8d7cc490deff",
          "length": 244,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6c4eb06f-cbc5-4620-9d89-69645c634511"
        },
        "item": {
          "id": "70ceb42a-20bd-480a-a23a-062f33d0aea3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "42ae9df6-7c6d-45f7-a3cc-508aa477a3d4",
          "status": "Created",
          "code": 201,
          "responseTime": 7233,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1352c65-9fc8-4fea-9477-aa5b0ff5c78b",
        "cursor": {
          "ref": "6a7c9d01-784e-4faa-9efc-821fc6b41e9b",
          "length": 244,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9615d32a-b1bf-4902-b1bc-30e5664a2daa"
        },
        "item": {
          "id": "e1352c65-9fc8-4fea-9477-aa5b0ff5c78b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5560a5cf-71ef-472b-8e14-e9717be86bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c78cd5-3cc3-4467-9997-d680eb25eb87",
        "cursor": {
          "ref": "74b291cc-ff23-4a97-9fbd-e8370d597ee5",
          "length": 244,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "18d6ba27-fbd0-4ddd-a5dd-378086821e63"
        },
        "item": {
          "id": "35c78cd5-3cc3-4467-9997-d680eb25eb87",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "90ff6dcc-3f75-479c-b849-fccc2f96edc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61fc42ee-997b-475c-a7e3-f310835b704e",
        "cursor": {
          "ref": "49f18529-1c11-42e1-a1ef-d8aa64f8a3a8",
          "length": 244,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f37b1a3b-9a15-4909-afad-f653b6ae8f2f"
        },
        "item": {
          "id": "61fc42ee-997b-475c-a7e3-f310835b704e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "06c8ebbc-cad2-450e-a568-39ad81172fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e3e552-89a7-43b1-ac6e-18db8e4d6a50",
        "cursor": {
          "ref": "4e588c56-fba7-4462-bd57-9dd1845379b0",
          "length": 244,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e468da82-028b-48bc-8304-f9851798b3e7"
        },
        "item": {
          "id": "61e3e552-89a7-43b1-ac6e-18db8e4d6a50",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0558d466-a44b-42f3-95ba-1f8d0214fd2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e5d711-fdfc-4c49-b4c8-d407dc717e7a",
        "cursor": {
          "ref": "8a874dd2-1bb2-4fc7-bf0e-29f02caea53d",
          "length": 244,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4ff64c44-dd69-453c-a81b-88c308f6ba75"
        },
        "item": {
          "id": "32e5d711-fdfc-4c49-b4c8-d407dc717e7a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "27c12a23-3b18-4214-86bf-0df1d33b38c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d85b866-2125-41c0-a7b0-8b3f495660cc",
        "cursor": {
          "ref": "53916500-4c8c-494b-8995-5210238d1aa3",
          "length": 244,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a2f22d7a-902f-4078-b00f-28b1f1354e4c"
        },
        "item": {
          "id": "4d85b866-2125-41c0-a7b0-8b3f495660cc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c4a428af-3efb-44e3-bc74-8a1a3e19f43c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51abfac0-769c-4d4e-83d4-610b6e10f7a3",
        "cursor": {
          "ref": "8124ebd9-0fb6-4ae7-8ff9-9c463a323491",
          "length": 244,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f7a6fdc3-f915-4103-8d56-e6905003bb5e"
        },
        "item": {
          "id": "51abfac0-769c-4d4e-83d4-610b6e10f7a3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e5f5a92e-7a36-4e43-8df9-c9433caf5018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8775731-6f3d-4817-b197-e2d263dc9571",
        "cursor": {
          "ref": "8972dccd-896d-416b-8bd6-b2be581aebc0",
          "length": 244,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a5b87ed8-246d-4559-9ce0-5a05d30d9f47"
        },
        "item": {
          "id": "f8775731-6f3d-4817-b197-e2d263dc9571",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d0ad9c8d-576f-4333-827c-d519a920a6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229c1d8b-7df2-40c2-aaaf-63c1f79e65b7",
        "cursor": {
          "ref": "a5f5f2d0-69b9-44a2-8a2a-8b1073cda1d5",
          "length": 244,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b3e0c825-c4be-4867-92af-db4e3b4ec26e"
        },
        "item": {
          "id": "229c1d8b-7df2-40c2-aaaf-63c1f79e65b7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "eb6e8e5c-cb43-428a-9b10-13911749438e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf501f0-f82c-4101-8742-b5a13d9a57c4",
        "cursor": {
          "ref": "3df28485-3da1-409a-a7da-72f00ec05a1f",
          "length": 244,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ecd61396-a900-4a76-9a5f-5daef1af5b82"
        },
        "item": {
          "id": "7bf501f0-f82c-4101-8742-b5a13d9a57c4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ca559df1-95a3-4e81-bd53-7b1133c47f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d7d4b0-fdeb-4da4-9b30-2df21be1196c",
        "cursor": {
          "ref": "fca476fb-1775-4420-a95f-14ff0d5d6926",
          "length": 244,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "34c36ce8-4072-46ed-a00d-90c809bef813"
        },
        "item": {
          "id": "70d7d4b0-fdeb-4da4-9b30-2df21be1196c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "92c143be-851d-4a66-bb07-d1249d0d97d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3496565b-bc09-4d3a-8aca-cc99424c502d",
        "cursor": {
          "ref": "84c40d02-626b-4e4d-ad3f-40296676b4d4",
          "length": 244,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "fa7494b0-aa24-4331-92c6-ded861b00c21"
        },
        "item": {
          "id": "3496565b-bc09-4d3a-8aca-cc99424c502d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "300ef290-175b-4464-8903-058ddfcbd9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11612501-b4ae-4e45-9467-6abbe421fd47",
        "cursor": {
          "ref": "da592a07-2035-4955-9c9c-b998a465637c",
          "length": 244,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "59272943-4897-468d-b5b9-afa4629343c7"
        },
        "item": {
          "id": "11612501-b4ae-4e45-9467-6abbe421fd47",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5fcb57ee-e71a-4e90-8bd3-68db44f70d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68198b92-9eda-4c08-90b2-384e15e5fb7e",
        "cursor": {
          "ref": "4b8d2319-6b61-4682-8316-ce41963ab940",
          "length": 244,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "cdd94973-2bec-4e6f-ace1-84697a3c3a4a"
        },
        "item": {
          "id": "68198b92-9eda-4c08-90b2-384e15e5fb7e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4e2c58d4-d276-4543-9c51-be60589eb2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "725ff4b5-ae7e-4180-97e5-96c3abe79bdc",
        "cursor": {
          "ref": "341d53b9-fa13-4f9a-8055-fc10af2c5322",
          "length": 244,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f61de21f-7ff9-4476-8ca7-39f87c79fdf0"
        },
        "item": {
          "id": "725ff4b5-ae7e-4180-97e5-96c3abe79bdc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "557489fd-1f49-4663-9f58-e8193bf59cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9750c6e-e5eb-4801-8db1-329c3f3a0c8a",
        "cursor": {
          "ref": "67cc23b4-0181-4cf7-9878-182663cac4dc",
          "length": 244,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f8e49ca0-1302-4af3-8eda-499acfcf4a06"
        },
        "item": {
          "id": "f9750c6e-e5eb-4801-8db1-329c3f3a0c8a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bcabbc2b-cbe3-49e8-add0-b8344c954869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8093b36-07da-466e-9f82-81f7f29d52fe",
        "cursor": {
          "ref": "56cd7e49-3a80-4f53-a52e-5de814da71c0",
          "length": 244,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3a0d5340-9f2b-476a-b24c-f68fb791ed73"
        },
        "item": {
          "id": "b8093b36-07da-466e-9f82-81f7f29d52fe",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8e96dee0-c6d9-420a-924c-c15978431af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33d3aab-6334-41fb-b13c-05b3b83bd010",
        "cursor": {
          "ref": "4978a24c-2956-40aa-b245-307d54fea1a9",
          "length": 244,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "eab57681-cdf6-4cd0-8861-3cb4b66b89df"
        },
        "item": {
          "id": "a33d3aab-6334-41fb-b13c-05b3b83bd010",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "df018db0-ba69-42db-a2bb-46ba84322577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3bf3921-d45d-48f8-872c-d6da08c7e869",
        "cursor": {
          "ref": "a1624b5a-ec57-42e8-8a1b-a429100ff227",
          "length": 244,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8d390f95-0670-4095-ac8e-f00362c9cd82"
        },
        "item": {
          "id": "b3bf3921-d45d-48f8-872c-d6da08c7e869",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "91ded160-776e-4a39-a334-227e5951d444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d3ef75-ae77-4155-9988-fb8fbfa82f5d",
        "cursor": {
          "ref": "7e608831-828e-465c-ad9a-f401063bcc5d",
          "length": 244,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2239ed28-df80-4606-bbc7-8e413bc77436"
        },
        "item": {
          "id": "23d3ef75-ae77-4155-9988-fb8fbfa82f5d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b3cdcc71-0868-4c80-aa70-97b17347baea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b56f0b-24f8-4a4f-896e-011b94bc6b0f",
        "cursor": {
          "ref": "24f29302-a66e-4925-8974-f4c4f765699c",
          "length": 244,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d5006513-3ddd-4a3d-b834-556e38dff770"
        },
        "item": {
          "id": "98b56f0b-24f8-4a4f-896e-011b94bc6b0f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ace03e2f-a917-4c7c-952f-73f1168f1cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bed35e-5d5b-4849-8207-2831e5cf481b",
        "cursor": {
          "ref": "f65136e4-1eea-4e8d-9342-d9c699c0758b",
          "length": 244,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f7b27efd-e72c-469b-a2c9-2587a1eb8922"
        },
        "item": {
          "id": "d8bed35e-5d5b-4849-8207-2831e5cf481b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "87dfcde5-7559-452a-a89e-73ad47197e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f692a518-f6e3-499b-9340-b88e7cfd5a8f",
        "cursor": {
          "ref": "55101825-600c-49fa-a56f-cc6a5e6b8f42",
          "length": 244,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2a972c38-7645-4c69-a4ed-200e565d9ac4"
        },
        "item": {
          "id": "f692a518-f6e3-499b-9340-b88e7cfd5a8f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ebb65b9e-7f43-48da-9f4a-d89b1b43fe3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e31eeb-da75-418a-81dd-a5590d8f7993",
        "cursor": {
          "ref": "70d33046-3196-45fe-9dc3-70c484b6c818",
          "length": 244,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5cfc7ed5-3568-4115-a229-37f59966424c"
        },
        "item": {
          "id": "b8e31eeb-da75-418a-81dd-a5590d8f7993",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3e52b112-eaa3-4625-a0f6-60c5de0c5085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7f5051-0192-494e-a0c7-bb0276fb5880",
        "cursor": {
          "ref": "61b9aebf-5046-43db-970b-c48b7e748fc0",
          "length": 244,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2834a2cb-ee89-4d9c-ab07-801363233f0f"
        },
        "item": {
          "id": "da7f5051-0192-494e-a0c7-bb0276fb5880",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "332f26b5-ca11-4d9a-8a53-df11daecf997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e6bca22-3581-4ee8-adee-37e21edfd8f1",
        "cursor": {
          "ref": "d2e17400-a7d2-4be1-a52d-e4ab123552f4",
          "length": 244,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e0c00362-dc4a-43ab-b3c2-9c4a989b5dd0"
        },
        "item": {
          "id": "0e6bca22-3581-4ee8-adee-37e21edfd8f1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "adcb24e1-40d5-44a1-bdc9-a96f355006c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c734375a-1b2d-4619-a320-2a5a03fb8354",
        "cursor": {
          "ref": "9e77c8d0-2109-4bc9-85c0-1267b3a08360",
          "length": 244,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "120c9732-d240-4a55-9ffd-e82b24755bd2"
        },
        "item": {
          "id": "c734375a-1b2d-4619-a320-2a5a03fb8354",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e98bf03b-fbd6-4df9-b458-72572038f267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b6eccb-3fd7-42b8-ac5a-d2f6db8cb5d7",
        "cursor": {
          "ref": "4862f2cf-40bb-48a5-afe4-e727c04f2cfc",
          "length": 244,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e0873abc-b2e8-45be-830d-e87b29fead26"
        },
        "item": {
          "id": "85b6eccb-3fd7-42b8-ac5a-d2f6db8cb5d7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "46d4bcea-3093-406f-ade8-c8dff771b63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d7e399-6575-4d10-83c1-ea800773bd5f",
        "cursor": {
          "ref": "90f9880b-4c05-462e-b7e0-86e9cc4c364d",
          "length": 244,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "451be876-7e8e-4646-91d1-d3718c10c49f"
        },
        "item": {
          "id": "a4d7e399-6575-4d10-83c1-ea800773bd5f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ae014a97-b80a-432d-b86f-2d94fb76ab70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f20a4a9-154a-4b29-8b89-80c79797fdf5",
        "cursor": {
          "ref": "cfd68980-1060-47f6-b104-272645612778",
          "length": 244,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e5cffa0a-f883-4c21-b829-8deae0dc9e35"
        },
        "item": {
          "id": "1f20a4a9-154a-4b29-8b89-80c79797fdf5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "eac42423-874d-4016-a736-0b5842887201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd387ce-706b-4ded-a3e8-d69de797d412",
        "cursor": {
          "ref": "ff43475b-13db-46db-b31e-020b91bb4617",
          "length": 244,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e2ceca66-571b-4ccd-aa0f-6c4b476c0d61"
        },
        "item": {
          "id": "5fd387ce-706b-4ded-a3e8-d69de797d412",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cf14499c-eddd-4569-9f3f-b2f584bf73e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae67f9f-7e60-4c5e-9539-6cf5304a03c2",
        "cursor": {
          "ref": "37b08dff-f0f4-4ba8-a9cc-bc0dde799090",
          "length": 244,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6c2fc849-e2bb-48ee-923a-4dbc5ced0dc2"
        },
        "item": {
          "id": "0ae67f9f-7e60-4c5e-9539-6cf5304a03c2",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "78c3266a-2bc9-4c7b-9a12-f7f25cc9a061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38225871-12e2-4c2b-9620-6a0884d5c15e",
        "cursor": {
          "ref": "12029732-502a-4826-b859-18148a24f505",
          "length": 244,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "828bcd6a-ceab-417a-85ab-28830d7530bb"
        },
        "item": {
          "id": "38225871-12e2-4c2b-9620-6a0884d5c15e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fce6bf3d-2531-483a-ad52-c47b6a720225",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b10872-8609-41c5-903e-82becb3ab8d6",
        "cursor": {
          "ref": "d6c0fddf-0def-46a1-8f48-67f10ac902a0",
          "length": 244,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "08efce76-f6bd-4378-b2d5-e7c35526c030"
        },
        "item": {
          "id": "46b10872-8609-41c5-903e-82becb3ab8d6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e1fed80a-9435-4bd5-96b6-217029331cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96a190e-425f-4ca2-9ece-82425d815f18",
        "cursor": {
          "ref": "160c78b4-0311-4dd6-8248-b52e6c504701",
          "length": 244,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6980cbca-b6ea-49e8-88d7-154edbe5e551"
        },
        "item": {
          "id": "d96a190e-425f-4ca2-9ece-82425d815f18",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8ecb7a5b-9632-4217-8f14-e20d431d9186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0c0626-ad61-4831-81e6-cd063f8d2055",
        "cursor": {
          "ref": "61ccf805-71cc-4a30-9a50-ea6a2fc61ffb",
          "length": 244,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "27e32707-cc90-4a47-8cd1-42bf206af909"
        },
        "item": {
          "id": "2b0c0626-ad61-4831-81e6-cd063f8d2055",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "697d226a-ba9c-4308-9beb-f9099b57c892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f88b69f-9ddb-49c7-b7f5-ee5b13ec2482",
        "cursor": {
          "ref": "7e906c68-6a99-4a7e-a872-acfed4de14ca",
          "length": 244,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b6725106-4dae-4f36-819c-13cf64c91105"
        },
        "item": {
          "id": "9f88b69f-9ddb-49c7-b7f5-ee5b13ec2482",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fe9f842a-601c-4af0-a420-41bfd0e35997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc538db0-4096-4956-bb93-85166ad6988d",
        "cursor": {
          "ref": "b27b9945-c87b-4cbf-a712-f717e1b337f4",
          "length": 244,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4a05a2a2-36c2-4485-a2d6-a7cdfed0a91f"
        },
        "item": {
          "id": "cc538db0-4096-4956-bb93-85166ad6988d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9168ec36-457d-431e-9ddc-9ca0db5d56a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f980f83-dae9-4b27-9007-a6496697f85e",
        "cursor": {
          "ref": "49c14f6f-e174-40ad-b893-753dad02d324",
          "length": 244,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "49d27626-bcc2-4d33-a71e-ad06284f3025"
        },
        "item": {
          "id": "0f980f83-dae9-4b27-9007-a6496697f85e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "01f3d671-95c0-4c1d-9359-817e9696447f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a78021-cc90-486b-9b42-e90d0e6322a4",
        "cursor": {
          "ref": "d9f78f22-651e-4b7a-a2b1-cbf53f0583ad",
          "length": 244,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c8441e2d-c3c6-451f-8dfe-323ece03a128"
        },
        "item": {
          "id": "f6a78021-cc90-486b-9b42-e90d0e6322a4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7f5a28ca-c992-45df-b519-b1303a9afa42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec20364-af45-4b43-9d48-14c7356a14f1",
        "cursor": {
          "ref": "c2897f78-2e87-47bc-be0f-36cf7a8e387b",
          "length": 244,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "73ab1c21-3eaf-4f1a-b8d0-c3dca5fb3449"
        },
        "item": {
          "id": "bec20364-af45-4b43-9d48-14c7356a14f1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "94efecca-4075-47aa-9e46-8890169dea23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9693c9a0-f3ec-46bf-ba31-6f6f12700e8a",
        "cursor": {
          "ref": "e4ab30c3-fb8e-4bcc-a3d2-3f0faca50717",
          "length": 244,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8fbf3a3f-64fd-4e75-9e30-4a770eeca711"
        },
        "item": {
          "id": "9693c9a0-f3ec-46bf-ba31-6f6f12700e8a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0cd5cbd7-218a-4c7c-aaa0-e98e215774f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b66874-59b0-43af-ad88-c13501e601f8",
        "cursor": {
          "ref": "1bd125e2-1caa-4cd3-99a5-080c2307ae3a",
          "length": 244,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8895598f-7ad5-4ed4-82db-41edeef60ad2"
        },
        "item": {
          "id": "84b66874-59b0-43af-ad88-c13501e601f8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "127e1869-df45-400e-a90d-9bc196ff3de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643808ed-59f2-4243-9613-ab4040bd83fd",
        "cursor": {
          "ref": "889a6956-3d9d-4cc0-b8d2-70faf562a766",
          "length": 244,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4a14e585-d074-435c-957f-8e2afbb9980e"
        },
        "item": {
          "id": "643808ed-59f2-4243-9613-ab4040bd83fd",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1389ae1a-7056-4604-a19f-9e5e905004f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77d2771-daad-4770-8314-70edbda40931",
        "cursor": {
          "ref": "7a8542f4-5070-471b-849c-538a86ced977",
          "length": 244,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1fd0ac65-54ea-426d-b77f-ee6ebdcd1c18"
        },
        "item": {
          "id": "f77d2771-daad-4770-8314-70edbda40931",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2d2cae40-904a-4033-95c9-494f63ec765c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0308005d-35b6-4e0d-9fb4-efed7a2cdf0a",
        "cursor": {
          "ref": "d128d544-d400-42bb-8cf8-e50029fff44e",
          "length": 244,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ccb5a43f-3197-4369-8d1b-09447c9464c2"
        },
        "item": {
          "id": "0308005d-35b6-4e0d-9fb4-efed7a2cdf0a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6f5ab286-10b2-4c72-8a28-5e40ff5dd51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9e55e0-71cc-4ed5-bc8c-c6df70457395",
        "cursor": {
          "ref": "2379fd13-0e76-4f60-a921-f081e8805950",
          "length": 244,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4975e27a-c16a-44a1-a0b0-3d7d714e77ce"
        },
        "item": {
          "id": "1c9e55e0-71cc-4ed5-bc8c-c6df70457395",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7b521cb1-e7e8-46f9-8076-f22b7c09fee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7d9f6c-6f33-4ea8-a1af-b4a2844b8628",
        "cursor": {
          "ref": "7f2b09a7-f628-45c5-afaf-acac018eeac9",
          "length": 244,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d1aaad73-fcf6-4c75-b0a5-d5d5323a92c1"
        },
        "item": {
          "id": "ff7d9f6c-6f33-4ea8-a1af-b4a2844b8628",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a72f85e4-fc6b-406a-85d0-857d11d5e580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128becae-ac78-41fc-ba83-5b4b8f7c3758",
        "cursor": {
          "ref": "87948083-6749-441f-861c-9dbb28929a8d",
          "length": 244,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "af6bc6af-67cb-42a4-80b2-1ed2917967e0"
        },
        "item": {
          "id": "128becae-ac78-41fc-ba83-5b4b8f7c3758",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f5d447a5-78bc-41ab-ad6f-129985f92c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1048d842-cf0f-4f2f-9f53-88cce0b78abf",
        "cursor": {
          "ref": "0a726105-37d5-4429-b880-6edaeb5c11a6",
          "length": 244,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c47b52fa-3fbf-4cc6-81af-e1fbdeb1ecd3"
        },
        "item": {
          "id": "1048d842-cf0f-4f2f-9f53-88cce0b78abf",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b02d716c-f364-4211-964a-42ee160ef7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19361a63-f777-4f24-ad7b-bac08f67dbd5",
        "cursor": {
          "ref": "0c46beb5-9be3-4a5f-9683-8902edf8447e",
          "length": 244,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "fe1f3db3-4ccd-4f7d-b991-dee5809e8a9c"
        },
        "item": {
          "id": "19361a63-f777-4f24-ad7b-bac08f67dbd5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "56c3ffef-25a9-4c86-a81c-5719e9f7aca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89556619-92ed-4dbc-9881-29ada0968614",
        "cursor": {
          "ref": "fcd5ecc3-bb9f-469c-81b5-00b52b682d07",
          "length": 244,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "03654ce1-f3e1-49c9-9564-7e49b9f39e58"
        },
        "item": {
          "id": "89556619-92ed-4dbc-9881-29ada0968614",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5550a15c-aca0-48e5-b2cc-cabfb7938c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d042e3ee-f668-4164-8d06-e1c35a58bb6e",
        "cursor": {
          "ref": "683a1586-de19-4fd2-ad59-66ed85c6b936",
          "length": 244,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1c42419f-6195-4d93-b154-eb624abfcf14"
        },
        "item": {
          "id": "d042e3ee-f668-4164-8d06-e1c35a58bb6e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3cc171ab-cf3e-450a-a39a-441fe23777ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e14698-d21f-4606-8f38-8ef63401b153",
        "cursor": {
          "ref": "706c784f-8327-4f4c-b969-92a2a1ac238b",
          "length": 244,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "627be993-ddb4-4f57-9f60-2b4ffbd8064b"
        },
        "item": {
          "id": "06e14698-d21f-4606-8f38-8ef63401b153",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "287862fd-bedc-4318-b631-784b4d1234f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971c3d95-6111-4328-aeba-792d6f0321e3",
        "cursor": {
          "ref": "a4742399-02c2-4435-8309-6bbc4646b702",
          "length": 244,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b9ba13da-6c0f-4a45-a2b4-1cbd22e947ca"
        },
        "item": {
          "id": "971c3d95-6111-4328-aeba-792d6f0321e3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8cf957c9-8106-4d5d-b917-09a94052156c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6792b8-641b-4f8c-8bb1-ea814f4f6a5b",
        "cursor": {
          "ref": "aef9fd48-0f82-4a23-af83-451864917f31",
          "length": 244,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "acfc9df0-2494-4967-a7b1-2654c27a1f6b"
        },
        "item": {
          "id": "bd6792b8-641b-4f8c-8bb1-ea814f4f6a5b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0acedb12-4c3f-4287-bb79-d5d31d644ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7129fe9e-2edf-4a9f-806e-07c389acb489",
        "cursor": {
          "ref": "d6a4a290-6b32-4e6d-abd6-4a5b8e0bc6f3",
          "length": 244,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2b6533f5-c981-474d-829e-296079ddb8d1"
        },
        "item": {
          "id": "7129fe9e-2edf-4a9f-806e-07c389acb489",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5dc08bde-def0-4f22-91de-db47d1cb1b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b09b57-3104-460c-bc0d-75023e869ab9",
        "cursor": {
          "ref": "4dd2d63a-be89-4269-b54c-56d5d17396d5",
          "length": 244,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a74b11e3-ff34-48f6-a999-7cbd90917ebf"
        },
        "item": {
          "id": "57b09b57-3104-460c-bc0d-75023e869ab9",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "982e6bfc-a802-49a3-ab51-a96e302691ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55dd27db-ee7a-4b18-a267-5da8ed9bac9e",
        "cursor": {
          "ref": "3d090d2c-b1af-4260-ace1-53ff8b5a9356",
          "length": 244,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "37bfba66-5e52-4ca3-aec8-7a6bbc960ba8"
        },
        "item": {
          "id": "55dd27db-ee7a-4b18-a267-5da8ed9bac9e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e8fa1d02-bb29-4fa3-8d73-190894ea5c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db27d540-ff84-4ae1-b56d-2b856360a3a0",
        "cursor": {
          "ref": "ea079fb5-d5ad-4d0d-807f-3508b69c4f32",
          "length": 244,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "36c143c4-48d6-46ad-9e79-40966a2b6ed7"
        },
        "item": {
          "id": "db27d540-ff84-4ae1-b56d-2b856360a3a0",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0cff0eed-4c40-4e74-9c40-66e35f1c7f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3996ff66-a4d9-44da-bcee-dd408d95e055",
        "cursor": {
          "ref": "476ae1a9-9eaa-4a37-b0e6-fc6d15d99408",
          "length": 244,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "52cfa66c-9338-483a-89ea-08f8dd30c4db"
        },
        "item": {
          "id": "3996ff66-a4d9-44da-bcee-dd408d95e055",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a88250db-a533-474b-85d6-a79ad59e16bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b97467-b44e-4a00-9c9c-72b1e550ac02",
        "cursor": {
          "ref": "81ae7407-8389-4345-ad2a-52a4f0661078",
          "length": 244,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "58c6376f-c4dc-4cdb-9d44-da859b5aedef"
        },
        "item": {
          "id": "a3b97467-b44e-4a00-9c9c-72b1e550ac02",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "277e382f-5c31-4966-a216-a6c05396d292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471c83ac-1795-4188-b7b7-faa5480579d7",
        "cursor": {
          "ref": "c491fccb-8b59-45ec-8c97-56e9b0c25720",
          "length": 244,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2f923d97-e7cf-4dea-b4b2-431b7ddafc67"
        },
        "item": {
          "id": "471c83ac-1795-4188-b7b7-faa5480579d7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "71e67e7a-bc56-427f-80d8-80385d00e9b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8728974-cdc6-4634-8da5-8ee7daa19deb",
        "cursor": {
          "ref": "ff48f5a2-6b50-43f7-85f5-41415d728ee4",
          "length": 244,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "cbe7660a-cad7-4019-9ce1-f879ab1606b7"
        },
        "item": {
          "id": "f8728974-cdc6-4634-8da5-8ee7daa19deb",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "350e8815-c5ab-4c1f-b9fd-a73e6f30697c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56697ad8-bd37-4f02-9ad1-ed52df83d12f",
        "cursor": {
          "ref": "c114a20b-06ec-44ad-99be-cfbb6f3f9246",
          "length": 244,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b81110a3-1603-48d7-ac16-c4f83af9d448"
        },
        "item": {
          "id": "56697ad8-bd37-4f02-9ad1-ed52df83d12f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1f207c5a-317e-4bb5-95f0-042bb300cab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c942c66-7abb-4cc7-9f2a-44d8dc33c98c",
        "cursor": {
          "ref": "26be059d-376a-4756-9d62-d5882e315af5",
          "length": 244,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d94d480a-db24-4700-a8e5-8c8bb8c88b7c"
        },
        "item": {
          "id": "1c942c66-7abb-4cc7-9f2a-44d8dc33c98c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8b0e46ce-81f7-47fe-9410-a45878250d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f15c3e-96bf-4703-a532-924f6d07a3d1",
        "cursor": {
          "ref": "beb6dd6c-a8c2-406e-b5d1-ca4b7822e32a",
          "length": 244,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ae4cdb6a-fbe0-48fb-81cc-0400129a7892"
        },
        "item": {
          "id": "c0f15c3e-96bf-4703-a532-924f6d07a3d1",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e0ce4da3-0824-43c7-99ee-59455f5bbf9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3357190-9cee-4d94-9268-b137221d517f",
        "cursor": {
          "ref": "5d22f9fa-c24b-4df2-a9a7-7a30675e6e3f",
          "length": 244,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d9b89e7c-81d2-48ea-a894-cb8148b2342c"
        },
        "item": {
          "id": "b3357190-9cee-4d94-9268-b137221d517f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e76358a1-841b-43a4-b8f6-2b1776e86d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0d95d9-c565-47b8-ba97-aca246cbd049",
        "cursor": {
          "ref": "a1db729a-c699-4c7a-856e-793391d351b9",
          "length": 244,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c79b21ab-75c3-47cd-8cdb-bc4080114651"
        },
        "item": {
          "id": "5f0d95d9-c565-47b8-ba97-aca246cbd049",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "14db21b8-c73a-4fca-a643-4f26298a2edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea54ea60-a08c-4c37-8fbe-84e9d4123b4d",
        "cursor": {
          "ref": "bfb2b6b5-5bcf-44a9-8454-bd5475bca657",
          "length": 244,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c76d8371-2198-4d32-b109-67fb4787ae85"
        },
        "item": {
          "id": "ea54ea60-a08c-4c37-8fbe-84e9d4123b4d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7534a964-5e2c-4dc5-99a8-c2589b06609e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c298f08-ef46-4f04-a671-3232ad2bf198",
        "cursor": {
          "ref": "146bd172-dda6-42c7-ab49-f15a56abc3b5",
          "length": 244,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e71b08c8-9cb2-41a2-80ba-1d79f4721bcb"
        },
        "item": {
          "id": "9c298f08-ef46-4f04-a671-3232ad2bf198",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "66a5ba1a-12b0-4a2b-8092-f9fca533a463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0fac7a9-7690-44fd-a9ac-3da8c330c187",
        "cursor": {
          "ref": "4f088b60-1ba1-4cd8-9c53-cf9ec48474e9",
          "length": 244,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2a1cbb71-864e-4b12-9fe8-2713f3b73607"
        },
        "item": {
          "id": "f0fac7a9-7690-44fd-a9ac-3da8c330c187",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6bccc552-e30f-4efc-86ab-ecfb6cef4b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7b94ff-05a2-4d23-8cf6-dc0605c23d5c",
        "cursor": {
          "ref": "f1fecf3c-a721-4fed-a7b3-eb213d436c0a",
          "length": 244,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "468c9092-3392-40b4-b7ec-edb7c80030e6"
        },
        "item": {
          "id": "2a7b94ff-05a2-4d23-8cf6-dc0605c23d5c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6be7570c-29e7-46a4-8c0a-a519fa01618e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6361bf19-0710-4b7e-940d-c6418f602379",
        "cursor": {
          "ref": "6ad9452b-b1d0-4cc5-b80a-971005105808",
          "length": 244,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4fa89840-089d-40f5-b4de-ef5b7e8cfa34"
        },
        "item": {
          "id": "6361bf19-0710-4b7e-940d-c6418f602379",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8f6970db-1715-4b50-9566-dfe67b90c912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be53686-fea6-4545-80e0-aeeae7bc2e6d",
        "cursor": {
          "ref": "45687176-154d-4623-acf4-4593e820fcb2",
          "length": 244,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1521c113-eb29-45da-9c24-f2d671264e18"
        },
        "item": {
          "id": "4be53686-fea6-4545-80e0-aeeae7bc2e6d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a5a2df0a-0c8b-4d5b-822f-012bfc316fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9ea100-09db-4814-a028-26792ae5f9b3",
        "cursor": {
          "ref": "3bc9b193-e0fd-4579-bd81-cfd0b3eeeef8",
          "length": 244,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0af7288e-dc2c-4713-8250-3b0edf867b22"
        },
        "item": {
          "id": "9c9ea100-09db-4814-a028-26792ae5f9b3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8ffaee7a-6e21-4b70-ba13-63024c28d4e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e70022-1d5d-446b-b699-758c880ffcf0",
        "cursor": {
          "ref": "3b3c6f62-13f8-453d-ac86-cc678be02ad4",
          "length": 244,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "22952eb6-a224-4550-947a-71855b8756db"
        },
        "item": {
          "id": "e6e70022-1d5d-446b-b699-758c880ffcf0",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c5d77a6c-d791-4b75-8de6-23d839a2741e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e93fea-a17a-4255-87e4-abe5d8858cb7",
        "cursor": {
          "ref": "47cd2f9c-735a-48c4-b946-d8e6af9a620a",
          "length": 244,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "1709c6e9-90f7-499a-b6aa-5f1a20544b40"
        },
        "item": {
          "id": "51e93fea-a17a-4255-87e4-abe5d8858cb7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f898b372-75c1-44fc-b769-0c162c54c963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89a0046-e311-441b-bd40-bbfdea4dd84b",
        "cursor": {
          "ref": "111dce13-28f9-43f5-bcfd-d3f90947e6c3",
          "length": 244,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "72d65b43-ba45-4b6f-a64c-ecf91f49db98"
        },
        "item": {
          "id": "b89a0046-e311-441b-bd40-bbfdea4dd84b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3d91683d-2b98-4088-837d-20fd55b4cf21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "915ba26d-ba32-4a2b-84da-ee45b8d03f19",
        "cursor": {
          "ref": "ee8342c6-0e57-47fd-8d82-e24b0662b73f",
          "length": 244,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "06de31dd-024f-48fb-9ad8-eb5255a8f5de"
        },
        "item": {
          "id": "915ba26d-ba32-4a2b-84da-ee45b8d03f19",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5d23da3f-3032-41d9-80fa-3aaefeab0acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc569d8a-ea34-4b5f-9e73-f072ff7894fd",
        "cursor": {
          "ref": "450823fb-d518-4c0d-af9a-bb2f62996793",
          "length": 244,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b13102cc-a800-4474-b336-0ab3e2ade047"
        },
        "item": {
          "id": "fc569d8a-ea34-4b5f-9e73-f072ff7894fd",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "809c0afd-1c98-4802-b9a5-ec8af22ad717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2891a334-5906-417c-918d-2f3089925a16",
        "cursor": {
          "ref": "85598d48-7c89-4914-abf5-f080e8c340e2",
          "length": 244,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "abb6b096-c7e2-44b0-bd3d-e182aaa4f4b3"
        },
        "item": {
          "id": "2891a334-5906-417c-918d-2f3089925a16",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d1424704-c847-40e9-b255-33deb2157e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f255ab4-c0ef-4c8a-975a-cbdb0931fa73",
        "cursor": {
          "ref": "8ed87c3c-dd92-4b7e-b365-630df714c06d",
          "length": 244,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "35c16cc3-ab74-4943-934a-cadb34d1f255"
        },
        "item": {
          "id": "7f255ab4-c0ef-4c8a-975a-cbdb0931fa73",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "dd5b99d4-96ea-4900-a2f5-7e20867d555b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca373f16-8e9f-47ce-9d7e-e213a402454c",
        "cursor": {
          "ref": "1e00fafd-4919-4f9a-b7b4-4de7c60c5ef4",
          "length": 244,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e5495037-04ec-4a8d-a07b-0c0866e7545a"
        },
        "item": {
          "id": "ca373f16-8e9f-47ce-9d7e-e213a402454c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6ff87cf5-127a-4b75-8321-f51ced8868e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae965c5-cc31-45d3-bc1b-168f68e2441f",
        "cursor": {
          "ref": "7eed9005-4772-481d-aa4d-2bccc14a448d",
          "length": 244,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3c3ce2e1-17aa-439a-994d-4445e82b3e9c"
        },
        "item": {
          "id": "aae965c5-cc31-45d3-bc1b-168f68e2441f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8417c5e5-d0a1-4a16-96c9-5f282ebf835e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a508199a-d918-404c-af8c-5c001cde5eb9",
        "cursor": {
          "ref": "8b6af9c8-a4a9-4471-834b-c9c87ddcc2fb",
          "length": 244,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3123b70d-1096-4c15-8b80-d7597ea6e391"
        },
        "item": {
          "id": "a508199a-d918-404c-af8c-5c001cde5eb9",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "af06214f-988e-4a46-be26-4aed1dcfbbf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb731e8-70c4-4097-8f77-f6cd2108f0dc",
        "cursor": {
          "ref": "86a1dc33-3044-4a70-a946-4207ddb62500",
          "length": 244,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8107553f-754a-4720-a876-6133ce762e01"
        },
        "item": {
          "id": "5bb731e8-70c4-4097-8f77-f6cd2108f0dc",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5382b424-4ae7-4600-9da1-1b862c7bb41e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fccd452-3227-4e41-8cfb-4068c0919077",
        "cursor": {
          "ref": "e96db8e4-0ae5-4858-bfcf-85b18afe36b0",
          "length": 244,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "05deb668-2d89-492b-8dc7-6f13d6a7525e"
        },
        "item": {
          "id": "2fccd452-3227-4e41-8cfb-4068c0919077",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "46977d76-91c8-4724-9e55-df3875216b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5755955-359b-481b-b33a-fad3b72fd7f4",
        "cursor": {
          "ref": "de43953d-73aa-4836-8e55-e3ea1fbc7b11",
          "length": 244,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "08d077f9-fd08-4790-b37b-e8db8f87255f"
        },
        "item": {
          "id": "b5755955-359b-481b-b33a-fad3b72fd7f4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bc80df81-4e08-4a5f-b218-65ef23317465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40e3dfc-333a-4827-b192-a45b87b72012",
        "cursor": {
          "ref": "685f45bf-c045-4add-b87d-4d14ea5626c0",
          "length": 244,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "54f87155-4032-481f-8e1d-7c37683bf5fe"
        },
        "item": {
          "id": "d40e3dfc-333a-4827-b192-a45b87b72012",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "facb404a-8f70-4d55-9516-8468b5884a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c80911-bca0-40db-b64b-c27394d25a02",
        "cursor": {
          "ref": "9f202730-61bb-4c9e-b465-86261997c289",
          "length": 244,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e67fea48-e4dd-4599-97bc-2a795fd9becb"
        },
        "item": {
          "id": "09c80911-bca0-40db-b64b-c27394d25a02",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cd8a8935-3e54-4cfe-bf97-61cbf6aaa5c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02ef90b-7b6a-4f33-9b7d-736a4f667959",
        "cursor": {
          "ref": "0f640a92-46d3-4de8-a566-3313fd208bb3",
          "length": 244,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7654e808-817c-4232-8ec4-7ff17ba622a3"
        },
        "item": {
          "id": "d02ef90b-7b6a-4f33-9b7d-736a4f667959",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9b04e1d8-aa59-43a0-9609-9ae8a6416091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cfa8580-008a-4906-90e2-0878b677597b",
        "cursor": {
          "ref": "8e4856a7-1e20-4140-90c9-0308397fc334",
          "length": 244,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1d95b2b2-993b-4915-b4ea-a465fed5d2f9"
        },
        "item": {
          "id": "5cfa8580-008a-4906-90e2-0878b677597b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "158b1762-43b4-4d15-9a6a-0ae4e9cb8346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d9b86c-7062-4fab-bccd-e29eb1abacfc",
        "cursor": {
          "ref": "be78e15d-2a19-4bd5-8963-2dc6613bc813",
          "length": 244,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9276e7c0-6af1-44e6-976c-255967d56585"
        },
        "item": {
          "id": "b0d9b86c-7062-4fab-bccd-e29eb1abacfc",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f1cab8aa-dc1c-4803-af4f-2c3b43200245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd993086-e071-43a2-a739-50c748bb9772",
        "cursor": {
          "ref": "5e8c1cab-5f59-4b5b-b76d-875979087282",
          "length": 244,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "31dada9a-9598-426a-9df3-164fe81b10ac"
        },
        "item": {
          "id": "bd993086-e071-43a2-a739-50c748bb9772",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "967c586f-c584-48e4-a518-49f4826ad063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fd3f2a-8e4e-40c5-866a-069d2711ec62",
        "cursor": {
          "ref": "f80ee702-4e33-4c4a-afb3-bc3384caa6ad",
          "length": 244,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7d5e9215-05cd-4dfb-9d27-a4796d528df7"
        },
        "item": {
          "id": "68fd3f2a-8e4e-40c5-866a-069d2711ec62",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "210115f2-26cc-4c16-b492-8ee70ae48339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aacc7964-87fd-4d47-9bc3-8e7fc54108f1",
        "cursor": {
          "ref": "09a6cf7a-772b-41fb-a525-150d6abbdbf7",
          "length": 244,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "23cba3f2-17f0-4063-8185-bccbc23cef5a"
        },
        "item": {
          "id": "aacc7964-87fd-4d47-9bc3-8e7fc54108f1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "20dfdc2a-31a5-4bb3-b21d-630cc2c6db0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd439017-3f22-4908-a34c-b03e131ea5f6",
        "cursor": {
          "ref": "bf80b938-2ad1-4519-a756-51ba806335ba",
          "length": 244,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "da96b49c-db3a-4cc9-b372-1d3c6e1efe2d"
        },
        "item": {
          "id": "dd439017-3f22-4908-a34c-b03e131ea5f6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "19f83697-e846-41d0-b847-0ff389bb5ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59082796-506c-4ea8-a3b9-690be9f83001",
        "cursor": {
          "ref": "e9045fc2-976d-4aec-a73a-87ab20267fdc",
          "length": 244,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "05c18a06-8537-477d-946c-ca2cf819e06a"
        },
        "item": {
          "id": "59082796-506c-4ea8-a3b9-690be9f83001",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3ff165f9-f424-49fa-b738-8b4860fad38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094fbbe3-313c-4fbf-8e8d-d0a6e942753c",
        "cursor": {
          "ref": "26cea277-2a7d-422d-8e54-e127c94b1b58",
          "length": 244,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "52d13fe5-5dd9-46a1-b948-fefc323c07b2"
        },
        "item": {
          "id": "094fbbe3-313c-4fbf-8e8d-d0a6e942753c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b739be5e-30fb-47d4-9222-1f21acf3fb61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8462fe72-1c7e-45db-8080-2022ff84cb86",
        "cursor": {
          "ref": "474616e3-ebb2-4a39-9896-20a050fbb92f",
          "length": 244,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d1330a73-186a-4ceb-943b-db51b53379d8"
        },
        "item": {
          "id": "8462fe72-1c7e-45db-8080-2022ff84cb86",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c9464180-5d67-4d3a-8e35-29996ec9e710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da0bbb5-0adb-47d5-9b35-5dda084fbdf9",
        "cursor": {
          "ref": "69aae493-2dfa-4ec0-9a41-df1cf5cb664b",
          "length": 244,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "548c60cb-b337-4747-b711-59c4767f7d31"
        },
        "item": {
          "id": "6da0bbb5-0adb-47d5-9b35-5dda084fbdf9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "aa6da6fd-475b-4287-8dd1-6c2e8771a33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15dede7b-d12a-4d14-9f88-4a3302b6f1e9",
        "cursor": {
          "ref": "b4b2ab76-4c4c-435d-91c5-b1f3ccea0766",
          "length": 244,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c532c5ee-0979-42c9-ac10-bd1a4537e8da"
        },
        "item": {
          "id": "15dede7b-d12a-4d14-9f88-4a3302b6f1e9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6f4dd71d-579e-4274-8880-1dada74d0662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b3eec2-2976-4f05-88b9-ce8a91c6c8a4",
        "cursor": {
          "ref": "51b4e93e-2e46-44ce-a2fd-b113c3bc717e",
          "length": 244,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e27eff37-60fa-4084-bb7b-367972ed1592"
        },
        "item": {
          "id": "73b3eec2-2976-4f05-88b9-ce8a91c6c8a4",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "094d6605-fb4b-4a8c-87d3-1f72d02e4b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd4cba7-bc98-48e2-bb18-2c6d1ab4dd29",
        "cursor": {
          "ref": "8e625215-9c44-4b72-b950-522a83d94e3d",
          "length": 244,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9b36f588-6ec4-4cd1-9c39-c0290eb9646b"
        },
        "item": {
          "id": "bcd4cba7-bc98-48e2-bb18-2c6d1ab4dd29",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "69296fb6-dfff-416c-b46f-326195c24b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c259b7-f34f-4d1e-abba-3c47bb0db7d7",
        "cursor": {
          "ref": "1011bc1f-e96e-4b97-a4c8-16f63719a199",
          "length": 244,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "69831a45-ab3a-4a3e-ae2b-22f7221b336b"
        },
        "item": {
          "id": "95c259b7-f34f-4d1e-abba-3c47bb0db7d7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "04ebb880-2a42-4aa4-b027-fc431bae6249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75fbb79-0041-47d0-a644-1a80f5eef7fb",
        "cursor": {
          "ref": "af5a77b4-1f20-430f-82e7-b86ee84f3cd5",
          "length": 244,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c3847aa5-c1d1-4145-9a6d-28ba916c683e"
        },
        "item": {
          "id": "b75fbb79-0041-47d0-a644-1a80f5eef7fb",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "23acdb29-ae22-4fca-881c-3838fed63b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e7ca58-44c4-4d79-bb9b-7af6bedb32a3",
        "cursor": {
          "ref": "19bde332-a47d-4c4e-b245-a48fac896754",
          "length": 244,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1b6e66de-7ebe-44e8-a5f6-918dcef77cd5"
        },
        "item": {
          "id": "e9e7ca58-44c4-4d79-bb9b-7af6bedb32a3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4e1d7192-d395-42ea-91ae-b85acdfdfca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80fdffb1-c353-4f20-99d6-766cf37c291b",
        "cursor": {
          "ref": "ff46c814-509d-479d-84a6-6f4d4daa3abd",
          "length": 244,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e7048677-9118-4cf2-a674-820b0c6536b6"
        },
        "item": {
          "id": "80fdffb1-c353-4f20-99d6-766cf37c291b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1a062638-c434-4554-ae44-09e45159e029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357ccd1c-3c6e-4886-9584-595a6730c8b3",
        "cursor": {
          "ref": "48d28cc1-867d-419b-bbf5-551887d81fd7",
          "length": 244,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "77aa8a4e-828e-4900-b756-205d65a42b0a"
        },
        "item": {
          "id": "357ccd1c-3c6e-4886-9584-595a6730c8b3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ae305c08-ab8a-418f-a6c8-5c9780a296a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ca1221-a000-4807-bc6c-a89f72c8f3c7",
        "cursor": {
          "ref": "e49a1612-4422-455a-83c8-59a5ba605b3c",
          "length": 244,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "359a207c-3b5e-46bd-975a-a3219ae538d1"
        },
        "item": {
          "id": "82ca1221-a000-4807-bc6c-a89f72c8f3c7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4f596cc7-9835-44d6-a75b-9c7226fbb647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f942913f-e469-45ef-aa67-5fa2afce8ff1",
        "cursor": {
          "ref": "42b87301-c5f2-4486-8d0e-b6c1c90fc5a4",
          "length": 244,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a53c40ce-1313-47c4-8435-8ce936f40f2d"
        },
        "item": {
          "id": "f942913f-e469-45ef-aa67-5fa2afce8ff1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ea3cdbda-6bd8-43d7-867e-c760790d3fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef090368-e9b0-46ae-a546-267992bf2edf",
        "cursor": {
          "ref": "8218f76d-3252-46f3-813f-96f42e68eb7f",
          "length": 244,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "fe00b14e-afbd-4189-a877-d7d2ac40281f"
        },
        "item": {
          "id": "ef090368-e9b0-46ae-a546-267992bf2edf",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "04509eed-c0b4-4a70-957c-4327f1facfb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cac4980-f2ec-41f8-8014-e7c5ce7a9d2b",
        "cursor": {
          "ref": "61ba2beb-3d35-4f59-b18a-d86c4a5643ad",
          "length": 244,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "eab13622-271e-45b2-9b14-21931d4ecdb5"
        },
        "item": {
          "id": "1cac4980-f2ec-41f8-8014-e7c5ce7a9d2b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "90140a55-e3b0-4619-9abe-4874d3779d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5916be0-0d65-44e8-8f97-7e9acf93301e",
        "cursor": {
          "ref": "ff7009a9-3a86-4ea2-ae15-cb21078699c3",
          "length": 244,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "27c20b62-0952-46a3-9946-6e90eaf48ba4"
        },
        "item": {
          "id": "d5916be0-0d65-44e8-8f97-7e9acf93301e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8829b7d7-e606-43ae-95d8-6d7e129a0b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbf249a-5117-41cf-aabd-bc7e2c52d76c",
        "cursor": {
          "ref": "e1ca95c0-e26c-4a7b-8078-3113db060d0f",
          "length": 244,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "30333a6a-ec94-4885-a4ed-123b2a8ef23e"
        },
        "item": {
          "id": "cbbf249a-5117-41cf-aabd-bc7e2c52d76c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "741ede9b-4ad2-46b9-8777-22c937bbf376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a66ad3-42a5-40d7-96d4-a7f3c8f1dc88",
        "cursor": {
          "ref": "471aae22-e25c-443e-a62c-4e2e261587b5",
          "length": 244,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3838f742-bf3a-469d-b90e-8ebf6161cb00"
        },
        "item": {
          "id": "32a66ad3-42a5-40d7-96d4-a7f3c8f1dc88",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f4df07c4-7d99-45cc-a077-2dfedfa19048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0802ef99-5f44-4095-9676-145eb6f60a44",
        "cursor": {
          "ref": "483ead10-5c01-47fc-839c-92decea44784",
          "length": 244,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7d1f5dbf-7449-4d97-83d6-e7200c6b10d3"
        },
        "item": {
          "id": "0802ef99-5f44-4095-9676-145eb6f60a44",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3dcd42fa-9b70-4699-a8e1-c4fab4656729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2391c0dc-7574-4bca-adc4-44e27e9842e2",
        "cursor": {
          "ref": "75690cc5-e0b2-474e-af1a-72431039ab37",
          "length": 244,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "cef3530c-443c-4d86-b8c8-4f555d0c4cb1"
        },
        "item": {
          "id": "2391c0dc-7574-4bca-adc4-44e27e9842e2",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f42f3ffa-a24d-4290-ab1d-e205413a4a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a38598-bd30-42af-8aa4-e5f291212891",
        "cursor": {
          "ref": "36764819-3c68-49e4-be18-fadeb848a680",
          "length": 244,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "dd4104c0-fd23-4b30-b125-1c61feeb4cc4"
        },
        "item": {
          "id": "34a38598-bd30-42af-8aa4-e5f291212891",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b147166b-1a35-4e68-9630-ba432a44452c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee6c37c-1c5c-4287-971b-3e28d0e0c5b2",
        "cursor": {
          "ref": "f6efdf6a-5d72-43cc-9a46-d273c0e6337d",
          "length": 244,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ba0831a3-e0a6-4adc-a8e2-1ed1f924b274"
        },
        "item": {
          "id": "8ee6c37c-1c5c-4287-971b-3e28d0e0c5b2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b7be1d19-c7dd-499e-bed6-6f0e1c9e8e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f715c2b6-c0d9-45a3-8ada-864fb9c81591",
        "cursor": {
          "ref": "23d635b6-3839-4266-96f5-d3b9334ae4d4",
          "length": 244,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1f1e8073-fe91-4aac-882b-469e7551506f"
        },
        "item": {
          "id": "f715c2b6-c0d9-45a3-8ada-864fb9c81591",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "648aaf85-e79b-4ef4-a0df-a58fb8d60fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d22d6c-e97a-41a7-a806-b4ec4e6ee07d",
        "cursor": {
          "ref": "581aa259-3e97-4acb-b418-ebb24f36279d",
          "length": 244,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "387dd7bf-325e-4d5a-974d-31b8a793b29d"
        },
        "item": {
          "id": "55d22d6c-e97a-41a7-a806-b4ec4e6ee07d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4e393186-de39-493b-ad3f-11f816a6c869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68ff7b3-c410-4c9f-9fdb-73d83abc4e23",
        "cursor": {
          "ref": "3b0efd3f-034f-4e49-9604-d003a4d6c83a",
          "length": 244,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c9cbe744-d857-4881-b4d8-0909d7e3ae13"
        },
        "item": {
          "id": "e68ff7b3-c410-4c9f-9fdb-73d83abc4e23",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d0b9872a-0462-4212-a8be-f1865799ede3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696e21b7-78f7-48e7-b5a7-880d9935a87d",
        "cursor": {
          "ref": "66eada0e-265b-4132-bd5f-00a2050cc64d",
          "length": 244,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0b89cd53-3d40-4f84-8c37-4c26ed17937b"
        },
        "item": {
          "id": "696e21b7-78f7-48e7-b5a7-880d9935a87d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1946c755-81db-4e59-9c52-218b23988c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd568cee-745f-4a91-bdba-ce9fd07be847",
        "cursor": {
          "ref": "e4d67b2d-4975-46fa-94be-70ea5ee37eb1",
          "length": 244,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0ca3fa76-bd18-4616-9d12-611c50717fdf"
        },
        "item": {
          "id": "bd568cee-745f-4a91-bdba-ce9fd07be847",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "eee41ae1-585c-4c78-bcb0-c6d99ac6a807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20b7815-d835-41e9-8469-7b830342c3f0",
        "cursor": {
          "ref": "af7c1aa0-5854-41e1-9b15-0f6e74a448ca",
          "length": 244,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f5f0085e-ee68-4ada-9c73-3e13accf7269"
        },
        "item": {
          "id": "d20b7815-d835-41e9-8469-7b830342c3f0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "18d43171-69d8-46cf-9d0a-7debea505546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5278ce34-9722-4805-a1a9-2d65336c2583",
        "cursor": {
          "ref": "6ac156ed-3b85-4983-95c7-56c9035622ac",
          "length": 244,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "08c30565-fb60-45fd-996d-e59af3320e4d"
        },
        "item": {
          "id": "5278ce34-9722-4805-a1a9-2d65336c2583",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9eff566e-53d4-4b14-a3d1-28837948b191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a994eb84-1d30-4f85-b6c1-29f1bf3796bc",
        "cursor": {
          "ref": "6f773e78-518c-4548-b836-ee929babb620",
          "length": 244,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4b90c994-57be-41f5-8886-f1cd539465d6"
        },
        "item": {
          "id": "a994eb84-1d30-4f85-b6c1-29f1bf3796bc",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "81d4c4c7-9440-4b99-95de-23915d65152e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940e4cdd-6d52-4bf8-901c-8f5e41453770",
        "cursor": {
          "ref": "fb2aa675-d6f5-4f00-90d2-2cf0ac16c847",
          "length": 244,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "df08490f-69b3-43bf-9c0c-68eec055d223"
        },
        "item": {
          "id": "940e4cdd-6d52-4bf8-901c-8f5e41453770",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "614c489b-06fa-4d04-b2a4-3ba346b70cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f940b6-7fbd-42cd-aabc-b334c6d8da47",
        "cursor": {
          "ref": "c3e3d521-3338-4741-a0a1-9b1c7046e362",
          "length": 244,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4f7924ce-1fa8-4298-b0d8-9480b30e629f"
        },
        "item": {
          "id": "36f940b6-7fbd-42cd-aabc-b334c6d8da47",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "950ff1fc-a65c-4e07-8be3-90fa9f3f9dbb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8355b7de-8e0b-44e3-ab53-24a0d2737d8b",
        "cursor": {
          "ref": "df73a5d9-9fd7-41c3-8253-3936e42cf821",
          "length": 244,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "95421db4-3bbb-4699-8487-fc9cab88076c"
        },
        "item": {
          "id": "8355b7de-8e0b-44e3-ab53-24a0d2737d8b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "79700220-4a3f-42ff-9674-159d2430fcb5",
          "status": "OK",
          "code": 200,
          "responseTime": 548,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b60218-0d18-4078-b0c1-103707d14572",
        "cursor": {
          "ref": "333d62e9-741c-426e-9dbb-2d79449e0205",
          "length": 244,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "16770cb6-eca0-4779-8961-375d002073b5"
        },
        "item": {
          "id": "e4b60218-0d18-4078-b0c1-103707d14572",
          "name": "credentials_verify"
        },
        "response": {
          "id": "862c969f-d41c-4052-9192-4af642363bcc",
          "status": "OK",
          "code": 200,
          "responseTime": 1730,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4983efa-231c-4361-bd84-72943c375ce8",
        "cursor": {
          "ref": "7bed3db2-f29f-4843-9371-2ba35bf59ef0",
          "length": 244,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "32148ee3-ddf7-480f-8478-eaeb98859b25"
        },
        "item": {
          "id": "e4983efa-231c-4361-bd84-72943c375ce8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8a0d2b84-8ae5-490c-bf33-10a4e45c9658",
          "status": "OK",
          "code": 200,
          "responseTime": 1493,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d0fd61-a315-4baa-b6c8-1487a31feb0a",
        "cursor": {
          "ref": "293939c7-cd3a-40e7-8866-711fc9d3fec7",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7337c89e-fce4-4af3-b00f-29a76050ae74"
        },
        "item": {
          "id": "53d0fd61-a315-4baa-b6c8-1487a31feb0a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f80d2f60-2f02-478f-860b-b5712ee025c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d0fd61-a315-4baa-b6c8-1487a31feb0a",
        "cursor": {
          "ref": "293939c7-cd3a-40e7-8866-711fc9d3fec7",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7337c89e-fce4-4af3-b00f-29a76050ae74"
        },
        "item": {
          "id": "53d0fd61-a315-4baa-b6c8-1487a31feb0a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f80d2f60-2f02-478f-860b-b5712ee025c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e0d17c-978f-4a10-8f9e-5ab186976f0e",
        "cursor": {
          "ref": "30cc973a-cf61-4b0c-ba66-9dd590027142",
          "length": 244,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a040e7af-4273-491a-9f28-21ee8d7639ba"
        },
        "item": {
          "id": "30e0d17c-978f-4a10-8f9e-5ab186976f0e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "06a4e8ce-9bb3-4028-ae78-336fe11e14b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096d151d-ce9a-4ba0-bd9d-77cb07df62ce",
        "cursor": {
          "ref": "ad46ef61-c341-40b7-9872-2b8a49e2d78c",
          "length": 244,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a31f3ba0-695c-45c0-b1fc-64879c75f2c5"
        },
        "item": {
          "id": "096d151d-ce9a-4ba0-bd9d-77cb07df62ce",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a3daf3be-69e5-4a1d-8979-abdcdaf59b6e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}