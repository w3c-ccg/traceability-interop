{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "04746802-68b2-4eb4-bab5-1879c7b4bff9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a5bce226-ed0f-4f08-b783-3326758703f8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f9dfd0cb-6651-403e-a2a2-4193436ed515",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a8609c59-5601-47c9-bc74-566329e6fee6"
                }
              }
            ]
          },
          {
            "id": "eef4f27d-58c0-460f-8530-dd7fd0f1ae87",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b7e27d9d-e7bb-47bc-bcd7-cb0c8c6342ac",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "378deba6-4358-4363-8e1e-b6602333a0a2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "33bd1f38-fb52-4392-9924-badf18d7ee92",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3d191238-4028-43b7-b245-036eb6cafb30",
            "name": "Positive Testing",
            "item": [
              {
                "id": "61559203-af75-43fb-a4dc-325369a27d3b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a07e1fe-a337-403f-8ba5-94693d9860e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "02fa38ee-916e-41f4-840e-51283fecfe48"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3d6def48-93f7-4230-9988-4b0b1655ace5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f2dba349-d80d-41a6-ab05-5baab3b934e9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1739f662-56bc-4b89-be54-e2b977178622",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2af47dc9-ce6e-4063-b354-68ddd60f7eec"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1c05eeb-4c54-46cc-bc6e-473db442aef0",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "58235fd0-18ae-4103-bb38-98aa617faea3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2c1985b4-fd75-41ca-818e-57d96342f205",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "53a6a8d7-43cd-42f4-99fa-d31449129ed4"
            }
          }
        ]
      },
      {
        "id": "7de5b908-d51d-45fb-8f5d-a25f550a8586",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c306e700-44ac-4c98-a442-f2f03b58a530",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ef34b5f4-c949-44b9-abbb-86b144902f54",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "20c3f67f-3579-4e27-8672-c3f84deacb69",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7448cf3-ba2b-436c-a3f7-9be7e75a5084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0062fc9f-a36b-4bda-b9fd-d851b343aa1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1cd2801-1020-44e3-854b-01ca5af8c4e3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b22564-280c-4cce-be94-b84a562f2e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60c29e2f-5a4a-4f41-821f-fe7835b8022e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983fea5a-70fd-4141-a76f-848281094572",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd12231-785d-47c2-970e-f5a87d00abbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14bffd0b-08f2-4ab5-a4da-5a57cae84214"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "efd11a1e-09a6-473c-a548-c81d86a403c3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ffcfbfe7-2605-4b78-8672-15bf85299c1a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e1230b-2745-413b-ae54-85a6b5e0a43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d6ec1e4-790b-45e9-addb-c9cd422c72c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ac2672-251b-4895-ba33-e7607ee78055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5989561d-c678-4925-8fcb-0c010aeb7d15"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "72d2bb2e-468a-4817-971f-d0e670f2747e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a7cd350d-f540-4fcf-bd0d-11239fd37381",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91199b64-9525-4ca1-970a-1b3945fce6b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "61650412-cb13-49c8-9498-734ebad4be00"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e52bbdd1-d067-4494-bc75-04cb63a2c3ec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2f37bc28-7e09-43e0-8bb3-fc4de428aedc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "320f8d91-609e-4695-adb2-c4065cd9a602",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5158be0e-2de0-4b22-811f-124dbf10588c"
            }
          }
        ]
      },
      {
        "id": "3ed83649-e9e2-46e1-88bb-36d4aa0b2c42",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5560ce16-d6d4-45f6-bd7d-5b9cb8c837c3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "52008c79-3b78-4994-a15f-3f579af2f35d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "954ebf85-a691-4547-bacc-e5aad5b66734",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7b830f-e44c-462c-8086-2d1e5a57a3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8de0bb9-9a72-40be-b52c-8f1dea8ea3d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe43b60d-0576-4e33-a6db-861fa876f17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebdccc6c-6e01-4ae5-a43b-67ff66734c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1cbd69-0f57-41b7-94bb-3e6533a7a4b0",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e67b1f2-2a18-4ca1-b43f-a1240b75e663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54900389-c16e-439c-a5ed-0a80a271cf9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63119bd6-9e7c-46f6-bb84-9a99556070da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cffda974-3784-4a6a-a289-0902b79f6f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5463ce-701b-41ae-9cc2-baa3cd5ad319",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c0f59b-583a-4253-995d-d544e6f9ceed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f16dc7b-14c6-49b3-bd00-e8db738ff5dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c25c15-fa9d-48f9-8828-cd7dca9fb235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01b798af-4c59-4d19-baa5-2de6be17cc2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818b88ce-8d15-488c-903b-c6ed4d3acbb7",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5812492f-8476-46f7-9be4-2791a112f9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2e25e6a-4032-4cd3-b6ce-930366f013d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a38c00-c699-411f-81ae-855c17e151ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fed5c322-02d4-48e8-8fe7-fb14bc82d309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265dd2b1-c47b-4db5-8a5d-aab9531e685a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b53c6c-9fcc-475c-b02e-663365b266b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7dd53b4-2e7c-4cfc-befa-4ebc10bfc6d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065ff6c2-aa38-41e1-b4a7-d59f68b0d538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6cbace82-4551-4a8f-9edd-3b2ef086a37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56062d4d-6402-4f17-b695-3a0e214a9c14",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99872aa4-7401-4eb2-9ad6-db411f7ddac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c8d85ba-3c2f-4cfc-bd7e-525a730f6087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca933397-ddb1-43ac-b947-e914c3c1a793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "972bb365-796e-4b15-82e7-78803cc2c4a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0307b8a-0aa5-431b-9308-9040a633591d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc5e22f-fc5a-4ed2-9189-1de5997e98bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d37cd86-4d2b-4dc1-89ef-3103e1cb71ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbf8756-966f-489b-9812-4da9ee76b117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bc84df3-bdc9-481e-a896-df5d7c4de630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e8621a-013b-4647-87eb-89304c0c4266",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc69049-abda-48f1-aa3c-ac803bb490dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e177c57-5209-443d-9f39-a76144c4df73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee781d4-98b1-4494-a906-0dc714576893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a37fd0e-e606-492b-a3fd-b8bea31f36f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3de835c-7530-4442-92ee-5a4ce337c5d5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e815e343-73cb-455d-b130-54aed386f2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe70edd-ec7b-4ab9-a3ec-83ece9242d0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc315282-652c-426f-b659-5939fa9c6f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "189b8777-3469-4c52-9464-7ff4460c4b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9441f9b4-9f54-4f97-93a7-d30541e21453",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a663b6-5676-49a8-a6b1-0cd66da57dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e317852a-f960-444a-9acc-ba18c982d3c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23387e16-f67b-4f9d-8ee6-1e3b8cc5a636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "042220ea-dc51-4901-83e4-bd4d261f1126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f910c5-a88b-444e-8dbd-46b8b794bc04",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34637bd7-d146-4713-a943-6d811f3c54a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ade751a8-f916-4007-bace-a2a8e79e20a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d4a229-1f1d-4b65-bbd0-8cdee0f4c48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b0f4d6d-8a20-4edc-b885-65de22e933e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3e69fd-7359-4e6c-bf74-0a1ff590f68d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f0c7a8-4186-4547-bf1f-fa1b469f7b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "532ec777-7e60-4ab4-8862-26d09f1ec388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e29df9-b728-463d-b857-e438a02230b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6675bbe1-4e9f-49c8-b4b8-afc3a4532a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a911bdf-df87-42ab-91c5-11dbfe7da97b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47333364-1106-4672-b573-de0949ca6e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5dd9c0c-2b92-4e77-8ad1-337fbf4234b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d38c19-3cfa-4237-8d01-2d5512327008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e36e685e-45ec-4dc8-98e9-cef4bcc7f9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c52c2d5-5cc6-4e70-bffc-23b0a688b085",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6262c9d1-21a3-42e1-b6bc-3b0e1c226eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "749d5646-f58d-4ebe-9218-c42e9fda7e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6bf5a8e-f4db-4dff-8109-52b5ba953794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "863d63a3-93a2-44fe-8717-aa119ec803a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9b4f22-bff7-4977-b026-fa13ed4c91d7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87566c63-38c9-40c2-8bdd-8b1933c443ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30245256-12f3-4c0b-906b-e9c54a24c0ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd644ee-acad-4b06-be55-9dfca6da4b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96846715-c7e8-4fdf-9c39-e4eac3e70d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76823dbd-b4c2-492e-a256-a8d9514f79cd",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5921614a-3445-48fd-9774-511bf4adeeaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb880da2-2fb7-494d-9b19-87020836d23f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c0e111-d97f-4e9e-8935-845e6c2c5fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48785771-93da-4de3-a2bd-8dacd6450fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e0587d-d0c4-4550-b6cb-7b8a194feed4",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38aa69f4-7d06-4fa9-8686-28815c4b119b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66cc1e1d-66b7-4043-be3f-1d736f4bec1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb607e3a-08fb-459c-85a4-6db4e45035f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12151977-1c62-4034-bd1d-c7ff9b7f64b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72cc21b1-bd60-47f7-aeac-232f1b999d62",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "605cd51e-c7fe-4a63-b0ba-5350386558a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec5e1557-e7df-4d13-863f-672ed8e1bebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56464d84-4502-4e0c-9227-82a8cea729a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e21956a0-0fdd-4884-905e-2d7f2107ddb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f16f93b-f258-4bdc-afdf-0b15911dbbdc",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0f277a-cc6d-4b3e-ba0a-e063f1c8a81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ebac199-0f4c-4756-87ef-b2bd35fec4b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc8cf8f-3e7c-45a1-8cff-9152905b9196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc03b5c0-7547-4fb5-80ae-0a6a6eba07e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c91db6b-6188-4eb1-a808-c4934efa86f8",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342df381-69fa-4a1e-be1e-68a47c06799d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ca608b-5275-4d6a-81da-e08569b84020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4065188e-226f-401e-aed0-c07018566db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d904e036-fe12-48e2-87b6-2e0896196dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94fc3668-ec0e-4406-a2ad-0c68c1fe90a0",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a831433e-fd05-452c-b80b-4b4ef70920bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c03c751d-ff11-4f49-b793-f87d6e39536c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f564993d-2267-430d-88f9-439cc0013a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "797b469a-3073-45c0-94bf-275acc3461c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc48d79-862f-42fa-9fda-08b8a1a81e2f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80ffca5-b655-4041-9315-61c2c19eb021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f8fdbcb-0e64-4102-85da-786829d5797d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452aa725-e585-4ed3-a246-be142be5b5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "11869c65-87cc-4fee-94b1-27a8f90c9ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3bb0ed-c3f0-4f39-93cf-223af8547457",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3c7a09-42df-45a2-b511-6e022f430b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29e28bcd-0bf1-472b-940e-ff1d3f6077c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e99bc1a-3cb2-48c8-b107-bab0812dbc8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "18bb1810-7bcf-4841-afba-da98353ef2db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a121dbd7-c935-4d1e-bfcf-e011bd9b4f13",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2884d907-13df-4ade-b4c0-11b92b02ffe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ce7c6e-a597-484b-a3d9-2e2afdf2b833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9fb02e-a130-4167-914c-6a53e889322e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "55a456fd-1d25-4376-8b7c-89b6d3bbe80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb3dc80-3fee-4430-8bfe-47324fdffd79",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f15522-8476-4cdf-8bf8-1db210cdd179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac8debfc-9f23-463e-84ac-d6c8de5eb7a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9aee9b-c9ff-494a-9f91-c5b38885ecc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dca2c09f-6e1e-4e74-b878-fcdc3f0a553a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a570d448-4220-4534-ad87-318257c63436",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70465661-59cb-491a-9533-b384e53ceb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "681af62a-5e02-4300-a375-3a677714dd65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06dd649-cff3-4434-b2e0-7782cfde4732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe58c1be-eaa5-4c68-b00d-235cd8086400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db81cde7-f03c-45d5-8e57-d8614c2e3a6c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6690320d-a656-4364-ae2b-91e74d57dcc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87aca7e0-ad09-4aeb-ab3a-47197905e2bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd5d8c2-9290-462f-b1db-47f3fa6267da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "532c6e8a-fb7a-4058-92a6-8a41415e4706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9045b187-f4fa-4611-a5ce-77f11e077026",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95623dd-685a-4d83-800a-981e4ce2bf0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc8dc87d-598e-4f84-b94f-c8c26e669645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb321ba-567c-4b05-9c06-6442257f5dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea07d711-6179-4b85-b193-47cd5d449b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f53fc1-3b9e-4d0b-848d-efbeddf1053c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb0259a-3f92-43bd-a868-9a0e69dcb8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "014711e7-dedb-49ed-aab9-c14baa99f3c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5028329-e9a3-4939-a856-9eb5b5b1fa84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c58f64ba-299e-480e-950c-651b2aabf3b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7146a6-00a7-4398-a0ad-20b91b1a324c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5c17cc-965d-4884-9835-b730f919eb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f60af160-5b53-4c39-93c9-1cc3aa7dbc0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e2df3c-3799-4e6b-9ad1-acfcb561e8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "fec078bf-81d4-4c25-a78f-44069dc20395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ca1d9b-1ef8-45db-a928-fd72b7633e98",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6208d508-8889-42ac-b176-0c1b79998bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fc43a0f-cb2b-4bce-bfd3-af42fe107d75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ee3e31-e5f4-4d0c-9ba9-bcda38e471d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "80248687-b87f-43e3-8fef-2098cb6c3e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2cc42cb-7eef-4240-bb10-af3f64dbf8a6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5bf0ded-203d-491f-8c84-52e9f22269d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68afd5ff-3ba2-45c6-9227-487958e25bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa913500-5e8d-4be8-9a83-894c1b423082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70b173a6-5b79-4f57-85de-ab0ab7f377d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef1ca68-b913-4f68-98c2-d76875c42a0f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac3f9fd-f95d-47b1-aff5-82b2e96ef5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7090b81f-aef9-479a-812b-e052ab8466a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd28c68-9b3a-4998-92d7-89faa08de447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0c708a0-ab80-41ff-9b3f-0a32ec00b0ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7384eb-fcb9-45aa-bb48-80030f042708",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb0f835-687b-47af-b0c5-11c2cf84920e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "972e226d-ee73-4de2-97a6-d56460e191da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb0e1ff-b70c-4105-ae90-72e25b368773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1021e694-8e7f-4e29-8bbe-f8bfbbbd508e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912694f7-1585-433e-8fda-749894da773b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45861b40-34e1-4b1a-baee-3d71ad68dc64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30e2bb01-42f0-4e44-ad4c-65d834e00939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa67313-c98e-46a7-b92f-8c4d505eb7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "db64ee3c-f083-4b2c-8c35-8e0c090a3d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382c36a1-5f97-48b1-b87f-5955ff4ec8df",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22f6ab0-bcbb-439d-90e9-bfc4c5e1be6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36f702fb-8c25-4c64-b280-17a2a2cd889f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59da4e4b-4b75-40da-b51b-7dcade3b1339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "16c22c57-47ab-450a-8446-4de082860ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbee141-44ba-4589-b0b6-b994ed6bd6af",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "356a8677-614c-4ff8-8c6a-2182503a9871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3edbe254-391a-415f-a6fd-888c63ca7954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30e671c-3cc1-48e7-a78b-87503376e962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1bb40a7-dfa9-4722-bc9c-b22afb317822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8067a6c4-1bb0-4dd2-9f03-66230707997e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b4832a-cea3-4aa5-9069-cdeaf3d0a736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa34666-39e9-4e90-8308-80593b161d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89bfde6e-fd88-464b-ba15-22a854e3f298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "33457f30-a378-4a66-97b7-13232665830c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbefad11-7b6e-44af-abc5-70fd04d11d4b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa401579-2447-4fd2-af4d-5a1b40281df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aedebfaf-52cd-4950-a246-9bde85da7e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad359af7-757f-4366-a3c3-9f99b6276d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "82a6fae3-08ed-4f32-a441-2145e140136f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2ff942-1c8c-4e5e-8043-5785498405ae",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c860d87a-55fc-4384-a537-61854429fb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc0c90b6-e74a-4415-964d-87484ee8b2ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99b7777-4519-48cf-9cb8-43ad603c0388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "36ff01ea-0e67-46a2-ba80-58394df85667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa1f58d-20de-40da-a127-ad08f96d891f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9f482a-cd77-40be-9571-9d8b3c7aaee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f81c7585-3f58-4cb3-9f17-a3c5e4f390ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc75cc52-636a-4453-9eeb-c54744079fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3fb4f33-1d07-451b-93d5-c4d292b35715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc93f1b-b9d3-4e57-9580-6afa8338870a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b15d94-1ff7-43b2-9d72-7e3f0247f983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5bb792-a775-4cd2-a323-e6f9dfce89fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d797999-b6bf-4c7e-a951-1b312429c2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9a744feb-ef1f-4873-b5a6-cc1d1eec186f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94765965-e710-48e4-84a6-e4acc26b944a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64be8c03-528b-47b0-bd08-92e1971edfdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96f530da-f84f-423a-b09b-9509798766bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc2a23f-170a-4bf7-921e-8f33907794f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "89e6f064-a551-4559-a9b8-5f7fa9cfad12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4268f8-b3bf-4c8f-bebc-d16ecf980216",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa4457f-96bd-443c-a486-f2ec2efebfcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43bf2f17-749b-45e4-b5dc-4581d713346c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a99cedd-7244-4559-b894-d88fbe1b23cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "31c608a7-6ec0-4faa-9cc4-bb85961c3e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3934197c-15ad-40b1-a12b-52d81fc79819",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "827fdeb6-f492-4d66-8ccb-422e2bf8170c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d967a2-b730-4f6c-962c-e9b25d221ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce19abe-deb3-42e0-8692-14431d1e7bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ea6116a-a6ee-4f1f-8858-0fc9b5ee1ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd669b5a-d629-4c8f-aba7-0b76a41e7072",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0317c86-f83b-4362-bc54-8fd230d4bf07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e095606f-50bb-464f-899a-6da59ba398eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0133199e-d021-444a-a844-fc08eb5d66fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eec34cc8-34f3-4556-879b-97ae245369ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68050b1-ccbb-4cf2-b4a1-39fb5f54ec04",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3379a9-a888-4ac0-a0bc-639d1497c5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3408e7cb-0559-4e8e-8fff-9d46e61ebbd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29ea4f7-d065-4770-b45c-1ada8b638f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27fddfcb-9e50-4e38-8f9e-ef3a5b8dd0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f9772d-f34c-43df-89ba-b0a2b3542406",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db674dfb-9a60-4fbd-be16-c8406970f5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e99bea3a-a511-4de9-aef5-d0c4b82bfe28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b434d94f-5fd2-447a-8753-994d83c13557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "63893cf0-a457-4874-9777-0cc12c2288f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab6c21f-dc37-48ae-a945-f0a2658b94f3",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f73bd1b-209d-4f01-8562-6b78c7adc81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da157c9-d8d4-473d-8e9b-7c5693d83a06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a80661-3eb5-4c25-ab0a-83e68c072861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0edadcb5-0bfe-4b5a-9597-41c3f293c68a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba1c917-10e6-49a4-9947-3a8832d199be",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "401d6949-eb32-49ca-9733-18f0f9b65fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc65612-5d6f-4c00-a1aa-36d7be3ec55d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f188f1-5dcc-4b22-a1b0-4c93d1b5b4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "17c494d7-28cf-4e18-9faf-4fb0dd844e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f3a1c6-6456-40ac-9ccf-a67b6d611cdd",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "545b716c-9e8a-4d9c-a7f8-390648e3757f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5771dd5c-e599-4ad9-97c1-822294fba71f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917fe6d5-3c32-4619-9c5f-b683249bfec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e79565e2-a39b-445b-a88f-aa40471d16c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993260b5-871d-4429-9bf9-c366d08e0bc1",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70118965-bfc2-45fb-9940-b6e19d845e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df788471-25bc-45de-af7d-65cc6eae4197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf8dbe1-6ad3-4402-833d-1233aac4cd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfdcc50b-81aa-47b0-ad47-7482cdda22d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670c4bc0-4317-4b2a-b9eb-31e3c195898b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c47adc-b865-4c97-b8cc-1ebfc599c2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2575f0bc-49c8-4d54-9ad1-85c2f6d31d2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f13a07a-e56e-405c-b07b-b296b3cc0227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b73fb363-8dac-4179-873b-d66ffc1aca0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8e7643-85c9-4ad2-ad8d-214440fcb956",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e681866e-946d-463d-8147-613a609509a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1b5c9b8-4ac7-47aa-be89-c592ac1b1a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f35aea6-623d-421c-84f1-1cd455500a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6854c4ca-ffda-4f5e-be22-3fa929e90a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c21a4c-e6cf-4eb6-99bb-d83ec925a52c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa82337b-017a-486b-9245-49e16549c4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3934f9ba-b9a3-47c6-a9bf-39599db6f9b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45dd86ab-a8ce-4b47-a5e7-35ccd9375c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8aaa7fb0-eece-4d31-b5ad-f0b95a4e2dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3824c37-b2af-4e71-8be3-5a31973bed76",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b6e874-5b1f-4d96-858a-b8c896367363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a1f6458-bcf5-43d2-9fd8-caae1cf2d67f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae01d59-cb77-440e-bc46-e3759752086c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "592f8e30-22cb-4572-9f09-b7d3ec79ce17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e89456-887e-4937-b243-26a602ac00a1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f327df31-e2db-41c3-b047-03cea7cb585b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f7f582f-47e3-4ca4-9fcb-ecbdc3a484f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27380b5-28c6-4bd8-9d5d-70723ea8629e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "10960228-f72e-47b6-8896-86768142a3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7422aaf-6b51-47f2-8574-bd6abec1efc8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab18166-c25a-4faa-b2c7-ea4b8c924a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53325bdd-6db1-498c-9768-8996c7bfe005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9ca5d0-93e7-4d0b-a8e8-148392f77264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2102f7f6-e7d1-4a30-8f05-8bb65c8a48a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268937d8-1bc6-4d5c-869a-1ab2830a89a4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25ccea3-f949-4435-8506-f8c35e7b14ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f556bee-066d-4e5e-afc1-aca0bbc9f21d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e167e0b9-2727-4534-967a-c0619d982023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab6ecb8d-36eb-4525-996f-ce7e091d4eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1537bfb7-146b-4b76-b090-83e897e4783e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5763e355-c0cc-4ae1-9279-981597737093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbca02a9-f56b-4841-bbab-9365ef3010ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e96da4-027d-41aa-ab7e-10cc625db878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "58eac773-b1f5-4453-b944-cfe4e1ffc4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba155902-55f6-433a-87c0-4be7abd14325",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee959df-eb70-411c-b935-18da615612a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf7ebf5-0352-4c84-965c-7ba6f68c8323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fcdc438-2b6d-4466-8db4-cbcb692af42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "689f72b4-b7ac-48e5-bb04-d729d1347f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f5779c-f240-4342-86b9-c9f37a9c936e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de86194d-1a94-4f67-b40a-0026063fc91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8a5501c-33cc-4e88-aeea-52f6591486c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0672909e-15b3-4bf4-922d-8dacd4081939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "10483d69-dc47-41b4-a450-4defab3a1ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a60dfec-1180-42da-8d6d-58755d2201f2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71097bd6-cf9d-465f-b16e-247d1671301f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60ab2e57-3c83-4776-b7a7-314ccbad482b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6192543-a277-4970-88c6-5f4cc7ea7c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "71d11b28-0681-40cc-b3c8-108d120c3502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e1abcd-8897-46ee-b2e5-83631630ac8a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88b6431-0bca-47c7-b958-cae5c9720028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcb76a15-53a5-476f-b0ab-e7d2300d1c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818cb408-2b60-4e23-a24e-389f7c1d1fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40642046-9ecd-40b7-8ff5-fb10d557c694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac65989c-82b8-4909-8ce2-ff5b7b91ce90",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3223b6c8-9ae5-4593-a8b8-f9e582aed0bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3546f8-208d-495a-b61e-83a2dc8d628c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673982c9-9d1c-4784-9ac9-535ec4999788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d547bdd-394a-4e36-a01e-a13f641cdd12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78bc74b-57f7-4266-afd5-b2364adc86ca",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a93ae1-f679-460e-b9db-f5c34a185257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32387e76-1529-4136-8121-5dff3f650682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdf1b06-bfa5-4ae3-884b-532ae7fa260a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b80f7d9-f6ee-488f-a6bd-a7b139e175e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8d6032-8e75-4734-9d01-6230e35931b3",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d768d688-be22-4750-af48-a12410a8e664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1298aa4e-a5e7-47e7-ab40-c945823b262a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f307a2-2adc-4357-895c-475bb521debb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "af4218d6-ab72-4b44-8f15-1b49ad0bf49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39fd54d-2c76-4345-af76-f3f105c113b4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0672dc81-ca09-4585-aee9-76787b6d8ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a0ac127-ae54-409a-b350-b88567f479d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ea3839-5bc5-4310-ba78-246713bf689e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2aefdafd-ec7b-4537-85f1-81783bb83820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f143fea4-073f-4304-919b-69211e46ea36",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7898b9-5e18-4350-8630-add27d6076b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d985fe5-7fce-41e1-9980-69c8815292bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f916d90-aede-4ebd-96d1-65dba3460df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "27f2c0be-9de4-47ff-83f1-24ce0d7cfab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b5e8b5-c381-4d84-b272-4abbc24b4769",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "645911f0-0951-4692-9f62-0fdad7d2050c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df696649-58e0-4033-9867-71e5071a117c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f11579-40c2-4541-9798-3d785e0ecdf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a05f8aa-7d79-4649-bcc6-b8d05e0271a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb461d11-4b35-4a94-a78b-a8c7b0f0df19",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "367e12ae-28d1-4b10-9d4f-40e64e7cc221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "926e5af6-f720-49e1-a16b-cdcbd5ff6226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8edc819-c302-4b1b-b388-be62c63c343a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "35e0f192-8ea2-4f09-8b9f-77ed152c1f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc34196e-2c30-4e90-803f-4a28963ced1f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "500193ff-3b10-4e65-a81a-8e9a2a3d3c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb4ded7f-063a-44db-9808-172f8b563d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2c25c1-6352-4616-a409-76266912bd24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dd8a402-32ad-4ded-8975-90dd0802d4cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6cf32d-aa1a-4fed-bf69-090fffacc81b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16175b84-2720-4635-bdda-091a884f913c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb1b43d-0f8a-4176-945c-c15ddfaefd4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd6c5ce-1d03-4c34-ba81-0aed195533dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "552e8263-09cc-436c-bf68-6fd6b80fa672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5c3a40-e565-44ff-856c-59977123522d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c0c15f-eb44-4a36-8e75-d6ff7e561483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4a0295-8847-4211-8931-8d6353f8998b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d15b85-7f0b-4c8e-87be-b43952f2cc23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd6730d-b15e-4623-bb70-22011dbfdfe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6541bc7a-b530-419d-9712-79707e04551e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb629bc-2d1c-4142-ba4e-066002e2cc0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a8c0841-83ae-4f07-95c4-3e4bfb35022f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6832a7-db60-4708-bcbd-db7964dc4b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a02f36c-9acd-4732-bde4-299c6d148ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d2f52b-ef96-4209-8426-759a0c7286a9",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee37973c-887e-44e6-aaeb-c6339d36eaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e7b3c82-67ea-4bcc-84b2-f02c079293e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7febb6e5-a1b1-4297-933a-66f567d2505c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10b456eb-b458-45e6-9bc1-3cc0612b5be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f556d2-d91c-44de-93ef-a5ed2e2b7aeb",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1afe00c-c1bf-4cc7-b9d6-5f6aa8a91e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0819190-ed48-46aa-a971-4b86aa063081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133d26a6-1fc7-4233-ac1b-6e45b23c8a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3aecc4d-5392-48d9-97f0-cc455c95cdb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2932c60-d6fd-4deb-9caa-1afca3daa091",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63496780-3605-4ffe-8922-50cd1eed8c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "315ec239-08b9-43ff-a569-9a29ec454816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd54d57-1dfa-44ce-96ac-d46233bc377e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef6a8cf1-f132-47de-bd0c-72df661c14c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f39aad-b18d-4b0d-8ad1-4b5c9ddfd689",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b38e0a-5ec1-4706-afb4-6e86c50fedb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e45f47a-8a3a-4e93-8683-e36b2aca7883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574196de-ec07-4305-a12d-59c9e5ec2b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a47fc274-e521-4bc8-82f5-f83b64fed42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee272d7-ddeb-478a-88ca-ea6eafb2c200",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16b9be8-a5a6-4863-b65f-9b773038f397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8187a8e9-2b6c-4620-b2d0-70e564da30b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d795478f-3b26-435f-82c4-481e4a852628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fae5eeda-852a-4a64-bee6-fc6a451ac9e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f21efa3-1317-4ae5-ac16-f9085fb49c1a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a10533f-7871-413b-9947-1452685088a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a76e876-ce8c-42ce-9b01-5c409ffbb1f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0a7ae4-4d90-4c69-b2d8-45061ae58d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b15e6f33-a614-41dc-82c0-d9a5382cabb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75414340-d4f9-40a1-ba6a-1740021dd6f8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a96490-c271-456f-838c-94ad3f70715b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcc4540b-76a7-41f9-9e1a-8b06434631c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4088533b-e696-441b-bc40-438ef205bc6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3da74a3b-0f35-40e2-a926-d7260aec3828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26401a83-3bd1-4d9a-80f3-43c6db6f212f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2db781-40b2-45d8-8d7e-16dfe0a08d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eaf58ac-5d9f-4432-a653-5ae7781aeac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a46743b-f2e1-473e-b682-d6b86649ce15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0689ea51-408f-4c8f-8cec-093f4a101903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0286f69e-64c6-4ee5-8ae3-bbe19998e90d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ba852d-fc25-448e-be68-babcb6d07b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ae1482-f5c4-40a0-966d-bcb542713997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56111a9-da9f-4686-a6b4-7b4b2eea0db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "709f2a37-3892-4e2a-abf1-2b52d9b7663d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17244062-a453-411f-9daa-04726f6d647b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff4796b-3114-4120-a4bb-d0f1106262e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d056f00-0bec-4979-a006-d7c1ef385e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4297072-0614-4954-882f-5ae55abea2a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec300f28-daf2-42fe-a0b8-4eebec227413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a048bd7-ba9b-4f61-8dfb-5931f5c1c559",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edb1ff2-87f2-4c0b-85c2-7a6783cb51c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4646b8c-3422-4d2e-9044-dd316c6070d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e9a0db-d849-425d-af23-e6a07bd5e289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "72e61271-f4cd-4bf2-b8e7-a2460332362c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d25613-9ac6-405c-a56a-1eac75e2c260",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eae2970-129c-4c20-a6ff-ea02010bcf98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "825d160d-9e9a-4f4c-9c9f-d6a2d1b68191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aaa4e5f-3bde-4899-97b4-9d05596475e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "923563ac-cd6c-428f-8076-13c68046c768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86bd8837-5e45-4362-aad4-d09370175ff7",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "502540a5-635e-496e-8896-72af7165bfca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5831a5e9-f449-450d-8c6f-3c387a9dbccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aaa2a17-2655-439e-8795-586cd5482f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca0f4fba-f9d1-4dbb-8516-7ddefcb4fb7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ab1fc9-1801-4b01-b741-83bee3311eae",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b528c979-f038-4acc-8c78-5463ab621b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8806dc1-ccac-431d-a91d-f1b91f57ea02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278a9218-8184-4d94-9ac2-1f1d4a9f22fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a57892aa-a37a-429f-a0e1-97f6d2599dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee8b63e-136c-4742-9099-2571273c1097",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95cd679f-c86f-4c31-aea6-b05e8f2507e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cce73d44-a7b1-4fb0-bc8f-f27ef0cd9781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67151074-4975-48dd-812f-e0d4cbab2b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "aae9f543-d346-46e3-8f8b-1b1b127537db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2221263-5568-4072-8a58-b96a79c2c556",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "341be059-2c65-4a34-8c3f-b1e636d39ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1389635b-e416-406c-a12d-51073910e660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c45650-f54a-4c76-865e-88afa5e69ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "475933a1-7edd-48df-aff3-c509680d094c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e31e74f-87ce-47c8-918c-b6da174851ab",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6406ec-e0ae-46ed-9a65-dbcf9de34e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e8e637b1-0f79-466c-b558-858ee746f427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef6ae38-9b6f-48fc-88fb-23ec260b0834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d74acc9-7e5f-4be8-bdd2-dadcc439d11a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a6a9715b-a77f-40ed-8d01-37ed3488062e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b0cbe22c-aee9-4fc6-9621-44fc42aaafbe",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ec2007-fb8f-4128-8a2a-f48c9e482fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d666ab7-2758-425b-b634-9b7c655b4c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb66bf6-9530-4a05-b76a-94457ef3b077",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac2a2fc8-dac9-45eb-bb61-6fc03bc6ce44"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77a8a4f0-4c3f-4098-9373-f3f422744f8a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86a1b1e5-61c0-46a8-8829-2d3c685fcf2b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3de23d0c-daa1-4425-bc05-b42f75e65633",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01253afa-0a41-4376-8a99-0d99597b30f9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c4ce4904-3b85-415c-afe5-cabb337e2b08",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "19893a5d-d36b-4eb4-9f45-7aaa0f8ec57a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c5e5b5dd-1d3c-4c4e-97a7-6a035fe46c78",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a9cfde89-d13a-4776-beb5-7c1c1ff0dd26"
                }
              }
            ]
          },
          {
            "id": "abaa9881-9aac-4a13-aef2-ff0be89b5af5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4db228df-0ab4-4843-90d5-662cac41cde9",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "65a3fb48-9cb6-461f-a4cd-f9f8a72c9347",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f915b797-63ec-453d-8bb2-ee6e3a4ba811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "68f69b8b-a874-4dc1-8617-3f6d34758a31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a599bb9b-2766-4b27-82da-f23d60ca87e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53c48777-47bd-426f-bf99-a97540fa0f50"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "04d9ed23-62d1-4cf6-930d-0e241a10d171",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "586aa889-00d7-482f-8797-5c5178183df9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3c21df93-6ffb-482d-9027-ceb930e38fde"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "920f2ed9-1b0b-4157-b244-dbf1267f7eeb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "943b0f9c-03da-4e48-8b2b-5fe6e3fb49ed"
                    }
                  }
                ]
              },
              {
                "id": "b85349e5-6b30-448d-9a3d-790582685cf0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e28106a5-a417-419f-ad5d-320c88bd80b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9a80d5b9-0e9f-4092-ab12-57b8cb5e08e3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b08158d-791a-4db0-b96a-35ef1cede78c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "135ed0b7-c31f-4d9b-9926-0b3110108135"
                    }
                  }
                ]
              },
              {
                "id": "2e748b52-5afe-4f65-a9db-39e069d85c37",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c312b99-3a84-4c6e-a3e8-b4f845ce4e56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c88e50e4-73a8-49e0-93c1-9ac6ea074d18"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0f822a5-2590-40f5-9d66-ac0d09c52cc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "87a20217-a011-45a4-b89e-5089aa026d67"
                    }
                  }
                ]
              },
              {
                "id": "2d61cbd0-22e6-49d8-bcdf-5653760c03a3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92d015c4-84a1-46f0-8aad-ecfae868c63a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "066ae23a-e67b-4ef5-85e2-b860f1b9b658"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "877d85ef-6409-40c8-9913-785dbd72af4e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "05ded95b-5262-4488-a6b0-c3d9592fe6fd"
                    }
                  }
                ]
              },
              {
                "id": "c8493094-769e-4cf9-8f62-28e231467731",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f3b9dbf-5883-4db9-9b0b-0eb49d046b28",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2c4813bb-19f6-4d19-afec-a20c1212e6cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b51a40c6-9e8d-427c-9595-61598321cb3b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d9c1dfa7-2280-4e79-b374-db6eca9f0c80"
                    }
                  }
                ]
              },
              {
                "id": "14321f56-8d46-4f4d-afe1-8ba74e1ec290",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d54455d6-9ee1-48eb-9d78-3aed5b7a0fc8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6431ed09-57a7-4325-88ba-d01a10154644"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08730579-26ef-4520-bffd-927c2d168d0f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "85878582-6715-47f6-b610-ad7e2cb14e3c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cfab87bc-ace3-4a01-bfaf-415896bfc6e1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a5cca764-837a-4eef-8aac-edac86549852"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "35d8d2c0-4228-44d1-b5d7-45a6a9918afe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4f808bb3-d7c6-4fda-9b91-48b3bec58342"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d7519905-daa9-4295-90fa-8897a0419157",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9e8a25a2-02d0-46cf-b989-5c8a0878d0bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ddeae285-938b-42f1-a003-fb6fdc846fd0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "60992ec8-a112-4853-90d0-8fe3b2b182c6"
            }
          }
        ]
      },
      {
        "id": "f38cdb4e-dbe8-4311-be17-8dcbb7a0c893",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a60ab573-8a50-49ee-ae1a-5542d7ba41b0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a5c2e41-5874-4264-b95d-e6f2d95b0193",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3f34b0e8-df01-45af-af92-115bbc16b82e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6491c7-1c5b-428c-85f1-2d392d40ceeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3938ea5f-ec20-4595-a135-3d2bdee2fdd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dca3439-695b-4897-8beb-c952439339ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f8b3e8-8129-473f-bf53-ecefb047b664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc354ed2-a576-4099-9919-734e031e150b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af7c2485-e099-490c-992f-8efc08c72ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f11e2eee-04b9-44a7-a93c-6ce5bd01ae06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a190e391-d245-4f89-b24a-41adac2db96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e022276c-735a-40b6-95c2-d48611abcb45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e11597-5a51-4a32-8de0-d01bc4c9ed22",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "784487d6-d45b-4c54-a480-d7b5c8ed9c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbc5395c-9b65-4327-9284-b3e58e202951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37846de9-b109-4778-a022-e9131042babc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a457103-a8b4-4827-a939-5fabd0d0112b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1142d048-c155-44b4-8692-c7945b8f61d1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6aa946-5bf1-4bdc-ba58-8a678d657dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5242626c-63e9-43b6-bab2-893df00d69d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13206bc4-2232-4909-9707-fd4e498486e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76d74cae-c817-44a3-9b96-048f47b4a95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f032916-af73-4c96-8345-90748b04d248",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2639e3-4429-4e7d-9e02-df14153036bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dc5c18b-e759-4c9f-9620-3a6e762bc5fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b71d7cb-a4e9-4497-b1ac-f13242b35f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "63f1efd6-d707-4d03-a203-79eec4241e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b78d53f-aa60-439b-8a35-c8404bb07985",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed38024d-dcc2-4554-a619-a047af0805b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26de8336-0b15-460d-834c-a8cf278909e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126f7c71-1c7a-4910-93f2-e56ae83749e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd9c29e0-ebc6-4545-b28b-61396825f0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78bb1a7e-322e-4749-92c3-f8875d008a9f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f26fce-05f9-4fa9-be74-fb13bef24dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d02cb84b-671f-482b-a885-9c09a96aca4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02cbc41-3bca-461a-b4c6-6d87d57d7607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ff4e753-d9d5-4491-bdc7-f2637f1f5746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1bb92bc-e647-4cc3-aa79-07afba8611b1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec172e4f-905a-4a01-a784-ece506a16782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85bd0604-6dbf-4378-9364-340ed2c2669e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1254ba16-3021-4c8e-93f9-cad91f456ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d3018ba-261a-406c-b9ea-ec77161deda1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081448da-caf9-408f-a973-3342f276947a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf34a91-bf83-4095-ac6a-a53444445448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c0626e1-432a-43db-a883-7a4fba73d301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0cd3a4-528d-4492-af3b-6c47da9309e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdb77f08-b0be-4581-a56a-74dbc58d60a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e346a8-2ca2-402f-b226-29a4095959ca",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2512b1c3-3152-4055-b064-95117de6cd08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75f021c8-c0df-4b74-a92c-bfa852f27f5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4daaf24b-2efd-4878-9806-9bee021b223f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4791745e-b2e4-41f6-b4e4-99dd3a7f3eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccbe67a9-b1e1-47ce-b23d-e4575acbbc8e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf03fdba-90e7-43ac-b96e-2f933938c2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "714d94d9-7998-4df6-a633-368ed74ab3e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7554f724-5c53-4e71-98eb-c66a75459a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3c67f4b3-d939-4772-af81-214ef663d059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a5c5e0-ed77-433d-a0f3-c933aad235af",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0c0b1f-6f7f-4b21-bddc-ce93eb5b44b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c2d142-005c-40d2-8430-9c3ae636f1af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b57568c-f70a-4dd9-a8e6-bddc79191fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "08e71892-388d-4f15-8d1f-b786caffd14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be75c40-fe19-4c0d-9658-8f09578e5886",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3950621-dfc1-4f3b-a279-46fdbb18fc7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "466508ff-571e-4836-b041-da495c63b93a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a78282-3f44-4af1-8229-f740986513dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8edd1a7d-49bb-475c-972f-d184ed53342f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365ac031-14e5-47b5-a27c-010b965fd6dd",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05de57f-5c91-4e73-aaf8-c13c2fc7659f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4616c8b-081c-490b-a1ef-65bfeecd046b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3548f9-f359-43b0-9c97-4a3256c28033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "595e95a9-99cf-4bd4-b52d-62ce3d4c45f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23528d05-f956-4395-b805-c3051b26a206",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3973d3-eeaa-44ab-bdd1-ab653f8d5e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef3fdfa2-1f4f-4faa-9115-aa8f709c57e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86cad7f-d246-4bf1-82c8-6a8cefa3d9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "438a8a20-4c61-47dc-be11-6792d3ab9b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "167d7941-43c6-40d3-922a-e887ce9e6999",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f055761-5347-464e-9b40-6e001d40cd8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2cb581-34e1-42d2-849c-1f91d8074de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5747cf55-4852-4476-922c-af02f3ec5eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "342e08f9-d40f-4113-9baa-567b8c4e6525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93853b99-a9f9-4234-91bc-9606f0eb153d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba330276-07ec-4635-91ea-e5c66ef1408a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20504152-de88-41d7-aa1f-9ce002829b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9a09e9-97c1-4785-a154-591ad9471b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8bf3a69-c17e-4431-9917-47687dbd61a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5422694-f0fa-495b-a480-ff643b0b11ee",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26907707-206e-41a3-90e0-63d8beed1db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a47debc-64a7-407e-b95e-e8145815a7f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c136d79c-f2c7-4c60-a313-152da3db1e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa19296b-3a0a-44ec-8b7c-35b17c392a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8308421e-7dce-4165-be15-477f0f9b4df7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764b38bc-d259-4266-9e09-ea2bfbe8f3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e2932d9-9c83-4e9b-bfa2-8c5b4daad36b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3e8f9c-411c-4299-aff0-f7cbe236005b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b82f63f-8573-4b93-8c53-118e9d739b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f3fe7f-2cd5-47f0-af48-55071e8ef6ab",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a73067-32dd-459a-9c2f-b13d001c0fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db4f61ac-b435-4044-815d-eac504719e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7403f7a9-0602-4c83-8106-94d7d51fbe11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a611827-80f4-47c6-a9f6-aa9c909814fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb43e3b-56df-49b3-93b5-b8278f9c078b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d030d84e-5b40-4930-9a78-dc9ccf9ec1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e66fece3-655f-4ecd-841e-9d9e758b2980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5befe986-6cf9-4a4f-b9b1-b9da1d4ab6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec77dbe9-42fa-4b8c-8e3e-dde548251c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e453b2-fd89-4910-aa49-affdcad39929",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb70e09f-704b-4e6f-9d59-323fdf596c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdab55f6-6bdd-4798-b651-c43662522f27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754e5dcf-1c6c-4a26-b3e3-61050e45b4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc5ce6eb-ea16-4254-9a65-5cb4e908d98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc59d271-8431-4fef-b568-ac0dc9b015f8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63fb9fd1-1ccf-4176-88d3-4fc7b2fce2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ff60747-b2ba-49fc-b9fe-04a707857e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e434cc-13aa-4e4e-a409-007bb1c97c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4374166-b28f-4db8-89ce-564de9ce4a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53b0a19-c6e5-460c-a6ad-67ee826f9a7b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a602c6b6-3997-49e2-8a2c-6d574bef05ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6e6551-b538-4ec4-9f50-6b8f2278acef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd8e763-783d-4202-b3ca-056e66867793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f3e52a0-17ae-4db0-8201-a9ac3f5778e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1666e434-671d-421d-8d63-e55a3adb296d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5437231-6021-44b4-825d-dfe88c93a760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b8874f-ccdb-4a02-80b9-441e4c5994fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d46a9b-66bc-4016-b771-ea2d09d957e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30b16ab6-6a34-4667-a771-75d3ad67b290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5aa199-a039-403f-b9d8-ae9e7fb5b66b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9007fce-041d-483c-93b2-df7cc299135d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed2b520a-836a-4efb-bfbc-421010f2c28a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f56fc80-d8b3-4bba-b333-7241cb2ade6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e20e56d-b9b8-4750-848a-0e7c6c9c6f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b42c7b8-49c8-4abc-8521-f0ec6bffb81f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc79f5d-bae9-42e9-bee5-95e4ce037600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d95f7fa-8160-4497-9048-c8ae6e6447b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25ed2ab-2d8e-41c3-8166-4aa6f798f019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce9a983d-6794-4ef0-815d-3d86866b08ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042ebe54-82b9-48b6-b01b-d679f53b895d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f60064e-91b2-49b6-ad6d-b4640289f651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19de9f48-9877-4996-bd05-12ad9f9403d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77769749-2589-494f-ad9f-a6617be0d571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74b648a4-17cd-45ec-9eed-b643ea98dd32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394c04a7-9a5d-4938-b22d-2618918d0b47",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6ec901-47e1-499f-8617-d1a1ad9fe844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35266dff-acf5-455d-9e2e-cd4fdea12598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0d0aa4-f420-4dd7-89ed-de7ef0de8e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62949a14-ffce-4028-99da-0454da670163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499cc0a7-972f-4574-b442-72a7712cf6d2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "831be286-55d9-4ff4-ae86-e2be2ea8d09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b42a9a6-0e12-4811-8a76-30dd70787ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ecb8d2e-c65b-46b9-aeab-027a7933cedf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96fefc16-e000-46fd-8217-cf4639f251ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9189073-0f6f-4f4e-938b-2cc2ba3e1d47",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4612b533-9235-4e6c-9b78-79738f2eff24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d73833e-90a3-4d33-91af-56ee564a96ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51fadb32-7e26-48b5-b0c7-c4360dc41d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de7c1fc8-9404-41f3-b82e-3f600bfaa219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9ec382-28ca-43b2-8dca-791a5e7a939b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1389b5c2-5521-4f0f-84e6-cf26ea858763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd71117-3be3-418c-890a-d0b39913ebda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77a72c2-d543-4135-a9d7-082a1786353c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc63f47d-3e31-4067-bd44-0c49c9638b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5f6859-d63f-4f37-9065-5c4381a2cdb3",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a373795-9f3b-458b-b129-fd3f9a89ff4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af9bb900-be42-4943-aa0b-fcd43dfddf28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb29dcd-f6bc-4530-94f7-022bba152a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9562c49d-e427-4766-b1d0-b3656948cf09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0c058f-cfd3-4fa2-b609-81f58064d543",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35ff038-d2b7-4511-88cd-4a9feba079f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7220fbc-5aba-494a-99d1-1ad05c500f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f02fb3-759c-4b09-91f4-ad45f49051bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d471197-790c-4bba-9fd6-a10d000ebebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61645181-42b8-4d2f-b4ff-8f154233f079",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf52e8be-13f8-4087-886e-4a8cab834236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d97a3e9-f290-4b3d-a1d8-21da27fe7804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9299e57b-14cc-4f32-929a-8dfc702ec427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1da9b4d-d4c5-458a-8b45-fe87e1113eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e16534e9-6f58-4369-9363-d092b3e6e9a4",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3000d2-d48e-490f-84f8-8b5334f89ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6ec7a80-c3a8-41b4-b172-50dac09b7ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c596bd0c-5ca4-4ae2-939e-a7f20b580e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc5ccd8-656d-430c-9538-062afca18582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7556b45a-2524-4b3e-ace7-e02ee7cc3681",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3081c1b1-152f-4d45-96e4-c104e6bf1968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48f3e05d-5025-4166-a84c-a095bf2c2968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a50d77-05b2-4a61-afe3-5654bce3683d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "115ac7d8-348c-40c0-b826-be0cc4311150"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "feb37d50-f8ac-4162-a06b-a48a7a659f62",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6a6471ec-d0ea-4536-b47c-872e01a38613",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99bf3b7b-23ba-4553-9504-b77fd2e8c3b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "391760ac-2832-4599-9d19-56d7f9982e81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90640393-4d9f-4319-9edc-4e4b28b0b186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63bed03e-0101-4880-937a-d852a1194a09"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "838c33e8-b41b-47c6-816e-bda1e820fb18",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1588b195-d7fc-43fa-b8b2-1cedee533cfb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9168f84d-98e3-4eb5-b46a-b522c835efa9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ee09dd2-74f9-432a-8626-98c6d1b00e77"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3eebf0d7-c972-4cbb-8250-4377a1b43988",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9b454c69-d36b-4d71-aa06-0c0f5619d27b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b44a583-5896-43ca-af7d-167c695306a8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "19af1d96-f830-432f-8b28-01b775ff71dc"
            }
          }
        ]
      },
      {
        "id": "7b27b91c-12ea-4595-83cf-3b0c348fe2a5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2a06789a-8d6b-4a3e-899f-193261645df9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fd5d992d-a113-40c6-9a57-5994044ab07d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2db47307-2bc4-4d7a-ba00-ce5d4f9fa2cf",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46585239-d1b5-49a0-b888-888738f5489c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c18078d-366a-45c0-a894-6f28bec292aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18bda618-90e0-47f0-a72b-3f812b640e6f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04dc15c2-b1af-40bd-9bc9-b09c1a515910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be586dcc-6159-4601-b003-eebb73065311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db52e21f-735f-4273-b586-819f7a3021e0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41a2700-85d3-4d9b-a22c-c7c9758a2b12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ff17c3-a9a7-436d-8551-365fda8145a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07363524-d959-4b0f-affa-280a189db0cb",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "190295ef-be33-4a58-be2d-519d6a617302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1216f225-4644-4177-a4bc-02708f38fb70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46784664-700e-4eed-bc62-1eddc342441e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "360a6a25-765b-4d2c-b5d5-c9905eb83bea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039d1f6e-4120-48d7-8aa2-c62aa2e663be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42abe75-ade5-4b0b-bc72-7cee35dcc982",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6daff1-c89f-49ff-8626-1503928f5dbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7461e48-1413-47c8-abb9-7f8f6a3b5c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92b27be-7183-45fe-86cb-bc8f1dd3d29e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f95ab7b-e35b-4813-9d31-e2aad935572a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4915e38a-dfea-4190-9963-f20203e8fb8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf71b3b-64bd-4ea7-9f84-985c8222787a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9865c2f1-70eb-4881-96da-9c27c0f4f1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a41a0bd-55be-41e5-a6ba-536dbf4bee43",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23235e8-687e-417c-b24b-cb6fa8971ff2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff0915fc-3cb1-40c2-8952-1dcc4b7b1698"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a116e1-aa46-49dc-897e-7d63b2ade6b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1faa04b4-61f6-4ee3-a4d5-ac4e93124597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01fa1469-9915-4e78-983f-74b0abcf92ec",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d530ed-aec9-4136-90c6-c1befcfc0f50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0a41735-3b87-46c1-a531-d2fed349dd34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c6f2b7-88fe-4f64-9945-a7084ab70cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e4ce95b-9684-449a-bea7-f505d74639bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e33cf0c-321b-426b-a3e6-8c07f757d10d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d689389d-6b85-4490-8bed-524fecf97e4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8dd246e-9f19-42f2-af18-7cd09f8d99d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4b25d7-7483-4ed4-ad05-6177cc51008c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69569e5a-d92d-40a9-87ca-a437a7504f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ae6940-1d22-467a-a582-b84ca217991d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9bcdb4c-0af9-4abf-9270-7ffb1bc60614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5092645f-379a-4347-9c33-146d09100275"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f91fca2-9762-430c-994b-ca2a2e9aed76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f32a66aa-d974-44e1-a71f-1985f8e4e027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ac44fc-9906-458b-b975-1d9ad552333f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a565a80d-1634-4506-9d43-25609565a0b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01cfd6af-ca7d-4ee6-9f1a-4d3a3615e9ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab9c5b6-bd8b-4ea6-bfba-9a4280a2a2ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "198483d3-58d5-440f-b940-c0176283494b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9abf83c7-78c8-4893-aeed-6b46560753a2",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11cae54-6b48-40c2-87c4-f301cf5e6dd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be153830-cd29-4871-ab16-75375c65cbb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c87f2f-db16-4f3e-a4ac-91f68bec6988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd60de3-3116-4ea1-a47e-c81fd366f830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6553168-9ba6-4483-8b97-3eba364d9781",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7eb87ec-8a42-437d-af44-341b89a1d65c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac91ede4-3db5-425e-9a5a-074189cf2c87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9ea696-0e7a-424e-b148-3df734fac40a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f548d7-5104-45bd-ba37-4e097f313fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e836a3fe-d846-4287-8721-4e19fc770e20",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b2dc1e-1429-40cb-b3bd-f54abcc3ecc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8435e03c-115c-4d95-bd3e-29e878049201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "477b5cc0-6193-475e-9a21-a92e640bd268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a48eed55-3646-463b-944c-a3877cec1ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc178c6-c8b9-4349-80b6-e3850d7fb868",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da85225-5a4f-4a29-b256-6f1cc2736768",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "201d4dd2-3cf3-4a31-9a98-e57ca8afbec9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab23738-2670-4bfb-bf49-c3c3b36325d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa1c4eb-58af-4f9f-a133-a4b39b623bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64298b08-52b8-4a94-bcb1-18451675c6e2",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3887ba2e-fae0-4f9d-a2fa-cff34529ec7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f721bff3-aa93-4f52-96e2-b551bb022908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c962bf-3433-4586-9898-1a78de00b90b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f21afaed-c281-45b5-9369-a10436738fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5ea34c-2dc0-46f5-8305-e7bc58edc59d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0951a480-2d51-4f7d-9854-cda6637b45d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d200390-c33b-4d24-a9c5-9eaba5ac2d63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2407ea81-e05c-4ec6-a791-21fe72d3d0c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "963967b9-c20a-4409-9f35-984d1285b611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa0636b-3ee5-4854-b03d-ad364de489d6",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d09d2a8-b178-4976-abb8-3be5352edf14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02471eec-27dc-4336-8c76-e6f67ae9fc0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26e62d2-0e53-4d5f-ab0b-7f61b25d9082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0afe2525-0372-46a2-b0b9-ab10f29eb460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9faa33e-fd78-49fb-a401-5ed6eb166bc9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ae3490-f389-4301-b8e7-8279015a2ab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22efed98-029f-4edb-a0cf-353692d91716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6a1005-ae2e-41f6-a394-cb0ea75d59a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e1e40e-c8e3-4187-937d-e375042751f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee52419-ac5b-4227-8f3e-c0f7657082c6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7322cc63-e590-49d3-920c-2179d6f68b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "797ed1f4-c1b0-4f55-b6de-4308fff88ad5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2bfe75-0851-40a5-893e-5656e4a0c704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6865f53f-5c5d-4f4b-816b-8c23733a0f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1e5401-e5c8-46e4-bcc1-c07cf95718b9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e9f712-e138-4332-b183-e60d2409f864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c365c6-dd44-44bf-8cf0-05a830ebaccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1002dcd9-34e2-486b-97a3-e7a24425ce02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "784780a5-5b93-4d61-a360-5eada9a0e120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3fcd5f-8eb0-43d6-a82d-da2ab530311d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110c5da3-7d97-48df-b96f-5488f42a79b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c59d2ed6-f38c-4b6b-8c60-9e0059cb5d42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c650c2-c8db-42cd-ade4-fe23704f1502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "967a9f17-3179-4a08-8095-dca94b253127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70034a0-a27f-4287-920c-1a2c0748f5e8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9500e51f-2228-409e-9283-591d85ca27a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f3698e4-8340-4f02-bfe6-2bb475e474df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "672e15de-4ad0-4693-bac6-676b935d2640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f00abcb-a8a8-45d3-8703-c581b74de216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b82379-9ee7-4c91-ba2d-225342a44603",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcde9a05-b2b5-4398-aaad-c087ba83e921",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f19a0070-2296-44b8-b733-341c36d3d853"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec585fd-f2fc-41a9-9238-adbde83f30c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc128cb0-a988-46ae-85e9-97b7bf34d6e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f154b5b5-0c56-48fa-b708-88fad2bec143",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9035d9a9-8d5b-49bc-a3e5-7e3262602803",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ef3589e-641b-4917-b7bb-687ae0b90398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4eb4840-4e6f-4ffe-bf8a-9ff7aaf875c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bfbdfca-fb1d-4f49-933f-f2a7f43e365f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8aef47f-a6be-4b32-9926-8d0c768b3e2c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721ffe1e-669d-49d7-ac9f-885e8c3cdcb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cfd0f7f-3a97-4495-8908-cdccaa8fa424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef90bd1-0290-44a4-a06c-4566a70b961d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d8ab527-2f02-4e11-9010-11d1abdee4db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8257d3e3-60c4-40fa-bac2-99263703153e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639b51ef-2b94-4c89-9b60-62704d370c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "069ca206-0f18-4cdf-9a8e-4c5719c704b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc024048-9e1e-4ed8-ad43-a7e4c5287674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32db9148-15ff-4595-9965-ca58adee0f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d7d1a9-600b-4010-a8cf-26184ea6c74b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4079b6ca-c541-4485-8bbe-ded6d5c015c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "858a16ae-a550-48e0-9c6a-ddea5c4fe8b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37fa3caf-2b34-4748-88f0-63a43b1282ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24657b4d-710b-4656-86d4-6c14c30d2b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd9c0b7-d46b-477d-9039-c65b10f0fb2b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee44a83f-be3e-475c-8ac3-357f0c44f844",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5d94475-f1e8-4744-a7b2-89c326098c98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3976cfa5-cf2d-430f-8fe9-f4a5a4cfec38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97023cc0-cb7d-4641-89ff-e4d05bfe07cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5dca943-989d-46d1-bbad-19d7a8d7c4f1",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f83d53-0d29-4635-92c3-1d90c461e2a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5342612f-b179-4a69-9866-8b767f80b6ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59bd614-c0bb-42b2-9f21-d0d04d819cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10e7dc57-ee75-47f6-9c7b-93616317d668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6bced5b-d227-4528-9d99-960792eab232",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b7e821-f44e-4fdf-b6ec-5bb61c00354f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30f2219f-705a-40be-adcc-ab884722e52e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db500935-6063-491b-b836-89995853b9d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0c8383-cc0c-44b3-8b23-938ec090a927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44791651-098e-4e3e-940b-7d23c53ce59f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b7364e-acdc-47f5-bd9a-f0b2b9127a4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d8db0fa-4743-45d2-bd4e-eaf1178d5325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8752ef0-e740-4945-8821-0813ab19cc20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a09b6ca-8d1f-4ec2-8cee-7f746ca422b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a09c6e0c-8f91-4d69-99f8-a03a024ab8aa",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc430af-aa8a-44e4-9b05-762f99fc2104",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdc756bf-532f-4fe4-9ec6-020a926f06ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0438d71-ef65-442c-a10c-d5115ceba617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e6e9a7-7566-4caa-ab6e-a3181fcc8e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab88020-b5dc-448a-99ba-127ad6a40dba",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a290a258-6c3a-4060-8220-3c70f0d1185a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0299d78b-bdce-4f8c-b922-948278744ce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee33846-1248-4ccf-9fbc-47c912bb8561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "827d2307-4d92-4ccf-a9cc-97f9efc8eb2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83fa4846-7759-41e6-914c-92ce9d42865d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2df074a-37f9-45f0-ac35-83961584d35e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "072f2422-c309-47d3-8abc-17538628b07b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8bf995-915b-427a-8796-53acc5276eec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf369a7-d18e-4fbb-9d6c-470b3cd369e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a04c16-512d-4465-907c-ef6020c060d0",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16b467f-dbb9-4925-a12c-d3589469f70e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e7beb88-8d2b-4b68-ab68-03918dfedb68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ac4084-76b1-4a96-9c34-732ac27540f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33e80237-e4c2-4b8a-978b-333dc445ae0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8719eb0b-b705-4f0a-ab17-8ff2dd6c4b1e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f0750a-0d20-49a5-8979-e01466f66163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aab7e1da-7419-43d7-9007-e78fd356b882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7187a7f-9656-498a-a192-12375e5e468e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f7a5f48-ac68-42fa-88a8-0fde6530d214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edf1751-d828-4fc3-9894-cc01e62fc086",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef43910b-954b-405f-90e3-27b594e664d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fea83b8-34c9-456e-84df-848531d42e3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae4a8a4-43f3-427f-8ceb-3c61b8294ba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "229c9e37-0e8f-4157-9d9f-48d27949b0f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0c4ab5-97ff-4c91-9541-0aaccea05063",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e52d302-d2e2-4da4-aa3a-dd28dd9406df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3180eb0b-e8d6-4c36-b9b8-9f37ffeca065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cbf5d68-ec77-4340-8250-f703b11913b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae0e9285-d22b-446f-8c8c-b0f6feafcca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122d5762-a659-44c7-a7ed-2050a4dca865",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633e1e21-135c-4355-bcc6-70585b7876c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef460f4-fb65-4d3e-a31f-2c05835bcbe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1fd7582-a2be-48d7-9a54-5e7acda6fd6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bdc4bc8-b135-4ff0-9da4-2508d5bce7a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ee8046-69e2-4d22-a714-924fa928e408",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f1300e-89b8-4d0b-94e5-ea6a4533d4ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de456eaa-858c-430d-9869-84e165348d8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc3de43-305a-4daa-b6ac-e2646ba94da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e49f771d-56f0-41cb-98f9-a8937726e125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22610bea-0f40-4741-9606-51c5ffd36454",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14aca15-3d38-4d4f-a6fc-aa86ec6f31e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64adbb6f-0656-4e24-9356-d861f35fd544"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d413ec8-1cc6-4cae-9bca-5c7a7eb8cbd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e859277-8e40-4e37-abf3-02645cce8323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfcde971-9fa6-4efe-bc38-4f49a732a043",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b60e1bf-55d4-4ac5-9984-11cbe4bd5351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f4e9c54-5cce-44d8-ba2a-8b80661b0785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fdab2f-3232-4b2b-95cb-57e8279df20a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "430e454c-ac54-4f7f-b82a-e647a7b1a3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c060f7-8291-41f0-8736-48bac1f3cace",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb29d7d-d40c-4ba6-a49f-ceb79d6b46a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72e6a8a9-b0f9-469a-a4cf-ed56980ca635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9aafe84-ad03-404a-9517-a156d0e20056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "719ab091-84b0-4829-9886-ab0d4e7bca00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3807ea39-078f-4b24-bc4d-7ae51ece9ebc",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc7aea9-21b4-460f-9546-02482799a051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c99e318d-3ce1-463f-ae93-6eea6459f314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1aeee73-294b-4876-a700-b49014142958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b88711-1823-400d-9214-e836d7c9dd9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d27b0a-b97c-4d6e-a6fd-fbba2c433a36",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d3ce67-f3fe-480b-b3fe-26116cf0c926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed8b083e-249e-4094-8ad3-b614f1481e89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35aa89e-ae34-4901-a5f9-a4e707d1bc8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a6e8ea1-ff50-46c4-bcf5-634e2609652a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c6f05d-db83-433a-9e6b-2eda2e2fc3af",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be93eeb3-e01a-414d-8f48-b9ac8d44e647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cda006c-5006-4349-95d0-37bca843baaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec33279f-8f2c-4253-895c-0bae3177f9de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c6d069-da60-400e-b489-cfeaa5430faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ceb2fde-d758-4709-9759-47a6b052c29e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88471d4-7327-4a34-8aa0-fdbfefea02d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3fada33-cd8f-4d5a-bd28-acbcf3e41f56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17b0e8e-5737-47fc-aa26-46f90b1e118a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab35851f-72e6-4b22-beef-4e4bcb466470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa88f93-74ed-4504-a5aa-8745dc761846",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1c0862-6a3d-4b17-8015-4bbccc06db45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f60e63e5-4170-4b31-944c-9d776b04b22c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92962de7-d8eb-4e7b-a495-1a3a1592e27f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "300bbb6f-6b0e-47c8-b4b0-ecc13be15c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b094f85d-8c02-4e2a-ae84-69d11001bdb6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59db0afb-446d-4c08-9a5d-7134a24cd300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad80094-e79b-447c-8aac-af29bca3296a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a511676-0d5f-44e5-a43a-a82c8ffd2de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a53ba14d-582a-4772-8e7e-3f8d1140f4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32d89c8-f4cd-4583-a974-7be10068efd4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a040189c-f96c-4a63-ada5-c87df1c6d03f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "472d6a0a-4765-44a3-9e21-5baa7395865f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af97192-8342-4597-8921-d51cc85887aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f9b2938-047f-411f-83bc-6cd349747d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f79f0eb-3d23-47ba-a67e-c9621a34b2b4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f5a04e-d47c-48df-a6b8-3f36cce3bffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf40826-3668-4b4d-b72a-e2355eee5437"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee9f0b9-4c21-4042-a6b6-c7733b03bfad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdff35e3-d97f-4e49-a0f6-ba6f2d0aa3ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2735b9c0-cdb0-4f6f-9240-dd0db31ad8c5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2922a2-f6a2-4698-8417-208af7b07fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b210e7b-5fe2-4f27-b9a8-0d2f6758320e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4d1417-d9ed-4c55-a84a-fe6dfd77bef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f35ada93-3f38-48a7-a370-a3d515f6e9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f30c1a4-8a8a-4be7-a42f-482f91d4d629",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48e83ff-5a47-4975-9a8c-e07c6e198b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee830b3-7284-48d2-9bf7-38c837c5dd4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "592be9b2-a3ac-45de-9663-f3ba83040d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eac5f6a-0b7f-41a9-90eb-ddcbb86b3d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54beebf8-a1b5-4434-86b6-469babc897a9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b903c444-5cd6-490c-b648-8290dbc80203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c4c474-414a-4113-bfc7-28290f5ceae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3242b139-b5c7-43f0-877e-2b82fb07930f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f11c40e-87e5-4404-a53d-764ee3770f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edfa003c-5036-40c5-a7b0-6945d783e569",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d84e913-9a67-478c-b107-e4ba5a2719ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02dca1d9-6047-4275-9c60-b20aeab3f775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a948b37a-0b88-45d7-8cfa-a070c290606f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "526f708d-0c05-411a-8210-d99ed6aec898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ffd8f2d-5b0b-4492-b85b-205803dc65b9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8296fb-a893-40ac-a620-3cbd914d835e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "773a6101-14b3-41bc-a009-38a48894b3ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2bcb701-60da-4a48-a08c-798508f35bd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8029093e-9d35-44b1-bba5-4563b252adb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286f07bd-4053-4798-b415-bbc9a0c8cc1b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202a5648-7956-48f4-b796-69b2d1ee5350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2646186-83b1-4bae-b0cc-ccd249fc46e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "165fb6ce-1d23-4371-a57e-b33642dfa1b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5ffc38-4db8-449f-b47d-8eaeea164eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb63d01-794d-4858-8e35-2f7b01ab0013",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faadb1e1-f1b4-4586-97e7-b42924065379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e47309ba-ae79-4fd8-99ff-cdada1fec2f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5d5d37-b2d7-4526-9299-3fe8c169f6bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d45ca0-1a46-4775-8567-29117e0b14c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27bbf118-47e1-4693-9c79-b19cf0cc0a55",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057bba15-56bb-442a-abd4-1db6150a04a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee294e6b-1f6d-495c-b7c2-e8d42b8ada5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da917cf-b600-4a02-91ba-9159c056b948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31b0172f-e0f3-4057-b7cf-123b52367960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d64241-1e90-45b9-8bc2-078f4de74bac",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ca15c9-5bba-4cc6-8160-8c2884917b26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dc57bbb-8e38-4410-8ddd-7a2cdfb844c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a014766-6a44-4f27-9607-debd72b921ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e06956be-cbd0-4114-8d72-14347655fbc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e15ef7-583f-46fc-bda4-146cdd6d994f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba35faa-ac96-41cf-b2d0-eae3b8069670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfff4c6a-0da4-4b40-8af5-05095bba5701"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b597e2a0-79b5-4870-bdbf-d9b72568a3f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dba0b70e-75f9-461c-91eb-5a0f49d71c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55be1577-7f29-4e80-ba2e-70fa6c9141ec",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9cfc5e-238a-4199-9100-06dc61f75065",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22ba1f47-25cc-4731-ba93-3207d8c7ea69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7166821b-3aed-4565-9420-0fc19507e948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c44a8455-10d8-4170-929e-bc3f3a2df9cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dda5646-ca0d-494b-b4d1-bedc924122e5",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f609d42a-ac97-4152-9fae-16d42576490f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e0759f2-a35d-43c6-a8f4-b9c4cbd7325d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f647eed3-fd9c-4a77-bb89-84e629c508e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c119a910-6d83-4831-b84f-968b3d5097a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad40d01-86d8-43a8-b3fd-a62d48fce0df",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a866734e-a885-4e3b-b028-a4304c12bc98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b254c5d5-df38-4d81-87c4-13c64c7eb82d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c657aa-1edd-489d-af67-567031b85ce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c4fbd60-44eb-4628-8409-ade02a4ae9d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c940692-bc50-4e3f-9723-650e90e910f4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ab6350-b46d-4f1c-b5b5-8a11549b353d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ea04317-92b7-4201-8fdc-02ba01d41a1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1086f3d8-c557-402e-b4d0-a7b0c4c86c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc350b8d-c305-4244-ad39-eb2d679413d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d254df5b-4fa0-4ecf-be74-70255c15bfc4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e155f638-a390-4619-9275-089173862026",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2883b25-5fe4-4b6c-ab87-240f397e27c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2858e63d-5589-4bb4-b33e-72345d2d4e74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b26df343-db8d-4f7a-9270-ba9220903e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75f1ab2-4888-48e1-bb86-03123aa1ff80",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08dad68d-0581-4e87-bf48-bf1c39a11fbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aed837f6-d35c-4a57-8a7c-3245b5fca318"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb2c8ba-cd1f-4d5f-a928-2cd2e3ad564f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b1f1eb-3588-4184-9e92-c71c79d346f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f83db2-486a-4bf7-90c5-188288842f22",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbff3086-136d-4256-8321-f023a3cebc01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58e474c9-80df-4398-afca-e0ae9262aec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "772f55ef-c86c-4509-89a8-b6cb62ea943a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2430f540-6af5-48ba-9508-f89d89712c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf94ebe-9f3e-4840-8ee2-5b81531e7374",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517e4e06-3c6a-4aac-9ce9-a517d034b103",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "813b4427-ff9d-4af2-811b-aea47b65fc00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7aaf0e-b629-4cff-8982-4a3590bc848e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73710854-8d57-4cbf-9323-0a62bdc2efeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def91c38-44e3-42e6-9e2a-2b9834d2629f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a026d30-d13b-4118-b692-2f7f0d60d976",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7f1d13e-adef-415b-94aa-2bdf5bc803c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7fa4b3c-6a17-44fa-886b-8b45f6748b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c41b16a2-77da-4575-b42c-ec869d29d68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5955f2-a9dd-453a-9479-a814601ca0e2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb8fb0a-5a9e-44a5-a9ea-cb5890bcfb5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f28f9f3-2b61-4fa6-9a91-8f2cab6d8ad3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "389cf0e9-0961-47a9-9686-fc95158700f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ea9e29-f1a2-4d83-b7ac-1a475cf5d39d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d486e4-3aaf-4d74-a5d6-25b154cdca0c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1a54ac-035f-4373-9930-792f9c5031d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c36718eb-a6af-427b-ac00-399a922cf4d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3feebad1-c2ee-4ec3-9ce9-bbc264fc1fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aaba839-22a7-430b-9b7e-3b5e7d99ad71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efd1dae-225f-488b-a463-d426debcae7e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ea6328-c37f-45f3-9bcc-a1230873c3a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07f464c4-76a2-4e21-8601-cbbe9043ac8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55d23e9-ade3-42d7-98f6-385d6457b2be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b9fb93a-6ece-4d12-a560-d33218724bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc6f49b-df21-4cc2-9bf2-6a202faed90c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a25bd6e-0903-4808-928c-ad26aaaf1b30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b12f1a4-d903-4811-b42d-305d5de57100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b7ccdd-d646-4ace-8582-c43f364e3c41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cce1c8e-dc6c-4418-82fb-0229e53328ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce861e9-c180-41e0-8905-065031be497f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caded27f-b1bb-4b55-8156-d96c8d08a8a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0967297-a1c5-45ab-8684-234a332ff91b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56dba764-1f33-4c53-9d8c-574b67fc8140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ba92e2-9eeb-4180-8227-3c80596a0098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac1abe6-9700-4f21-b29e-301653ef0771",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e7cd42-390b-4635-91cd-7ee7a8e38463",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef120ea8-7e78-458e-88f3-a6dc2de06312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34d7816-5883-456a-a076-bf8104e0cb1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c5a35c-96f3-468e-acaf-05854ae241a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2721122f-1767-4344-bd90-d4cae081c3fd",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a89785-cf1b-405c-8093-aa38ac8e37cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cae48fd-d709-4ae4-9ec1-21dff27da83a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31251c58-2b53-4831-90a3-bab7db556bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "784a11f1-c5ea-428a-9e9f-dc7363e221e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77965dd3-d9fe-4878-b523-03ada2e9e1b2",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f74b4f-263c-4723-8466-a26fac3f440a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca23cab9-80df-47bb-8a9f-d3561d025f16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "451e4355-d49d-44f8-9223-0f71283562d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f059e1e-494e-4f58-8398-0758e6f9fa19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a965671d-70df-4489-84b9-5e938cf2f709",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7596cac8-4ec2-4f05-9ffd-0df545a96224",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8edc2f00-b6ba-474d-b72d-55e9e1d0d565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4f0c17-6064-40a7-9c17-b7d92cdd5a07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de6fe302-9421-4b4b-962e-a0aaebe9d7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d18b15-311c-4c4c-a2c5-17cf68b7f9a3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0865812b-00f1-4ae2-be8f-1a27f2f8f08d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1a1135c-2bec-4f67-ab0d-f31a11dfe8d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c966bd2b-5997-4cbd-9e92-f9285d4c0bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da17bd39-20dd-4dc9-883a-de5e75e6fc45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e163bbd-dcab-468c-81cb-2d79c4470f1b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707fe051-e0ad-4009-a843-6d2839e103fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee9083b4-98e2-4961-8c98-3911992cae13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44dd8a6-4e3d-4fc8-a2db-ce308d826a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b04739-4f14-488c-853d-ea306bf2163f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c3d73e-78b1-432e-85ee-05a642ae428b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d75049-edc9-436c-8aee-ef91a90cb44f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c347d98-2acf-401d-a1aa-551b22d2186f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef02a44-72ed-40c3-8d65-93c2eea8a7ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d7f57ad-5892-4464-ae3a-409bcfb7f1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4a91a9-24c8-4275-ba65-909d5e441e44",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb11c78-56b6-4c49-bc6e-06d004501c83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53566043-24f1-469b-9178-d3878f32975c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38cf5ab5-2feb-4f72-b93a-57336f728fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37a14d3a-5946-432c-a95c-427788eb5f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a56dee5-6960-4aa9-815e-0a530f61fb88",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a56b0b8-7064-4241-92d6-a36fe1f749c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3355e5a4-0a29-4aaa-b4fc-62b66bed8ea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae2ca35-9b86-415e-8a7e-5b2452e4c2b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a6c22d1-4932-4f1f-97f1-5f9905360351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38801dc0-80d5-48e5-ae20-23a3a9c669f7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a063780-eb9b-469c-a1e0-5dc3979f23d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9b6d05f-2a54-4dfe-908f-02e7429c96dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b649250d-02e0-4ee0-9b18-72f86c272b26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8739fbb-5ccc-42e9-852e-4dd0796da5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d351850-550f-4684-9339-5d07bf99918a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74675ec0-1b3e-4005-ad43-658837c4b638",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91aa5b5f-c2f3-4d8f-93fb-0d22b2b933ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "361bb400-7acc-446e-87b8-b020db0186d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aacaf7c4-5435-4d78-86d8-b14bfd2ce7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e817e309-1a47-4292-9dc5-e6ea3bf2e465",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3978e2-40af-4cd7-86b9-f813d9d1ca3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caa17fca-7c33-4e65-8dc4-38c7a10ce8eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79cb82c8-6a2f-4c65-a9b4-d4120779ab4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76bd7f64-b182-43e6-b96f-2aaeb69ad677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137ff677-e614-4470-9a47-87f18b9d8ba7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777e6774-58e1-448e-a950-5c4f8e27b32e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc90b28c-bcfa-4082-af4f-0875321880db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a01c521-9717-41e3-a309-b9997a9a9946",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff2c325-53ce-4514-9c81-6db10bfa4370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc3b004-aa59-4a4b-8b51-5b4088f9aa28",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc7ccd5-9244-4795-9e0a-cf4a3b377b3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "484de563-26ff-499b-8ac1-83ff31fb6b5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b45830-f8b1-46aa-904d-c76d49cccdb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4ca5814-e8a8-4f91-8ab3-80069583412c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3518ab-ebb3-4dd1-aec5-8b8a89bf41ca",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b37f70-fc66-4d23-bc97-b442211052f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5edcf343-13d2-47a9-acec-20690f04cff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "256f7e5c-71ef-4bd7-8b4c-3bd3141b93d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad7256f-d574-452d-a4a9-877985695d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341c6059-ceee-4db1-9ff1-4258f8865e0f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a746a2f6-ce1b-407d-97e9-78695890881b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67c05a27-f4d5-4d1e-bb4b-0fd6bac9f8a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e02cd1-aeb3-4214-aa43-75870e345198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05263f07-d055-4c69-86ec-945b85c756c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf8c4bb-fc7a-4566-aa2a-70d85b38b212",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a616cf-2d1e-49c5-93f9-f40f6aea5844",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "500b9d57-1079-4768-9cdf-81e472ec1a1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "933359ec-a905-4c01-9d5c-11db0bbd1ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fceb0509-ce9a-47b3-b70c-9be60ccbf966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36fd8ce-4849-45fc-8cd2-163d3f84806b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ad57ad-2332-449b-94cb-04afa865db14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7a6ab97-da43-4bba-a808-8eb02d2fdd96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "377b4e5a-fc5d-4c25-ab58-45c431ac4dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd3eaa79-36db-4c58-a650-0eaf8edd977f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72f68ba-b2d3-4645-a779-bedb9833dcdf",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea9f316-7076-47c0-918f-c4edcbd63a2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca5171bc-44d4-4a55-9e77-10151e0a02be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "188a25d5-ad12-4cd2-806f-7f1847bfa92d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2321fa7d-7995-45f4-a4c0-900d3acfc95e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1421d6-5c5a-4bd6-9ea4-21b4eb8bcd51",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0262d2f-2f77-4953-b98c-980e18fc789d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55f6b434-38c2-4743-a2fa-40e7d2786ea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d468b03f-ac54-4548-a1c4-dce3e7b977fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18db2a0-eda4-4447-9e4c-0a4a78559379"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d043319-162b-4084-a83f-a50fce3d07c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d4d10ce-9d65-40ff-85cd-64d94b3a7121"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "539b2d8d-ad70-481b-9ec1-ac529f9337e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9708feda-5fb1-4a12-b63f-d88f7748e505"
                    }
                  }
                ]
              },
              {
                "id": "234a3ef1-2cea-4538-99aa-7308216a9378",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ec4d99b6-e14a-4db9-ae92-0b7945d502dc",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63607f8-cfe7-4ade-ab0e-bd1061808896",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "cf16d301-a595-4f2e-92b3-73e2fc0eb7ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48339138-ac87-44c4-ab0f-3c974fe42b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52958e59-dffe-4471-a6f5-3f2de9d13ce8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94cb27bb-40b7-4897-9c64-654c2464041d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21c15826-7042-4025-b8d1-685815c4c6a3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fccebb84-4aa0-46a0-bad2-4969e400a8bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72ca907e-cf2a-41bb-a9f3-4d0f2b004355"
                    }
                  }
                ]
              },
              {
                "id": "b9c6db8f-9f0c-453f-a317-31bec51ce570",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "bd1ae225-7f02-4a28-8ad3-26856922069d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca452dd-bc7d-480c-95da-e2adebad7b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4f273c3d-c2c8-47d5-a5fa-f55290c945b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b0f6ed-1827-4b9e-b2a6-a0a6eacf48af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aaab465-5765-4a84-8523-b3b5d0677cf8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "32bc9945-78ec-4153-bc0e-9278542ac4a2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f3d10f76-ac6b-46e4-aba5-512f6d190cdc",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d948673-6b23-4dac-8243-02100236d9fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3ed0165c-e470-4296-9afe-bc78efe6da38"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85356ee2-5709-40ec-8dc5-4f3fa0e0d4a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "148642f5-a907-4d21-a40e-ed6e7a571cbf"
                    }
                  }
                ]
              },
              {
                "id": "c90dc88f-7bc3-4dc8-ace6-603675da9f37",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be1ef384-50ac-4c01-b2c9-2652e2e7c6a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b4c5ebe5-c697-4893-b598-1880757b1858"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ff9b5ae-d0c4-4a23-9a2f-511768d91c37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01045104-79ae-49d4-a157-c3f659f86fab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3dbd5da-3ff6-49fe-aa58-6c63d6e7c588",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "28713a1b-9de3-4d71-af56-ea0b1e7dca72"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b9d035c2-650b-4305-b5b0-af5a4999b0f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "115a7960-4d91-4b00-abee-5e1ca9fc591b"
            }
          }
        ]
      },
      {
        "id": "8bea6966-9c19-4be2-8da2-d8a84b00344f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8a57e729-0703-4e1b-8cca-441f9ee3e106",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4fbf619c-3658-4ca4-81e1-4deac935e004",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7d6d7cb5-3a59-4ac7-901a-c81dfaef69e9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648566f9-e250-4f4c-b838-ee73922bd4ed",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5511b401-72ec-4063-85a1-1ac77f853de1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a824fd70-cfb0-4bf9-aca4-6e96aad9e6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a80c567-f285-40b8-bb11-1ca2cbd10aa1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be840cb7-3565-4347-886d-e1170d8dce50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d64c8d60-28fd-4b28-9d88-b52ab2a2a174"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff873558-7dc0-4c65-ab5f-4732ef77b4f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f66a7bca-7053-40fd-a0b8-42e437750cae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "264e77a7-b041-400d-a183-5507ac3c633d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1f4c4c74-c751-47e3-a0c2-36e0a4a59299"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "db30a28d-446e-4856-b0fe-6131dd95038f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4c5c9f3-279a-430f-9025-f2b4bee3881d"
            }
          }
        ]
      },
      {
        "id": "21d2714e-007f-48cd-9148-679ea618885f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "82f5b938-17f7-4661-a37d-c72a0e9991ea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a24fb842-f900-4ad5-95a9-57126b7cc15c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e09ba3cb-099a-4a84-980e-c747467ce7ad",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bba840d-a51b-48a1-803d-6e360d047897",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a94279b-aa4a-499e-b64c-ce07f2f8af65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e20a35-d33a-4d21-b61e-8b1a90c6db9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8aa4aacb-03c0-4b98-83c6-521015bb9662"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7383262-2b05-469e-af92-9e9ff11f1716",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53236862-c592-4201-9b33-25e10d24fb6b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b664f318-e6e2-4876-b029-a5a51d721ffe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "381da79d-00ac-42d9-b76c-0f15fb9d0ce8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6327de3b-f499-4233-af3d-1df6538cc018",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b06f6e07-cfe6-4bac-82e0-b635a3f247cd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40e7d1e0-3154-47b8-ae77-1ac461527df6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ec3eb0a4-ee73-4279-85c3-63886666257f"
            }
          }
        ]
      },
      {
        "id": "ec4c5baf-d708-4727-a53f-1894ed3b727e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e6d41df6-321f-46e4-bbd0-f4ee5a47ea5f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c52cf22-c6cc-4fc0-bf78-e85e286e3d9d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ff2d2cee-9617-4f03-ae1c-d5b5f9051a4b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9013b8c-d702-4c64-a149-9a66881a0ca6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c2092ac-8dbd-47bb-b797-6f3fe87550c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22ceb49-135c-4d90-ac60-43605d61ea60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b78118bd-911c-41e6-a801-7540b36431d1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c20134c8-cbba-43be-9a2f-02ee02a25460",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbea9813-dfef-45dc-9150-f0f9b7ca0f22"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "344f2d37-1336-464e-bb4a-82c393fbe6c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df72f663-f781-4fdc-9571-2688c711ac5f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "adea8f0e-238f-42dd-84a6-442617ad35a1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "40c7fefa-f918-4aca-978d-a9093dfbc48c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0706d51-39d6-4f20-8f81-7b4a8e53f735",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5fefc0f0-3f22-4aa5-9c18-cab026e71fbe"
            }
          }
        ]
      },
      {
        "id": "5de3f6e6-e328-4873-816a-970fe36acbcd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "590beb93-c84a-42d1-b1d6-0a95cbc5dd53",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b78ce05a-2a40-4ba9-ae9a-447ee35001a9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b6dc76a8-512d-48d6-8c6a-e46f093ba1f8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2caa4c9f-ce1d-4a20-ad26-d3cf2564eae4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f4537d5a-2486-4794-a91d-93bdb246b103",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 101.01587301587301,
      "responseMin": 5,
      "responseMax": 6379,
      "responseSd": 514.3861109872809,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1714091732117,
      "completed": 1714091765942
    },
    "executions": [
      {
        "id": "a5bce226-ed0f-4f08-b783-3326758703f8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8667600a-3b12-4c7c-9dd9-e4f0434b227d",
          "httpRequestId": "b14496cc-cb1d-411a-9672-4f67bfe500bb"
        },
        "item": {
          "id": "a5bce226-ed0f-4f08-b783-3326758703f8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e4452d67-bffe-4ad0-b643-1f3d7046230f",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "eef4f27d-58c0-460f-8530-dd7fd0f1ae87",
        "cursor": {
          "ref": "3f0ce150-3bcc-4426-a7fa-45502630b932",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "778ce340-cbcb-4e8d-968e-0ee072950939"
        },
        "item": {
          "id": "eef4f27d-58c0-460f-8530-dd7fd0f1ae87",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5669ca75-5c9f-4125-8929-2a6d28de683b",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "61559203-af75-43fb-a4dc-325369a27d3b",
        "cursor": {
          "ref": "f09503b7-c036-4ed4-ad85-c6390e3545c3",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f839fbdd-e448-4214-83f9-4ddbf83bc62f"
        },
        "item": {
          "id": "61559203-af75-43fb-a4dc-325369a27d3b",
          "name": "did_json"
        },
        "response": {
          "id": "4bffda5d-0759-411d-8a74-afc9e81d0bb9",
          "status": "OK",
          "code": 200,
          "responseTime": 109,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c3f67f-3579-4e27-8672-c3f84deacb69",
        "cursor": {
          "ref": "2a334a5f-424f-417d-a327-ca28ff7b9256",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8028368a-2863-4b9d-918e-1a32dbb2c0b8"
        },
        "item": {
          "id": "20c3f67f-3579-4e27-8672-c3f84deacb69",
          "name": "did:invalid"
        },
        "response": {
          "id": "8ab5105b-7ed9-4738-97dc-cdae0d108bf5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 384,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c3f67f-3579-4e27-8672-c3f84deacb69",
        "cursor": {
          "ref": "2a334a5f-424f-417d-a327-ca28ff7b9256",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8028368a-2863-4b9d-918e-1a32dbb2c0b8"
        },
        "item": {
          "id": "20c3f67f-3579-4e27-8672-c3f84deacb69",
          "name": "did:invalid"
        },
        "response": {
          "id": "8ab5105b-7ed9-4738-97dc-cdae0d108bf5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 384,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1cd2801-1020-44e3-854b-01ca5af8c4e3",
        "cursor": {
          "ref": "dcee4f03-8a78-45b2-8f78-4f0c8e3c8428",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "fa09684f-aa15-4ebc-997c-d858b4a32006"
        },
        "item": {
          "id": "f1cd2801-1020-44e3-854b-01ca5af8c4e3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0ab09d8b-d56d-4cdc-835b-06f78a18ccbf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 22,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983fea5a-70fd-4141-a76f-848281094572",
        "cursor": {
          "ref": "34951344-7b69-43a0-9234-c14348915491",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8e3ecf42-9622-497b-9e34-1118988f660c"
        },
        "item": {
          "id": "983fea5a-70fd-4141-a76f-848281094572",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "fd1e3c0f-77fe-4708-ba74-0f82bf677e08",
          "status": "Not Found",
          "code": 404,
          "responseTime": 16,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffcfbfe7-2605-4b78-8672-15bf85299c1a",
        "cursor": {
          "ref": "3f23ed22-4a66-4071-8d2b-7448313e3838",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "03b9deff-a8a6-4dd3-b2b6-e19b1bbe0178"
        },
        "item": {
          "id": "ffcfbfe7-2605-4b78-8672-15bf85299c1a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f87c4c91-3401-4159-a220-9766888fb55d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7cd350d-f540-4fcf-bd0d-11239fd37381",
        "cursor": {
          "ref": "cbabaad1-05ba-4afc-a4d3-66217058f70d",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "344960f3-d8e6-4717-96f0-9d346cd7c0d9"
        },
        "item": {
          "id": "a7cd350d-f540-4fcf-bd0d-11239fd37381",
          "name": "identifiers"
        },
        "response": {
          "id": "58c38ab6-2f9a-4a7c-b375-7ca11191b5ef",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954ebf85-a691-4547-bacc-e5aad5b66734",
        "cursor": {
          "ref": "d39b5b92-9747-491e-8866-f1a2fb613239",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "dd029350-2d07-429b-98db-f428eced7093"
        },
        "item": {
          "id": "954ebf85-a691-4547-bacc-e5aad5b66734",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ee8ba16d-2b51-4fab-afa9-7bb6dda68b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1cbd69-0f57-41b7-94bb-3e6533a7a4b0",
        "cursor": {
          "ref": "f3481f22-6c64-4118-8d66-e7f08c0f35dc",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3afc3afb-c9ee-4958-805a-94aa1939708c"
        },
        "item": {
          "id": "6e1cbd69-0f57-41b7-94bb-3e6533a7a4b0",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c5ebffe7-fde7-4963-8e46-e169cfab576b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5463ce-701b-41ae-9cc2-baa3cd5ad319",
        "cursor": {
          "ref": "fee2c67d-f896-4bfc-8027-61ab3bf3080a",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "82d994ef-9e75-462e-8248-f7d2cb61498e"
        },
        "item": {
          "id": "6e5463ce-701b-41ae-9cc2-baa3cd5ad319",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c60c9e8a-28b8-48a6-98a3-e67233c1a1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818b88ce-8d15-488c-903b-c6ed4d3acbb7",
        "cursor": {
          "ref": "67a03e8d-7ace-47b4-ab7e-e360972b6a42",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "fa4ddec0-8f5f-4b6a-9456-39879e75847f"
        },
        "item": {
          "id": "818b88ce-8d15-488c-903b-c6ed4d3acbb7",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2ab64c3b-0c73-40f4-82d8-0876c313b611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265dd2b1-c47b-4db5-8a5d-aab9531e685a",
        "cursor": {
          "ref": "a0d5462d-045d-40d0-bcbb-7a5223d14654",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6119bdc3-9f6f-4946-ad0b-a76b3c23ec71"
        },
        "item": {
          "id": "265dd2b1-c47b-4db5-8a5d-aab9531e685a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "03defebd-88db-40b5-a757-6f92448d944c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56062d4d-6402-4f17-b695-3a0e214a9c14",
        "cursor": {
          "ref": "72ee6212-6680-43e7-a1ef-e3c18b51a4c0",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "65e63912-a1be-45e3-93be-c9ba14226248"
        },
        "item": {
          "id": "56062d4d-6402-4f17-b695-3a0e214a9c14",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "09d10dce-9416-49bd-8a11-066202f8d9cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0307b8a-0aa5-431b-9308-9040a633591d",
        "cursor": {
          "ref": "cadefdfe-584a-4ecc-a54d-59d754e8a547",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1cefc7b8-3bae-494a-ae9b-7f560a835958"
        },
        "item": {
          "id": "c0307b8a-0aa5-431b-9308-9040a633591d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4dc18050-d11b-476a-b89a-9932dfa9bcf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e8621a-013b-4647-87eb-89304c0c4266",
        "cursor": {
          "ref": "d0119135-8e25-43a9-aa81-6a1ce1f52376",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9c996a88-cbce-44ef-b324-88f9774bd598"
        },
        "item": {
          "id": "01e8621a-013b-4647-87eb-89304c0c4266",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "616d7474-e88c-433c-aed9-b386c1cbb2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3de835c-7530-4442-92ee-5a4ce337c5d5",
        "cursor": {
          "ref": "2a950a69-2230-400a-96b8-df3ce73c96ae",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a8110a70-bcb4-4250-84b4-37d3ab8a1557"
        },
        "item": {
          "id": "a3de835c-7530-4442-92ee-5a4ce337c5d5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "295dea68-1a00-41b9-a322-d311f30612b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9441f9b4-9f54-4f97-93a7-d30541e21453",
        "cursor": {
          "ref": "676c5b8f-6e00-4c63-ae8d-b3875d1e845e",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3bc89077-c11d-43e1-abdd-6715a2f2d3e1"
        },
        "item": {
          "id": "9441f9b4-9f54-4f97-93a7-d30541e21453",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d1b6aa25-6130-4f5c-9c71-20a11e0bbee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f910c5-a88b-444e-8dbd-46b8b794bc04",
        "cursor": {
          "ref": "5cd5de71-467a-4c10-8a69-cabbb131b8b4",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "7f4824ae-35d1-42cc-b986-b5ef49b2c21b"
        },
        "item": {
          "id": "76f910c5-a88b-444e-8dbd-46b8b794bc04",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "47bb3b5d-fb1e-40af-85c6-c8c2e03f0286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3e69fd-7359-4e6c-bf74-0a1ff590f68d",
        "cursor": {
          "ref": "a5c438e1-d89b-42e3-b1fc-78c7331bbc12",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "cfecaeaa-6dad-4730-9299-a9ef50c42e25"
        },
        "item": {
          "id": "9a3e69fd-7359-4e6c-bf74-0a1ff590f68d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d22cda26-bb21-44a3-ad40-05a05c30b174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a911bdf-df87-42ab-91c5-11dbfe7da97b",
        "cursor": {
          "ref": "a8723c7e-07ad-46c4-8037-1db59c5722f3",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "38949a69-45d7-44ec-ac72-f6d998751c8f"
        },
        "item": {
          "id": "8a911bdf-df87-42ab-91c5-11dbfe7da97b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c5f0717b-e554-494b-9f4d-1345ceb5c215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c52c2d5-5cc6-4e70-bffc-23b0a688b085",
        "cursor": {
          "ref": "c2d0efd4-9eec-4a41-b8a5-944806223f21",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "18079010-d5e4-4464-856f-6543dd7ad5dd"
        },
        "item": {
          "id": "1c52c2d5-5cc6-4e70-bffc-23b0a688b085",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "114064e9-453e-4d38-8b76-23e95037b9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9b4f22-bff7-4977-b026-fa13ed4c91d7",
        "cursor": {
          "ref": "7943ef0f-c1f1-41f1-9df8-2e8c866d760c",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fc7156d7-0c0a-48d6-aa07-c779413b3c07"
        },
        "item": {
          "id": "9f9b4f22-bff7-4977-b026-fa13ed4c91d7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e1a7e42e-ef4d-4f8c-ac2f-77342698e303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76823dbd-b4c2-492e-a256-a8d9514f79cd",
        "cursor": {
          "ref": "9cf66e61-3f2c-46a7-af76-b6cf5aa48cb5",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5d5b32b0-f2aa-4f73-a392-25b4c99bc4d6"
        },
        "item": {
          "id": "76823dbd-b4c2-492e-a256-a8d9514f79cd",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "950026da-c8dc-471f-963a-55bea45aec9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e0587d-d0c4-4550-b6cb-7b8a194feed4",
        "cursor": {
          "ref": "89e40195-bf69-41ac-a228-b22f183fb353",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "905045cf-9707-400e-85b2-5a69ce432f96"
        },
        "item": {
          "id": "39e0587d-d0c4-4550-b6cb-7b8a194feed4",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f11ab10e-35b6-4fdc-b6d5-f3f2b488dd57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72cc21b1-bd60-47f7-aeac-232f1b999d62",
        "cursor": {
          "ref": "6d499e39-2586-411e-9da3-20703b3976c0",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3456918a-0955-4038-965c-75822aaa508d"
        },
        "item": {
          "id": "72cc21b1-bd60-47f7-aeac-232f1b999d62",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "bb73c577-754c-4ed0-a6da-4855f039ed1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f16f93b-f258-4bdc-afdf-0b15911dbbdc",
        "cursor": {
          "ref": "6535607f-279f-4c8a-bf90-d0d68056fa90",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4d3f33fd-3ed0-4b24-9378-c5718d4dd3fc"
        },
        "item": {
          "id": "0f16f93b-f258-4bdc-afdf-0b15911dbbdc",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3a0d9bee-b790-4864-aef2-acecf64a24a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c91db6b-6188-4eb1-a808-c4934efa86f8",
        "cursor": {
          "ref": "63735f0a-3045-464f-897d-715f05e04a3e",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "83bab5df-31f7-4f80-a34d-6813b6ad8e6b"
        },
        "item": {
          "id": "6c91db6b-6188-4eb1-a808-c4934efa86f8",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f644c847-baa6-4637-b6e8-89b365610c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94fc3668-ec0e-4406-a2ad-0c68c1fe90a0",
        "cursor": {
          "ref": "6c2b9be8-6f5b-4dd6-bc52-f3d4029d036a",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "02781eff-6c17-4a0e-83ad-fe6bcb80202d"
        },
        "item": {
          "id": "94fc3668-ec0e-4406-a2ad-0c68c1fe90a0",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "74535128-1174-4481-a4e6-2a3a23dc4acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc48d79-862f-42fa-9fda-08b8a1a81e2f",
        "cursor": {
          "ref": "4b8703b4-fccf-4490-bd1c-23e763640b83",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c44c56f1-cc2a-496b-b3a9-677873b6b993"
        },
        "item": {
          "id": "2bc48d79-862f-42fa-9fda-08b8a1a81e2f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "85650983-7ba9-4bfc-9528-f1b98a515977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3bb0ed-c3f0-4f39-93cf-223af8547457",
        "cursor": {
          "ref": "c3ee2a93-27b9-409b-aa27-cabd3be3c26e",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "657081ae-7c27-4c6a-aa87-4afde38f0573"
        },
        "item": {
          "id": "bf3bb0ed-c3f0-4f39-93cf-223af8547457",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3499be31-a3a0-4bbf-aff0-b9cbd45bad08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a121dbd7-c935-4d1e-bfcf-e011bd9b4f13",
        "cursor": {
          "ref": "c5d96309-6da7-470e-bf03-45f668fcf1b1",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d4f136af-35b7-4d35-be15-6d36ed1da04b"
        },
        "item": {
          "id": "a121dbd7-c935-4d1e-bfcf-e011bd9b4f13",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f79e1ca3-c016-412b-8468-9dacf6443101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb3dc80-3fee-4430-8bfe-47324fdffd79",
        "cursor": {
          "ref": "b300d5a8-5781-4efb-8a45-4ffb806c9492",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "88ac9de6-742a-4722-ad89-15e1981bffb8"
        },
        "item": {
          "id": "2eb3dc80-3fee-4430-8bfe-47324fdffd79",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a2d72d01-aec5-4812-975b-c07a006460f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a570d448-4220-4534-ad87-318257c63436",
        "cursor": {
          "ref": "62032f62-a6e5-4d2c-bcf1-ce0a33a5ff0a",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a5482955-2ea1-460f-b149-48b9ee062fa8"
        },
        "item": {
          "id": "a570d448-4220-4534-ad87-318257c63436",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "483ede71-14a1-4706-9209-cc575fc1109d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db81cde7-f03c-45d5-8e57-d8614c2e3a6c",
        "cursor": {
          "ref": "5716f0b8-c2c7-4f5e-bb81-df762c82026f",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1a53b9fa-f9d2-40a2-9f2d-6764acbe9a34"
        },
        "item": {
          "id": "db81cde7-f03c-45d5-8e57-d8614c2e3a6c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7a703926-3912-45b5-9ad6-9bff087853dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9045b187-f4fa-4611-a5ce-77f11e077026",
        "cursor": {
          "ref": "b0b53d23-6213-4a57-bb0a-e043019f1d2d",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "08f15b3c-591a-42a8-8326-a6bf40a222b7"
        },
        "item": {
          "id": "9045b187-f4fa-4611-a5ce-77f11e077026",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fd592719-8325-48cd-b3c1-e509f31ce280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f53fc1-3b9e-4d0b-848d-efbeddf1053c",
        "cursor": {
          "ref": "9ca134da-c691-4d2e-926b-deabcfaef157",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "71fea46a-801c-4412-8337-66a64f7d2600"
        },
        "item": {
          "id": "b8f53fc1-3b9e-4d0b-848d-efbeddf1053c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b480c7a8-cc2d-4b1f-af8d-00dac5a84400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7146a6-00a7-4398-a0ad-20b91b1a324c",
        "cursor": {
          "ref": "0d959483-715b-40ea-bd90-5d5a454dba3b",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "bb3f2c97-dd98-437e-8a61-8567832d68f1"
        },
        "item": {
          "id": "8d7146a6-00a7-4398-a0ad-20b91b1a324c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a37b79d5-a36c-4233-bd6c-dffba5d43e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ca1d9b-1ef8-45db-a928-fd72b7633e98",
        "cursor": {
          "ref": "5d3cbf0d-acde-48aa-bbec-15d8980e9ead",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ca51d1b8-6806-48a7-b8ac-50cec9b9a24a"
        },
        "item": {
          "id": "94ca1d9b-1ef8-45db-a928-fd72b7633e98",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f6eeef47-56ce-4af7-89c3-fb4f901bb63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2cc42cb-7eef-4240-bb10-af3f64dbf8a6",
        "cursor": {
          "ref": "f7e9fa00-32a2-4540-942e-daaac2800ab8",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e1520f52-1010-4c87-8dba-bf47a7b94834"
        },
        "item": {
          "id": "c2cc42cb-7eef-4240-bb10-af3f64dbf8a6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4eded0fe-01e2-4922-aaff-131829b97e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef1ca68-b913-4f68-98c2-d76875c42a0f",
        "cursor": {
          "ref": "8b2b1377-a134-4982-8780-d985f8f89827",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "705209be-992c-4a45-925e-3cdf330a1ebe"
        },
        "item": {
          "id": "aef1ca68-b913-4f68-98c2-d76875c42a0f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "bb5ad2ca-d3a9-4383-b138-70dcddda7eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7384eb-fcb9-45aa-bb48-80030f042708",
        "cursor": {
          "ref": "52a3f3b6-a2a4-4609-b160-c991e98e0ffb",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "756ca571-646d-4e2c-bda5-91074eb16057"
        },
        "item": {
          "id": "0e7384eb-fcb9-45aa-bb48-80030f042708",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f406e90e-6afe-4816-be94-2cf512860cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912694f7-1585-433e-8fda-749894da773b",
        "cursor": {
          "ref": "b9b64d8d-c3d9-41e1-a888-d0229686fb9d",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b55566ef-a738-491c-9657-0624768ab757"
        },
        "item": {
          "id": "912694f7-1585-433e-8fda-749894da773b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "47ac1c6e-e744-411b-8276-12f0376aa617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382c36a1-5f97-48b1-b87f-5955ff4ec8df",
        "cursor": {
          "ref": "4540f162-407d-41aa-80b8-e19912af3de2",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9d7de253-ab3f-481b-b121-a5e0feabd46d"
        },
        "item": {
          "id": "382c36a1-5f97-48b1-b87f-5955ff4ec8df",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b6734209-8854-4812-bb65-6a6c51743b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbee141-44ba-4589-b0b6-b994ed6bd6af",
        "cursor": {
          "ref": "d5321669-492c-477c-b8ed-5bd814b1596d",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "85197bd4-bb19-4c03-ad66-745c09f0914d"
        },
        "item": {
          "id": "cbbee141-44ba-4589-b0b6-b994ed6bd6af",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3955cc66-d9f1-457f-b6c8-89c5d9617db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8067a6c4-1bb0-4dd2-9f03-66230707997e",
        "cursor": {
          "ref": "53e933dd-3d65-44b1-86fd-cf994af3ac78",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b94e783e-6953-40fc-a1b4-bce284eae6ce"
        },
        "item": {
          "id": "8067a6c4-1bb0-4dd2-9f03-66230707997e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b74fcc42-a0cb-4e6a-8f7d-bb61df538a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbefad11-7b6e-44af-abc5-70fd04d11d4b",
        "cursor": {
          "ref": "85db0bf5-678d-46c9-b1d1-44f2042796ec",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7f3570d0-d416-4e3d-8e88-e2090ad26a79"
        },
        "item": {
          "id": "dbefad11-7b6e-44af-abc5-70fd04d11d4b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "dd70305c-4701-49db-bed5-630986026d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2ff942-1c8c-4e5e-8043-5785498405ae",
        "cursor": {
          "ref": "471214f0-87bf-4299-847f-8be43f27c40a",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "bc301295-ff62-4298-a0ca-96fdf570d387"
        },
        "item": {
          "id": "fc2ff942-1c8c-4e5e-8043-5785498405ae",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "60f357b1-36ac-413a-b266-3c53c0166f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa1f58d-20de-40da-a127-ad08f96d891f",
        "cursor": {
          "ref": "da127316-9c51-4eea-a0d8-8edb1249c187",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "dc48013a-8df3-4612-97e5-0e2d445b7b46"
        },
        "item": {
          "id": "5aa1f58d-20de-40da-a127-ad08f96d891f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ae0d51e6-cb40-4132-9668-4a97ba9efa11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc93f1b-b9d3-4e57-9580-6afa8338870a",
        "cursor": {
          "ref": "c4082f89-a2ab-48f6-ac15-240ed0bd0086",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2f8b9b3f-5240-4689-855b-5a79139a1473"
        },
        "item": {
          "id": "fdc93f1b-b9d3-4e57-9580-6afa8338870a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "fa4f7237-8284-4a94-b85c-d6e46df4e4f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94765965-e710-48e4-84a6-e4acc26b944a",
        "cursor": {
          "ref": "bfbfb212-8b65-44b9-82f4-a5773bdd894a",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c8afe680-827c-4ae2-ba27-67ed85dc2a36"
        },
        "item": {
          "id": "94765965-e710-48e4-84a6-e4acc26b944a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d74afeb4-d41e-4209-8213-eadb1ce2afe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4268f8-b3bf-4c8f-bebc-d16ecf980216",
        "cursor": {
          "ref": "8667e03f-6267-40b5-8fdc-a30d312a3a06",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c6552653-c6e8-4a7f-b599-97ea5b007d5c"
        },
        "item": {
          "id": "ec4268f8-b3bf-4c8f-bebc-d16ecf980216",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9eb0ce3a-77f8-40cd-a59d-e183e3d525cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3934197c-15ad-40b1-a12b-52d81fc79819",
        "cursor": {
          "ref": "71a48af8-a1ce-4182-b13e-0edac536ccc5",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3e056ff9-29e9-4c35-a6bf-13f9474104c0"
        },
        "item": {
          "id": "3934197c-15ad-40b1-a12b-52d81fc79819",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "81cdc14e-a45f-4d6d-81d0-0c388749c801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd669b5a-d629-4c8f-aba7-0b76a41e7072",
        "cursor": {
          "ref": "c983d42d-b5c1-42ad-b39c-d9d62f5100ed",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b74fa0c4-b8ab-48d1-95aa-619d161b5ee4"
        },
        "item": {
          "id": "fd669b5a-d629-4c8f-aba7-0b76a41e7072",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b707387a-77ee-4a46-a06c-a486f1f0cac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68050b1-ccbb-4cf2-b4a1-39fb5f54ec04",
        "cursor": {
          "ref": "65515f38-8227-4202-b323-f22860d683c9",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "60c148cd-f294-4dbc-850a-946a2e067b7a"
        },
        "item": {
          "id": "f68050b1-ccbb-4cf2-b4a1-39fb5f54ec04",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7ca06b25-6e57-4918-8ef9-0dfd0bc19bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f9772d-f34c-43df-89ba-b0a2b3542406",
        "cursor": {
          "ref": "f8b253ef-efd0-4fec-b748-c33d4569ab23",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7e59d947-d3ec-4626-ba1d-5b92e4d06cad"
        },
        "item": {
          "id": "30f9772d-f34c-43df-89ba-b0a2b3542406",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4df63dcd-0571-4f8d-8e29-52eba7a3a16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab6c21f-dc37-48ae-a945-f0a2658b94f3",
        "cursor": {
          "ref": "b4987d74-b9b4-4dc6-914e-9dadc1313572",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b439d6d4-608b-48f4-a983-0e2b7414077f"
        },
        "item": {
          "id": "3ab6c21f-dc37-48ae-a945-f0a2658b94f3",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "dce0f9d0-b79b-4b46-ad80-a0ef76a54c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba1c917-10e6-49a4-9947-3a8832d199be",
        "cursor": {
          "ref": "ecb179c1-7f3e-431b-a982-be169cdaae01",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5d775fb6-b3c2-4a0f-be60-79b1cc081291"
        },
        "item": {
          "id": "5ba1c917-10e6-49a4-9947-3a8832d199be",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "638bea2d-b249-43b8-85a9-7dd6262e2a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f3a1c6-6456-40ac-9ccf-a67b6d611cdd",
        "cursor": {
          "ref": "db7436c6-2995-4ac6-83d1-fca5baf96e0e",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "823dfafd-094e-41c2-96bc-82f2f9a49abd"
        },
        "item": {
          "id": "06f3a1c6-6456-40ac-9ccf-a67b6d611cdd",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a662bfba-b3b5-4cb1-a111-2c34a6438048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993260b5-871d-4429-9bf9-c366d08e0bc1",
        "cursor": {
          "ref": "80ae3cd3-3c4d-4605-8b2a-840be4e742e3",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "de874fb6-964e-4e77-aaeb-0bacf6f4413c"
        },
        "item": {
          "id": "993260b5-871d-4429-9bf9-c366d08e0bc1",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1dc32d8a-9a3e-43f4-8641-95faeb6ba412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670c4bc0-4317-4b2a-b9eb-31e3c195898b",
        "cursor": {
          "ref": "f91a11fa-ca41-4dec-8cf9-bc5a741daf0a",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "538b0542-8540-4a2a-8f9c-1c9dae64ac0d"
        },
        "item": {
          "id": "670c4bc0-4317-4b2a-b9eb-31e3c195898b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "cc7bfce5-b2c2-47a9-8ec5-b61f35d46e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8e7643-85c9-4ad2-ad8d-214440fcb956",
        "cursor": {
          "ref": "2751eb37-9f6d-4221-886f-706362ada47b",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "00db4824-c36e-45be-8478-60a471b9401a"
        },
        "item": {
          "id": "3b8e7643-85c9-4ad2-ad8d-214440fcb956",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9e7b4c12-c0bc-44e0-9ff6-98c1f764c89b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c21a4c-e6cf-4eb6-99bb-d83ec925a52c",
        "cursor": {
          "ref": "10dab4b1-6a24-4dee-a1e5-ab39f4e4395a",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ab7307a6-cf38-4277-8eba-35c16ec8b857"
        },
        "item": {
          "id": "19c21a4c-e6cf-4eb6-99bb-d83ec925a52c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d01e4748-9855-41a3-9f5a-43596b175ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3824c37-b2af-4e71-8be3-5a31973bed76",
        "cursor": {
          "ref": "3ed98d17-7a80-43ba-a627-7494ec8a0257",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "90d2c45c-a8c7-484e-878d-bad1f4bf0490"
        },
        "item": {
          "id": "f3824c37-b2af-4e71-8be3-5a31973bed76",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b14ec3a6-553b-4db7-bf14-0fe5c8807bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e89456-887e-4937-b243-26a602ac00a1",
        "cursor": {
          "ref": "f837d8cc-15d7-419b-8564-92a99e4f0a61",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "76e665eb-5422-4989-9dcf-f5b1cf57a166"
        },
        "item": {
          "id": "e4e89456-887e-4937-b243-26a602ac00a1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3bbc47fc-5572-4fba-ab1a-77109ed832fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7422aaf-6b51-47f2-8574-bd6abec1efc8",
        "cursor": {
          "ref": "a835c279-1200-4900-bb12-fdf4733b2cb1",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "433e5afc-7416-4073-a8d1-b585cdbd2476"
        },
        "item": {
          "id": "c7422aaf-6b51-47f2-8574-bd6abec1efc8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0d3b2eee-a241-4962-9521-9de62c6063dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268937d8-1bc6-4d5c-869a-1ab2830a89a4",
        "cursor": {
          "ref": "9312b6b3-b754-4c3a-bca4-a4d676992859",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6e787e66-1445-49be-943a-70479c715f2b"
        },
        "item": {
          "id": "268937d8-1bc6-4d5c-869a-1ab2830a89a4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "79520c7f-643d-44b1-8ae2-bfcd631fff21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1537bfb7-146b-4b76-b090-83e897e4783e",
        "cursor": {
          "ref": "8770a215-94d5-4143-816a-b2f26b368dd5",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "679c3dd1-373b-4893-9858-fc70099a52f6"
        },
        "item": {
          "id": "1537bfb7-146b-4b76-b090-83e897e4783e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d1d7c67b-e56f-4989-ab09-632a2fa7ccf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba155902-55f6-433a-87c0-4be7abd14325",
        "cursor": {
          "ref": "4a11b8bd-799b-42e8-97ff-dcb92ee80076",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0ed75ae0-f4d7-4748-a0b2-7451fdcc7e0d"
        },
        "item": {
          "id": "ba155902-55f6-433a-87c0-4be7abd14325",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "27668ea0-a995-437b-b454-25e175ddae64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f5779c-f240-4342-86b9-c9f37a9c936e",
        "cursor": {
          "ref": "d58b34c2-c486-4a6c-8bec-9535faf12d20",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "da9bd9d2-b601-4cd0-a2be-98d8a09b0de4"
        },
        "item": {
          "id": "f0f5779c-f240-4342-86b9-c9f37a9c936e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2c3eeb9b-0db6-4409-b4f6-764c13085095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a60dfec-1180-42da-8d6d-58755d2201f2",
        "cursor": {
          "ref": "93b0ce9c-60bf-42bf-8efb-1b9587253382",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c41bc949-b77a-4919-8a74-fd3412ea0fce"
        },
        "item": {
          "id": "8a60dfec-1180-42da-8d6d-58755d2201f2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "532cf0a0-67c8-4b42-905a-40f44ed9dd7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e1abcd-8897-46ee-b2e5-83631630ac8a",
        "cursor": {
          "ref": "0d04e223-cd8e-445a-8e0d-761ede06a8a1",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a9f135e2-7a63-497b-9353-05067abed9fa"
        },
        "item": {
          "id": "b1e1abcd-8897-46ee-b2e5-83631630ac8a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "78bf4f44-c9af-44fa-bc30-c3056c997645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac65989c-82b8-4909-8ce2-ff5b7b91ce90",
        "cursor": {
          "ref": "850647f6-9752-490b-8dd1-d409e834f9a5",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8e941c3b-b6d1-43e3-950b-3f68befce6d8"
        },
        "item": {
          "id": "ac65989c-82b8-4909-8ce2-ff5b7b91ce90",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "91423743-aded-4c0f-99ae-64a3924cd0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78bc74b-57f7-4266-afd5-b2364adc86ca",
        "cursor": {
          "ref": "0b2d5b9f-1344-471a-aa1f-9d1e40a015f1",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c82eed35-e397-4ddf-bc0a-56f75d333276"
        },
        "item": {
          "id": "f78bc74b-57f7-4266-afd5-b2364adc86ca",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "82cecdcc-c109-4a28-9f1f-0346e4eea1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8d6032-8e75-4734-9d01-6230e35931b3",
        "cursor": {
          "ref": "f22d9a1c-0918-4d4f-86b0-69056ff528d6",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c1cad5a9-bb67-4b83-9d1f-20e3dad51d40"
        },
        "item": {
          "id": "1b8d6032-8e75-4734-9d01-6230e35931b3",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2709c852-f1c6-4a59-8348-53251b0a9e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39fd54d-2c76-4345-af76-f3f105c113b4",
        "cursor": {
          "ref": "b2f126ad-5dcf-4f99-951a-0e934349e34c",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7aaaa1d8-0d20-45f4-83af-3706f3f92c31"
        },
        "item": {
          "id": "f39fd54d-2c76-4345-af76-f3f105c113b4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "09e2e700-a1fd-4ac3-a994-b99daceaffe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f143fea4-073f-4304-919b-69211e46ea36",
        "cursor": {
          "ref": "7fc1f222-460d-4984-913c-e613491df3f6",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4dbc39f6-d2a4-4180-9c90-2076a3a7d397"
        },
        "item": {
          "id": "f143fea4-073f-4304-919b-69211e46ea36",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "46dc5704-8e4e-4ea5-b074-9cbea78d35b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b5e8b5-c381-4d84-b272-4abbc24b4769",
        "cursor": {
          "ref": "6740baa1-a1c8-452f-8e00-ef99b4a1c688",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "09a9cf36-b118-4c25-bad2-8afb03019390"
        },
        "item": {
          "id": "68b5e8b5-c381-4d84-b272-4abbc24b4769",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "39794c20-a872-4d36-95b8-0999ff578ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb461d11-4b35-4a94-a78b-a8c7b0f0df19",
        "cursor": {
          "ref": "93045ae0-cccf-401b-950b-db110ef63461",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "dd1ac883-c6a8-481b-80e2-c974523e0cbc"
        },
        "item": {
          "id": "cb461d11-4b35-4a94-a78b-a8c7b0f0df19",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4e88e40e-400d-478b-a960-3a3dd79faab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc34196e-2c30-4e90-803f-4a28963ced1f",
        "cursor": {
          "ref": "09f8a029-2abc-4d41-80ea-192aab0b5862",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2a2e0ea5-7e0b-4a4e-a6dc-190f346d32af"
        },
        "item": {
          "id": "dc34196e-2c30-4e90-803f-4a28963ced1f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "98efa9b8-a97d-480d-8252-a1d75b24d85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6cf32d-aa1a-4fed-bf69-090fffacc81b",
        "cursor": {
          "ref": "7efd127b-521e-443c-a53d-c72769da4512",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "56b8730e-a9e7-4e77-8123-1483fd738fb3"
        },
        "item": {
          "id": "ee6cf32d-aa1a-4fed-bf69-090fffacc81b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e04b6b08-f673-4d06-ae8c-257f1cd8fe32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5c3a40-e565-44ff-856c-59977123522d",
        "cursor": {
          "ref": "96a61e2e-02cc-4ab0-a6fe-9c2363e053ee",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8794e9a4-345e-4910-afce-075397e36fdd"
        },
        "item": {
          "id": "4a5c3a40-e565-44ff-856c-59977123522d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "586e8b05-bd8f-4058-a20f-ed5922a9fd0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6541bc7a-b530-419d-9712-79707e04551e",
        "cursor": {
          "ref": "0f80b43a-158e-4397-830e-5ee7d343cfcf",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6ee0d00a-65ea-41f5-998d-e3e7579033b1"
        },
        "item": {
          "id": "6541bc7a-b530-419d-9712-79707e04551e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ba17c8f0-d2cf-45b8-ad45-0758e823f5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d2f52b-ef96-4209-8426-759a0c7286a9",
        "cursor": {
          "ref": "b4a8947a-7898-4b1b-bcd7-292d78575f13",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "48f464bd-0998-4d07-ba95-6c59cdc10c40"
        },
        "item": {
          "id": "b9d2f52b-ef96-4209-8426-759a0c7286a9",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4c8ceaee-c4f2-4971-94da-b44e74589660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f556d2-d91c-44de-93ef-a5ed2e2b7aeb",
        "cursor": {
          "ref": "67ceb6a3-50a2-4aeb-a2fb-f812383ea12d",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ec4fb7b8-84ca-40a7-8cf0-e4b31e81b37f"
        },
        "item": {
          "id": "01f556d2-d91c-44de-93ef-a5ed2e2b7aeb",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e8664e01-5ab9-47d7-9237-24e70ef53146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2932c60-d6fd-4deb-9caa-1afca3daa091",
        "cursor": {
          "ref": "1047f7cd-2464-4972-8935-bff79b3d26d0",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ccbbe02f-b4a8-4ba0-8a06-7e890efb8a7d"
        },
        "item": {
          "id": "c2932c60-d6fd-4deb-9caa-1afca3daa091",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d474b9e1-ab0a-4f90-849b-83b433ed5d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f39aad-b18d-4b0d-8ad1-4b5c9ddfd689",
        "cursor": {
          "ref": "22d8e7a0-0ece-4b14-89b4-7dbdfa29615b",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8fc0933b-414c-4dfb-b4fb-9368a378497c"
        },
        "item": {
          "id": "92f39aad-b18d-4b0d-8ad1-4b5c9ddfd689",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "527f9fb6-0b1d-4b73-b01f-caf40b74565f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee272d7-ddeb-478a-88ca-ea6eafb2c200",
        "cursor": {
          "ref": "c04cd664-a265-46e0-9510-49163fdc7b54",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fe3070d3-679a-4a02-ab3c-98893af0b81f"
        },
        "item": {
          "id": "0ee272d7-ddeb-478a-88ca-ea6eafb2c200",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "aedaf106-09e5-464c-bcbd-ff063b917a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f21efa3-1317-4ae5-ac16-f9085fb49c1a",
        "cursor": {
          "ref": "1c259f6c-e239-4587-b8ac-5e8889a1cfe3",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "93251983-0820-454b-8582-e6f21d35663d"
        },
        "item": {
          "id": "5f21efa3-1317-4ae5-ac16-f9085fb49c1a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3ec2ccdf-94f2-4450-9063-8d6ca751c599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75414340-d4f9-40a1-ba6a-1740021dd6f8",
        "cursor": {
          "ref": "10a851a4-3664-4306-b740-a613982860b5",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "699e244e-9b8d-4d14-9b2e-ef11e7653092"
        },
        "item": {
          "id": "75414340-d4f9-40a1-ba6a-1740021dd6f8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f68c933a-76c2-4077-a58b-f70e7e3dc66e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26401a83-3bd1-4d9a-80f3-43c6db6f212f",
        "cursor": {
          "ref": "0583591f-35b9-44e5-b21a-b35a9c81d81a",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "93c0d4d9-1360-47cd-8b36-1ff64c34920d"
        },
        "item": {
          "id": "26401a83-3bd1-4d9a-80f3-43c6db6f212f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d918a826-bc06-4ae2-a10a-0b28d90f0614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0286f69e-64c6-4ee5-8ae3-bbe19998e90d",
        "cursor": {
          "ref": "4cecd4aa-69e3-4870-82e0-32956b53e0db",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a4771c32-831f-43c4-8d00-25b0448c42de"
        },
        "item": {
          "id": "0286f69e-64c6-4ee5-8ae3-bbe19998e90d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d113a9fd-db70-4c12-8955-ea93e9b3cca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17244062-a453-411f-9daa-04726f6d647b",
        "cursor": {
          "ref": "4832d949-5761-4fb4-8e3f-2bb16b80768e",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "763e33ad-c6b7-4d24-ba08-a1230c33c37f"
        },
        "item": {
          "id": "17244062-a453-411f-9daa-04726f6d647b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "95344275-f514-4b63-a51a-7c9d7bbafa32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 919,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a048bd7-ba9b-4f61-8dfb-5931f5c1c559",
        "cursor": {
          "ref": "7f3eb1b7-3520-41f9-a9a3-e499568623af",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "457ec9fd-5363-4b4e-b0d7-f6675f7e9121"
        },
        "item": {
          "id": "6a048bd7-ba9b-4f61-8dfb-5931f5c1c559",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7b969003-f683-421e-a2cb-8c8309c00f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d25613-9ac6-405c-a56a-1eac75e2c260",
        "cursor": {
          "ref": "454b563d-7a23-448a-ab84-91a40a627f31",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2733d824-b1d2-4ce9-87f8-ab5e23de27a8"
        },
        "item": {
          "id": "c1d25613-9ac6-405c-a56a-1eac75e2c260",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6939c930-8e83-4aa1-a7a8-79ce676203f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86bd8837-5e45-4362-aad4-d09370175ff7",
        "cursor": {
          "ref": "ad40fcf7-46a7-4fc4-8eb2-4c4773cae67f",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "07d65974-7548-4558-822f-0d7c65709bf4"
        },
        "item": {
          "id": "86bd8837-5e45-4362-aad4-d09370175ff7",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9967edc0-73d2-4ff2-b6ab-e46e46d549bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ab1fc9-1801-4b01-b741-83bee3311eae",
        "cursor": {
          "ref": "a062d415-1f90-4a7e-9120-fdeb3a9b2a96",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "23c34656-492e-4194-9e5a-236415aa2131"
        },
        "item": {
          "id": "20ab1fc9-1801-4b01-b741-83bee3311eae",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "04198b43-d93e-4baf-8237-93df03c4c35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee8b63e-136c-4742-9099-2571273c1097",
        "cursor": {
          "ref": "c217a722-e1bb-4e78-a824-1e2546b7eaf5",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "35c48473-4fb8-4bc0-8d2a-d9855e54beb4"
        },
        "item": {
          "id": "4ee8b63e-136c-4742-9099-2571273c1097",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "56509783-b7b0-471d-96ca-0235762ec362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2221263-5568-4072-8a58-b96a79c2c556",
        "cursor": {
          "ref": "8fbfab6d-8a72-44ef-bcf6-cd4a20195591",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3098cad8-1048-4bed-abb6-dd95536275b8"
        },
        "item": {
          "id": "a2221263-5568-4072-8a58-b96a79c2c556",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c3c10fe7-2a28-4a13-a392-4824e3e9169b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 167,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e31e74f-87ce-47c8-918c-b6da174851ab",
        "cursor": {
          "ref": "65b633c3-5bbd-444f-a9a7-66bccc7be3bd",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "68762834-5d32-4835-99fb-4d310b118561"
        },
        "item": {
          "id": "9e31e74f-87ce-47c8-918c-b6da174851ab",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "edf8dd7d-f421-454e-a404-9e0e9dc07f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0cbe22c-aee9-4fc6-9621-44fc42aaafbe",
        "cursor": {
          "ref": "fdb9186d-cade-488c-9a73-d9bff26d1e89",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b39cf61e-464c-498d-8489-26484da795f7"
        },
        "item": {
          "id": "b0cbe22c-aee9-4fc6-9621-44fc42aaafbe",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "65152ea5-c504-4335-9e9d-9dab689de128",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a3fb48-9cb6-461f-a4cd-f9f8a72c9347",
        "cursor": {
          "ref": "bd475854-da3c-4fac-9f4c-7a435cfa86e9",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1966bbc6-f5b3-47c4-adc5-3958df3a906c"
        },
        "item": {
          "id": "65a3fb48-9cb6-461f-a4cd-f9f8a72c9347",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "552e3a46-c729-4f00-9613-7250770af523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "04d9ed23-62d1-4cf6-930d-0e241a10d171",
        "cursor": {
          "ref": "b3ff2dee-3376-40c9-9776-dd485bdcb497",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "59abaecc-0aa8-4070-b536-bef52d47d513"
        },
        "item": {
          "id": "04d9ed23-62d1-4cf6-930d-0e241a10d171",
          "name": "credentials_issue"
        },
        "response": {
          "id": "99bdedac-1b47-4673-b090-0dbe524454a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "b85349e5-6b30-448d-9a3d-790582685cf0",
        "cursor": {
          "ref": "f5d66356-f4b2-46f6-8bef-8ad6f9c01bb6",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "adefd235-3e53-47cb-9e8b-4a0219ded4bd"
        },
        "item": {
          "id": "b85349e5-6b30-448d-9a3d-790582685cf0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d2b8740c-6e92-419e-9dd3-5a25f367ad87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "2e748b52-5afe-4f65-a9db-39e069d85c37",
        "cursor": {
          "ref": "5f98541d-2533-45ca-a745-cb4d41a2d6a0",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9d770e65-4ffe-4794-80bb-d7c235720aa0"
        },
        "item": {
          "id": "2e748b52-5afe-4f65-a9db-39e069d85c37",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9ee18e97-180c-4786-9710-25102fcd33ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "2d61cbd0-22e6-49d8-bcdf-5653760c03a3",
        "cursor": {
          "ref": "b30e57fc-ddb4-42ef-9f66-d6d70f3a113e",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0dac480f-a557-4989-965f-e70fa46f6b65"
        },
        "item": {
          "id": "2d61cbd0-22e6-49d8-bcdf-5653760c03a3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8253662f-f8d0-4042-8339-11315707a7b9",
          "status": "Created",
          "code": 201,
          "responseTime": 6379,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8493094-769e-4cf9-8f62-28e231467731",
        "cursor": {
          "ref": "ac57e047-a045-4876-9622-15eb2c0f7a9d",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "390576cf-f8bf-4ef6-b5cf-d65c1878e61a"
        },
        "item": {
          "id": "c8493094-769e-4cf9-8f62-28e231467731",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5f9c83fb-9d39-4f71-afe6-41cf4725bfab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "14321f56-8d46-4f4d-afe1-8ba74e1ec290",
        "cursor": {
          "ref": "f8f449dd-5833-4538-bac5-fe999e2ada5f",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9f883c66-75ea-4f33-a2dd-ab877e60302a"
        },
        "item": {
          "id": "14321f56-8d46-4f4d-afe1-8ba74e1ec290",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "252018c6-ce0c-4846-921a-efc8cfcd591d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "3f34b0e8-df01-45af-af92-115bbc16b82e",
        "cursor": {
          "ref": "b52e8c28-0075-4102-869d-2e2fc8e748bd",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c2456061-1108-476a-a591-653c107de7ff"
        },
        "item": {
          "id": "3f34b0e8-df01-45af-af92-115bbc16b82e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8711d780-4121-4c64-976a-6db0aae044cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc354ed2-a576-4099-9919-734e031e150b",
        "cursor": {
          "ref": "2be906a5-7e70-4af0-a52f-91569c31543e",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "46950e0e-f4d0-4619-a1bb-d53140b15dd2"
        },
        "item": {
          "id": "bc354ed2-a576-4099-9919-734e031e150b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "59c368cc-0732-44dd-aa6c-d02729947fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e11597-5a51-4a32-8de0-d01bc4c9ed22",
        "cursor": {
          "ref": "ca08b36a-ed60-42f9-b363-bd2deb0d821b",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2be6601a-1e89-4d70-9084-ece345d8ddfa"
        },
        "item": {
          "id": "87e11597-5a51-4a32-8de0-d01bc4c9ed22",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "98000e53-0aab-4165-8c7e-d22b691f2c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1142d048-c155-44b4-8692-c7945b8f61d1",
        "cursor": {
          "ref": "dd86550a-c4b8-47b8-9c25-bd791c04c5d9",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "dacd732c-874d-436b-88f6-a458e5d7c211"
        },
        "item": {
          "id": "1142d048-c155-44b4-8692-c7945b8f61d1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "dc429608-8454-4d0c-b275-9daa70b9582c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f032916-af73-4c96-8345-90748b04d248",
        "cursor": {
          "ref": "ad42fac3-4430-48b0-a8d9-83a0b306e70f",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c77b4566-4c4a-4b1c-8671-1485dfb6bc11"
        },
        "item": {
          "id": "0f032916-af73-4c96-8345-90748b04d248",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ed2c1c9f-1550-45cc-a48e-6f361645dd5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b78d53f-aa60-439b-8a35-c8404bb07985",
        "cursor": {
          "ref": "c3afc231-50bc-46fc-a5d2-5b9f17e9fea0",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8802eea4-6af7-415a-a929-5b51b019b762"
        },
        "item": {
          "id": "7b78d53f-aa60-439b-8a35-c8404bb07985",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9a425796-8b6f-41b6-8edb-745e36bf570d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78bb1a7e-322e-4749-92c3-f8875d008a9f",
        "cursor": {
          "ref": "01064123-841f-4552-b346-24d2333f6c56",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c82ac91b-9ecc-45de-8ea1-c13f5382121c"
        },
        "item": {
          "id": "78bb1a7e-322e-4749-92c3-f8875d008a9f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b764fec8-535a-440c-825e-2950ed5e903b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bb92bc-e647-4cc3-aa79-07afba8611b1",
        "cursor": {
          "ref": "cb39e5de-9b74-4bcd-97e7-b4d50fa9a608",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "109bfd87-26a9-4cca-8af5-9f364a4c24b4"
        },
        "item": {
          "id": "f1bb92bc-e647-4cc3-aa79-07afba8611b1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f10b3c3b-6d52-4944-b197-2d55ac353d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081448da-caf9-408f-a973-3342f276947a",
        "cursor": {
          "ref": "38435fcd-d895-4dfd-867a-90dda553ab5e",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e7f5f4da-ff27-4146-b653-d51e2bd4e2c3"
        },
        "item": {
          "id": "081448da-caf9-408f-a973-3342f276947a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4b2083a8-8faf-4f15-9cb4-fa9a4ca0f3e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e346a8-2ca2-402f-b226-29a4095959ca",
        "cursor": {
          "ref": "1cc3915b-5a7d-4878-bd02-87032fa6f5a2",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7b2ede60-d5b3-41b8-bbdc-daf43440ae0b"
        },
        "item": {
          "id": "16e346a8-2ca2-402f-b226-29a4095959ca",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b90aa34c-c1f2-48e1-9913-bda087590e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccbe67a9-b1e1-47ce-b23d-e4575acbbc8e",
        "cursor": {
          "ref": "ea5b6234-8f1b-4bf4-a53c-0a4be5cd6ecc",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ca7aee92-b3de-4e0a-8445-406ebcc26d53"
        },
        "item": {
          "id": "ccbe67a9-b1e1-47ce-b23d-e4575acbbc8e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "94005359-9b3d-4abd-be48-a82204369fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a5c5e0-ed77-433d-a0f3-c933aad235af",
        "cursor": {
          "ref": "9a934f2d-1cd1-4925-b783-1d5dec0253f1",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d339a5cc-88d4-48ef-9b0f-b865718c83c3"
        },
        "item": {
          "id": "06a5c5e0-ed77-433d-a0f3-c933aad235af",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2249e6dc-2762-4d8c-98ae-7aec8338d879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be75c40-fe19-4c0d-9658-8f09578e5886",
        "cursor": {
          "ref": "4789476e-923d-4f88-a7a0-5ec0421d9d97",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "922d65ae-3c97-41bb-a410-6449603a5d70"
        },
        "item": {
          "id": "0be75c40-fe19-4c0d-9658-8f09578e5886",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "618193a2-9864-48de-bd7f-afc379bb2b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365ac031-14e5-47b5-a27c-010b965fd6dd",
        "cursor": {
          "ref": "630d5fb7-3ce3-4218-8690-5b284db0424e",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f1cc8f1e-5815-4d43-9997-f5a5c959fc62"
        },
        "item": {
          "id": "365ac031-14e5-47b5-a27c-010b965fd6dd",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b6096194-fa2d-4f77-b087-53d396f8e987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23528d05-f956-4395-b805-c3051b26a206",
        "cursor": {
          "ref": "530b1257-aa91-4f66-b907-feb629c548e6",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "03a90d80-fd7d-4a69-86cd-88abbd55744a"
        },
        "item": {
          "id": "23528d05-f956-4395-b805-c3051b26a206",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "de015b96-17cb-4eef-b083-5dc8975bbcd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "167d7941-43c6-40d3-922a-e887ce9e6999",
        "cursor": {
          "ref": "61167097-c44a-4fa5-a5b9-7a32c8429aa8",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "51dc6bf1-f840-485e-921c-570e73ec64f8"
        },
        "item": {
          "id": "167d7941-43c6-40d3-922a-e887ce9e6999",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "40bf61b2-b4f8-4793-87f2-7425db6e87d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93853b99-a9f9-4234-91bc-9606f0eb153d",
        "cursor": {
          "ref": "544202f1-e6f7-4a91-a0f7-5e1ec85c1f6f",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0b98d6f4-f6b9-4706-9650-5ea6e236c199"
        },
        "item": {
          "id": "93853b99-a9f9-4234-91bc-9606f0eb153d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f841a0d1-0a66-4438-8561-59c558c95639",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "e5422694-f0fa-495b-a480-ff643b0b11ee",
        "cursor": {
          "ref": "e8e7f96d-2712-466b-8dbf-9f3c6521520c",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "42512a11-a03b-42fe-860a-0cb81daad89b"
        },
        "item": {
          "id": "e5422694-f0fa-495b-a480-ff643b0b11ee",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1c73945b-ef21-4dd5-9c47-60fd23ab32cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8308421e-7dce-4165-be15-477f0f9b4df7",
        "cursor": {
          "ref": "baf7c106-ea06-40d9-9f3a-61590a5dd976",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b9201fec-bea5-4be3-b876-91bb4f27beed"
        },
        "item": {
          "id": "8308421e-7dce-4165-be15-477f0f9b4df7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "32adffc8-e842-438a-aaef-c0e4b92656fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f3fe7f-2cd5-47f0-af48-55071e8ef6ab",
        "cursor": {
          "ref": "f283cc7f-543e-49ad-ad68-d93e92a6596e",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e182c350-c6a1-41ee-8952-010b1a315f15"
        },
        "item": {
          "id": "37f3fe7f-2cd5-47f0-af48-55071e8ef6ab",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2db992c3-053d-4b85-8a9d-cbba00eae045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb43e3b-56df-49b3-93b5-b8278f9c078b",
        "cursor": {
          "ref": "ec30fa6f-a0c5-4730-a916-13df9a02d95f",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e82a45b4-6fc0-423d-a02e-4d9381233477"
        },
        "item": {
          "id": "cdb43e3b-56df-49b3-93b5-b8278f9c078b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0cd0075a-4fa2-4d88-87aa-07bdcd0bd088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e453b2-fd89-4910-aa49-affdcad39929",
        "cursor": {
          "ref": "97ecbfad-b2cc-4c67-8de9-8b9608820628",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a53a063c-8eb9-4605-b8fc-cffa3d8be104"
        },
        "item": {
          "id": "e6e453b2-fd89-4910-aa49-affdcad39929",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a63fef69-b4b9-4298-833e-fd5ddf83cc22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc59d271-8431-4fef-b568-ac0dc9b015f8",
        "cursor": {
          "ref": "2d6e1562-9dfd-4064-b72f-6df5081f6d4b",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "00fd068a-7fe0-42d4-b9ed-d0661b066272"
        },
        "item": {
          "id": "cc59d271-8431-4fef-b568-ac0dc9b015f8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f6971720-9c8e-42ab-b202-72802c6c9843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53b0a19-c6e5-460c-a6ad-67ee826f9a7b",
        "cursor": {
          "ref": "d9d3ebd2-cc3a-4996-ba85-1d34e4807197",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a19a0550-f9f3-49e5-9491-2bd1be965d44"
        },
        "item": {
          "id": "e53b0a19-c6e5-460c-a6ad-67ee826f9a7b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a2a3a372-2ba0-4809-972e-e99b8f7a26a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1666e434-671d-421d-8d63-e55a3adb296d",
        "cursor": {
          "ref": "e10e1c6c-d5d2-434b-9c5e-c23fe2e234a2",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c2f87614-754f-4324-8918-fe357e7d2a39"
        },
        "item": {
          "id": "1666e434-671d-421d-8d63-e55a3adb296d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f306410f-3acd-4799-a443-3234689a22d2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 29,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "fc5aa199-a039-403f-b9d8-ae9e7fb5b66b",
        "cursor": {
          "ref": "8a0cbfa5-8f1c-4a44-8fed-ca74b29600d4",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7eca3186-6990-4afc-a982-6620d92881d9"
        },
        "item": {
          "id": "fc5aa199-a039-403f-b9d8-ae9e7fb5b66b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b4aca020-5949-4612-a1d1-746ffe9fd7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b42c7b8-49c8-4abc-8521-f0ec6bffb81f",
        "cursor": {
          "ref": "32f94896-ac16-497b-b682-52703fc15834",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3c10dc08-5685-4ee3-b6d8-950463f57851"
        },
        "item": {
          "id": "1b42c7b8-49c8-4abc-8521-f0ec6bffb81f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "130d8155-3c41-48f9-a256-f7a9e94ad8c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042ebe54-82b9-48b6-b01b-d679f53b895d",
        "cursor": {
          "ref": "29cf7eca-82e0-4622-afb4-a260abbc12fc",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "20bf8f98-d340-4693-8d7b-8196951be69d"
        },
        "item": {
          "id": "042ebe54-82b9-48b6-b01b-d679f53b895d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "063f3c7f-b467-4ca5-9428-4a1b49491c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394c04a7-9a5d-4938-b22d-2618918d0b47",
        "cursor": {
          "ref": "2cb364d2-3037-4be7-afa0-cb08e860a8ff",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3e7d684a-c9fc-48b2-a6c5-018fd632b22d"
        },
        "item": {
          "id": "394c04a7-9a5d-4938-b22d-2618918d0b47",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d83c1e67-a3aa-4425-9355-20ec38085846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499cc0a7-972f-4574-b442-72a7712cf6d2",
        "cursor": {
          "ref": "6013cfb7-a819-4f6a-bdd8-be403d64830b",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "661fb482-12bb-45d6-9b7d-abf3a4a0a878"
        },
        "item": {
          "id": "499cc0a7-972f-4574-b442-72a7712cf6d2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ea65e98c-8b26-4f00-9247-a54406a3eeb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9189073-0f6f-4f4e-938b-2cc2ba3e1d47",
        "cursor": {
          "ref": "8bd1099b-24d8-46be-92ac-49b56fcb30c6",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "666aa974-80c3-483b-b3c2-aacb98d96b83"
        },
        "item": {
          "id": "f9189073-0f6f-4f4e-938b-2cc2ba3e1d47",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "32a0cccd-f9a7-449e-9679-22a193054764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9ec382-28ca-43b2-8dca-791a5e7a939b",
        "cursor": {
          "ref": "3231b9b7-4217-43b8-b877-ea43ca524c44",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "cd88311c-de3e-468f-8342-9a9ef9b53c41"
        },
        "item": {
          "id": "ca9ec382-28ca-43b2-8dca-791a5e7a939b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "fd5c9da5-87a4-45ba-86c4-5a62b3be0094",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "1a5f6859-d63f-4f37-9065-5c4381a2cdb3",
        "cursor": {
          "ref": "444fb983-9531-45bb-af96-a72bd94b93d2",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "df06ab1c-d3c2-4827-8388-a89f819883d2"
        },
        "item": {
          "id": "1a5f6859-d63f-4f37-9065-5c4381a2cdb3",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "52b9b1e0-6482-4567-ac0a-f13a5b76e73b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "db0c058f-cfd3-4fa2-b609-81f58064d543",
        "cursor": {
          "ref": "34dcecef-d5e7-4967-aac4-c5ef1adb9872",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "59168cf3-4011-477f-8f23-8ae39eb5ca21"
        },
        "item": {
          "id": "db0c058f-cfd3-4fa2-b609-81f58064d543",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e9a91697-b113-4596-a2f9-47d028598a9f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 27,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "61645181-42b8-4d2f-b4ff-8f154233f079",
        "cursor": {
          "ref": "464391c5-8a9d-4605-bcb5-473c1a06842c",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2ecd2673-14bb-446c-b4ed-d4f310d7bbb8"
        },
        "item": {
          "id": "61645181-42b8-4d2f-b4ff-8f154233f079",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "016b7670-3429-41ee-9f25-588fdde9530d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 23,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "e16534e9-6f58-4369-9363-d092b3e6e9a4",
        "cursor": {
          "ref": "546b8f16-f999-4554-ac82-ecccf8b4182f",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8032b979-b8a7-46f7-bcc6-ead4623f4f2c"
        },
        "item": {
          "id": "e16534e9-6f58-4369-9363-d092b3e6e9a4",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0ae8bf84-a0ab-4cf7-a1b5-29b1328ead23",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 25,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "7556b45a-2524-4b3e-ace7-e02ee7cc3681",
        "cursor": {
          "ref": "ea6748f0-738e-4566-a6d4-13fdd6170868",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1a0b97a4-dd85-42ce-9af5-4e407e9705b0"
        },
        "item": {
          "id": "7556b45a-2524-4b3e-ace7-e02ee7cc3681",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c26e276a-a2f7-4248-9f61-d0d1d13cf788",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "6a6471ec-d0ea-4536-b47c-872e01a38613",
        "cursor": {
          "ref": "18dc247e-b960-4bc1-b799-bd43527faf4c",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "dd89dfee-e44c-4cb7-9018-845b55e700ed"
        },
        "item": {
          "id": "6a6471ec-d0ea-4536-b47c-872e01a38613",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "66a28d85-48e4-40d2-afeb-f2778a1e6beb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db47307-2bc4-4d7a-ba00-ce5d4f9fa2cf",
        "cursor": {
          "ref": "d9ec5626-7c33-4b58-bd24-947b4c7303ef",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "92d3f559-9560-4a93-af84-cb2a76da1552"
        },
        "item": {
          "id": "2db47307-2bc4-4d7a-ba00-ce5d4f9fa2cf",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b92908b9-179c-4e1a-aea4-ad3b3eb9b382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18bda618-90e0-47f0-a72b-3f812b640e6f",
        "cursor": {
          "ref": "a5f6c14f-dbc5-4e39-b7ed-8c7821b38bd4",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "532dbf45-3ddf-4e12-8559-4b0bef5ce820"
        },
        "item": {
          "id": "18bda618-90e0-47f0-a72b-3f812b640e6f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c0e52e6e-c7ac-4be4-a4aa-8d18949e8ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db52e21f-735f-4273-b586-819f7a3021e0",
        "cursor": {
          "ref": "87c5f3c1-6819-4bdc-9cd6-904c2092cdd2",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9e851b9f-8b5b-4ca3-a602-63e600cec5c3"
        },
        "item": {
          "id": "db52e21f-735f-4273-b586-819f7a3021e0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "26e35af8-8e97-4228-a818-8f4f305dbe0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07363524-d959-4b0f-affa-280a189db0cb",
        "cursor": {
          "ref": "020c3882-680d-407e-8236-0bd796b5f9c9",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0b1aaeeb-553a-4202-9af4-865b61cbfcca"
        },
        "item": {
          "id": "07363524-d959-4b0f-affa-280a189db0cb",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5d242038-c1ec-45d8-98ee-72a34396fcda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46784664-700e-4eed-bc62-1eddc342441e",
        "cursor": {
          "ref": "653f486f-db50-4965-b585-7422609e9643",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "80e814a6-7816-4a1f-9097-d732bbfb91c2"
        },
        "item": {
          "id": "46784664-700e-4eed-bc62-1eddc342441e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e0cd489b-5af2-448e-a619-9e5ec1564ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42abe75-ade5-4b0b-bc72-7cee35dcc982",
        "cursor": {
          "ref": "c63227b8-a487-4d5d-a84d-b330f8160ecf",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e8578b35-22dc-462e-8b74-51caf556d8fc"
        },
        "item": {
          "id": "b42abe75-ade5-4b0b-bc72-7cee35dcc982",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c28755cd-65c5-4b4a-92e5-099012f89d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92b27be-7183-45fe-86cb-bc8f1dd3d29e",
        "cursor": {
          "ref": "fc095ac9-1a54-4068-9e54-90f3fbce81da",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "98dfca05-4557-4e62-a99b-a3ef2693b76a"
        },
        "item": {
          "id": "a92b27be-7183-45fe-86cb-bc8f1dd3d29e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c195537c-3cc2-4d80-aeaf-909231aa4b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a41a0bd-55be-41e5-a6ba-536dbf4bee43",
        "cursor": {
          "ref": "628eee6d-f001-4a48-91ed-953c6ef542c6",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d344302e-6ca2-4090-b855-564c16ed2dd6"
        },
        "item": {
          "id": "6a41a0bd-55be-41e5-a6ba-536dbf4bee43",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a0efdf32-beed-46b3-b8c1-5efe21695235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01fa1469-9915-4e78-983f-74b0abcf92ec",
        "cursor": {
          "ref": "0436e14a-e92d-45b7-84f2-0dcabaaa1b16",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e1acc1dd-15bc-4ef5-b4d4-d775b5c090f8"
        },
        "item": {
          "id": "01fa1469-9915-4e78-983f-74b0abcf92ec",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "82da9ee2-3139-4a9b-96bd-0b43fe5586ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e33cf0c-321b-426b-a3e6-8c07f757d10d",
        "cursor": {
          "ref": "db3a8c1a-aec9-4b88-8ce1-edae18eecae7",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1e3544a7-04ec-499f-b6a8-ed9409d0b755"
        },
        "item": {
          "id": "0e33cf0c-321b-426b-a3e6-8c07f757d10d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d5c78d79-6f15-4ffa-a001-d198612b610a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ae6940-1d22-467a-a582-b84ca217991d",
        "cursor": {
          "ref": "4f1fbf66-9073-49e3-b61e-8b4498d7c92f",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3179592b-2637-4e12-a1d9-0017360a94ad"
        },
        "item": {
          "id": "d3ae6940-1d22-467a-a582-b84ca217991d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e63f3bbd-2c97-4b40-9b9f-9d300313980e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ac44fc-9906-458b-b975-1d9ad552333f",
        "cursor": {
          "ref": "0c88bca5-c5eb-4839-947f-3414e117a6e5",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6e1ea66c-8128-4f8d-bf50-f546fbb07bc8"
        },
        "item": {
          "id": "d1ac44fc-9906-458b-b975-1d9ad552333f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0d90bd39-2aee-4033-8cdb-4033f04f8ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9abf83c7-78c8-4893-aeed-6b46560753a2",
        "cursor": {
          "ref": "0f5fcd1b-1d42-4cd0-9ccd-59c298faa357",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f500f9a3-e9e1-42ca-a6fb-3d8041181bda"
        },
        "item": {
          "id": "9abf83c7-78c8-4893-aeed-6b46560753a2",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "13d6f29c-bac7-45ec-9b5c-a9aa75841506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6553168-9ba6-4483-8b97-3eba364d9781",
        "cursor": {
          "ref": "4d389a53-8044-4c1d-a1d5-13a73e1f783a",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "37033889-08de-413d-9fa4-be5a88e8a039"
        },
        "item": {
          "id": "d6553168-9ba6-4483-8b97-3eba364d9781",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "828772ac-09d5-4d65-a6d8-e2ae41262b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e836a3fe-d846-4287-8721-4e19fc770e20",
        "cursor": {
          "ref": "6e2db5b9-ebe0-4056-a514-80da65d26470",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "dfedbf47-7786-40ef-add6-f7a6e8aae7ee"
        },
        "item": {
          "id": "e836a3fe-d846-4287-8721-4e19fc770e20",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b722fc07-fbe2-4471-a120-5e87b6868122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc178c6-c8b9-4349-80b6-e3850d7fb868",
        "cursor": {
          "ref": "d5e8a6d8-5c6e-432b-a21f-1309776d921d",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a6973046-f686-46b7-885c-33fdba6f2869"
        },
        "item": {
          "id": "abc178c6-c8b9-4349-80b6-e3850d7fb868",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "017f0f21-2136-4d96-a237-c07d68e2aecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64298b08-52b8-4a94-bcb1-18451675c6e2",
        "cursor": {
          "ref": "f3ef28e4-a73b-4ad2-b950-6a86aa564571",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "93dbcf9f-98c1-455d-befe-7a46f917e1f5"
        },
        "item": {
          "id": "64298b08-52b8-4a94-bcb1-18451675c6e2",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "764df73c-6fa0-4f60-a9b4-27c38c516b93",
          "status": "OK",
          "code": 200,
          "responseTime": 151,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "ca5ea34c-2dc0-46f5-8305-e7bc58edc59d",
        "cursor": {
          "ref": "88b72616-dd08-4efa-a7c8-0459b6abb081",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6e7e5abf-0874-456d-88d8-c06c8de62c26"
        },
        "item": {
          "id": "ca5ea34c-2dc0-46f5-8305-e7bc58edc59d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "aa953b01-ea20-479e-94c6-3f356751ff8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa0636b-3ee5-4854-b03d-ad364de489d6",
        "cursor": {
          "ref": "6f1d69b0-68cb-4259-a3e7-b2fc338d2869",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2759fbcb-b0d8-4005-94f1-e90a5a2a5eeb"
        },
        "item": {
          "id": "efa0636b-3ee5-4854-b03d-ad364de489d6",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3cada34f-543c-4e41-aaaf-49f18697b912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9faa33e-fd78-49fb-a401-5ed6eb166bc9",
        "cursor": {
          "ref": "967546d1-fb59-4ed7-9588-6c6e1279ae71",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "62cd0470-dc90-4a8a-b9a1-f3d5d695023b"
        },
        "item": {
          "id": "c9faa33e-fd78-49fb-a401-5ed6eb166bc9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6076e891-1c4e-432f-9436-92534fce8e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee52419-ac5b-4227-8f3e-c0f7657082c6",
        "cursor": {
          "ref": "5ace276f-6f53-4ff6-8170-62cd51630f15",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ca0b501e-a9ed-4c7f-8af7-92eada943132"
        },
        "item": {
          "id": "fee52419-ac5b-4227-8f3e-c0f7657082c6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9b55ceed-6f59-435c-b835-128a1cc4137b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1e5401-e5c8-46e4-bcc1-c07cf95718b9",
        "cursor": {
          "ref": "1de30d4e-fa6e-41e9-95cc-f08f08e9aa92",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "bc18b5cd-a2eb-48a5-9cde-c7b07fd5a727"
        },
        "item": {
          "id": "ba1e5401-e5c8-46e4-bcc1-c07cf95718b9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1b2eee05-a576-46d1-90d4-2308f2ada005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3fcd5f-8eb0-43d6-a82d-da2ab530311d",
        "cursor": {
          "ref": "77991f2d-c989-4576-9713-0fb8c985518b",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1b4814a3-3f31-42b0-990a-205949f706c3"
        },
        "item": {
          "id": "8e3fcd5f-8eb0-43d6-a82d-da2ab530311d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0f2ee5fd-825c-40be-abfb-16e2651152f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70034a0-a27f-4287-920c-1a2c0748f5e8",
        "cursor": {
          "ref": "a042f963-a798-4f57-b850-c8a7a1041045",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ebf497a0-a3f7-444a-884e-835a3ec97c94"
        },
        "item": {
          "id": "f70034a0-a27f-4287-920c-1a2c0748f5e8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "52020984-1e56-4e3d-85b4-70d20a947bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b82379-9ee7-4c91-ba2d-225342a44603",
        "cursor": {
          "ref": "63359283-9855-4e42-9d57-43d3627388fe",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "febddd9d-7f7d-4cf8-90f4-21db4c84fb39"
        },
        "item": {
          "id": "93b82379-9ee7-4c91-ba2d-225342a44603",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0176fc87-7514-498b-924f-0697e2a637cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f154b5b5-0c56-48fa-b708-88fad2bec143",
        "cursor": {
          "ref": "d8a20718-1f12-4d90-b2a0-d0cb78a709b0",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6fe8e65c-6745-40be-ab36-4a291f33d291"
        },
        "item": {
          "id": "f154b5b5-0c56-48fa-b708-88fad2bec143",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f338275c-7b34-4fd8-a4e5-4f433fa05b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8aef47f-a6be-4b32-9926-8d0c768b3e2c",
        "cursor": {
          "ref": "048a5637-8f8f-4f44-9603-b3c05c7de0b5",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "675dc811-5a59-4ad2-b4e1-6e56fd788b66"
        },
        "item": {
          "id": "c8aef47f-a6be-4b32-9926-8d0c768b3e2c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0a96d1f9-a047-43ad-a927-9bf4ca4ed93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8257d3e3-60c4-40fa-bac2-99263703153e",
        "cursor": {
          "ref": "542844f4-dbfa-4d6a-a596-2ef8b27f1c24",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b651476d-8f9c-47b5-bf32-69411ba13f5a"
        },
        "item": {
          "id": "8257d3e3-60c4-40fa-bac2-99263703153e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9fd18999-d156-4a0e-bd4f-a669c2384403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d7d1a9-600b-4010-a8cf-26184ea6c74b",
        "cursor": {
          "ref": "18a5dce1-0919-4a33-9e31-0de73a419b2d",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "68269a43-c447-4c82-adc7-e327b632bac8"
        },
        "item": {
          "id": "d3d7d1a9-600b-4010-a8cf-26184ea6c74b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5d8bcc5e-0eba-4c75-9345-752e779721e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd9c0b7-d46b-477d-9039-c65b10f0fb2b",
        "cursor": {
          "ref": "6da3da1a-f973-42ea-a545-4f0bf8235095",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "41c321c9-f661-4605-b609-1f1a8b4ce883"
        },
        "item": {
          "id": "ebd9c0b7-d46b-477d-9039-c65b10f0fb2b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "827366d1-a3c7-49ec-b6d2-1d43f0c0369d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5dca943-989d-46d1-bbad-19d7a8d7c4f1",
        "cursor": {
          "ref": "ff2c7001-e45e-4c26-954f-d6f275ea4fb0",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "db636705-4885-4940-99d6-e03d4ffc9579"
        },
        "item": {
          "id": "c5dca943-989d-46d1-bbad-19d7a8d7c4f1",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c8106c59-4495-4f99-baea-50f166f54382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6bced5b-d227-4528-9d99-960792eab232",
        "cursor": {
          "ref": "90e5339d-84e8-492b-9096-2cd696d530b3",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3b560f10-82da-4fc2-b22c-c174b68ad388"
        },
        "item": {
          "id": "d6bced5b-d227-4528-9d99-960792eab232",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3980f93f-399a-4821-8096-1d963a423ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44791651-098e-4e3e-940b-7d23c53ce59f",
        "cursor": {
          "ref": "2b35478b-4fe4-48d1-9b4e-15a68deda069",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b7571fe2-f51e-4124-bbd9-b66bec473852"
        },
        "item": {
          "id": "44791651-098e-4e3e-940b-7d23c53ce59f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "aa1d51f4-dd8f-4603-b07d-940d18de91c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a09c6e0c-8f91-4d69-99f8-a03a024ab8aa",
        "cursor": {
          "ref": "4353ac3f-6569-45c5-9588-3cac00fd1c8c",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "73c2d48d-e8e4-4ccc-aff6-6cd61ab5e936"
        },
        "item": {
          "id": "a09c6e0c-8f91-4d69-99f8-a03a024ab8aa",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "47659ad4-213c-4e60-9657-7350f2e3dfa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab88020-b5dc-448a-99ba-127ad6a40dba",
        "cursor": {
          "ref": "339f8edf-520a-473e-a393-38ecf65a5cc0",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2086695a-c3a9-45d1-aecc-84470dd491b7"
        },
        "item": {
          "id": "bab88020-b5dc-448a-99ba-127ad6a40dba",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c1bcd883-bec6-4393-8aec-5d9f68d66663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83fa4846-7759-41e6-914c-92ce9d42865d",
        "cursor": {
          "ref": "232885c1-91dc-4f30-9c94-b5ed6ea2f586",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c5a3fa38-5282-4fa8-97ba-94a3554960b0"
        },
        "item": {
          "id": "83fa4846-7759-41e6-914c-92ce9d42865d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c968ea55-4247-47c9-84f5-18de60afb042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a04c16-512d-4465-907c-ef6020c060d0",
        "cursor": {
          "ref": "0836c93c-b119-4439-a3de-d19927aba85b",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d0d5a978-c791-4ebf-a301-252c1afdf0f1"
        },
        "item": {
          "id": "d7a04c16-512d-4465-907c-ef6020c060d0",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5f5f1fd8-ad04-47e0-bad5-0d908a6f0121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8719eb0b-b705-4f0a-ab17-8ff2dd6c4b1e",
        "cursor": {
          "ref": "0819148c-ebfb-4bb5-8119-c81912d63a9e",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e318adc9-5448-43d7-a1b7-423720d9d697"
        },
        "item": {
          "id": "8719eb0b-b705-4f0a-ab17-8ff2dd6c4b1e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1773d018-8697-420a-9e16-3ad5eefb599a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edf1751-d828-4fc3-9894-cc01e62fc086",
        "cursor": {
          "ref": "e8b7effe-6900-443d-a5bb-39cc2885fb43",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3b1265a5-3944-4e64-bdb1-d1b73dacd4bb"
        },
        "item": {
          "id": "0edf1751-d828-4fc3-9894-cc01e62fc086",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "dc8e7da0-326a-4c30-9791-2f100e3c740f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0c4ab5-97ff-4c91-9541-0aaccea05063",
        "cursor": {
          "ref": "41f7a1e1-26fb-40e7-ab03-778e83cce752",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "581c0c6a-423d-4b0f-ad15-6ddcd57d0e4b"
        },
        "item": {
          "id": "4b0c4ab5-97ff-4c91-9541-0aaccea05063",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2ab8317e-80cf-4ad5-8e13-e4125eed4829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122d5762-a659-44c7-a7ed-2050a4dca865",
        "cursor": {
          "ref": "c92c1016-a806-4488-bd59-d483ffd93255",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "15e92882-ed19-4084-82d2-6c1b49ddb48c"
        },
        "item": {
          "id": "122d5762-a659-44c7-a7ed-2050a4dca865",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b9641e9c-683a-4d0a-974e-09fa39f100e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ee8046-69e2-4d22-a714-924fa928e408",
        "cursor": {
          "ref": "67304b59-1318-4a95-8e10-e7188bfe9b0b",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b386c94d-18c1-4b48-9709-f473523163bd"
        },
        "item": {
          "id": "d7ee8046-69e2-4d22-a714-924fa928e408",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f525a859-f277-448c-bd44-e6ae3145014e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22610bea-0f40-4741-9606-51c5ffd36454",
        "cursor": {
          "ref": "4be032c1-6bd8-4f9b-8f45-49e31ba84594",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "bd44137b-4f80-4593-a97b-99e94273fb32"
        },
        "item": {
          "id": "22610bea-0f40-4741-9606-51c5ffd36454",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "99efa03f-00e8-4d45-934b-7bf25c6f0a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfcde971-9fa6-4efe-bc38-4f49a732a043",
        "cursor": {
          "ref": "897ebb22-7bb8-498d-959d-ec91eba631fd",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "793c822b-f736-473a-a1df-b2b3186d2b35"
        },
        "item": {
          "id": "cfcde971-9fa6-4efe-bc38-4f49a732a043",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4374052d-ab95-43c2-b97c-e532271d7021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c060f7-8291-41f0-8736-48bac1f3cace",
        "cursor": {
          "ref": "36229286-0bfa-410a-8691-db9aebf1ba62",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "20726b55-212c-42d2-8ad0-6032228f7a9d"
        },
        "item": {
          "id": "a0c060f7-8291-41f0-8736-48bac1f3cace",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6cedd3ec-388e-4a93-8727-c4a4b61f9585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3807ea39-078f-4b24-bc4d-7ae51ece9ebc",
        "cursor": {
          "ref": "18e94718-c987-449d-a746-9120566fb4d6",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "27d2feef-9e67-468c-9ce1-97d5afd11168"
        },
        "item": {
          "id": "3807ea39-078f-4b24-bc4d-7ae51ece9ebc",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "36b71385-7d08-4878-9d44-84eecb6c3b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d27b0a-b97c-4d6e-a6fd-fbba2c433a36",
        "cursor": {
          "ref": "18a2d41e-7e1c-403a-bc27-cdff3c219697",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f776b9a7-8901-4c22-a2ed-ed83cd418108"
        },
        "item": {
          "id": "e7d27b0a-b97c-4d6e-a6fd-fbba2c433a36",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5e043d05-611b-44ce-b35c-eea59b6665e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c6f05d-db83-433a-9e6b-2eda2e2fc3af",
        "cursor": {
          "ref": "c30a2419-ca73-4df0-b31c-9b37273b1292",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e0ef9962-aba2-4072-848b-edd88dae8cec"
        },
        "item": {
          "id": "c6c6f05d-db83-433a-9e6b-2eda2e2fc3af",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "32141d5e-0528-40f2-8c66-732a88c8f217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ceb2fde-d758-4709-9759-47a6b052c29e",
        "cursor": {
          "ref": "32a86ed0-0aa8-48fb-aa56-8765bdc054d9",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6dd8483d-4a91-47ef-9de3-008ef6f1c560"
        },
        "item": {
          "id": "9ceb2fde-d758-4709-9759-47a6b052c29e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "304e092b-72ef-4542-9ff2-486d0c016bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa88f93-74ed-4504-a5aa-8745dc761846",
        "cursor": {
          "ref": "4822402d-6571-4be6-812d-1f35704a1d0e",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ccd2ea52-b140-4d97-afe4-61d6dcb9e2cf"
        },
        "item": {
          "id": "6aa88f93-74ed-4504-a5aa-8745dc761846",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c65c794a-a495-4dce-9f93-e39a3c66fc38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b094f85d-8c02-4e2a-ae84-69d11001bdb6",
        "cursor": {
          "ref": "5d578997-cbb6-4308-a285-5d28ba09a459",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4a60c5ba-4ab2-48c4-b7da-c546eae5d1fe"
        },
        "item": {
          "id": "b094f85d-8c02-4e2a-ae84-69d11001bdb6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8c2eaf94-86e0-4fd4-85ee-0ecbf4561a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32d89c8-f4cd-4583-a974-7be10068efd4",
        "cursor": {
          "ref": "2211abc0-9e03-49d8-bd77-1911e1b9d878",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "939b63cc-849a-4966-a75c-1bfe1fac8c11"
        },
        "item": {
          "id": "d32d89c8-f4cd-4583-a974-7be10068efd4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c08ad30d-20ac-4172-bb39-61ac6af97ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f79f0eb-3d23-47ba-a67e-c9621a34b2b4",
        "cursor": {
          "ref": "4bdafd18-16ae-496b-9bad-90e7d8b417f5",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c6c60f1a-6d8e-4565-addf-94a066ef37ea"
        },
        "item": {
          "id": "5f79f0eb-3d23-47ba-a67e-c9621a34b2b4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "95c3c87b-2a9f-4d98-83b6-1a86b793ee36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2735b9c0-cdb0-4f6f-9240-dd0db31ad8c5",
        "cursor": {
          "ref": "57621b5a-b51b-4172-836c-88ad6cb74221",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7d610192-b207-4a17-b004-ee9d674ee947"
        },
        "item": {
          "id": "2735b9c0-cdb0-4f6f-9240-dd0db31ad8c5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0e7200b5-f0ee-4d25-a269-0da88a5a1d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f30c1a4-8a8a-4be7-a42f-482f91d4d629",
        "cursor": {
          "ref": "f4bd3f25-919b-464d-b66b-f3e83d2e9034",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "334cd32e-31cf-4630-be2b-b9ebde56b4b1"
        },
        "item": {
          "id": "0f30c1a4-8a8a-4be7-a42f-482f91d4d629",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e1409d81-908a-4704-98e8-f6457527b53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54beebf8-a1b5-4434-86b6-469babc897a9",
        "cursor": {
          "ref": "7adf13ce-8ba1-4cc1-a8e2-eea306f273d1",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ba0771c0-f68a-4490-9eaa-67255c81dd42"
        },
        "item": {
          "id": "54beebf8-a1b5-4434-86b6-469babc897a9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "29d4d91b-7303-42f4-b7f7-1474516203e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfa003c-5036-40c5-a7b0-6945d783e569",
        "cursor": {
          "ref": "780f7408-4073-48c5-b74a-7bead2d84217",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f6402554-7c30-4bb3-8d22-ac93c2c367b9"
        },
        "item": {
          "id": "edfa003c-5036-40c5-a7b0-6945d783e569",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "32147886-9e0b-41c3-9999-8c2aa9701dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ffd8f2d-5b0b-4492-b85b-205803dc65b9",
        "cursor": {
          "ref": "fbaeb1be-da23-4eca-9c58-09078424273d",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e67ca105-acac-49a6-b9bc-a0a35fbb2aea"
        },
        "item": {
          "id": "2ffd8f2d-5b0b-4492-b85b-205803dc65b9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9c725026-0a46-43f4-bd82-583128837bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286f07bd-4053-4798-b415-bbc9a0c8cc1b",
        "cursor": {
          "ref": "f193b177-17da-4b5a-bdf5-2eaf71b2d261",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e80277d8-1adb-4fd4-8cad-46f161923732"
        },
        "item": {
          "id": "286f07bd-4053-4798-b415-bbc9a0c8cc1b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b0939cc1-7d2f-4ada-a3db-d06abb0d9c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb63d01-794d-4858-8e35-2f7b01ab0013",
        "cursor": {
          "ref": "3c23c4a4-3c4e-430a-83a4-79a6ebc43055",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ab94507d-561b-4106-bb5b-249c9f5bcaf1"
        },
        "item": {
          "id": "dcb63d01-794d-4858-8e35-2f7b01ab0013",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "225beffa-b77f-4ec2-a664-7042a9ea67e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bbf118-47e1-4693-9c79-b19cf0cc0a55",
        "cursor": {
          "ref": "2067b950-ef0a-4a23-b3ff-558a25011892",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "466b6d4c-a34f-4bc1-b93b-b0014070aa37"
        },
        "item": {
          "id": "27bbf118-47e1-4693-9c79-b19cf0cc0a55",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "fb12e5c0-2981-43e6-8087-aa14302ad22d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d64241-1e90-45b9-8bc2-078f4de74bac",
        "cursor": {
          "ref": "460127d5-2477-41e7-bf88-9a4fd0114b78",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4fca04ec-d9cb-4efb-bd33-d9b81da1be0f"
        },
        "item": {
          "id": "d6d64241-1e90-45b9-8bc2-078f4de74bac",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5248a7f9-2962-4932-867c-a0a972f3e6dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e15ef7-583f-46fc-bda4-146cdd6d994f",
        "cursor": {
          "ref": "978f3e4a-456f-4ba8-ad49-15ec0a1abf8a",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f3e37e6a-0fe3-4bcf-af54-e3daafce0db0"
        },
        "item": {
          "id": "d4e15ef7-583f-46fc-bda4-146cdd6d994f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "61b47389-3880-4010-a551-27b2e47d958b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55be1577-7f29-4e80-ba2e-70fa6c9141ec",
        "cursor": {
          "ref": "d458a1e7-2413-4255-86b4-4b81f187e640",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "dc79aa32-4d5f-438b-8fa0-cb2ec5eff4f4"
        },
        "item": {
          "id": "55be1577-7f29-4e80-ba2e-70fa6c9141ec",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f66081ac-46ae-4d9e-bbb5-e38a8789b98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dda5646-ca0d-494b-b4d1-bedc924122e5",
        "cursor": {
          "ref": "a1a6e1fb-7aed-4a3a-9924-02c41123c338",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f9cd0265-8c68-4a0e-8209-ffb44df68973"
        },
        "item": {
          "id": "9dda5646-ca0d-494b-b4d1-bedc924122e5",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "08ce2a51-4936-482c-9d0e-3f3ee4cc5372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad40d01-86d8-43a8-b3fd-a62d48fce0df",
        "cursor": {
          "ref": "40f6e750-b5fe-4ad7-92ea-67431d74d2ef",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8204647a-b796-4821-91de-bfa73eac7074"
        },
        "item": {
          "id": "5ad40d01-86d8-43a8-b3fd-a62d48fce0df",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b34992d2-025c-4f76-874b-bcf8126c18d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c940692-bc50-4e3f-9723-650e90e910f4",
        "cursor": {
          "ref": "c1f96e4b-0844-48ef-a21e-7983a35f4b58",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "dce7dee4-0738-4cfe-8552-a68357383e8a"
        },
        "item": {
          "id": "0c940692-bc50-4e3f-9723-650e90e910f4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e872885e-0a94-4b40-9324-96a2785f0020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d254df5b-4fa0-4ecf-be74-70255c15bfc4",
        "cursor": {
          "ref": "29b4f95e-0497-4ca6-b143-f16a893fc685",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "de98769a-1873-447c-9259-3301e46c9f2b"
        },
        "item": {
          "id": "d254df5b-4fa0-4ecf-be74-70255c15bfc4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5ceb800f-9e4e-4bf0-91a9-11b175f92b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75f1ab2-4888-48e1-bb86-03123aa1ff80",
        "cursor": {
          "ref": "720667b5-fd40-4549-8179-d4bee6e534ff",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "daacd3d0-6421-4f77-b269-b557d8afbc46"
        },
        "item": {
          "id": "b75f1ab2-4888-48e1-bb86-03123aa1ff80",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1b4bc4ad-c07e-4048-99f2-f6b209110b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f83db2-486a-4bf7-90c5-188288842f22",
        "cursor": {
          "ref": "0fbc7a70-5f8d-446c-af62-7905056ee5f5",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "90322254-57a4-412c-b3dd-9ec1ee667c7b"
        },
        "item": {
          "id": "f2f83db2-486a-4bf7-90c5-188288842f22",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "13e4f06f-9c4b-4d50-a81c-87eb5cd549f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf94ebe-9f3e-4840-8ee2-5b81531e7374",
        "cursor": {
          "ref": "21cd70f5-928a-4ac8-9e5b-680cad2c552a",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f4622701-8aec-4803-b0c8-e632de15f2b4"
        },
        "item": {
          "id": "4bf94ebe-9f3e-4840-8ee2-5b81531e7374",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2ec49bd0-aab9-4de3-98b4-2db9b26b4b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def91c38-44e3-42e6-9e2a-2b9834d2629f",
        "cursor": {
          "ref": "7fd474e3-5074-44ad-8948-2f54d0908f38",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5b8206bf-93e8-45d6-9631-f2ae940bcd05"
        },
        "item": {
          "id": "def91c38-44e3-42e6-9e2a-2b9834d2629f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0203bf6d-7c6c-4020-aa4f-79cc516459d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5955f2-a9dd-453a-9479-a814601ca0e2",
        "cursor": {
          "ref": "f06e2036-93a9-4879-ab6a-7f956cbf6298",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "47d367c7-6a69-496d-89b0-ca77d7dcd343"
        },
        "item": {
          "id": "6f5955f2-a9dd-453a-9479-a814601ca0e2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1556859c-6258-485c-8223-d17f58f2e411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d486e4-3aaf-4d74-a5d6-25b154cdca0c",
        "cursor": {
          "ref": "206c1be7-d945-42d1-b558-ff8ad67842f2",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "146e5382-f585-492e-8193-668400604066"
        },
        "item": {
          "id": "a8d486e4-3aaf-4d74-a5d6-25b154cdca0c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "01e9158c-8119-4513-8ab3-fe17a155bca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efd1dae-225f-488b-a463-d426debcae7e",
        "cursor": {
          "ref": "e2112673-8392-460f-baaa-b529a8422424",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2408737c-6ddd-44a1-b4c6-dce13494cdbb"
        },
        "item": {
          "id": "2efd1dae-225f-488b-a463-d426debcae7e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c58f387a-e14d-45fa-b280-2cf7422fdffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc6f49b-df21-4cc2-9bf2-6a202faed90c",
        "cursor": {
          "ref": "348eec02-bdc2-4643-9ffd-21118d527545",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a811afe3-de60-460e-842b-c2acc17c68ab"
        },
        "item": {
          "id": "4dc6f49b-df21-4cc2-9bf2-6a202faed90c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "eb741e73-3c9e-4508-ae0a-b8fdda116ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce861e9-c180-41e0-8905-065031be497f",
        "cursor": {
          "ref": "c89779bd-348e-4161-ad06-6f8bf089aad8",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "111b64b8-40d6-49bb-aabc-6f20b9e188f1"
        },
        "item": {
          "id": "7ce861e9-c180-41e0-8905-065031be497f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "482dba9c-ea80-47a2-8a0b-456be1dc9c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac1abe6-9700-4f21-b29e-301653ef0771",
        "cursor": {
          "ref": "22072dd1-c1ce-4056-b6d6-3635f264e48b",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "739ac37e-cbf0-479c-bcd5-8a64fc495f41"
        },
        "item": {
          "id": "3ac1abe6-9700-4f21-b29e-301653ef0771",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e9f6a087-4746-4d14-a6eb-418864cf1d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2721122f-1767-4344-bd90-d4cae081c3fd",
        "cursor": {
          "ref": "35bbd341-c3f8-48b3-86cc-5452831027f0",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d3fde7b2-9db3-4403-9f1e-25d316a4838f"
        },
        "item": {
          "id": "2721122f-1767-4344-bd90-d4cae081c3fd",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "456e97b8-1079-4ab8-9027-e6a63dda1dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77965dd3-d9fe-4878-b523-03ada2e9e1b2",
        "cursor": {
          "ref": "5f13d43a-77d5-425e-a0a0-b936ebc45b0d",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8f3a0e40-2da6-457d-add3-512a86c778b5"
        },
        "item": {
          "id": "77965dd3-d9fe-4878-b523-03ada2e9e1b2",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "be5d6633-9088-4114-9f01-75c94903a28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a965671d-70df-4489-84b9-5e938cf2f709",
        "cursor": {
          "ref": "c9817666-e00e-42a5-94ca-a480632708ed",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2b2b96b7-cdd9-46c7-9579-2b267d47cc1c"
        },
        "item": {
          "id": "a965671d-70df-4489-84b9-5e938cf2f709",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3230d6d6-53f0-4175-8ca4-757297bb5cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d18b15-311c-4c4c-a2c5-17cf68b7f9a3",
        "cursor": {
          "ref": "b98fc4d1-d5b0-4aeb-9451-e67b70896ad3",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "eafcce89-2b6a-4110-8590-7e03f8858d23"
        },
        "item": {
          "id": "50d18b15-311c-4c4c-a2c5-17cf68b7f9a3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ae893cff-0a73-453e-a329-ee8d1dad4148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e163bbd-dcab-468c-81cb-2d79c4470f1b",
        "cursor": {
          "ref": "30034154-02ef-483d-842f-fdcd1a8c98c3",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4c5e21dd-8bd0-4317-839a-cf981fd636a5"
        },
        "item": {
          "id": "9e163bbd-dcab-468c-81cb-2d79c4470f1b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1bc1de26-be2f-4fd2-b72b-669ca3d5692e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c3d73e-78b1-432e-85ee-05a642ae428b",
        "cursor": {
          "ref": "4c53ffd9-83cb-4b82-a3c7-f62c230c80e2",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "26c8b994-4fa0-42c1-bd63-24f72093cbb9"
        },
        "item": {
          "id": "65c3d73e-78b1-432e-85ee-05a642ae428b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "eb2b1585-ed5a-4a63-950f-78f441e3e161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4a91a9-24c8-4275-ba65-909d5e441e44",
        "cursor": {
          "ref": "9f68d884-1071-43a2-b730-3090fc7827f8",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "08863f2b-9141-447e-bedb-a010f742b9d9"
        },
        "item": {
          "id": "6e4a91a9-24c8-4275-ba65-909d5e441e44",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2fd250b4-6b30-4fb6-a912-f774b22006fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a56dee5-6960-4aa9-815e-0a530f61fb88",
        "cursor": {
          "ref": "3de3aa09-f218-4c41-907e-b8da268748f4",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9904cf27-da36-41ed-b993-f1013e9eea45"
        },
        "item": {
          "id": "3a56dee5-6960-4aa9-815e-0a530f61fb88",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "777d4019-fa88-47f2-94ac-fdd5af6ed532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38801dc0-80d5-48e5-ae20-23a3a9c669f7",
        "cursor": {
          "ref": "b4822cae-84d9-40a7-aa96-ddbe9a6f582a",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d44beaf0-042f-4021-af81-8e0c46bd34c5"
        },
        "item": {
          "id": "38801dc0-80d5-48e5-ae20-23a3a9c669f7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e906019d-0a9d-4a78-92d1-5efef8400430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d351850-550f-4684-9339-5d07bf99918a",
        "cursor": {
          "ref": "576687e9-f3dd-42cf-97b7-eaa8c3ac2670",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "adc4b60e-f652-49a9-ab39-2f7d730121ea"
        },
        "item": {
          "id": "4d351850-550f-4684-9339-5d07bf99918a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ebacd9c6-e25e-478f-b10c-9498f0b10da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e817e309-1a47-4292-9dc5-e6ea3bf2e465",
        "cursor": {
          "ref": "be728360-241d-45c0-9255-5b7985466319",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6acebc60-e80c-4791-bcea-a91e99ae4513"
        },
        "item": {
          "id": "e817e309-1a47-4292-9dc5-e6ea3bf2e465",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3543f961-9ed6-4cc8-8b97-e3006229a175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137ff677-e614-4470-9a47-87f18b9d8ba7",
        "cursor": {
          "ref": "1b5c6914-7451-4b11-b064-3e32ec383bfd",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a8ec677b-2f18-4299-a4c5-d23c3633d48e"
        },
        "item": {
          "id": "137ff677-e614-4470-9a47-87f18b9d8ba7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ab204c14-7e09-42c4-ac4c-9ab474ca95f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc3b004-aa59-4a4b-8b51-5b4088f9aa28",
        "cursor": {
          "ref": "dc7ef40c-a248-4e01-a7ab-76ce42b706a2",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3b8c3809-3af7-4352-9422-9077443a163c"
        },
        "item": {
          "id": "abc3b004-aa59-4a4b-8b51-5b4088f9aa28",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6c4244d8-db0b-46db-8d96-a2989da19d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3518ab-ebb3-4dd1-aec5-8b8a89bf41ca",
        "cursor": {
          "ref": "af6dd0ec-44a7-49df-b88a-4c05c348cd3b",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0cb9a7d5-97d7-43b0-a3b6-89abf45a24c4"
        },
        "item": {
          "id": "7e3518ab-ebb3-4dd1-aec5-8b8a89bf41ca",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a2805935-7f05-4d30-b3be-d4ed77b55400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341c6059-ceee-4db1-9ff1-4258f8865e0f",
        "cursor": {
          "ref": "17b6f34d-3a60-4d8c-8e73-89576b3dea85",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6144efc5-9fa4-43eb-9e02-da618ee743cc"
        },
        "item": {
          "id": "341c6059-ceee-4db1-9ff1-4258f8865e0f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a187de22-cd6a-4311-9f92-48fb0e4e33c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf8c4bb-fc7a-4566-aa2a-70d85b38b212",
        "cursor": {
          "ref": "c289e903-881c-4157-95f9-beeb36857542",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b992fbda-69e1-4a88-b8c4-e5da7a8e2965"
        },
        "item": {
          "id": "7cf8c4bb-fc7a-4566-aa2a-70d85b38b212",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ee20927c-f8c1-4261-81b5-ddc46e481d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36fd8ce-4849-45fc-8cd2-163d3f84806b",
        "cursor": {
          "ref": "2ec862af-aa8c-4a4b-a168-567334b9779e",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "930cfa52-294b-4c23-9b11-1d19a179bac9"
        },
        "item": {
          "id": "b36fd8ce-4849-45fc-8cd2-163d3f84806b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f86555dc-1a71-4147-8c94-9e7608cfd510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72f68ba-b2d3-4645-a779-bedb9833dcdf",
        "cursor": {
          "ref": "774b6df8-1eab-48a6-95d3-764f24491ef8",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4292bf44-8b31-49cf-98cc-44e699801f87"
        },
        "item": {
          "id": "a72f68ba-b2d3-4645-a779-bedb9833dcdf",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d9f0f1c0-5d8b-45ae-b406-128dc2017f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1421d6-5c5a-4bd6-9ea4-21b4eb8bcd51",
        "cursor": {
          "ref": "85034d87-3b95-4ccb-81cf-d6a0537e1887",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7ef71644-2fe3-4d79-8f9d-fb71e9e5adc3"
        },
        "item": {
          "id": "8f1421d6-5c5a-4bd6-9ea4-21b4eb8bcd51",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "506815ce-39a4-4e55-b0b0-518173960edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4d99b6-e14a-4db9-ae92-0b7945d502dc",
        "cursor": {
          "ref": "c9c9281d-27c9-4f3d-8631-366e6937ad65",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4bd976f8-01e8-4c30-b412-59e814e8485e"
        },
        "item": {
          "id": "ec4d99b6-e14a-4db9-ae92-0b7945d502dc",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "dd664fbc-3058-4771-a614-d52a6a91243a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1ae225-7f02-4a28-8ad3-26856922069d",
        "cursor": {
          "ref": "ddca9478-f764-4df3-a38f-bec27ec5e2b4",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6b6339de-84bf-4a74-a863-9ea826862586"
        },
        "item": {
          "id": "bd1ae225-7f02-4a28-8ad3-26856922069d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4890933a-1322-40be-a9ba-3ca89d69d390",
          "status": "OK",
          "code": 200,
          "responseTime": 1006,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d10f76-ac6b-46e4-aba5-512f6d190cdc",
        "cursor": {
          "ref": "8d40b527-1b3c-4ba9-b7b1-eeea8f918c19",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "66689f3f-8eba-473a-919b-e798da862e53"
        },
        "item": {
          "id": "f3d10f76-ac6b-46e4-aba5-512f6d190cdc",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7c545db4-752e-44c4-997a-444bdd34f071",
          "status": "OK",
          "code": 200,
          "responseTime": 3615,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90dc88f-7bc3-4dc8-ace6-603675da9f37",
        "cursor": {
          "ref": "f8820ba4-b8ab-4694-8e06-0c2965c01a09",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "581ff92f-525d-4770-9277-aa6e66a52614"
        },
        "item": {
          "id": "c90dc88f-7bc3-4dc8-ace6-603675da9f37",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3ea56b33-0e6c-41c5-ad77-7af2d46dda77",
          "status": "OK",
          "code": 200,
          "responseTime": 2406,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6d7cb5-3a59-4ac7-901a-c81dfaef69e9",
        "cursor": {
          "ref": "e7605e64-c32a-41fc-9ba4-8ba20e6dbc89",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2e2b1c17-f4bc-4ed1-a496-41eb4bd1a320"
        },
        "item": {
          "id": "7d6d7cb5-3a59-4ac7-901a-c81dfaef69e9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fadad2ee-df8a-479f-b843-4c97462057de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6d7cb5-3a59-4ac7-901a-c81dfaef69e9",
        "cursor": {
          "ref": "e7605e64-c32a-41fc-9ba4-8ba20e6dbc89",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2e2b1c17-f4bc-4ed1-a496-41eb4bd1a320"
        },
        "item": {
          "id": "7d6d7cb5-3a59-4ac7-901a-c81dfaef69e9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fadad2ee-df8a-479f-b843-4c97462057de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09ba3cb-099a-4a84-980e-c747467ce7ad",
        "cursor": {
          "ref": "bc2b9602-01fe-46a1-a505-da1b91f3d86c",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1936fc43-77c1-46d4-aa51-d0728feacf03"
        },
        "item": {
          "id": "e09ba3cb-099a-4a84-980e-c747467ce7ad",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8d01917d-6c55-440d-b565-12f7ec04599a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2d2cee-9617-4f03-ae1c-d5b5f9051a4b",
        "cursor": {
          "ref": "5ecd62f9-f5c6-40a3-b375-989bb01cbe86",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0fe84d24-440e-43d2-b90f-c1001396f0b6"
        },
        "item": {
          "id": "ff2d2cee-9617-4f03-ae1c-d5b5f9051a4b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9e22dacb-d80b-4cb0-83b9-3e3191233ef2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}