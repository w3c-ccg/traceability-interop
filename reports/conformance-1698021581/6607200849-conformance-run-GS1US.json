{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6135faa9-c8ad-482e-9c98-8139800b2824",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ea116704-337f-4271-a250-43a391891ecb",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a2e2c021-29d9-4147-bd8b-f6d6ca1da4cc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "44f327e7-d23b-4916-8ace-bed0367d0d68"
                }
              }
            ]
          },
          {
            "id": "c4aeb234-35a4-4511-8b3c-fd637ea35617",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f1538b5b-9501-4f75-9353-1839494924df",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "30a35258-1474-4b4a-8fc0-1f5852cfbec1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "226b715b-66e2-4c73-a8bc-471ba293cb96",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1c88f46b-5092-4e54-abb6-45b3aca57bb5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "26f5a366-02ac-44e9-b437-e09793b15810",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7883c6df-4a2f-459a-9726-439c32efcfb9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c5582f59-c028-409d-a2bc-e79e0fbbf986"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9d698cea-2372-41cd-8606-f5b877cad188",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5dcf1092-ae71-44b2-892c-83778de07c0a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fb022a23-df30-4695-9cf3-01a41eda6336",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c3e2afb4-8342-427b-8bdf-46cefd20ecde"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "673895e8-8427-4f6f-95c4-63dc7775281f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "08c03b3c-7a24-4960-84fe-4f7e26296975"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0bfc86ac-e76d-406f-b711-a052c4612ae1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ed93865-ef28-41de-b1d5-832cc7623bac"
            }
          }
        ]
      },
      {
        "id": "91a0fd27-1aa5-4e6e-aab5-3c88f0d881c2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "54efe46e-bf0d-4dd5-890f-8759369adafd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "968185e7-3dab-4578-b3ab-11e4e8dab2ce",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bd68b154-b0e4-4592-94b5-18fde87256a3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "517618ea-895a-4edc-b08f-77ca1c96eed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4005d04-4ac9-4138-b835-102e5e484f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a79215e-1bbc-4b24-84ed-0b20b470ca30",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b000af-5570-4ed2-b058-c3acc0483b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47dc8dd6-ac1b-426d-b708-deba3e89a213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a207b2-f9c9-49a2-b08c-1b5c0e30c214",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21406d53-86f6-48c3-8261-22a18d3afbc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0737f8e8-9e5a-4844-aded-d0fe87045048"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ae86d221-fb3e-417b-837c-ab94d7f71045",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "529da4e5-ba0d-401f-bcac-8e1e52ac8f08",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c978069-d591-4013-8af9-0e1c8f724c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8808044e-1a72-4fa2-a78c-700ad0c82415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b589d2aa-91c6-4829-b8f6-133fdef96af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b7daddb-9cdd-4da5-a32f-5a4414471808"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4916bd81-00ad-43c0-97b0-2d7518127f9c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f864279e-2500-4b45-af76-c12dd3f8df5d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93b975bf-1242-45b3-8a0e-78d3402ed8f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "91e0e0ab-51a8-4ff5-bfa0-229d501a845f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d7c76611-c0bf-41a2-8da8-024a0f39c2cc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7b0041cd-cdcf-43a8-981a-f81eebb399f2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36ead705-d4c4-4ada-9294-e8d968a0b93f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "848c31a3-2aca-4dd8-9c4b-0fb9a5581978"
            }
          }
        ]
      },
      {
        "id": "6964c113-709a-44b3-b128-6adf74d0b1e0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "85905caa-a053-44b5-a545-3aff5be130d9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "81661c53-5219-4643-b3be-41b7cdd1df48",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7d50cdbf-8ada-4863-ac1b-f1582b9f6f8a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c022dd-c3d1-44df-b902-5a36a14a44bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d47f3da-5d1b-441c-9f27-5ef18f93baa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c412c84c-03fc-4df8-9607-6c15ed6a6231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5522d14-6d56-44d6-8c03-f3d1439593ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b61b9a3-6b41-4ef2-9aad-e4c8e80b8ef3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fdcb27f-dabb-4e27-8450-55bcad56a73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74048621-fedd-48c1-846a-7425914e8d2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5010bcb0-a4ae-4a35-9d37-0ebdf8a3f296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbb10404-e9a2-4f59-b947-a21812b11a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339fdf46-afda-4186-9efc-705574a8ab83",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10c4532-c573-4d56-bc1e-5cbc6cea7852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf709bac-f04e-47f6-a9a3-bbd4a576b6f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd2c67d-6d84-45ed-b4d2-e5a226317f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e40b34c-c5c2-4d35-a1ef-67e8ad9e91ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1039a9f-3d0a-4f7a-a360-c27c3139aa39",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2c3bec-a7ff-4fb3-a7a5-fe45e360cd84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff526579-5f4d-4cc4-afde-4f746a20e0df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722f5a0e-eab8-4e3e-a50c-684f3a478b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36a205c6-f4f8-416b-9fb4-7f32540f8604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d87c414-f193-49b8-9179-dddac53e9c0e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd929b3-4130-4324-a92c-17dc75faf4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c87d00a-e1db-4bad-a73c-02c176ff69e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436e7632-780f-43e0-983e-14d26b586d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ff0005f-2b3f-4edf-8fa3-2c571e066cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b44e04-e3c8-4574-ae43-a1c02ade93c6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871971d9-d51c-4e91-a10d-474851622dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b06167c1-a95f-45a9-bfcc-34b44cfc7c99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b67b02-9170-44ac-924f-38c46585af93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "deb744db-4442-41c8-9409-44b893e95d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d412294-2cd6-412e-984c-64f81e6efbed",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b548e3-9f35-47da-aa04-fcae147788b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64b17a6f-3888-467f-8a55-f2d4ea1e1539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0bfd6b-d208-4705-ad4d-6e239d9f4ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c510d54-757f-4511-a866-8338a6de09c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd610547-a399-4d82-9a74-0c1ec87612f1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c473c6a-4327-4af2-b22a-74ba050a801c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b614bc34-b94d-4585-bf8c-464bff519a94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72714f6-aa45-4c5c-aaa5-ce8839ccf5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d666a0ec-6fe7-426b-a1c1-ab6cb826b146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01957f3d-d666-4993-a8d7-e3c81d6f9c0c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56bbba1c-8ef2-4513-8997-85668db4b6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2570993-e8a0-46a7-9136-67020e3b73bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e66a9cc-b77e-4806-8942-7541c2aaab11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b6a74e9-fdca-4ff6-acd8-1eea104d7ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213927e7-2c11-4e06-b975-343b4acfd728",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d2e953-9553-4174-8693-8c8e04311727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96e2ed9a-5df5-411b-b39d-504fa55b550e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca3f669-6e53-4268-8516-d5445f01321c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08ebf925-1b2a-45f1-9431-2c32c357c041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ccf7ec-403c-44d1-9458-10cc04618e87",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f574fc56-7ed2-4e07-8634-867012ecf900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e458af1a-d1a7-4904-bf65-c7a003066e9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe2b11b-0c7d-46f9-81bc-ea0229eaf61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3eda1a3f-dacb-4df6-95c5-8380429f9c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf7124b-9652-4ef3-ac77-2897d03f8aac",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de84cb72-394f-4b9c-996a-ac8bd0762c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9846d391-61d0-4b76-b189-c305640c0770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1297dd75-916a-4ef4-ad93-7a679755c4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "933b1891-7582-40b2-bfd9-74744f199b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aeeaeff-074b-477c-871c-ae45758eca93",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9bf8ddb-c66f-4f2a-b561-b5cd5961cc22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5228125-5c42-43b4-93e5-2af088a7385c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5352c831-457f-441c-a286-df618e32598c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "829eedb5-b349-427a-b8c3-6608d4910d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450be5b6-562b-4a1f-8c2a-f886c081c9b1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab96a234-2b6c-467a-99b1-44d6f0091d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b3cee2f-657d-428b-b127-683a093931ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd9890b-b4d9-4e8f-9ed7-daba93b9865d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20b28fdc-aa33-4061-be99-6a437e34182f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01da3d05-235e-4f16-9985-d45b5cebd3a5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d12ff9-9214-4ca5-9eac-a6b3ec72462a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb629b5-d038-4030-8e99-d1c10297a245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df45df0-1bd3-4058-af8e-0b14c798aa9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ccc5cb40-af29-4d5e-820c-a728e50bd03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2222b421-b90b-4099-a537-1fad4c131933",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0499e0-3bd9-4fe9-a6f9-ce6013267ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dfcd25d-6e2b-4f80-b77e-6b3f16422b82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab18468-f95d-4c3b-b635-f0ac24db2413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e9e3ce7-2bcd-4d3c-a4f8-2077565c0467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c34ba76-4f1b-4590-9542-f9899ae71b46",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa9efe1-8a5a-4102-972c-501dd76e496c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd798866-e366-49ab-8839-aa081f84f3d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ecc8c6-20f7-42ff-96e6-1d29b1b5066a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f524d0a-ec28-4905-a8fd-0aaecce42bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ada54e-5eee-4219-beff-94c73dad121c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bffe76e-1989-4705-b215-e5495e504847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c58ffca7-627c-4ec5-b731-e5e8d35afc72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65dfd4c1-95b2-4c64-b1bd-51b9b7076212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a31a9e5b-385b-4252-bbb6-ec7a5a6e21fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdaff59-882a-4068-b116-ddf2157dd4de",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c98dd9-ec06-4bbb-9abf-4476baa8d198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad86a9b3-6bf3-43d2-93bd-d58dce8d3b76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c33905f-7175-4049-81dc-ce956e904c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53638212-ca25-403d-aeb4-350ce1ddf1b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0635ef9-9111-4db2-b01e-cebc248a5d92",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc56163-ab75-4cc0-97ed-3bc08a721143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f4513da-57a1-490e-b7cb-41f3140b7d0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b23820f-64da-493c-9e2e-8552559b269e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc14971a-71dc-4953-9ebd-bb4a13118c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86a19d3-7314-4435-9031-2cdba5ebdae3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0d62a9-024b-4d4b-9bf2-6d968f40eb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ed8416d-89ef-4fb9-9ab6-81cc27a54ddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899c64c4-8e04-4b54-9e77-21e1219076bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2960ca4e-c483-4c82-a023-4baa8a4b0636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7da306f-2dff-4911-8c2f-c4d2fa58141a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f8724a-b7b8-4152-bfb1-d08d70e3303a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f7dd49-64c1-4923-b10b-13c660cfb9a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea60d5ff-9b4a-4471-9589-8813df35dfc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7e9df5e-a2be-4daf-9af8-988128c47838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b48c6d9-5c12-4c36-9910-35313da90c72",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64833309-8955-4530-af18-5bbcd5f5b5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4310adc3-53de-4026-ac23-ac39b8d78b7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ddcea1-4ba7-4b6e-ac97-1967e28a1f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "042b6f80-7250-41a6-91bf-6a4e1ef7ab1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2f6ac7-ae43-45b8-8687-01f77758b89d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dfb0726-3554-4978-b090-be133f3ef9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c5f8ec4-d46e-4a03-8dc6-124191fdb31c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3181c37e-e997-4d59-946c-9d5206b91e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "392a3243-7432-4944-b8be-cfbf6ebe9767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0464d5-4628-47f5-bf79-48ab7fe85253",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3860b7-7446-4417-a00a-b7a05085069f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae34785-bc46-4128-bd65-278db095d072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d265b0b0-02e6-489f-9da6-d345665fdc6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "749fb3ac-8c93-43cb-bcc6-bfef0809dcb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b117883-fe8e-4200-aae9-b6195158e518",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77ed473-f6f3-456d-825b-8017722227f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff0f134-b09c-4c58-93b0-7d71ddc3e733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5edcc06-f062-448a-ac0b-1135156cb433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "533aaa58-ec7b-47aa-b38d-2361462d4fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5265e5bc-7493-48f3-ab1d-f055d69f394c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "107d19d0-5d9a-4eda-bad4-935d50672226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c686c5-40b9-4afb-b281-ec71e9f5210d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae48fb30-ddaa-475b-9533-f625586916c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d22dd9d6-5c56-4592-8cd1-f949b1ca3fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4816192-9e67-4538-96a1-baaacb007636",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2bdcf0-955a-40f1-965e-742d076978e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52fba6ba-5cd0-4c5c-a81b-ee9468b947ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a877e50d-76df-46ba-8598-1669edd8c403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "306be27d-4e59-4ebd-96c0-028bc80ba06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee849a1-08af-4ea2-befb-bc07b156d225",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "617c6c56-e9b4-4e95-a5b0-64a0155efa62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bacbfb6-b819-478c-a90b-3c14dab180ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2eba21a-eb25-4788-856f-3d1141b9523d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fab322b-9d78-4c3f-a0ff-fb7d69d53749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe575366-1f4d-4d7c-8151-ba6d289272d2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "970e64dd-d41a-45c5-a191-4b29ad0ccd13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a92590ff-836c-4832-bd9a-cd54e00b7668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415cb43c-47c8-43ca-a400-e869a7f2a179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b2fd1de-18d1-4d51-826a-57af4b258374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f84b0b-341e-42ed-a3c9-d119a9774a42",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e355f87-bbcb-4daa-aa2e-b44e5acceb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea12cf34-c996-4234-a260-dbc6cb0dcdcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6604124f-0761-4ab7-8473-e7b8b64ea48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "813656f1-c193-4d55-9396-54b43df9febc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414e90bc-6c80-46c8-9c53-6aba9f8971f7",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ab187a-9ee4-49e3-bde6-5c42f9f91300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7245e0e4-2237-4c24-aa08-71898a365521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45840f18-a07c-40da-8992-48bbab26592c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2309c93b-40f0-43c0-ba1d-1b6515ea6670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41cbf1b1-e769-48ca-abd6-88c72080eea7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53773213-3896-474e-b6f9-bb0b667107d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28f28333-6e8d-43bc-8a84-d4e683341bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b24faa5a-6669-4db2-8c0f-35fd7ec748d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "971c1cf5-1562-439d-b6a7-ae09f19b2244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac03ef7-61c7-4f78-86db-8bfa8e400ef0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80753f2f-03d2-4a10-962e-9fd4a6f96dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba4c0a4b-a1b5-47b4-957d-4bb58cce0c23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9777dac9-30d1-44da-bacb-ead88f67ed1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f56ee9b-4c43-4742-92cb-731504c0efc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0de5fde-fcb7-4aa0-b88a-f0aef6f86262",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4f5091-33f7-4108-9ec0-b0755ffd5e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c4c6d57-5e53-48f1-8b17-cddb31e335b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e926db1-22c1-4892-be81-7cef9ae06666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ec18803c-9de8-4ceb-b27d-3eb3703a00d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ab9c5c-4fdc-4b46-87fb-6e3a98de1a76",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07548699-a23c-4b2e-b514-f36d6c589a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5fa40511-8af6-4c5f-a402-be9848732f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d532524-c5ca-4608-ad54-427263acd94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "46f8ddd4-c447-42f9-a119-44c985da33c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a35321-c75a-4c70-8a1b-1f74fe27c80c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4e1bc1-94ab-41b0-ab7d-cfd1b05988fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ad5b13a-7305-4ec3-ac5d-4716fb870fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731326fa-8c3c-4a25-ac81-625e2cb01246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1cd9092-f78b-4ecf-94a1-0ab39806308d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e7a21d-a2f6-45b8-9b78-cf06b5f6dbc0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46dbe18-dab4-4ff8-b942-56ccf32abb22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0687fb3-6508-47f7-be44-7731fd4ba1d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a8aa2a-2a71-4b44-94a2-6b931fb22d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "048545e4-bfa7-4a5b-9d30-cb9b5a0431ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe1337e-cf9f-4b49-98a2-11360f16bfb0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f3f2b9-d14f-49dc-9b32-76ccc6529d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac54fc1-ea00-48f4-8edf-067dfe0e3224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f961d9-7900-491d-8d88-21646e88b7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "08e9692f-7a74-4133-9923-3d081a511894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751de00a-4c7e-442e-b499-cd84619525e1",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d0a47d-94df-42b6-ab7a-3fe02a84a2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "234cdf76-1eb5-473b-82a9-cd3ab77cd37d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2544e0e-c3bc-4e80-b552-3aa063ad001f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b279dbe6-517b-4dc9-8833-fc7facd1c6af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f078431-0e88-4e19-90e2-94e4867e8bde",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a43b6bf-9227-49a2-af07-ffde3357c888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec608da3-b3c7-4f6d-9553-8383936c74fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1821a549-214d-40ec-bdba-0dad2d42c165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "68e7019f-5b4d-4bae-a2a0-7600ee16fc81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9b95a2-c629-4b8f-9bec-1f11d908b8b2",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a421b3-004d-415c-8277-9035946eb96e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6df99a-50a4-4b46-84d2-dbe9be12a0a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb6fdc3-a6b3-489d-bea3-54974b996720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "350aa599-3fb5-4e31-811e-e6d85a320781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca081f7f-b8da-4cdc-b71c-08ee9e6bed3b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3087ede3-73d6-4a54-ae71-9e576bdefff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06f5e277-f3f5-4fd9-a09d-30e36edac00a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a4513f-25c3-476f-b5ec-3252876c8dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d963882f-b3e5-409a-a067-762351d7507c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28d6362-7b5b-4d54-8d5f-6f31121165ca",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d707ee-b446-436f-a44b-8c6752121c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b006e3-4ec5-4a85-9def-4dc176550ddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1ea2aa-bae3-4629-b88d-508224e938ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a32cd8-3552-4c54-9a06-eeb711ec038a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a6dbbb-911e-4105-a7e7-ebbac3be2d8d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb2e21e-8e21-493b-ab53-5e156dafb797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9772dcc-e270-41f4-8820-788f72ac0bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74755c92-f46a-46ad-babc-edb3cefd6f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "be0f8bb6-195c-4160-9cdd-449773891845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1724559-5826-4982-a234-7b0467228dbd",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dcb7e12-b707-4d0f-8814-ff2227774b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dc69280-02d1-4bd4-a211-930c579fa1c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b58d9f-0898-48eb-a8b0-583511866d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e8717c5-1011-4edf-b66e-d40d43a38188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190ffc40-837e-44e9-b099-091bdfdaa905",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff4e016-c2fa-494d-983f-6c17bd5102a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a78a90-cbb9-4c1a-8b62-acd362c08923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664f001c-ea7e-418c-9ec0-3f04151a6fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ae3a607-8034-4c82-b2ae-029bf1c9820f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab161d3a-6ba4-4d74-881d-4584e5dd1458",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64e9c49-07c0-4cda-910a-ba94a2faeb49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60623d8-8c25-47e6-8795-44d816b55fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c52ada-c5c4-4e72-8a4c-f70c3924869b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b706784-3cb9-4c0a-8a4a-27c5a85b1f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9290b4d4-2d0f-4f2c-bd87-f40d7067288c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b79422-88ee-4125-b65a-42840f5c6900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ebb9b4-6d09-4f89-8fe3-fa4ee40e74a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052e3f29-041b-4eeb-bb44-f2a808e704f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ec77b7e-9710-46f9-b55f-800f1c94d41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d934cd77-fcf3-4839-ab27-a9626230b7e7",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b1948e-4652-45f6-bfe1-263c264c466c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77c0d6dd-55d7-46c2-97e9-42c745f6b503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9421e117-66d3-4a93-931d-a0aa6b2efd6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "76930afd-bb9f-4d0c-b094-320402559e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22984b2e-0917-4a99-aced-ba80ecf5f484",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "193184c4-0790-4a0b-ba8a-a9ad2dd969c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb67170a-f932-45b9-9467-48cadce18262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13a1b65-792f-4215-a378-60a9089bf321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "58e3c637-95ec-4a61-9eaf-fcfc9dc88e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724b9939-1fa0-411b-b1da-8051cda2fd23",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f562523-04d6-4011-b051-ddd90f01657e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62720742-7987-4cc7-8a97-cd02a0acdc9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9223b3f-9d23-4a5e-ac6c-f10222c556f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "71f94443-e054-4972-95a3-f7881370acf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bd9b1d-7c0f-4d57-9deb-6be6d10aa70a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d459ea20-24e6-438d-83ec-52e0eebadb8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "543b5bd5-0215-4e88-bf15-0056396dc1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4bb1957-9938-4e8a-b813-79788a644504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d3e3de4-20a5-44fd-8ad3-1c5c592e5c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8560a9-87be-435a-9591-8f6b7c236b40",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca9f615-589d-4071-a5af-f46051599e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6848e2ed-c33b-4be6-b4ef-537ccaf618c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a11c32f-4343-4a89-bbc0-debcbe33ccf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd01be69-abb7-41a5-bc98-37b977cbbfa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6236ea-3f65-4715-afef-7e7e35f7169a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f3a7ba-e6b2-40d6-96de-b46d9af8b997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0c5cac3-6df2-4904-acfd-ff4f22419213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39141c44-40b6-452c-96b3-89966dedca1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c317e38f-896b-4f74-bb70-112dfb3c916b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dad0aaa-0617-4d63-a862-1d96af70b07f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c769b741-2f50-4669-9e58-f15656f3a652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cd6723b-cfa6-4e50-a820-d9ac0f9c873a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e8887ac-181c-4947-a9f2-f498ab92a75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7a49f715-9bfa-4b5c-b94b-7203e06019dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef33795-05bf-4908-9488-e2341364eb24",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "590749d6-3e49-4063-b577-c27c060caee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9368ec95-102a-4edc-adc5-716fdd719ec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e648ce41-5e61-408a-bfa2-142d9bb3d30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "23518bf2-5d31-4944-be8f-320fc10cf1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82fab774-3843-4ee5-8b78-cb18da947ac2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc40dd5f-1a2c-4dcd-b8b8-94134524c2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee38ac8a-0547-428e-9d43-6705c5eba5e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1304d372-6db7-4078-9b3d-89f68add4801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8a7de51-fe56-43e9-9826-77a1774cd235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3381af-630f-48ed-aebe-d1d3e89e4b47",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf08dc85-0ac7-4056-94fa-4ce359af3ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e4263e3-fd0f-43e0-a9a6-c793544932c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fecc10-de21-448d-8bcf-e1358418bda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "45fb37f3-1114-444f-8de3-e07358e61754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bcb2c23-8f0b-4958-871c-16df324dd839",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a427300b-eef0-4f0e-a39b-93460137eb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc3d1af8-9e8f-4cd5-a229-2af628865a81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38966fa-fbf1-472a-abbb-56244da3c0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "77365f0e-dcf9-4f94-aafe-5a3f61d88089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d18f566-90ca-42df-91fd-065dc0b75687",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d767fe2-2096-4d39-99ba-88207a99c7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "252117fc-171b-46c6-87ff-50186596db3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87969a6-2480-48c4-be3a-0bc1b758c6ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fedf712-d32a-4bc2-8630-e1d96a727093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4beff3-a73d-48b8-9faa-a1ba61719c64",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "085e38b9-4386-4150-a6bc-110fdf8074a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa23a9fd-b8ee-40ec-a93c-7c17f6a393d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5d4127-fd29-4b35-8ada-9cb408490817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf964da6-5d5e-4220-84bc-e23c77818169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f574dc4d-bb81-480a-9b5c-9a947d245052",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34cd32d-da97-4a33-b883-5050bd363b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d824539-7717-42c0-84db-151bc941e7fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd461cbf-4f5a-48e7-8076-a78f5415a33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef595f85-1c0c-4e2d-8533-42036f0086fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97bb6a0a-bf93-40ce-869d-3912d1c984d6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cdf1bce-c2a6-4d8a-b0c8-239a416d5e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29f01e8e-73f2-4adc-ac79-d7675c8cdc12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b28e54c-917b-4623-851d-1a11a42976a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a57cec7-fc83-4531-80fa-a8586d8ce348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfdb360c-1566-4e0a-9d1e-0aa336b137d0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639ccdef-932d-45c5-a9ca-babffb984e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db59f57-65d3-4310-b343-97c80d3a42a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc3008a-0100-486b-b4d9-570bb146d3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd23d730-6afa-40d1-9fe9-18530bda8e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23eac0c-a617-48d6-a89a-f44518d79a0e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9b45c4-dbe8-4d5c-9b6d-2c79ff05e51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5788c12-e4cc-4eb5-b06b-752f7b0cde4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad0e87b-3984-4085-8583-7d913e306b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8f28ac2-5359-4c8d-8d8b-3d5bbba35502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62bedad9-d7ef-425e-9866-0dad69f047f6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0469c57-c6cf-4d78-820c-a30e4be82588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "418350d2-8a05-4bf5-9e90-0414f21187fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85dc9b50-f1f5-4af4-9429-48082204e09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb1cb71-39ec-4a23-8155-e2dcb2770514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0e1042-6b45-4755-8b3d-7d4c3280b2d1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff136f1b-86c6-416a-82fb-83fa99e0b787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fabf0cd-0daa-4b1d-b70e-873cb9a7f00e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9629269-ada0-4c44-8210-a62e93b24ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b714621-9a5f-44bf-83c5-785972208ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b7c8a6-7aa0-4dda-9928-b8cb5fb1e6d1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaee68fb-3610-4a83-bf9f-94d9ea3b35c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73187df8-5c34-4d14-af0c-40721c95659d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ae722c-9257-4b1a-bdde-a6fd6d5ba283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca51f4f9-d6e8-4b3c-ad75-0194100b551d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac324d3-d07c-4478-b9b2-9bd4ad0818b9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12f0df8-7c36-4634-9c13-45fca808d534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5eb644e-534d-4078-a54a-02bc22285cca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8922b3b7-9b7b-4122-8920-07abe19125fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a0e6c4e-614b-48e9-85ce-401a7630ae1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7566ed3-2a1f-4401-80de-eae684cd8e8a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4835936f-9249-43b9-b953-00d160b3e762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02fa50d6-59f7-4b2b-be5b-b3829c879daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2905e6-85c7-4e5b-96c0-938099f02286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74614bdb-fb19-4dbb-aa62-3f452b195d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c58eddb-0a6a-454a-9923-b2767588f157",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "019d4095-73cf-454a-a173-9e32833979af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c5414fc-f3b1-4f88-b69e-34f44b72042b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b7e530-755b-4875-a74b-849c5c56facb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb8103a3-09c5-4f62-9437-8783f3c78b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b93a40-8090-47a0-971e-78a056d0ffc9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58cda761-ef4b-4bfe-ba6f-b7a1f34ac8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f369ba5b-d2c3-4071-ae97-969c55283a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e4b914-2a70-492a-8da1-b30122d72b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e041101-4e8f-40fb-a52d-7f2c5c6c304d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10ea4b2-92dc-4c92-a32b-e54d1be64896",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c70f16-9242-409d-9b66-117c49ebac54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5c3cb27-4151-40ee-89a4-68fff3b76944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb7f617-6325-46a2-ac48-6a8655ea5c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "181d695e-f498-4abd-879f-78716a89e8e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c50140f-8643-4d28-898f-19d9a1b0c7e8",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c79fe32-2058-4616-9a0d-1e788e061877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ff1b1f-39ec-47b7-84aa-fc34c4bfa5e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29a5750-f684-4dbf-ab0b-c49ce8d7ba15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "63784f2d-4f94-448c-9ecc-d5cd67c4fcc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d903eeb-8cf1-4f0e-8ecf-fca0bbbe0b60",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ecd060c-e387-4295-ac86-f0f9d9b15636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be86ae0-2b9f-4244-88f4-4c5780660f54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07831191-3586-406d-a65f-64860d1be051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "96c6fb47-22b7-4171-a7ab-3d7aff9f83b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a306fb16-5ab7-490f-a5e1-d0f6d07e0615",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4b3187-7e21-4f90-8414-97619d5eb0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e8c36b6-91a5-45c2-80f1-f7d61dc4950e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4face574-5324-41e1-afcc-3c7e0f49e125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d5b342a-d731-46d1-8950-e93dd10faf4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807a30c1-43ca-4c43-ae51-52ddd35e5e38",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a11134-460a-4d1f-a115-98f6bb6cf367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "986a0d68-7fb9-4aa4-b5c1-e9a947e91549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aab84f2-32dc-4f1d-b76f-705a3e63dac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3024b9f-b80d-4239-bd7a-9a92f2dffd21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "542e2a15-fd83-4da9-9fc7-d60d538f442c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3bbcecb-362d-4f8d-88d0-631f89602cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e8cd91e-67dd-4429-929a-baf41d2a6ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37573abe-e6f0-4863-86bd-aafb601ff7d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "51872f72-4923-4323-a640-162c4c00c323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c7f198-9939-42a1-907c-4163fcf06b56",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42099680-42cc-4146-abf2-52367d436cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee9ca65-215a-4901-8364-0817fd200c0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b358a2ea-77bf-49a2-9caf-7415939e61c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8ac3f05a-918c-4a6a-87c5-3036776ca9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d751e983-0b6d-4106-bd9d-3f983e7dcbf8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4d4c1b-448a-4215-9959-924aeafa76c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5198257b-29cf-402b-865e-7eda09f1cd8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1f538f-500b-4aff-93dd-80d0d1e000bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c2faf1-731b-446c-9775-95d7b37731c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d7e36a-29e2-4ed4-b245-0abc1812aab5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5637e268-9275-4793-a7e9-4b8e919cae43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da959ae8-8571-47ed-b00a-d3a2b297ee3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1a5051-da9b-4dfe-9a49-bfa6b37f558f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7cf5c4a-7781-41bd-861e-3c9dd5cd1700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b24774-7640-47e7-90fc-2cf32f15026d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e4bfb8-0274-464c-ae60-6669a6dea6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "891e4e4f-85f8-43d1-8002-f6c2a28660ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd5c723-6a10-4f08-a5bd-0c374deea42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c451767-8f87-486c-9463-c956b4dae537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df889a25-6d9b-4955-b02e-18a370ea8687",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d846c54-e937-45f7-9db8-00c1072d6073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b15169bd-d106-479c-a389-36228d8887b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2151fca4-45cf-49ff-8441-bfc59df8aaca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "668dfd7b-535e-4992-8e2e-b2f4cf54737e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03466622-6226-4bcc-b440-4b63b4dd3577",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b091398-4d02-40bb-b0af-651084d1b4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3b0b13d-9f00-4cd6-baed-11647ab713ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb10202-46b7-4191-913e-af85475ab199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "36b7e526-3a1a-4a51-a443-3e331c342bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219e72a2-74c8-4652-a16b-e829cf62ce0d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be48d48-09f6-4397-a1ef-dd7638c63e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb0ec011-f59e-4a09-8915-7f52a4da3a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be334ecc-e6af-4deb-85e1-193c1830bd76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c31ec69e-0f18-4e4c-9438-bc81dc136666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb7a265-8a4a-48f4-baf8-15d5b0fe55f9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b54483-1ed1-4e7b-9a70-7f251358787e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bfe3916-d5b1-4885-b7ae-6a44ce922d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d67c7f6-062f-4c7a-84d3-7438e3ce0d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a1fb612-9631-45ea-8276-80e88c17c07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5fa7cc-e78e-479f-ba3a-c051e8eb3880",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4086fdae-e024-4bf8-8597-ec37352afd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c13d538-8145-4361-a59c-6af260b21053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a5feb9-b672-469f-ba69-1e244bc66130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "321fde92-a573-49dd-ab40-0034cbd5d4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66a715a-1f67-4409-94ca-e91f96ca1dbe",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "066f6fa5-cfa2-46bf-9f71-1d01e58527b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4150758-537e-451d-8822-aebd6b05a34a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43859b1f-944f-4d82-8d54-4290b1c337e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0dcc377-fc61-452d-ba34-e34f0f3d1649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921e90ee-19dc-4c0d-8b8f-7bb932cda352",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c6236d-73cf-45a5-9fd9-be4207f29b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80e603bf-f8ca-432c-aff0-3425fc0b9dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f48fc63-efd8-4a1f-90fb-902490440e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "71f3d2a6-311b-4ee8-8135-c5db77e31f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d174a4b5-dc18-4882-bfec-cfb14af6a525",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73800d9-529e-4699-b824-3cfc129dedf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "908f3a44-4605-44fa-a23f-05282de80026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f28c423-d0d1-42ee-8b3b-aa17b629bfd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7cfab39-325f-4e72-8c71-585191d40704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc8b5bb-0583-46a2-b882-5cd011c4407c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8322bed7-d9bb-4e4c-927c-86ecf7e43003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "34b5468f-4e3b-41a9-b1d4-e53135e91fd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac29fed-6b75-4049-8379-b30fe74861b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0373f4a-115e-4fd5-9475-d88d25e7c7a6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "409f3bfb-36ed-44ce-bfe0-21c656b1675c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "694c2bdd-31e1-49e4-99c2-0dc35072fd8e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8732feff-bc13-40c6-9b87-e1d2fabc0c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6167351-9eca-48c4-9904-57d73a915b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71cd0889-3ef2-4027-b394-09dc053f5d00",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00d99254-fab0-49b2-b97e-e643579a713e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "138a8933-1fd5-400e-93cf-e1f1cba9504a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d63baa51-9069-4612-90f5-c8f0a3dce05c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "04997b04-f10e-4f7a-9f3d-10d2580e711a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef399161-d1e6-4d56-92b7-7067caf64220"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "472ec302-3d1c-49c8-a5cb-ddd3fbd16d6a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f5e0c473-ebf8-4b01-8a0a-dd72e5e55e1f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4353ad1a-08f5-425a-b6d9-9e5af50369c1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1f7e1189-d267-4975-8df2-a1a83487e390"
                }
              }
            ]
          },
          {
            "id": "2e570df3-e066-4881-8c46-ac7dc5f590f9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2c9e7b4f-0a6e-4ec2-aca0-f5de2bbfb746",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "2b54acdf-cccb-4eb9-83ba-64a881607838",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48590f12-dd1a-4dc7-8c0f-5b775d261825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "44043269-12ad-474a-8921-5002539d02ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d901906-4f81-43fd-a9b2-35ad08f8e6f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d8a7ea0-58aa-4f27-8be3-7cef97fd93a6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "001c2598-02fd-494e-b0e8-1193b18947f7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ce43fcc-1ad9-42e3-b6c8-caa46130bcbc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "91c99487-607e-4b8a-b8ba-87f378df605c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1259740e-159d-4501-b5b1-b7bb1f8cbbf3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a0618a0a-e2a1-47d1-a2e9-d99e8f6faa6c"
                    }
                  }
                ]
              },
              {
                "id": "69178970-20d1-44d4-b580-c1143ba5560c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "60f60694-1bc8-4e2b-bace-979b7f708306",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e4ab81fd-4af0-4399-b58b-be08ecd78c73"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3a209d5-8652-47be-95a4-3641c0e4f025",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e8275856-c226-4d3f-952a-195df8178ee4"
                    }
                  }
                ]
              },
              {
                "id": "c87e790e-bc88-4d5e-adb5-553fd6560e05",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "023b9920-8c5b-4126-b5c4-4ca14176b591",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a2ff4682-2dda-42f0-a0a1-7f4ceaa5b6ab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5be73f3e-4438-4eba-bc8c-e5d5ecb50738",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d6d95fd3-f45c-4d84-8785-e0286dd3e737"
                    }
                  }
                ]
              },
              {
                "id": "b53fdd20-f442-4629-accc-b665e126bd0c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2712d6a9-54cb-4c44-99f6-dbd1879f9ca3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b01353c3-bdc7-47aa-a5d0-b65813b81bd9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90df51e6-563b-42a8-b3e6-7bc772966b0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3d2f7abd-05ec-494e-9337-5b8e4456d309"
                    }
                  }
                ]
              },
              {
                "id": "cd8dde68-57c7-4f46-88fa-1f32a91c5207",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eec9a5da-d89a-4983-8c79-e8e0b53457ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6c41fa5-1188-4166-b15c-f820ff91e00d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9aa7b91d-d9dc-499a-b3ac-ca93e75d11af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9437219b-a844-4bf4-9648-a40c8403e2df"
                    }
                  }
                ]
              },
              {
                "id": "4d1d802e-406b-4393-8319-d39d6d2ba558",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fbbe98e0-4d7d-4ed4-93ad-bc10595e2b2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9f0444b9-f34d-46b4-bb75-635da81f94b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7de9e51a-5d59-446d-ad47-e6c8f764d78b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2a4e1646-7fa8-4822-bbc2-aba293458f44"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3c91e71d-c89d-4825-b361-16f33f7defe3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2b1dc101-5df2-4733-9357-bd92287db863"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aeb35afc-b2a0-4d03-89f1-0fea779fbdcd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bc67d160-a8d5-4915-8711-cf74414528ad"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2db4ee7a-6a6e-42c7-9129-17fea4e32e45",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "cca7a86f-a434-4c42-ab2f-7bed0f93a069"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "efc87277-9151-4928-913a-27e5c495ec48",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a9ddd358-726c-4372-8e2f-60820cdf2b33"
            }
          }
        ]
      },
      {
        "id": "6540878a-55f3-4e58-8266-e656cc5dcf70",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4ecad554-1ec0-4fb1-8de1-24fd1abab339",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d4376531-f69a-4cc6-83a8-bc846f502e0b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "67424db2-efe9-4109-9be5-9f10d55fa675",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13b7306-3b19-4e7f-94f4-67431c2e5767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cf6df1f-cbe8-4fdb-873f-735a4d79ff95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b56c7d-52ea-4755-9307-17dde38db50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f8643bc-a2de-48b1-96dc-644a25f87dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24cc483-458e-4366-80be-b2fe03d293b1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d989ff63-d094-4291-867f-bf9a3b7033a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d0091bd-d22d-450e-bb94-c36f0be5f55c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef78efa-9aaa-4a25-adf0-9872d0db192d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbd66654-8c34-4a6b-8fb7-e96a8be2e8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e1a731-ac52-49de-a939-5e98900bea11",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d4c00d-a38f-49f2-9914-1aeb0f2f95d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b21e56d-b7ec-4410-909f-0c91cdd19c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc3fa93-d66a-4c1d-904c-b95dba677583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "20b7f229-6a06-42f7-a9c2-fe6c5cb20d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6f91e8-da23-4c92-849c-468a4dc3f04d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "688fba79-f0e7-4608-9878-bd1711427b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f1f9c6d-e007-429e-84ab-8f2adb152fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3cae4b-3256-4c0d-bdfc-b2e49fcd68b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4941d464-c6ab-462b-bc2c-499d4eefcd43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727f847a-cea7-46ec-bbb4-bed7c138313d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13ec46b-f5ef-4b4d-95a6-0aef9b34cbb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac40973-f2ca-4dfb-8329-40cfa5c59920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6df47c-d36b-4361-8af5-723118c59b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a28694e5-b9b2-433b-872e-f160908a19df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8a7911-7009-48aa-b895-196d5fd722b0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2cdc93-0749-4752-8d35-2ce8ae9b0738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07d6a5e1-fcba-4339-a751-4320c3051329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ff621a-918b-40dc-af22-c9a7ad03fe43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f728b746-26a8-4e9a-90b6-310700ae46df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc34971b-a995-4628-827f-ca9c87bc9dd2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23bd7160-58a7-48bd-ab18-4896ef9b2e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e22ee82a-641e-4b60-8afa-d643f41336c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11bafd67-60c2-4b31-aad5-13f35456db0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "67f9a18a-e955-41ed-a11b-e57fec27284b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64bd8490-6b3d-4bd7-a98e-a891b314adbd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c5df6f-63f2-43d0-8e17-7a3cc7a28251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7fabe9-ee09-4055-a569-70ddfcbc6659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a47bfd2-94bc-4e2e-8aa8-c6741f2eff65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fde745c8-f746-4202-8452-0c52d4e286ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7699c70e-3405-4a97-a0d7-3e4d07954f21",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdeb088f-dfa8-4ceb-a923-0b830f0569ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3055fc9b-8b2f-4e70-9145-0aa5637b01e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9c0e92-3235-4a98-a028-fa0d7641178f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9961f531-5317-4fa4-b391-aeb88b6523c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2993cc9b-f13a-4ecb-9b05-9d262cd1e966",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d886d2-5482-43a8-b35f-d44f6691ec4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f6747e9-6107-4ca3-b321-b92319419439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe9f70d-4ed7-419f-910f-d48a0ef39acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7306ac76-94eb-405a-b2db-ac957a4a260a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8433a65-85ce-499e-8741-e70738043f77",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d8f2f1-cb98-44ab-9fc5-24d38c20fee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d949ecee-e60b-4172-b732-f0115168713d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e79a32-207b-4c60-a25f-278e2a8b9f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ef39bc29-e6fd-4e44-9c55-20586f4bd0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58b5d5c-364c-4e24-b0e5-f3236d9475de",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65d8354-026a-46ff-a6f6-c2d0aaa17e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1887725-0895-48a9-832b-06e712adabc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8083ed-78dc-4388-999f-bf92994fa782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7e2e7521-c588-444b-9a4c-e9db929694ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae95edd-b0c3-4368-9cd8-db411131b675",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b1fe8f-42b0-4932-b268-078d6fa791e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74675acf-f1ac-4f5b-98bb-32163063eeaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fbc1220-942a-4d1a-bee5-9202eb3b7231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "24752948-1ef9-46cd-87c2-a400345cba0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460682dd-694e-4d37-8b21-3241c0fd551b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e6505e-06b8-4e86-bd90-2d9f94918889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b44d956-73f2-4882-9e7c-21dfb054f03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac427d6b-4bbd-4a4d-b3c7-9d3e37ff0b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6974450-9946-46a9-8a05-e82c9b99fdd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f89184d-1997-4cbc-8ba6-b87473371d6b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1f55ef-6dff-40a3-9005-91b75639e485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dacaa519-040d-4f62-9ce9-afcc4ea18875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7139867a-6446-4ea9-b462-ea9aeca448b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba859e91-0d16-44d0-b241-e17398e1a854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4be136-3ca0-43cc-8dd8-86ff5cac71b0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4020b879-f402-4069-a625-f4441ea45cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "090af4c3-e367-4db0-813d-e266f22e989b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96572d62-1b3b-4b3c-9fde-50faaa128a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f2187d0-4290-4fe0-ac93-17b785a4d1ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1727468f-eab7-4e6e-8864-e91bd76dace5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67107250-3801-4e04-85c2-04a0db34c05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9e8d1f-d861-405f-b58e-20b1cab12a93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73b9ce8-e94f-4847-81fc-108b11daf676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "74407a34-7a9c-4bca-8510-dcf3768a2fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a719ade7-5026-4985-aa7e-1de90d157733",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8186b9-c834-49bb-b3a4-037b88c8a56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8bd4b3f-4b69-40a2-bec8-06dd14f89bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53a81f1-40c1-413a-b523-59ad679b4f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "40a0113c-ec97-4c51-8887-91ba9721f846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81053e3-9e1a-49c4-a292-51325852f497",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50192539-5cc0-4b86-acf1-7b60fecda62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "162c2138-0be2-42bb-a2b0-bbec40962e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62704ebd-2f4a-45d8-aa41-387bac5de927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6aa73236-2fed-4c6b-93f9-26b249e93c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edf14b5-9162-4d8e-ba45-60ef854a28e0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c54647c-2103-40f9-9bc7-fce8b1726c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aee6080-e3d0-40ae-8a27-d342f8469953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc494b61-8760-4535-bd40-aa4044739b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7343b0ae-6910-4d0d-8230-c770be72ea56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88839320-3832-4861-acb5-eed62aa44bed",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08f5fbc-ff7d-43bf-a5a7-970de6504bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfe715af-989d-41f2-a2a5-acf9e8758b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc65218-8e56-4399-9a0d-c335be52bcd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "616ac820-61bf-4266-8a4d-22eabb22a4fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6509a72-dcdd-423c-8159-b29ca6412b83",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8acb42-8105-49e2-b6d8-d3d8d92fadc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc271eee-2d10-45ba-adf5-bedfdedd7157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05061fbb-6532-483f-b034-372308c56a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bad624f-af78-486b-a43f-5836027755e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b702af7-2664-49cb-a738-b3642766c979",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee08cff-ec8b-4eda-b0e0-d4b96ceba42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204e74e2-6997-467c-8117-63b433e14edc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae93ff01-ade5-4c31-b33d-dba3755feaa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05a01715-fdd9-469c-a1d3-205f9e72a79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a78e8cc-d63e-4870-a5e1-9f0e26cf9b91",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c8b3a0-3d69-4ebc-94dd-551990002f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4f82766-e724-4f71-92d4-bf1619ac144e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afcd7468-a9a7-4ee1-a606-fe97a989bcef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "711587e1-6507-452a-8fd0-689f91ed0919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb497be9-996d-487f-94ec-b89d846954c4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9757f70c-6bb1-49cc-a9ab-9d99c79a06df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb1f692f-b5af-442c-b013-9ea7870bb6a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea6a4c9-ea28-480b-8262-3b1dcbb8a919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1540822-839b-4370-a18d-76cd095184a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627dd3b4-a956-4c45-a99b-4531701231ee",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4968dae5-fc3b-4378-a0de-d4b76e4a1067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e2c0f6b-41aa-456e-9dcc-8d2eed39d841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab77192-a7ce-4d3a-8491-3832936f6af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b23d5595-da95-41a5-a7ce-d9bd55699491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4cc3b4-31d5-4468-becf-3377b0efb415",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f136ad-376b-4fc9-9d2a-3d16ee4250c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ef3e3a-f2a4-4ddb-bcfe-e9e1a5f0f387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3def6abe-1f8b-4aa4-87fe-c16caf6dd5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c9b8e3d-1fff-40cc-b8e9-71b917a9c3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ed4891-9140-43d2-aa8a-bb13571bb576",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d58e73-3325-4dfc-b0af-248bba5669c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af08f55-8e0f-47c3-8995-5aae3a63cf0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b791e3ad-2d04-4405-afc9-8dd21c053f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17b59665-75fe-431d-89e2-2ed6cdfa99f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45df659b-7393-45c6-8352-cd0e1580aa2e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9090f6ee-9cb0-455e-9247-b886a8000c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b04303-85cc-4987-8673-22431ff7f3d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df4e53f-2e1c-4c7d-88ee-33dcda1965e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f411d27d-948d-4d49-aa3e-4facf3d30944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b927a3e8-0bb8-4cdc-a01e-ea19405c6d92",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e607cbf-8fb1-46ef-9979-a91240aee5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efda690d-0099-418b-aa51-660624cd8ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "541638e1-9a5b-4c3d-8345-2438d3c2b215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e4b1e3a-5ef5-4d68-9ee2-5cf51489ff97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fde3d6-7e4f-4f49-bf79-64ba766e7700",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46999113-38c9-4a74-b6ee-0e4d78bd01e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1255359f-3388-4938-b944-4ba491f7ea3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556afb7d-e0a7-4644-8930-472ef4015e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1a33186-35f0-4878-8308-b9f0ed01e0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff635b0-e29a-4398-92f1-b24097f59049",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27dc09ab-af13-4e99-916b-f0828c5b0af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fcf4d60-b61d-4846-9fb1-e30ee769d3f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d57db8f-7683-470c-a91a-a371a8819292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2b1ba6d-4b63-4227-ab29-8cba6d88301f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d80a2b1d-41ba-49f3-bb43-a85b4a821f9a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0074b371-31f9-4413-82fe-39a61a5745f0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a66cb7b-e622-494d-8453-c83905ae56de",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "df78f746-7d30-444d-88d0-aa36e4fb136b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd52bc9f-7645-4084-8c1a-84f87b799025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a577023b-c098-4f83-b8aa-32f8863c15a0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b863b81b-3d1a-4327-9eb3-e88bae2b4551",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10e92c48-222d-464d-ba57-be3bb621ff42"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "851fb2e0-01f0-43da-a519-c1779d8a929e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "332561ed-b2b2-4bc7-a695-12c17d6c7157"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "edf24472-eb4e-44c4-931e-8e8922ef5fda",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "787b3841-d9cf-4d6b-bc06-11b893d64bbe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6fbf8ec-dd34-4464-a850-65dfc0f7fc3a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7f68e397-ee45-4275-90da-9047434b99d2"
            }
          }
        ]
      },
      {
        "id": "a3719939-fa00-4c84-91d3-750485393493",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "e511764a-a336-43c8-bb45-1be0afc2b98d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1eff91d8-1bde-491f-8da9-801b23616b2d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3174d20a-abbe-4718-8634-1af26f5f98a4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe98e0e-9b34-4db1-9767-2f5e381b452d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1cb12a3-b20a-4879-8e2e-18c48f30ed78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6845242c-e233-45c9-bf29-d5ad5778ac0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ccb45ae-5e4c-4e1c-bfd6-c115fb2cd705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80298773-8a1a-47d9-bd7b-5f6dafd1c648",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa6eb6b-67e5-407f-a567-19d589f9f30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8dad206-8b7f-44db-92ae-734a9634cd12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e164a508-9d5d-45fd-beb4-0679800e6562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f61151ee-dc31-43da-be07-67f2786c763c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb001719-09f0-4950-9c0e-c5bf2a5d9751",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb87b6b8-7067-4066-ab84-b5709f51a84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd358ca1-95c2-4d65-9c12-2acb4d5fe4d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39bcd87f-fce6-442e-a5c2-eba91e4bd5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc6fc2d0-1780-499d-9296-4b2dc37abb9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb35f0e-1f5d-4b9a-96bb-c3cce2930919",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea0170b-0c4b-4c27-bc46-d30375597023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7927f39-b7d5-4b43-be1e-c48571df4dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e247deca-9d98-457f-bb99-2b164c1778f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "520ec4bc-ade5-40df-803d-7d3dd5da600c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f62f257-e2bb-4e16-b188-1397d5c78025",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa31170-858a-49e2-841b-7dfec1cea6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "015c1381-d7d3-4e4a-9d24-8b779a4bcf90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bbcffa6-3c87-4149-a663-3453b54be7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a24e4add-9a66-46c2-95db-8affc5f5316b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a92663-6dc1-47e4-8636-dac389f467d6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "201e25e7-31c5-4b22-b6cb-eae55ed7ce79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82ab9431-c32d-463a-b0ff-f871e1cad397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4b929b-0301-4bc9-a307-a884bc23970e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a5285dc-3197-4d3d-bfe6-810df4c35c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2857aaf8-f316-40ad-b3eb-515c87d2660d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca6b7a6-82ef-4028-9ca6-1240267061a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15df16d5-fe3d-4fa9-b31d-bccd20fc805b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3520814f-5c79-48d3-8dc0-ab1b1e46c8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cac134bc-cda6-449d-825e-7100fccc67e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7671a3-70f1-40c6-bae4-2fed08f6090f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d297f2-0733-42f4-929a-9dd46c188723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3af8ef9b-9172-410c-aa11-a7ba9c2ae0ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bfe428-73bf-4c3c-ba2a-adc8cf97b2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68dbfe07-9b47-4d52-b7e2-265e2c05849e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa8d4e5-d6a9-47f0-8e18-f94a26456759",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73034182-ebf0-47a1-aa5d-1c8d8e308fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f40aee2c-73f5-4dad-91a6-8f6dfd32c3c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab27b2c4-4d53-4898-b05d-4319023e5d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "88824599-0970-4135-b0c4-ac1173d12a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25b84ff-18d6-4265-a9fc-3b4b14c90f9e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a35b2c-8af4-4c56-b366-6ddf365011aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c5d4def-09ea-4f11-9028-ffca42f08bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65a36db-6e5a-485c-a2bd-2b3aac7de7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fef00a1f-7c05-4dc1-a18f-9d373e4280a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0cc6d1-82f0-4316-b0c7-bd0300e891da",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98636de-b766-4e94-aa81-877734931575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d16687b-3ecf-4e94-b6f4-cd62ec0687fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a98370f-d364-44bd-a9d6-c097f1176ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "aa05cb85-cdaa-421a-a087-b82ee5bfbdd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f572d4f2-f94e-4aff-ae62-46a2a50de208",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a536b7-d8b5-4d1e-adc0-b4fb7428c47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cba74e29-af38-46f5-8764-7476fb4717b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d02aab-7ef6-4f87-8f42-e38a46e3fe9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e9a51a35-b2f8-4d2d-b8a4-1760f079b7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d5f011-05ce-4e14-b5d9-5ad7ced55dcc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75ce929-0db1-45c5-8e4b-4583f45a35c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a8efa8-0dbc-473c-bc3f-75ca1907d812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e3ec25-5692-45b3-8a8c-ebc38ba0edca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c758ff6a-1b3f-4928-80d5-06851572e6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9c8fb2-1030-4df3-b59f-e830612bdb78",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2059b99-58a4-45fe-b913-fd2befbaadfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2af7434-c104-4112-8bf1-a97ecffa2d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2707086f-775f-45fd-8bea-7fcaf95a70a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e56b9830-f810-47a6-95cf-2fe7ceb33ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dad4908-fd0f-4f57-89df-626cd330e1f9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9debdfc-3591-4a16-837a-75ef77481e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d951d73-29e5-414f-85f1-49697b2cdbdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5914135a-832d-48b1-bf90-7c6d3cf352d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ef4b8e6-6dd9-4d26-91db-2f13f021eec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa89dc0a-0ef8-4def-a06b-2ac3ccb2e77f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ee2630-2f30-45ab-9297-2bcf0b5886cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7692be95-f633-403d-9519-dd47db889b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a73fa8-bf69-4c5b-99f9-32727c9cbeb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d928b91-2dcc-438b-85bd-df40d9b55bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82b5bd2-aa8d-44a9-850e-39dbc62b6c6e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ade45d-974c-4202-9a98-392af229e241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24aacc07-08bc-4615-b401-5a02c0b37908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6565520-1616-4d2c-8bad-b171caff9196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "39064a8e-c318-40ad-8b80-642e01c9bae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797e0d93-b874-48ad-9a40-910da18c06a4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0d4d28-23ea-44ae-b4f6-5b8e0d9fcfda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60b7013a-8b15-49b0-885a-cda8dabba2fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30feba66-3fdf-4a2f-9d64-6629fff84985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e35a263f-9eea-430b-a70c-806f211e6f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3342323-6489-4ab6-a08a-bfa21cfd66f6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2ac92d-a70e-4721-b850-9a8f3b856a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a45e914-cc78-4220-8c76-42cb953806c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bd1a97-39ef-4c71-b3c8-da5ad766058b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f69e0220-1dbc-48dd-a3c6-87d9efd02936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb894433-9465-42c6-9073-ca80c1fd6475",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94811d2d-05d6-40ee-8e07-d562f396f2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f819f1d-c454-4a2d-9fb3-feb1f5a01871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce72a82-68f2-49a4-bbb2-b3bb17f32de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5c811b6-47ea-4991-a6f9-040953c5c024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b382a931-ea2c-48ee-83ac-47a1cf3bf8db",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca89e4a6-f864-4246-b680-ad34bb57c09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27bfc538-3c7f-4966-9e2e-23ffef9a85f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6b6f5b-5e12-4d84-b0dc-37ae4a21884a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f77aa7d0-94f7-42f6-beeb-9b2e0f69dd9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8680975e-56d7-4dfe-8a4a-8f2ed11c0fa6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901f9ec2-ba64-432e-9917-669229b0f538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc7c4fb-5ecb-45cc-9092-9123e6c7b4e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e8c874-1f70-433a-a50f-3bb86fdd179c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bbc849a-ef9b-47a2-bb66-7116223c6e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1f89e0-ed14-4ede-a887-4036a2bec1ab",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdee58a6-433e-4890-83ba-17ba5cd96f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c50f4df7-e1dd-466b-b853-d6cf7524019a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ddc4f05-e329-4f1e-ba88-f54c793bb5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b3d237c-6e62-432f-a11b-e19b8a00a601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce1e4be-e219-4280-b388-5f8269c1cd7d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "132d4d61-a0bb-4ea6-8e44-ca6b39862921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d0af2a-203d-4035-affa-499c4f3a38d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed175564-e2be-484c-b737-af8542380600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56c65e0c-588e-4970-96f7-c97531b3907d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2702c8e-d4a3-4994-803d-dda80385071b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed550031-c702-4142-b78d-5dccbd0d985f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e23d2a88-5a5e-4c51-aedd-bc09e55d2e9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28f6777-3e21-405f-9ba6-5b890c08366a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ee4c5e8-d4bd-4945-a0b5-3cc47e8ee302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193ffa57-2c28-4ddc-b7b2-3b8b9c0ce836",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f4fb58-cc71-4ca9-996c-6243a13e5010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c850094f-ce68-4a94-87dc-f22ae91218da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13f9b26-22f2-4312-904d-5f0f3d696ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f56836a-b64f-4fcc-a184-16e8a22f6887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4353b91f-ec9e-4d13-8c15-b4fcb8dde048",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824f4041-9a25-4c61-9a1a-30d0d124d800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af783a9b-e3fd-451e-99da-6755370e5f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5018bab-74d6-4e91-b969-74e0be210448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a093e5d-2d41-4619-ae69-0e2dca93cdd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb680003-3398-41c4-bc1c-dee5594ef6f0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3e6524-e1ed-4f4e-9282-ee3e15d3cefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c4e7c1-1031-4f5d-b69a-843de34f02a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76346e0-b363-4743-b6fd-24a73fb72661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fcf2d16-40e3-4d5d-b897-0a2491ba53c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f690554e-a877-435b-af06-d4fb940ccc97",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbfc5d8-acf7-4efc-b9c4-2170877e1ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a336656-1056-402d-85d8-4df404e79fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3322ce6-b8f7-49e3-a03e-0c3d242e5fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d0f444d-ef09-449b-b26e-a5c10ac7b802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083d4fb4-e152-4849-a764-b4d832c85e39",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1d372c-7bc1-4497-8a84-cc8bdab328d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13e027ed-b200-437f-93eb-f8d42771488b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b3574a-c958-4779-a887-f9c5e58ebb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaf7ed7e-8371-4fce-8364-265fc39ad48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7299dba9-1fd3-4445-a482-b2568a0c5429",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a25ea51-355b-469a-9036-f4230de2273e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2148fb78-d6ab-403b-925e-2aa08e141fdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f09330c-76ac-4946-9bc2-7d3e4f6e1735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce140abd-4fea-4398-afd4-17b7dab8a4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2412ca48-9eee-46f7-a1b4-1eb8402afa0c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c31f27-e088-41b2-bbb1-36f9b9a05d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55be277e-4962-4e2c-a243-7feb1e2c12e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6e531f-a850-4d07-a073-6bad6a4d3e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11903849-91e2-4cd7-b6aa-ae86be656ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0e67f1-396a-468e-84a2-30556e208ef1",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43edfc71-4ca8-481b-98b0-556af0a9ff6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ce30e6d-4cfd-4123-82b2-0791a69220ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc490cb9-8334-4ef9-9442-8fd8ce8d3a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dafbefe8-b045-4793-8e85-0418af7a277b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0306dcaf-06d2-4bf0-b5f1-e8c621801126",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89466164-adfc-4e9f-9b02-c38f70061531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f83495ed-a9f1-45ce-af3d-c2c7f5f33166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced9e759-5e25-471f-b52a-b873360ed85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71a89282-caf3-4542-bf49-129d143eb0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356bf490-072f-43c3-bc20-849ceb8ea85b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a846a5-d475-467a-a131-fd02b40bb927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b5d3bb5-c32b-4e34-8e4f-ab729d4ec614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1372ca-1a75-4126-9072-a82303a26d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68959e9c-8b9e-4c33-8ac5-d70adbfe3b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04bb3449-0cf1-4d3e-aa15-58fd61e4b0b8",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16cb177a-6b54-4f91-8e63-9fcc761e8413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d60a5005-ea80-4bba-85c0-ef6aed38225f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e9d557-9329-451d-84cc-aa16dc4efc1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8727ce53-0b4f-4510-a7f3-09c318a4fac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8584f8ef-cfac-4787-95fa-5eadc7a5525e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c85738-2b97-4a72-8062-2ba56bd3723d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42c8e4b5-c65f-4e2c-a6e0-fd699c0d4706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34108fa1-a468-4c2c-9e3d-5624d435bf27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7b44d96-7d98-4fb1-a4ab-9bdd27414985"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1acde349-8ec4-49d8-90d6-05c5de2210c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b93130db-ffcc-47fa-9b25-ab62e10c8e57",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62599546-a25e-45f4-84a9-60defd7b8164",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3dfa487d-ba24-45f7-a48e-5ca1e7132d74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25aa5e35-1a64-4245-a8c5-3d46502ce9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed69454a-f936-43a8-9ac8-6e6e475603b9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7d82583-0fb0-405d-b03b-e64a47cb5fb1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22e9a178-9994-49eb-a1ac-8e57832b2b7a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f30285c9-2bec-4372-b2b2-fcf9ea7902f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ec6edcb-8301-461a-a44f-bb88512baffa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "832fba18-ccb2-43e6-85fd-b736f285dc74",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b1195870-0d86-4ca1-ae9a-0a1e5018bf66"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32d83437-9dbd-4c28-ad32-96546dce5dab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a7860b92-5e0f-488e-a420-b542e93dc77d"
            }
          }
        ]
      },
      {
        "id": "7dacc2c9-8db5-47e2-91f1-c8af9ea8a22c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "06dce870-5e6a-4eb6-80ca-6001688a82b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bd835489-30f2-4b4c-94cc-f266be978905",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8131c010-ef3a-4de4-9eaf-c1c62ad5e81c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eba1699-a87f-4a8a-a7b2-4b883b2a80fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96e23295-ecee-4436-b49e-579016de345f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d838894-b877-4853-bd72-7e8a0e22a668",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84143115-6531-436e-91ba-c639afeffb84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ce646d-a8e8-459a-9eed-1077eacdba12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38cb9b49-5c74-4ee8-bf66-435e13d67520",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eef163a-dff1-483d-9218-551a646a3f44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d31215-af6e-45d3-87fa-2f2ba0c1092f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98344d6e-81bb-4223-8e2b-c793c013c080",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a036eb2-fbb8-4c7f-8919-1b2d3043bfb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd8b87a-be3e-4fab-af17-3addf0137f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a224e21-cd41-4052-8203-87323429862f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cedabf8-bddd-4546-afff-c3d5d9c97fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5d0aa0b-9e2a-4a05-ae1c-cc7d060492e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fd314b-c780-45f2-95ca-4ae1de2db2be",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764a5d31-91a2-4641-bed8-a8d9dd3c75d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aa599bd-ea06-42b5-aca6-af7641eb8379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aaa6a46-709a-4c7a-b5a7-9a9eb3831bfe",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6ecb85-d955-473e-a131-e404b1ddca0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3e139a-e60b-4a23-b68c-5df0c83387e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d1f4f3-762c-4a77-8306-93b4486c5fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce293994-0153-4cd6-a7b7-490fd93955fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abcd0681-83f0-49c4-9e36-fc262397d42e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6eedcc6-fbcb-4ecf-971b-fccaa212e78e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37d5355f-015e-4a1a-897d-98c4e2a6ec5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1734b0-058f-4fd1-93f3-c321e337e9e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1bc6182-4e5c-4250-b294-8ed2a3e9928c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93427d3-9157-4d9c-81a0-e51ae6561d0a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1ff781-4e96-41e0-acf2-4cf9e087028c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da9ac099-7cac-4534-a1bf-01fe4da931b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6f1020-85f0-4845-82db-86da7da5cc5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d60e52-fcb2-4920-b3be-ce8536f1a60d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb90b3b-e32f-43b1-8b60-b6f517e90f99",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1292a8ce-62b3-46e3-9cb6-b14a39819601",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0b77eb3-ddfb-4fd8-94d5-6ebff48f1c8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1ff1d3-cbc0-4c27-a6ea-75a6fb3649d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8823ebfe-80fc-4921-bea7-ae9efadf7dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242decb3-3ec1-4a17-8919-18d0e3aca88a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bad29e6-f370-45d6-ba8b-9f3657908b69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f418b520-bd98-475b-939a-240f6d5af4af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eed01f8-8550-4793-918a-8c9ae5f65aa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0998d5b9-0ac5-49f2-ae1a-35c75ff0c503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd40b23-7ce8-4b3e-9163-bb99750c0f11",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4bb68ff-c715-4a42-92bc-a6e6ceff9ddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04676f72-cacb-4796-8450-094473d6b661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab6270e-1123-4248-9150-e038af0390e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b967e65-1dae-496f-ba98-145653be4390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2408aece-4d85-4817-8859-6bd1b7d9919b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00cc6241-d91f-4da6-b3d5-b450df32ccd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbeff9d7-91c2-4600-ac46-7b88f5d5575b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bed87c4-5f31-4f6f-9e10-6211fbd9e7cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fedb3151-a47b-4958-adb8-b5e3b51ea510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9412855-a632-44da-ab03-d9c37f90330f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13dd0e90-51d5-4c72-a459-0cd788065865",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e13f0f65-87ff-4e75-829f-77ac7cd3ac6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86daec59-73a8-4b01-8aa4-21ec2bd735de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a4496bb-4ceb-470d-9c9b-8483fc959b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873ac696-b4af-40ee-b6bb-723249ab9ca1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c9d2ec-055d-41cd-8352-15c53531c321",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b09dcb2-1929-4eb1-9ce7-bf617a012e5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42637379-1c51-461f-b057-f91f79aa1c11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7efc309e-6d43-451e-a88e-2c9f8d8859cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662ebfe9-6b59-4ff1-a114-0c1cf85b892b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b086ca05-0e79-4fc2-b657-552321fc6eec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65f2594a-76d4-46b7-929d-e46c6d028878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afca125b-5c8f-45e6-ae61-fc5e35469871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7224a816-b2b5-470f-8618-55093d5fba3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3f39f9-a85d-4646-bbde-ac7d8ac01aa8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f35d10-1b01-4de3-a523-034e35c08670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21a108bb-71f9-437e-a14e-45c8851cbeeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "616accee-c981-463e-b515-7ebfef0b5545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e628de3-16f7-4dc8-9774-7cdd6f3a49af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196f027c-ca58-4ae7-b5e7-93197523685a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e6c46d-21fb-41b8-b643-75a95ee9b98e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054b8cc6-5f7d-4dcd-abae-a2911e471b6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2cf962-2aae-4168-a869-080f7fd646c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f03ec5f4-267a-41f5-8d0d-96442d00e0b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a947239-e266-4df1-8c94-b95f18ef07f8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d1b054-9660-43a9-894a-2a9cb1880d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1290b4-ebb3-4cb0-8e43-d373681816e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e21482-3d5f-49fe-b2d1-9ebc38e747d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e5932cd-5ee2-474d-bbdf-5305594fdad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5788c535-5ee5-4d9d-af85-41bafbd67f26",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ccf5ee-cb69-4957-934d-043ded9aaa39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01405610-bbf2-47ff-b2d1-f025932345f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffaf784f-02b2-49f9-b935-49c9e9ff796b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a66bbce-a23b-49a0-9b37-4f0f781791cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc7c28a-47a9-498f-ab22-b86583ddc9bd",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2c8755-6105-4d4e-9bae-0f295caa2e5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b51001-67a1-4cc2-8089-8dc0c71c11ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e199c6-5236-4e17-8d60-21f0351ef1e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0a2d4ec-779f-46ed-8c3e-b6511a98a1b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6eef79d-8be2-4e47-bc78-bd9cd24af3ab",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5725255-870c-4d35-95f7-650c99445740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04855a5c-474e-4f19-886e-880ee3b3ffe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebda140-4ea4-4f0d-ae02-9be34651281d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "296549d6-d2d1-4dbd-b291-6de6de75c094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2692246-4a31-446a-add2-1c6c5ed8a91a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892b3370-7406-4297-a975-1979c6fc3306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa7467e-af05-4f9a-81cb-701435be7aa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc56399-0150-4891-8b38-7ef0392c826b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bce9c338-7258-461e-ac27-e8fa6fd83e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e098a4-6aa3-4151-bd5a-483b97fca167",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c0c258-dfd2-41a1-913e-429ba9fcd3ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a36ef93-bff6-45e6-852d-cd85c82e5c8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6529c45-7717-4864-aab8-f53f1f06717b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd6948c-0d45-4cd5-bbfe-03cbde344ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7274ce-3346-48cf-a7ba-97d8d3f74395",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bba847f-eb15-4fcb-ab1f-645b6e93c191",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aed37a3a-0d2f-4819-afc4-642d932e8ed6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29784ad-8bb7-43db-adce-5cb43ed9b1c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa0900dd-5e04-42c6-9a5b-3d4441f4aa84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b24e15f-198f-4f5b-8db8-c3c7742194f5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c55695c-4a25-469a-9c26-f8b6110cafa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d20b929b-b959-4cb3-a4d3-a4c0b3a3fed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2ec024-5438-41bb-adfe-c6b64d38ba73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6a336e7-3f69-4797-9958-85ccf4196d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347509af-19da-4b83-9382-b1cc91f405ea",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5c5ca2-b4e2-4e9c-86ba-046a729f1e52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb54f946-c4a8-4b1f-b231-57e840ee2a06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f37a885-4722-4afc-9436-87515a03a114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf435a67-ef8f-416d-8575-d5167428dcfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e87f600-8d8e-40ec-a6e8-0a3e9b644d88",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c75fb7c-85a4-4f82-8505-a622916c10fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a29cc87f-fe59-467b-a576-6bf163946676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ba71f8-0cf9-4e1c-b777-dbd21687887b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52369f17-19b4-4a7f-a863-ddc79fccf61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f0fd26-bde4-4f86-aa5c-a9136e83d24e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c394f5c-e297-4209-9f52-aece418c3dff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4addc83e-641d-4f52-b2b2-c4651b747a95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68465de-811e-4b63-813e-8ed6034d9fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d6e36dd-b218-48b4-80cc-c8104d38c9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803fc95b-a9e6-4a18-a4d1-39d3c441acc2",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2836c668-74fd-4f16-9fc3-18cecfa2c483",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15240908-2785-46ec-8f10-f70e2676e910"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff88c002-ecda-49b7-9144-44cfbce95722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd6530e9-2849-4151-82ce-13fdd08c8af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc8aa29-a048-472f-b33d-744c3fd74370",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9066c4e-d3bf-4e6a-8edd-3bb0c642907e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e222a614-4b21-4e00-a2fb-7ee40a69eeea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced7b73b-4687-4ab0-8aa2-d8fe3b211ef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e62917-1c65-4961-8a14-cd9f11be3458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5951009d-28a5-4260-8bfb-84ad1ea37a01",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b45034b-da08-401e-8195-5204e35ed3ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e881823d-c0f0-4fb2-afe6-40cd6ce0ebae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0137fe55-8769-4647-acab-e2928b7b2219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d4dcec-dabb-4cf7-b7de-ed0d111310bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a67a92-7569-456d-8fe8-4edf2013c3d7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2e7225-42b5-4eb9-a6d5-c3254a4914fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd92f620-bd82-4876-af4b-52b1991d91dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c086cd-27aa-4b45-85d5-bb836d839ac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6060eeec-4c8b-4b48-afcd-49c6aa156288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a673a5e2-44df-447d-b371-1b4b2dad5f7a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0546e64c-fdc6-4f42-9f13-b269fda8b8ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0751966a-f8ab-4435-8384-2fca263856f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb8c5b5-2143-4fbb-a292-9a7c1d3bd965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a88f4a-8842-4952-969b-a2adef344a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a78a58-e41e-4b4d-85c8-8f29411e1048",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97690c4c-203f-4298-a7c2-4e084693d9f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc23f037-fe14-4363-99db-354065c4919b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "929eeebc-79f9-4edf-ae87-6da3dd49e374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f543e9-704d-4f05-824a-3d7112db7a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f180bf6a-af77-4d37-97b5-ca570812c02d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343c8181-c29f-48f0-9f06-f93d95dc02a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "103e3c55-23ce-4b86-aa21-a151aac8846c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbfdd61-127f-4488-8927-80376396f9b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca8cf0f3-101e-44b6-911c-21db93d01449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621eb528-b78f-424d-b65d-0ff51651dd5c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95167669-e565-4dfd-b3ba-f597ba9fa769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8678a77f-2a23-45e1-9fad-0fa41af36baf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b565176e-6959-4df0-bfa2-c0c355aeb752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70e3923b-7db8-4078-ae6c-e4848bcc4253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ce018b-d133-4779-9584-483d232017f4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff3f8a1-30f7-48e9-9914-3bf45ef7d9ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e82c0ca8-e0d5-4716-aaec-f3f692d2cf9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb2c4ad-c045-4384-bbd5-bd9e60bc7535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63591de3-05eb-46f0-bd42-e114c0fdb043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7b24c3-7664-444d-acdd-ff98da9d5f01",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebcb547d-c7cb-4dbd-bdff-8f6eb0423541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f406c108-d128-47e2-bfbd-de5c932014fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "906bae1a-dba2-4b2f-ade3-5e6ba12d7839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de19c133-5d0b-46bb-bd29-9b838c73993a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7533220-77d5-424b-bb2e-13341eea79ad",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb961b0-7948-4b2d-9d3b-db6d3e2ab6e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7030158a-1a86-4696-9cf2-3c34c7ddd90e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6189cc-d092-48cd-8472-d215e3f5880b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c7bc5a0-53b7-44fa-8260-ac017ed76eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3455f2f4-0970-4dd1-b7d4-d286c5b14305",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9a8105-3215-47ff-bf08-7cfb97319f3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b63d762-520c-4cc4-b1aa-794131337cb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6327434-9d97-4eff-a998-8f552f7296a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b58b99bb-1043-4640-9622-c9dc21870daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29340a2a-5dc0-4c36-bf76-3d96534eab7d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26657d3-aef3-4cd6-b13d-dcbc349bc67b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf4b7a6-59e1-4d4f-9fc1-4db1ea1d748f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2bafaa-4c90-426a-93bc-a2aa2da12b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a14fff-ad09-4c7f-a3a8-631a7c765b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972890c4-4638-42d5-a42b-2a298c379527",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2222c59-9253-4336-bb24-58c5381a6911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e776cbc5-2cb5-468e-b41d-f7034224635f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd4147c-0a7d-4a3f-a903-8189002f15dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08a6ba21-75fe-434c-bec3-0cdeb6edaf17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ab005b-54db-4484-bc40-0dacdf07a7e2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e609a8-af0d-4d66-8e7c-0347208b8158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "998a2973-199d-4f92-bdc4-433d2f1766cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7bbdfb-52b7-4ca6-89fc-c3ca4c384a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c10c43a-475b-429b-a95c-99af3e93a0ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399e8677-71d7-4645-8376-0316c68be82e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81823fab-7597-408d-b1fa-bd0a265ce18d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf884719-dd7a-4188-80de-443d6819dd02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ff8073-0a36-4b44-8688-e73c84ae5505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6bf3a4a-a556-442f-bd29-c82cc9135a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642bb0cd-c5b9-45eb-bca4-355de4b89045",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792d79ed-cd48-4fd8-add4-e9f76266ea91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c4495b-9299-4c14-833c-279477df98d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b966998-ade2-4754-93e2-a199f4d431b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "570e9e02-e9c2-49f3-b6df-4aa054a21441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eaf450f-02dd-480d-8777-e7fa27f52bb5",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c3c7dc-a917-4b7d-a202-23417836b526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea6098f-7347-45e7-9ebe-35570223ddc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "974b1cd2-ece6-43e0-8bfc-69b97dadc6b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76298d41-d9d4-4e9a-8b1e-dbcbb0a73df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b8f2269-24d8-43a1-bdc8-13e74bfe30c5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7a2b2b-9f8f-48d9-8086-5ea39c225368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33121d76-49db-48a9-8d64-9e1cbf6ed626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9a47e1-65bf-4e77-b071-0e43512f6b19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7660900-8cb3-4a71-9c6e-386bdc0009d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6743276b-7bc6-403d-926d-6dc6936f45ca",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512e8a61-5ab9-4a41-918c-8178844df975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "688f36a6-78cd-44f0-8d60-7777b0a645c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98be907-c0e6-45c6-acf0-b507e93357b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac007cf-2922-426c-8e26-3a8cbfe0af07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ff2d86-ec5c-432f-b088-62b2ae293c96",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae63943-52bb-41b7-abb3-8b077ca267e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38346757-6e86-4ea8-9784-8f53d6cf616a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a4bf98-7750-4ed4-8c23-6e317b8b8d59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceec8b93-2798-4043-8dbe-1cdd30770039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5835bf3b-0b8b-4e98-af51-08024e3e1bfb",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cdea9b7-fdcd-46fc-85bc-6b1c56f3a38e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32126df6-ffb2-488d-b36f-fd8e6bcb7dc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5c94ca-8797-48f5-90ab-5a9fcae8bdb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f1a08d-f11a-4f30-9c25-804cb034038c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2629c1e-e540-4704-9103-7ecb748c6f66",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ce8a5d-04f1-446a-9ae3-2425a1e0b832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4e0d44e-a9d6-4cca-b3af-bc7928157c25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9848076a-3001-41e2-a5ed-6fb882a136e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02759355-4435-44b4-8111-1a1d9621be84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1733b0-50a5-43ae-a61c-fc7aa8ad2141",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170aa837-6de0-4e51-af4b-22647d39406f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2077c96-6697-4e89-8d65-40b18d1eda30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fc0565-b410-4e2c-9812-09eeefb5e9a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be03f13f-42c2-4e97-a8ee-911cb45ef908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436702ef-ca55-487e-8a6a-a2c0125d8069",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328a9643-8051-4392-9c75-d0e5e931a5bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cce67b18-cef3-45a8-bedd-78e474cea2c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "854ce821-9f40-40d8-b2ab-e8bea6e363ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25aad637-e515-4388-a466-67a6a7ec94cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ce6d73-9f75-411c-8236-6f01c074d665",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e14b81-e6b9-4663-a123-002a1fca01de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4f85c45-1088-4f87-bad2-aaa1378433b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4008f27-48bb-4a22-8611-f12f49b87af1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7499b6c-571f-43c0-a910-f6bd52079866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52fdc57-1261-428a-989f-52f23f5139d7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7f4d91-83d1-459d-a4ec-95abc10c81ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc102b2-1ba9-43e2-8d9c-8550b95098a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c94b2c-62ae-40d8-b098-cfe270e0d8c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "636cd992-4de1-4938-abb5-0a40cd4caccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f054400-627c-4200-961f-f43b89b6f7a1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce5e740-ba4f-4f10-9ab5-7705db892bfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "613725d9-2695-4f8f-b5e8-dfb27cadaed4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "214cf4e9-4664-4fbc-bbc1-20bb498943e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97cfb2c2-6fa5-4e9b-92d7-f68ab3056b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e658b2e9-5de3-4434-9830-4ca02af6fc65",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22d43eb-3c0e-43fc-bcc6-7d366c34575e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d615214-60f0-47f2-8914-2fcca9574926"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5703ca-cbfb-41fe-bb5c-53f0d2364ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9df5d0dc-d8e2-443e-a781-50a80ab3796c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02095567-d010-4e1f-9a29-1499bd6f625b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344f1ddc-17ab-4b76-850a-58556a4f2115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3208e002-4928-4c26-b1dd-bf2eb04a0063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42ed206-03ca-4e7e-b152-6d148f52ac19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "614c2a8e-14c9-4ed8-99b6-f48491cdbe21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92fa53ef-d7c5-4dcf-8d52-896e0caca70d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a493ed3f-580a-43df-8182-253f798a751b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68895473-30b8-474d-af51-22cf20578db6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2450b04c-fe9d-46dc-abda-40fadd535f50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2c9441f-09be-4d5f-90c2-9fe1216ae5a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479b811f-a82e-4f74-9072-c8e60f24ad4b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0fe2e9f-5101-4c81-8e96-3ebff5a0510d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bee6b8e-adf0-4971-877a-4a8beb6394dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9537a4-2df7-436f-b4c7-ee05920e28c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "150b5b1c-6c55-455e-be2f-8bf1ae209a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0bb815-dbf6-4bac-b4fb-e0250db0de95",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774071a5-371f-4aba-bd40-e48816ebc0d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f77f90d8-7f08-4e74-8663-434e1d2ea038"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c27b2f-95b9-455e-9905-7ca177a7deb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dbefef5-5d7e-4532-968f-3154824d6d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe13591-6b46-4fae-8208-0d83fcae4a58",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caca5ad6-7bb3-47bc-899f-cb8a25c3ea8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf81d3c-fb1f-4ae8-977e-c9907fd47744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb1aa8a-c46a-49f9-b013-0c5759e8d934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f65d2099-6546-482c-8bf2-3b89f8b52ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ae6565-02b6-423d-ad36-56203b363547",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415210c1-5679-4bdf-b05e-10b2cce986cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e8cb4a6-6b26-4aa3-84c4-fd15ec586b3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c238d3c-eb71-4937-9df3-d75bf64a4d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30e49a03-98c5-4b62-bc7b-9880605a888a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc9ce10-cbf8-4972-bc97-afc1fb60cbff",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13168a0d-f463-4d3a-af06-650130783eca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "309fe585-5f90-475e-a0f1-7e6d941fc99c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0ecd61-93ab-4bc3-b84e-3d1825e0d88d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "944fcf66-b9ff-486f-9a00-6395bdce237a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8e1137-2b41-40f6-a515-885f76bceced",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8056209e-9b3f-41c1-85e9-440e8c045028",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54a88569-6105-49e9-9555-beddcf0018b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8832aa81-5e9f-4385-8436-93dfe86f2880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "780fa83b-1509-4de4-a8c9-23b2dfd6bf70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467a524f-58ef-4ec6-b8e7-a43622e64952",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e12419-9365-4895-a3d7-2d5a0113bbd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9def6e8d-8416-43e2-8c97-c7d490116a90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76233cc2-0464-49d3-9178-dd428a86f13d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b189c20-9dbd-4206-9ae0-4dc5f8819dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87021e8-9af8-4a00-b366-14eec8be0a5b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64aaf35f-4792-4ac3-af48-4e77821377da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ff58365-4f70-4b9b-98e6-3ec102147177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3828a08-c910-4322-ba2b-afdf2ffd17c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78a21fb4-62e2-4f61-99f6-315b31a910e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6bf761c-a789-4a7e-9f83-083f540104a4",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd2f1ec-2880-4396-b824-db2cc92051d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a200ad3-687d-4756-aa97-74b2eb25c9b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d634d52a-74fc-4ab9-8be0-58cd9351064c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e927d5d-707c-4e07-9db9-b1f5afa1c0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ead9e6-c534-4996-a612-6aeb7911c955",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145aab82-9512-477a-95eb-277190a77d7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c18a605-6d24-4546-acfb-f50344efc4ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fec86c6-b3d5-4e9d-80cc-3c7b01600678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "079f784b-b320-4ea5-8c84-eb26b2de1a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef6e56e-5fc2-4f7b-baef-38ad0c1a32c8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8dd5806-2722-4b67-be2a-8fa50be89fbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "127b6739-0005-4ffc-b12e-9d95b49eaae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0a495a-b1f5-45b5-b6dc-a5281505397f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "796909c2-302f-49cb-8a59-3cc2c602a053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85536d0-56b9-458e-961f-70511e26c82a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689fab34-f8f8-4855-8964-1b34dfcfa557",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf701f4c-05d6-4dae-9cff-2af9b7307a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e0469a-e9da-4580-88f1-67ca58154593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f24aaac0-1893-4807-93b7-6624e0559100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2488ffef-07e9-4a6c-bc5f-10f17ec8828c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af33fbd0-0931-41e6-81aa-e238c8c8bb15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8481385-e655-44c9-a2f2-821132ed61e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8b8b73-f58c-488f-9689-fecc0604efa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec66b17-f977-481b-864c-8e52ab27afcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d962776-9fdd-4ed4-ab1e-ff3710c6fcd4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0b3d52-2c6a-4682-9c4b-ef486c335ea0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "171e5966-6725-4afb-9d7d-85a0feab271e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0606c5b6-f2c3-4ad2-866f-41e339069e6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c09b6246-7a08-4e4f-abff-46b49918ea30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8f27a6-80d4-41c4-a988-27acc0e4f5a8",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f42b01a-400a-49ba-aca8-bcc30e65c36a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69f074ce-116c-4afa-b84d-0498a2872594"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e282bf67-e88d-437b-8af9-288ede333473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c49c6f7-bf6e-4fcb-a486-cfd6e70fbcdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35494df9-4e52-4119-b748-e76f42ffcf23",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c7338a-fd0b-4832-9650-1ac743347340",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c8680d8-5397-46b3-8b2a-7558e4cc6eb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0deb1d-02bc-41e5-9fb2-473ebbc74b84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66bb933d-f9c2-477a-b661-32628a5e4eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5497b15d-3a66-4a3c-82cd-d4320f0e5dcc",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c4b55d-0b21-4974-a7b4-34f538799e8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96536ea8-f72c-4bc9-8897-47a43fc13a31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32392997-9566-4dac-8a76-284ed8f33c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf57b607-4e20-479b-ad4b-4585e50fa3ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "863fb149-3065-4bc0-81c1-0bdc748dd8c5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87dc6908-eaa6-4d43-875b-e89ecacec29a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ecc62fe-51bb-45fe-b46f-5b75a010b05d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e092d1c6-f591-46da-ab1f-8884b8ff5bfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dcc125f-a8a7-4399-851f-20e48b22bfef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f875fcb-598e-4d34-8323-ca1ed7180473",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c336e257-1dbc-4b84-b1c1-8b4d62361be5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f85b134-2c4b-4e27-9a5e-3b6811cb48d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcfb06bf-eae0-4e86-bd6d-457b97d4bbef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50381838-56b9-4d49-8be9-27e0029762c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261edea4-ba65-4149-93ce-1d64fe6118ec",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74dd045a-fca7-467e-95eb-bec5aa6f80bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abffe7f6-b395-4313-80ca-3b56512114ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ed9634-c442-41f6-bfa5-71e5d3f0bab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c675230-46d0-437b-9f5e-0c06975e4bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9024fc03-a483-4102-a5b2-adc1c8776cdd",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748e7661-8d23-40a0-8cad-7c9d7117a240",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9621d08-2bf0-451a-99fa-139f5cd92f7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70fbee4-a94b-42c1-8c13-e3a66e23f91e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c63387d-8268-4098-9f3d-640b572d9aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749360ec-24fb-47b6-b251-1f2a039785c6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79947f4-c898-43a9-995f-81f973e8149e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1511fb2c-7417-4af4-9300-42cd35280e9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac63ac6-c0a3-492a-8c7e-178385937f7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "287109ac-548e-4c4f-9bb8-8ccde37a39db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135eeb01-b0b8-4463-aba5-27e8c3dcbbe5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39ed713-74bc-41d2-bc79-d4c484f4ddb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c108a8f6-86cc-4183-9f37-9102b594bcb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25fbfdb4-a8b7-47d0-9998-e83725b1cc99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a33cade-a1b3-4ed7-9a99-ebced4ff7367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963de18a-b9b2-4da1-a942-9c8f43ce1e32",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12edb18-548b-4bb5-8b74-03e7df62645a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f88c2ab1-0ac9-436e-b0b6-21bc5ad97f59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a47649-dff2-49f7-9879-1e5ddc5fe084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a7dfb73-77e1-4181-9e61-3fc0e5d33747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0755ab2c-b3a3-4f12-84ed-3927f0583f0c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dcd12b8-5542-4453-9806-43f4af2cf96f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f42ba92c-008d-4cca-baad-8c92fe71f431"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1734e103-9b0d-44c9-9edb-a27e3c9afaa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c328653a-9ce3-4369-8e9f-67820c3af995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807b5e1f-e968-4b91-b007-e4dd0a2f2b34",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d652a83-4c05-40c8-b942-45761e21e49c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6f168bb-d95e-4b36-9f92-b704595a23a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78baf878-483f-4b24-b7b5-4d3d3ed4ede0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b237c794-f757-47d7-8788-6e91efe776c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d315a2-13db-4610-bb35-95a3386a6961",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875a38d7-e005-4ce7-b27f-f3f4574e54e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5538931-1fab-4be4-a312-691af643671f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb6c7ee-27c7-411a-ad90-bbc54d961653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd899f50-9bfe-4645-b3b7-e891033a0fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f9726d-dfe7-48ab-b5ad-ef478748cd77",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5699926-f884-4de8-b417-42c7d129e939",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46ca45d3-9342-44d8-b9e1-65e2a5215ba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1564b3a7-7cd9-440d-9b84-77bcf85d5f55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f3c515-7fda-4bf7-8d4b-370eb62304a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f640de1-1bfa-44df-9a99-1bca098e4137",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5e39a7-9763-4ad1-b65f-fca3b2113459",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3aa30e1-d17f-41a3-92d5-02d7f6305294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb626d10-5a5f-4caf-b375-1f429e7b4aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8003059-4346-4bfc-bd03-8e9fc158fb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d796d4d-1d02-4d07-94e8-bdd855b95e3a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa24075-561c-432c-8862-46820c104625",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51afa06b-2c5c-4459-875a-768607a1b486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "234d77c8-63e3-481a-905a-4c6ea1c4c38c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50df34d9-9d0c-4399-bab5-58f0074783d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92358a8d-a36b-4aaa-a56f-39f5359c41d8",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315f959a-baad-4b1c-8de7-0c479316896c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3eb9649d-a3c2-4f5a-925b-fbec8206eabe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "913cae07-6f6b-437e-a661-e91d86b47fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b7a276a-ed3b-4926-b4c4-5f41fe8a2e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba9cc1b-aba4-4fca-a8ef-25741a7febea",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc78411-bbb0-4ba0-a5c4-2d502634ca5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae18f4b9-069c-4844-94a2-e5909a944bf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "820eff93-0c57-4e71-8d78-bd2dc46dde46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c67c6507-da5c-406d-82fe-4bf462220aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0464dc53-5131-41ea-8a2a-3236bde8a13a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f656f57d-cc3e-489c-8424-57f84425a8a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db48441b-25f2-44ce-a0b4-4a45312f5d2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb80f02f-a90d-4eaa-800a-24b6bc4648db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b30416c5-995d-4f54-8d1f-75951a79e1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35efaa88-ee22-4ffb-86e1-355c7402a409",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32dda2f7-0cee-4799-a48c-5b37487987ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c319842c-8e85-4ce3-aefe-dc2edecfc1b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8a8a28-ad45-48c6-a439-58fef8def82d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e3e79d-98f8-4213-9db0-0eab9bcfd851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68feb44-48e2-46b4-b92a-5e2a2fa4fcc1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5ab9f3-ddaa-4fd5-b928-ee87db1e8c67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4325a47e-fd49-4c9d-acaa-5131cc970b3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83520ad0-c488-4b1f-9df2-0e891de1131b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ccb9e9-84f6-4a55-aaaf-a1cd7a23fba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb032f1-c5e8-4a82-9c1d-f643200149ce",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8e6a79-96c0-41a0-b211-1de421e52b4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb9529d9-de38-4b12-9ce4-2cb10c64a62c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c77534-d5b3-4be9-b07e-39fb612eb144",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f6048a-b065-4c80-a6c3-20ad51c4b444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a0b341-5cae-4641-9329-a1e873508cb1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1780ab44-4a4f-4946-bcfa-6d07b9496c3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ab3d8b2-e882-4187-8a45-d8d8c60a6a0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b382d0d6-d6d9-4c9b-bedf-fc77efc7bb39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0eb609d-35fd-4f01-ba7a-716046306839"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "198b92b0-513d-48be-8ed4-ac8a26b2e5bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d6d2ad9-bc2b-4ce6-afe0-e8009c549498"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "49c58f9b-d93c-449c-86bc-e328e6b2b25e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0c3d9c36-f9ac-4b50-8bb2-3eb73195bfa5"
                    }
                  }
                ]
              },
              {
                "id": "b06d6d63-b857-4678-ad42-06a0c8225ae1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "285f663e-b09a-438c-95bb-b37c04fbaead",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94b90af-ab1f-4d78-a266-dea26fbac4c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a79d804a-551b-4bba-9e74-0263971967fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab1af9a-66a8-47ae-9ef1-10feafbe4c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad78660a-5b3c-4ffb-822e-7a14ff2615dc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a8e821d-ad92-419d-8276-a4236405eb35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d587c65-d1ae-48d4-9aae-e604ead3f2c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a7f62f4-3eae-4a9e-900a-1d41b0571e8c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3fcb6ce8-266e-41ec-853f-82df1fe54f30"
                    }
                  }
                ]
              },
              {
                "id": "2e5dd38b-f196-4174-8797-571ad5780cd8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "114021fd-a406-45c1-a068-9c1c27c96488",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "285cfeec-2de0-4067-b54f-c418127966b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "bf744564-460d-4c36-9d12-e74e16720b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26741ed6-2f74-43fb-9d3c-1894248ed59c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50fa954e-0eb5-4995-8938-9f372d023dcf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c198f27b-9898-4177-bf84-ecbb570e81cd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7c5b4550-a2d9-434c-9f45-8cda3f1755ef",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1db860dd-cd14-4bfd-9f40-ee0457128736",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "78cf9fa8-5655-4d3a-871d-86641c3f3d7b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d01e5d1-b9c2-4866-aa83-fcf7c00e86a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d61434d-0c24-4251-a8d0-0c79dad6fc33"
                    }
                  }
                ]
              },
              {
                "id": "ba4e595a-be60-48d9-979f-4e0883574745",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65af2c55-b4f0-4fa9-b578-7ba4a4f63c21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2305d5fb-3f7b-4e26-bb22-3f23c32a6a73"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b5e0e24-2358-423b-8bca-98f8df5dc9ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6086bec2-a5c7-487d-b595-46be60078c10"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "37bc218a-39de-4558-8d2e-2b16ccd8cab6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fccfc398-c3de-4b4c-b02a-16de9bc23e9b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "387ddd34-71ff-4d90-a9c7-f64b15dc530e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f2646807-d327-463a-8a90-e64be4081bbe"
            }
          }
        ]
      },
      {
        "id": "9d196908-f11a-4822-9987-615958e99dfe",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "69f64e94-0562-477e-870d-b6820fe48ddb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9d852a70-da41-41f2-ba1a-070403df40a1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "049dc6da-a7fb-4f3f-a909-cad41e19ceef",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd0373d-3750-4874-a07a-0400accd8222",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "20544fd3-c509-4648-afcf-f1d69d1d165b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8fa2ed-6276-4968-a5c5-b50898e13658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4a8b159-dcf9-43e8-b2e7-e0cc7c09d94c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a6aa0c1-39e0-48a6-a88f-e310d7cbd477",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e62d602c-4186-490a-9083-a046bf29beca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "116652a2-0611-4b2a-993b-288852e9f628",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ef61a2b-f41a-42c1-a6d9-c959abb0bf97"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "580db24b-2579-4cc2-8461-05a0b41f1847",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c7131251-d060-458f-b113-d71cb06f25d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "521c8b2e-984c-4c16-b4db-15d2fba6b9ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2b26da04-861c-4b23-9e02-bd6780ac8ddf"
            }
          }
        ]
      },
      {
        "id": "d6191565-0d08-41fc-80eb-acc63e91b2ca",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "be9bb7d6-4ad1-4e22-acc7-95ea78dd7264",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f372e49a-a05e-4bb0-907f-9c3620a9e001",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a41abe63-7736-4432-a9f6-b0658abf371f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d490aa61-8569-4f7d-9515-e9f14171cc56",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4305fb9e-c6a5-4643-854d-e900f435bd66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc987630-bd3e-47ba-b071-8bccd795f57c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "168af431-6174-48e0-b4b9-6261e2e69296"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56ea16e6-6219-4422-8371-5bb83afb1e7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c49f8dc0-4ecf-42cd-b8a1-845b4451723b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "04eb448c-fbcd-4728-a6b4-324aaafaafa6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "879aa209-f296-4fe6-8c0c-94cf8752c2c6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e544055-f10c-489d-957d-7ce4ab79ebab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ca83be01-ba39-4bf0-b641-c034932c4e2c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ac48da03-e6c4-40e4-b247-4dcbc4119aa3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b5a75f2-6cad-4226-a829-9bc4d2133018"
            }
          }
        ]
      },
      {
        "id": "e02d3a77-e1cd-4bb9-8f63-3ec073e8e831",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "38018b68-298f-43b7-b739-163234167afa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9dd8cdb1-c242-40b9-b6d8-79f76ca1960e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fd7e6dee-72c1-451a-8a59-0f0a63361e36",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bb0d62-b7d3-4f1f-8b8d-fd6ce4c2538e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a034a3d-67aa-4e45-a155-4558dc5f52d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff323cd0-4323-4121-aa6d-f67c6302ba85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "caf9251f-9be2-45fb-b665-c6620af67e72"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dda566ff-0dc8-4dbc-b445-b6865119333e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4680d9ab-2ce3-4199-88e2-5aa4b31e642b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "43f7c872-9c03-4530-846c-aa2733679505",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71253dda-4d04-4ed7-bd1f-785b992ed469"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2bd8c721-0b6f-4bfd-83a1-6db3f5893283",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "53d25dff-6041-4c5c-a718-4a5e839f8da8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "85eaaf58-acd8-4269-b330-df84c031f615",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "85cec4e9-f883-46b5-b551-d60defdddb46"
            }
          }
        ]
      },
      {
        "id": "e3f5f4b8-5873-49ee-8062-5b60fcfdda46",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "975196e8-3313-4fd3-a363-fa3b6610fc78",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bbb3657f-8270-41a0-bf73-10829c587a2d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "265bf340-4968-45b9-81fe-09f8f331c22c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d672c30-2336-4d8d-93cd-ad8346c39573",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e50d0de-1974-4927-8b1e-ab0cf3cb7783",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 143.3719298245614,
      "responseMin": 22,
      "responseMax": 6552,
      "responseSd": 516.0602459574649,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698021242411,
      "completed": 1698021295253
    },
    "executions": [
      {
        "id": "ea116704-337f-4271-a250-43a391891ecb",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "928b46d1-ef9c-4cc2-8326-98188ff55d7d",
          "httpRequestId": "c6fed20b-0610-41c5-ad3d-193751a48aae"
        },
        "item": {
          "id": "ea116704-337f-4271-a250-43a391891ecb",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "93c4540a-d0a2-48f4-8cca-2af9b69ef5be",
          "status": "OK",
          "code": 200,
          "responseTime": 93,
          "responseSize": 0
        }
      },
      {
        "id": "c4aeb234-35a4-4511-8b3c-fd637ea35617",
        "cursor": {
          "ref": "2dea92cd-5dbd-40ed-b85c-8e68ea166606",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6b9a645b-2bfa-45cb-ada1-6e81199bdb21"
        },
        "item": {
          "id": "c4aeb234-35a4-4511-8b3c-fd637ea35617",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "18ff632b-a0ee-4c9c-989b-dd3997b005dc",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 0
        }
      },
      {
        "id": "26f5a366-02ac-44e9-b437-e09793b15810",
        "cursor": {
          "ref": "a5ab7862-c1dd-4384-b508-794d9db7fc9e",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f6f21d39-c580-4f1f-8f6d-4122ccff1f28"
        },
        "item": {
          "id": "26f5a366-02ac-44e9-b437-e09793b15810",
          "name": "did_json"
        },
        "response": {
          "id": "7b0e3ff5-d77a-4470-85de-0f5b05433308",
          "status": "OK",
          "code": 200,
          "responseTime": 324,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd68b154-b0e4-4592-94b5-18fde87256a3",
        "cursor": {
          "ref": "3125bf29-9608-4112-a811-e70d76ba770e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "afb7d16d-83de-4edf-b59a-5f003307e005"
        },
        "item": {
          "id": "bd68b154-b0e4-4592-94b5-18fde87256a3",
          "name": "did:invalid"
        },
        "response": {
          "id": "ceaa3a22-99be-4bae-85a2-b9cd8eca7022",
          "status": "Not Found",
          "code": 404,
          "responseTime": 918,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd68b154-b0e4-4592-94b5-18fde87256a3",
        "cursor": {
          "ref": "3125bf29-9608-4112-a811-e70d76ba770e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "afb7d16d-83de-4edf-b59a-5f003307e005"
        },
        "item": {
          "id": "bd68b154-b0e4-4592-94b5-18fde87256a3",
          "name": "did:invalid"
        },
        "response": {
          "id": "ceaa3a22-99be-4bae-85a2-b9cd8eca7022",
          "status": "Not Found",
          "code": 404,
          "responseTime": 918,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a79215e-1bbc-4b24-84ed-0b20b470ca30",
        "cursor": {
          "ref": "23aec7a5-b889-4274-87ae-f0a3996ae46b",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "51226430-e581-481b-87d2-615ac87683ca"
        },
        "item": {
          "id": "6a79215e-1bbc-4b24-84ed-0b20b470ca30",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "cb8b74ac-d137-4db3-b956-2c7de9d8d0df",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a207b2-f9c9-49a2-b08c-1b5c0e30c214",
        "cursor": {
          "ref": "ad34510c-3fab-4b5c-88fe-83c39249df29",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "bb72af3f-ab87-4680-9716-e3fdb160f5ff"
        },
        "item": {
          "id": "20a207b2-f9c9-49a2-b08c-1b5c0e30c214",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f1db83b9-26f1-429c-99ab-970940a74c94",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529da4e5-ba0d-401f-bcac-8e1e52ac8f08",
        "cursor": {
          "ref": "60b786ef-f6d1-458e-9255-38c3455c59de",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1fd5f8a6-cf9c-4261-a79b-65d2788a777d"
        },
        "item": {
          "id": "529da4e5-ba0d-401f-bcac-8e1e52ac8f08",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "509941f3-16d5-4cc7-818d-ae14881e5b5b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 112,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f864279e-2500-4b45-af76-c12dd3f8df5d",
        "cursor": {
          "ref": "dc7d693d-911d-481b-ac68-3996d39ada08",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f281ec7e-9c5b-4c66-b356-a4adb265c835"
        },
        "item": {
          "id": "f864279e-2500-4b45-af76-c12dd3f8df5d",
          "name": "identifiers"
        },
        "response": {
          "id": "2ef483b6-59c2-46f0-b86e-0b0c5d0a8f3e",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d50cdbf-8ada-4863-ac1b-f1582b9f6f8a",
        "cursor": {
          "ref": "03067a59-3678-4393-8436-fce309c1a6a4",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e7e5e0b8-1bed-4214-b7a7-7044908fb85a"
        },
        "item": {
          "id": "7d50cdbf-8ada-4863-ac1b-f1582b9f6f8a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a25789e9-2e0a-42f9-a991-79d3ab54502b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b61b9a3-6b41-4ef2-9aad-e4c8e80b8ef3",
        "cursor": {
          "ref": "f9bcc47f-a424-48f0-83c0-3bf1e9eab05c",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a71c6a17-cb8b-40b4-8334-ef56352eda06"
        },
        "item": {
          "id": "8b61b9a3-6b41-4ef2-9aad-e4c8e80b8ef3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3b307403-b684-43a9-8aca-6ba61126a61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339fdf46-afda-4186-9efc-705574a8ab83",
        "cursor": {
          "ref": "0dc6cc9a-3922-41c4-ac31-cf37405f3651",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e067d17e-c973-4bc8-9e05-d9fd689e3451"
        },
        "item": {
          "id": "339fdf46-afda-4186-9efc-705574a8ab83",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1cec90f3-a3c9-4a64-aeb2-88fe40d0c9c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1039a9f-3d0a-4f7a-a360-c27c3139aa39",
        "cursor": {
          "ref": "b815e0a5-ef48-4f3f-8d1a-64dda8680b34",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "66ae9045-9e85-4d2d-b977-ccaa8a485795"
        },
        "item": {
          "id": "c1039a9f-3d0a-4f7a-a360-c27c3139aa39",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2f32edf0-3139-4442-b2e7-ca1b84dc656b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d87c414-f193-49b8-9179-dddac53e9c0e",
        "cursor": {
          "ref": "d0315a1a-ee59-412d-8302-eddd2c4f2561",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "22706d3c-eb97-4a63-a24e-cbf2ace8c09f"
        },
        "item": {
          "id": "7d87c414-f193-49b8-9179-dddac53e9c0e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5f26523d-f144-4238-a123-ec080295b8de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b44e04-e3c8-4574-ae43-a1c02ade93c6",
        "cursor": {
          "ref": "6f9364c3-4121-4aff-93e9-8bc69d51bcbd",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5d88d5a2-36db-4b4b-886c-649686214c4e"
        },
        "item": {
          "id": "e5b44e04-e3c8-4574-ae43-a1c02ade93c6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6c994f36-1b4e-4946-92dc-807800e5d23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d412294-2cd6-412e-984c-64f81e6efbed",
        "cursor": {
          "ref": "a5045786-d7e4-417c-8941-5a8e94d9a27b",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2800750b-14d4-424c-a4b3-8ecc7a73ec0c"
        },
        "item": {
          "id": "1d412294-2cd6-412e-984c-64f81e6efbed",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "802076dc-a381-4756-8f43-a704c97ff798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd610547-a399-4d82-9a74-0c1ec87612f1",
        "cursor": {
          "ref": "2cfef060-a156-482b-8ff7-83035c079569",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "fa84fc18-330b-47aa-853e-f0c0d8f9fb92"
        },
        "item": {
          "id": "fd610547-a399-4d82-9a74-0c1ec87612f1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "86370f9c-f56c-4e1c-8f68-5d03a7351213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01957f3d-d666-4993-a8d7-e3c81d6f9c0c",
        "cursor": {
          "ref": "d7c182bc-be75-4127-9322-c563642897a5",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f500114e-d638-41fd-b1d0-75bf300f8531"
        },
        "item": {
          "id": "01957f3d-d666-4993-a8d7-e3c81d6f9c0c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4d39e5db-76e3-4e16-8912-e5021c7a1914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213927e7-2c11-4e06-b975-343b4acfd728",
        "cursor": {
          "ref": "ea160f4d-d3cb-4380-81f1-d38f6911fda8",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "32ed6b3d-4388-40e1-a981-34e91d5c1758"
        },
        "item": {
          "id": "213927e7-2c11-4e06-b975-343b4acfd728",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f9039d72-6f55-4e74-9d9f-0d4058cfa7ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ccf7ec-403c-44d1-9458-10cc04618e87",
        "cursor": {
          "ref": "be02b5cc-0316-4531-a072-c8149f4044f0",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d4473d04-f060-4e64-97d1-db632878b85f"
        },
        "item": {
          "id": "70ccf7ec-403c-44d1-9458-10cc04618e87",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f59702d6-4c7a-4a49-8a26-6892be5c2980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf7124b-9652-4ef3-ac77-2897d03f8aac",
        "cursor": {
          "ref": "e7fcebb0-e35c-41ce-80ed-99e9c4bb77a4",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "20a92672-3867-4db6-94af-214cc2096455"
        },
        "item": {
          "id": "dcf7124b-9652-4ef3-ac77-2897d03f8aac",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "cac4a706-a8e1-44ea-bdc8-320c5eefe014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aeeaeff-074b-477c-871c-ae45758eca93",
        "cursor": {
          "ref": "8520ace6-0889-4060-b3c9-cbe8e6367222",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f6ab0a2e-6014-482b-bfb7-5e64829dae2a"
        },
        "item": {
          "id": "7aeeaeff-074b-477c-871c-ae45758eca93",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "95dbee7f-3fd0-494a-833c-9f5169d84e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450be5b6-562b-4a1f-8c2a-f886c081c9b1",
        "cursor": {
          "ref": "2fdf7c37-0d79-47f4-93a7-a5738b4113a5",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "692e913e-87b3-4ce0-a02b-a0782ab946f2"
        },
        "item": {
          "id": "450be5b6-562b-4a1f-8c2a-f886c081c9b1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5924307d-7172-4bb4-9c7c-c633307945a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01da3d05-235e-4f16-9985-d45b5cebd3a5",
        "cursor": {
          "ref": "f8df54d9-c785-435a-8e86-b0428b727743",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "bc743158-d21a-452c-b628-0f83493a68cb"
        },
        "item": {
          "id": "01da3d05-235e-4f16-9985-d45b5cebd3a5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "36fa231c-fa9c-4ece-bf0f-d503a22f8c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2222b421-b90b-4099-a537-1fad4c131933",
        "cursor": {
          "ref": "4f071ae7-338d-4093-a14a-d6b7d1daa8d5",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e425cdcb-145d-49fd-a75b-e52b543aa183"
        },
        "item": {
          "id": "2222b421-b90b-4099-a537-1fad4c131933",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "be2e5cd5-4ab9-4685-a65f-9416e7b1390e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c34ba76-4f1b-4590-9542-f9899ae71b46",
        "cursor": {
          "ref": "79e9ca00-a845-42e0-b66f-d87d1d543f6f",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "18eff6b8-b1fb-47ee-887c-5e8b587f92bc"
        },
        "item": {
          "id": "8c34ba76-4f1b-4590-9542-f9899ae71b46",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c1f9017c-041a-44d7-9f13-b49f516389d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ada54e-5eee-4219-beff-94c73dad121c",
        "cursor": {
          "ref": "46626298-6298-49b9-a1c5-11c750c36590",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "cfd7859a-55b8-4cb4-be3c-6b9331dbe6f7"
        },
        "item": {
          "id": "59ada54e-5eee-4219-beff-94c73dad121c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b0e6b508-c192-463f-a8ed-6c264a257720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdaff59-882a-4068-b116-ddf2157dd4de",
        "cursor": {
          "ref": "fa156dad-b446-4be2-9856-8d0ae2661707",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "53fc309c-09ec-4306-99ee-3ff860529df2"
        },
        "item": {
          "id": "2fdaff59-882a-4068-b116-ddf2157dd4de",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ad000d40-c65f-445e-ac8f-7a1092ff3f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0635ef9-9111-4db2-b01e-cebc248a5d92",
        "cursor": {
          "ref": "d0db032a-c64d-4518-9939-66cc6a4bdee7",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0831ac17-1823-4ad3-b772-d80f482897ea"
        },
        "item": {
          "id": "e0635ef9-9111-4db2-b01e-cebc248a5d92",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "44312d54-4ead-440d-af33-142c2e6300ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86a19d3-7314-4435-9031-2cdba5ebdae3",
        "cursor": {
          "ref": "8e2ce79f-00d6-47b7-89a4-f92977389b81",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ab25c946-2e82-42bd-9a2d-1045a260ad00"
        },
        "item": {
          "id": "f86a19d3-7314-4435-9031-2cdba5ebdae3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e4a36e21-05e0-404b-b58f-942fd7317eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7da306f-2dff-4911-8c2f-c4d2fa58141a",
        "cursor": {
          "ref": "3a810246-3486-4169-99b2-cf67ab6ed96a",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4fea1311-8a7a-423e-bc55-0d59ad61c421"
        },
        "item": {
          "id": "e7da306f-2dff-4911-8c2f-c4d2fa58141a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "930d228c-f57e-47a2-b70c-06e777e21d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b48c6d9-5c12-4c36-9910-35313da90c72",
        "cursor": {
          "ref": "8fbb7518-ff4a-4bd8-8d44-57a03c8b3ff8",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5600efe7-aa39-47d5-8df1-1ab10efef1ee"
        },
        "item": {
          "id": "5b48c6d9-5c12-4c36-9910-35313da90c72",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a12401ef-1549-4765-a74b-e16d53a2be05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 864,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2f6ac7-ae43-45b8-8687-01f77758b89d",
        "cursor": {
          "ref": "41e86b90-f929-4a7c-9846-6204e81767d9",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "78394619-495f-41b5-8700-5b6471223d20"
        },
        "item": {
          "id": "4f2f6ac7-ae43-45b8-8687-01f77758b89d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f19af60d-d171-4b30-8438-90bd66a08743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0464d5-4628-47f5-bf79-48ab7fe85253",
        "cursor": {
          "ref": "f6f3f6bf-82c9-4edd-ac22-3cd05d113958",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "eab78ee5-12fd-47f6-a95d-6ce519460a2b"
        },
        "item": {
          "id": "1f0464d5-4628-47f5-bf79-48ab7fe85253",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3ce7261e-addb-4c46-b15d-38b42b61dae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b117883-fe8e-4200-aae9-b6195158e518",
        "cursor": {
          "ref": "5381540a-647f-4b28-a176-c66fe2cfc007",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e1e32815-1333-4b99-948f-43164441ade4"
        },
        "item": {
          "id": "5b117883-fe8e-4200-aae9-b6195158e518",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "22a78c57-99d1-4596-be89-af2252948c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5265e5bc-7493-48f3-ab1d-f055d69f394c",
        "cursor": {
          "ref": "bf0b3289-897e-45cc-a3a4-45c976b61846",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4bc65439-fd7f-41e6-9a19-f00f54b30c06"
        },
        "item": {
          "id": "5265e5bc-7493-48f3-ab1d-f055d69f394c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1a65c243-27e3-4b33-8229-43f3d9e289a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4816192-9e67-4538-96a1-baaacb007636",
        "cursor": {
          "ref": "c1bce703-8039-45ab-84d2-da233f1a2838",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "31b47f7f-1dfb-4d68-9f33-03e67b1430c4"
        },
        "item": {
          "id": "d4816192-9e67-4538-96a1-baaacb007636",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7d1cb929-4a74-4411-ac56-c26519c527c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee849a1-08af-4ea2-befb-bc07b156d225",
        "cursor": {
          "ref": "8d3bef71-783f-4cab-99e9-b2aaed093c68",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d951cfb1-b2f3-4e7e-8854-9fb294eeb175"
        },
        "item": {
          "id": "8ee849a1-08af-4ea2-befb-bc07b156d225",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "10b7253c-8dc9-42b4-a921-91eaf702ff34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe575366-1f4d-4d7c-8151-ba6d289272d2",
        "cursor": {
          "ref": "2ad262be-fddc-4c70-8508-e24cbd7a3844",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f0de5b50-ef83-4fce-b147-e4d93f5c38cf"
        },
        "item": {
          "id": "fe575366-1f4d-4d7c-8151-ba6d289272d2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "47297a6d-230b-4291-bfd7-217e3dc89d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f84b0b-341e-42ed-a3c9-d119a9774a42",
        "cursor": {
          "ref": "44e96c55-9337-4acb-8b8d-8fad7dae7da1",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "887bf855-eaaf-47e0-817e-c50269c32897"
        },
        "item": {
          "id": "81f84b0b-341e-42ed-a3c9-d119a9774a42",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ea127691-5591-4bf2-ae44-da6adfe0b9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414e90bc-6c80-46c8-9c53-6aba9f8971f7",
        "cursor": {
          "ref": "919b2d81-df40-487c-85ab-11ac17d8c6c8",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "70bd8031-5821-4411-a405-cfbcb6172f7d"
        },
        "item": {
          "id": "414e90bc-6c80-46c8-9c53-6aba9f8971f7",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c7eae40a-29bb-4342-a8ee-99b29f88a9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41cbf1b1-e769-48ca-abd6-88c72080eea7",
        "cursor": {
          "ref": "bcff029d-ace4-4000-ad4d-91f06811fef1",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6230f0f2-234e-49a8-a360-6f08c33ed878"
        },
        "item": {
          "id": "41cbf1b1-e769-48ca-abd6-88c72080eea7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8d688454-c2cb-464e-9923-5750bdb5d79b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac03ef7-61c7-4f78-86db-8bfa8e400ef0",
        "cursor": {
          "ref": "fa8e8ffb-6684-4bef-beb7-23b2cffa8c4d",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c58b0c5b-a9b1-41f7-9d2d-64f4cfe5a2f1"
        },
        "item": {
          "id": "eac03ef7-61c7-4f78-86db-8bfa8e400ef0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d01f047a-fa9e-48db-b9be-f339a246cec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0de5fde-fcb7-4aa0-b88a-f0aef6f86262",
        "cursor": {
          "ref": "8a280346-aa07-423b-a8af-14bf1a3bf80b",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e167f4c4-6423-452b-b5df-1f17ab45ebc9"
        },
        "item": {
          "id": "c0de5fde-fcb7-4aa0-b88a-f0aef6f86262",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "153a4c5f-861c-465b-a141-e1c8b2e8b6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ab9c5c-4fdc-4b46-87fb-6e3a98de1a76",
        "cursor": {
          "ref": "52acb710-e160-4d42-bb78-de8c62c655fe",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7b5953cc-67fe-467e-b2e7-474ccd405764"
        },
        "item": {
          "id": "23ab9c5c-4fdc-4b46-87fb-6e3a98de1a76",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1376e666-1054-44a2-acfb-d12d26a1bfb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a35321-c75a-4c70-8a1b-1f74fe27c80c",
        "cursor": {
          "ref": "37e6a9e6-9206-4866-898d-7443eb63924d",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3cf98876-fa35-4ad2-9794-c0006bf00494"
        },
        "item": {
          "id": "c5a35321-c75a-4c70-8a1b-1f74fe27c80c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4060eb13-25b8-4525-978d-e3738fab77d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e7a21d-a2f6-45b8-9b78-cf06b5f6dbc0",
        "cursor": {
          "ref": "b61ce31d-3d00-4726-928d-81b58bdfdea3",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d6acb1dc-bb8f-46c4-9e09-fe3bb676ef10"
        },
        "item": {
          "id": "38e7a21d-a2f6-45b8-9b78-cf06b5f6dbc0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "25f73df8-19b8-4d0b-9a8d-dce4473ddc16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe1337e-cf9f-4b49-98a2-11360f16bfb0",
        "cursor": {
          "ref": "c62aa8d3-743d-404f-a8a8-f4e5c927f6d9",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "40532814-ed64-441a-a0e9-1241dbb2fbe9"
        },
        "item": {
          "id": "fbe1337e-cf9f-4b49-98a2-11360f16bfb0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "91e10b7c-4237-47b1-ad2f-c362e46fb2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751de00a-4c7e-442e-b499-cd84619525e1",
        "cursor": {
          "ref": "ef1692a4-7032-4c83-9028-c3ac2b3c20d5",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "49753919-7359-4660-be0f-493c25c96966"
        },
        "item": {
          "id": "751de00a-4c7e-442e-b499-cd84619525e1",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "68196b8d-45cc-493c-9f30-5faac8717aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f078431-0e88-4e19-90e2-94e4867e8bde",
        "cursor": {
          "ref": "b6a7dc3a-83ed-4b01-b848-18f7c59e3726",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "df16bf0a-78f4-4e0e-8c50-cc7f53843959"
        },
        "item": {
          "id": "4f078431-0e88-4e19-90e2-94e4867e8bde",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b1018d58-4761-4830-ba4e-8f4ee0f62103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9b95a2-c629-4b8f-9bec-1f11d908b8b2",
        "cursor": {
          "ref": "d7ff2048-0f33-40a5-b8e1-574a3cbaa851",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2ea343ad-30e4-412b-936f-bc97f9445d3a"
        },
        "item": {
          "id": "0d9b95a2-c629-4b8f-9bec-1f11d908b8b2",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f8e9e7e6-4cb7-42f0-bd09-4d0ee31d20e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca081f7f-b8da-4cdc-b71c-08ee9e6bed3b",
        "cursor": {
          "ref": "6b6522e3-b0d1-43e2-89e1-f5a8b25bab57",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9772cddd-9149-4bdf-a629-ddb38d367fae"
        },
        "item": {
          "id": "ca081f7f-b8da-4cdc-b71c-08ee9e6bed3b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3bb8a809-941f-4f0b-a4f2-de9ce437a81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28d6362-7b5b-4d54-8d5f-6f31121165ca",
        "cursor": {
          "ref": "89d09818-2185-48b2-a026-cb9986ed10ff",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2f29ec89-7a47-445c-bc51-63451f9fd3bb"
        },
        "item": {
          "id": "d28d6362-7b5b-4d54-8d5f-6f31121165ca",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c9b22483-ad48-4218-aea5-975f22de7dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a6dbbb-911e-4105-a7e7-ebbac3be2d8d",
        "cursor": {
          "ref": "742f2b6c-77dd-4f79-b06f-fb211ec5266f",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1248141c-983a-444b-84ca-bb50e3f3e5b9"
        },
        "item": {
          "id": "b4a6dbbb-911e-4105-a7e7-ebbac3be2d8d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e0da7a2b-8af5-4ab7-aa0d-bab7686f5913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1724559-5826-4982-a234-7b0467228dbd",
        "cursor": {
          "ref": "ca8bad3b-0a88-47cf-bd62-449b3d741b06",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8aa6b06b-2e70-4f6b-845f-31967bef8e16"
        },
        "item": {
          "id": "f1724559-5826-4982-a234-7b0467228dbd",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c0bed07d-671d-4a12-bcf7-9a06c9bfe5d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190ffc40-837e-44e9-b099-091bdfdaa905",
        "cursor": {
          "ref": "19b2e5ac-c81d-45a1-8fff-0e5e37d0a295",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "69847690-7721-42c5-8b54-174302e53d1e"
        },
        "item": {
          "id": "190ffc40-837e-44e9-b099-091bdfdaa905",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "36d03349-4442-40b3-917a-3fb79968c092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab161d3a-6ba4-4d74-881d-4584e5dd1458",
        "cursor": {
          "ref": "345d1746-676d-4627-80cf-d5117d89b62b",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2aa6dc39-f39b-46af-8858-0da6ae1c1db0"
        },
        "item": {
          "id": "ab161d3a-6ba4-4d74-881d-4584e5dd1458",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b0ab7c41-1db4-4548-be30-3a9cfa4ff68c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9290b4d4-2d0f-4f2c-bd87-f40d7067288c",
        "cursor": {
          "ref": "ac95219c-1870-4d2e-9a4f-3afe2b840814",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e1bf71d2-f53b-475d-9d04-200de4f06eba"
        },
        "item": {
          "id": "9290b4d4-2d0f-4f2c-bd87-f40d7067288c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "080e6476-817e-4598-9deb-f9569c9711a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1007,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d934cd77-fcf3-4839-ab27-a9626230b7e7",
        "cursor": {
          "ref": "8211eb2e-e33a-4bf3-a221-218e5a68f181",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b5d720b7-e4ca-47e4-98dc-45b9d2a2b5e8"
        },
        "item": {
          "id": "d934cd77-fcf3-4839-ab27-a9626230b7e7",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "88bafac7-7eae-44b7-82b1-4726b825ae31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22984b2e-0917-4a99-aced-ba80ecf5f484",
        "cursor": {
          "ref": "72d50e0e-a218-43da-891a-9e5685fb36d5",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f0004f2b-6381-4137-80c6-73d1a79cb696"
        },
        "item": {
          "id": "22984b2e-0917-4a99-aced-ba80ecf5f484",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a71c2a62-e7be-4b04-8b44-54e562a59fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724b9939-1fa0-411b-b1da-8051cda2fd23",
        "cursor": {
          "ref": "1e70106a-4e07-479e-923c-bc00641463ca",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7fd2cff3-d390-40d9-bab7-7abfa2570b01"
        },
        "item": {
          "id": "724b9939-1fa0-411b-b1da-8051cda2fd23",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0a468570-a375-48ff-90cd-4d6814cc95e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bd9b1d-7c0f-4d57-9deb-6be6d10aa70a",
        "cursor": {
          "ref": "5afc8e38-ee50-4be1-b41e-3da77cb2fff9",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "61f6dc06-551a-4687-aeac-d1660b1f85f5"
        },
        "item": {
          "id": "a6bd9b1d-7c0f-4d57-9deb-6be6d10aa70a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5b1e0e77-b621-49d3-afab-31ef7b643a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8560a9-87be-435a-9591-8f6b7c236b40",
        "cursor": {
          "ref": "baebe954-ce6c-44f5-b350-850eb05eda0f",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "21e6ff6f-d03d-4e8c-8bcb-3b2f9745892d"
        },
        "item": {
          "id": "9a8560a9-87be-435a-9591-8f6b7c236b40",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "97897076-4048-4737-9924-11a2ced33ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6236ea-3f65-4715-afef-7e7e35f7169a",
        "cursor": {
          "ref": "aa3e35a4-f0ab-4206-8af8-43ee3e77d064",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "646cc361-89c4-4fbc-94d7-1254aca35d46"
        },
        "item": {
          "id": "3d6236ea-3f65-4715-afef-7e7e35f7169a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "65a7a2a3-6591-4120-8b1e-b8e11cf73e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dad0aaa-0617-4d63-a862-1d96af70b07f",
        "cursor": {
          "ref": "cdc2c86b-75f6-422e-860c-6e07155d62ca",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "42a23f55-8de3-467e-a7da-36ae471d6fe2"
        },
        "item": {
          "id": "3dad0aaa-0617-4d63-a862-1d96af70b07f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "fdafa724-8ee7-4031-b3be-26d13ccfd31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef33795-05bf-4908-9488-e2341364eb24",
        "cursor": {
          "ref": "8b0a43dc-17ab-49df-bada-8cae9c99cd98",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "591d5a25-c0e9-4a48-99ee-6f69c1fdbc13"
        },
        "item": {
          "id": "6ef33795-05bf-4908-9488-e2341364eb24",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7660016b-f9c3-460b-b82b-50b1bf003da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82fab774-3843-4ee5-8b78-cb18da947ac2",
        "cursor": {
          "ref": "90bb6010-181d-478c-aee2-daa6f1122dd7",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8b702341-0ada-4e7c-bb66-63b1eccfbabe"
        },
        "item": {
          "id": "82fab774-3843-4ee5-8b78-cb18da947ac2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "76333020-d83f-4aa6-928a-9cbbc0a5b49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3381af-630f-48ed-aebe-d1d3e89e4b47",
        "cursor": {
          "ref": "a573bdbd-c6a8-41d7-b849-9e3566f56684",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "142c399e-0a30-4d34-b35e-3def494e2956"
        },
        "item": {
          "id": "6c3381af-630f-48ed-aebe-d1d3e89e4b47",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b89887d6-84d2-4d05-9b6a-921f9e50a16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcb2c23-8f0b-4958-871c-16df324dd839",
        "cursor": {
          "ref": "3a55c132-626a-4e21-936e-1f42f667c8f1",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c568bc02-7b12-4148-a7cf-a6ecc1a6bf93"
        },
        "item": {
          "id": "1bcb2c23-8f0b-4958-871c-16df324dd839",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b19ac306-025d-4d05-8292-41eb10626ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 151,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d18f566-90ca-42df-91fd-065dc0b75687",
        "cursor": {
          "ref": "ba567db3-15c7-448f-8545-e6b0dda6e2b5",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b7b457a3-1342-43f5-913f-f7d673fa1cbc"
        },
        "item": {
          "id": "0d18f566-90ca-42df-91fd-065dc0b75687",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "bf3620a2-b8dd-43bc-be53-b576fe39b9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4beff3-a73d-48b8-9faa-a1ba61719c64",
        "cursor": {
          "ref": "72ec03fd-ca20-431a-9160-439255d051e3",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "58ee5ad7-e922-4215-87d0-82f5e9df553d"
        },
        "item": {
          "id": "8d4beff3-a73d-48b8-9faa-a1ba61719c64",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2bca5041-6faa-4b1a-b886-907c6f6ea729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f574dc4d-bb81-480a-9b5c-9a947d245052",
        "cursor": {
          "ref": "792dc697-d4f6-4595-be5e-2cf1a29efcb6",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ae5b89a4-7a37-442a-92dc-a3dc86146c32"
        },
        "item": {
          "id": "f574dc4d-bb81-480a-9b5c-9a947d245052",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a2f71a62-7286-40c8-bcf4-2bd413cb70e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97bb6a0a-bf93-40ce-869d-3912d1c984d6",
        "cursor": {
          "ref": "6d348423-8e9a-4155-b718-459c6b17ac13",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c5992431-22e5-4211-b14b-8d039b9daa60"
        },
        "item": {
          "id": "97bb6a0a-bf93-40ce-869d-3912d1c984d6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d48ef4c4-94f7-4b36-987d-1c6e024fa123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfdb360c-1566-4e0a-9d1e-0aa336b137d0",
        "cursor": {
          "ref": "524baed1-ea67-4954-94a4-d28e89ec620c",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ca0b51d1-41da-4443-a91d-1bd8eb879f63"
        },
        "item": {
          "id": "cfdb360c-1566-4e0a-9d1e-0aa336b137d0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0105b2e1-fd0f-4147-a27c-808c20bab60d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23eac0c-a617-48d6-a89a-f44518d79a0e",
        "cursor": {
          "ref": "1fefe485-5e45-4191-917d-983f2b175936",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a4953488-2037-4d33-b1ee-31038bcca1ed"
        },
        "item": {
          "id": "e23eac0c-a617-48d6-a89a-f44518d79a0e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ef2ce202-46bc-40db-b5ce-7a73578dae15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bedad9-d7ef-425e-9866-0dad69f047f6",
        "cursor": {
          "ref": "49ad8ca7-bfee-427d-8cac-87b159eef644",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "cbac2a0b-d70f-4b3f-9bbb-f24cbff12ead"
        },
        "item": {
          "id": "62bedad9-d7ef-425e-9866-0dad69f047f6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8e072d62-b8fb-4795-90db-e2c5d1a091a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0e1042-6b45-4755-8b3d-7d4c3280b2d1",
        "cursor": {
          "ref": "bd60530e-9b7f-424d-a50b-3b868822af1f",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "eab23a62-18ae-467a-b261-3d4f9574ff22"
        },
        "item": {
          "id": "1e0e1042-6b45-4755-8b3d-7d4c3280b2d1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a5b7fcd8-9c85-4ba7-9439-8491ef428c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b7c8a6-7aa0-4dda-9928-b8cb5fb1e6d1",
        "cursor": {
          "ref": "f817d810-cebe-47d9-89c3-95bd4b4b8b8b",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0a431fc9-917c-49b0-bd6e-9d4b2b4df447"
        },
        "item": {
          "id": "06b7c8a6-7aa0-4dda-9928-b8cb5fb1e6d1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0db640c6-bff1-4723-840f-e2563ecccb2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac324d3-d07c-4478-b9b2-9bd4ad0818b9",
        "cursor": {
          "ref": "5048bc66-d311-40f7-80fb-c2ccd41d9cf7",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e7e5aace-9e06-4fc5-9e15-ed43284ce6c7"
        },
        "item": {
          "id": "2ac324d3-d07c-4478-b9b2-9bd4ad0818b9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "82d6c100-5353-44fb-b790-06049055b8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7566ed3-2a1f-4401-80de-eae684cd8e8a",
        "cursor": {
          "ref": "fa72fdc6-b891-4632-8efa-907f0d5958ff",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "eddbe6e7-65aa-4acf-9583-612864b92cf7"
        },
        "item": {
          "id": "d7566ed3-2a1f-4401-80de-eae684cd8e8a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4225025b-2732-4936-b46c-a812b700e1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c58eddb-0a6a-454a-9923-b2767588f157",
        "cursor": {
          "ref": "e0289c16-3f0e-4263-a064-8e8e32c5139c",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0c62e67d-b128-48d5-a995-2a5d818a83f7"
        },
        "item": {
          "id": "2c58eddb-0a6a-454a-9923-b2767588f157",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d41d0a13-9ac3-46a7-9620-ddff34a7389c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b93a40-8090-47a0-971e-78a056d0ffc9",
        "cursor": {
          "ref": "41a7434b-0508-4184-8c4f-86655c5f15a4",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8b6b5423-f800-4a7d-a9be-86346b088967"
        },
        "item": {
          "id": "b0b93a40-8090-47a0-971e-78a056d0ffc9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "29c564b8-d6b0-474c-acc4-5789eb78c3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10ea4b2-92dc-4c92-a32b-e54d1be64896",
        "cursor": {
          "ref": "e39b4cc0-91d1-417f-abcd-2d7838f619ca",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8aa7cec7-2251-4c74-be09-995059a08ce9"
        },
        "item": {
          "id": "b10ea4b2-92dc-4c92-a32b-e54d1be64896",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e3cfb331-91ae-444c-bd8a-2c0edae21055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c50140f-8643-4d28-898f-19d9a1b0c7e8",
        "cursor": {
          "ref": "6342a412-bf6f-4ac7-aadd-366ff560f5f3",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e3335534-a5dc-4369-8515-d1de628de44b"
        },
        "item": {
          "id": "5c50140f-8643-4d28-898f-19d9a1b0c7e8",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "12dc4f67-2ede-4b11-9c89-384c063a42f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 906,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d903eeb-8cf1-4f0e-8ecf-fca0bbbe0b60",
        "cursor": {
          "ref": "920cf19c-dc6b-49bc-8eec-d1730ca7cb7b",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3fe4ed18-acb3-4f71-a865-2e97f06a69df"
        },
        "item": {
          "id": "9d903eeb-8cf1-4f0e-8ecf-fca0bbbe0b60",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f32ffeda-c3b4-4d39-ad08-e8a96744ff53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a306fb16-5ab7-490f-a5e1-d0f6d07e0615",
        "cursor": {
          "ref": "916f0819-d2fb-4396-8e44-461f6042ee0b",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7fc300ce-c6eb-4f1a-8b48-74a68bcc5cac"
        },
        "item": {
          "id": "a306fb16-5ab7-490f-a5e1-d0f6d07e0615",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2aa490dc-2a88-4837-9c31-c3aec63a5d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807a30c1-43ca-4c43-ae51-52ddd35e5e38",
        "cursor": {
          "ref": "7ee3de9b-2169-4655-8f66-60173258e04a",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "9c898a5d-a360-4ac7-beb3-d5d2ceda664e"
        },
        "item": {
          "id": "807a30c1-43ca-4c43-ae51-52ddd35e5e38",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "fbb46082-1895-4f01-8c65-b1f792f7feb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542e2a15-fd83-4da9-9fc7-d60d538f442c",
        "cursor": {
          "ref": "19bd184b-518c-4159-b26e-1a0662a224cf",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6a3cf5ad-ce4b-4f3b-a4ef-3f92319f413e"
        },
        "item": {
          "id": "542e2a15-fd83-4da9-9fc7-d60d538f442c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4de82562-977c-48a7-8121-d089ab075867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c7f198-9939-42a1-907c-4163fcf06b56",
        "cursor": {
          "ref": "319c4f82-ad14-4254-984a-cf762948a1d7",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "2e61de0b-4c73-45d9-a3b2-f909a7d700c4"
        },
        "item": {
          "id": "62c7f198-9939-42a1-907c-4163fcf06b56",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c5d44ff9-62d3-4274-ab31-69c574028174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d751e983-0b6d-4106-bd9d-3f983e7dcbf8",
        "cursor": {
          "ref": "4344a285-81de-4498-988f-2d8600093d2b",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5350e690-0b9d-4ff2-9aba-996d2c2f52a2"
        },
        "item": {
          "id": "d751e983-0b6d-4106-bd9d-3f983e7dcbf8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "fc497fd5-1263-47d6-9308-26cce144e566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d7e36a-29e2-4ed4-b245-0abc1812aab5",
        "cursor": {
          "ref": "f6c0bfde-8b8a-41ee-9c68-215304b37a8c",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "732381d5-b774-4e78-8b60-6bb19c95e006"
        },
        "item": {
          "id": "b9d7e36a-29e2-4ed4-b245-0abc1812aab5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4315712f-2688-4fb8-aed0-8c438493d6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b24774-7640-47e7-90fc-2cf32f15026d",
        "cursor": {
          "ref": "02503af0-f5b3-46e4-9053-9572528b6476",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9fd927b6-9d1c-4484-ba9e-e6e333334773"
        },
        "item": {
          "id": "38b24774-7640-47e7-90fc-2cf32f15026d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "697c72fc-b446-4204-81eb-cdb21b8e00d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df889a25-6d9b-4955-b02e-18a370ea8687",
        "cursor": {
          "ref": "e651a9a4-d18c-490c-a515-788c6c9ab6b5",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4b36f6a5-aecc-4e91-ab5e-0d04a49a088e"
        },
        "item": {
          "id": "df889a25-6d9b-4955-b02e-18a370ea8687",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "08bcaf24-ea82-4b01-8dec-8485bde43782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03466622-6226-4bcc-b440-4b63b4dd3577",
        "cursor": {
          "ref": "fd85aa63-431a-4d26-a376-8078f8423688",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "327ed10d-0d89-4d3b-90dc-feb9f969045e"
        },
        "item": {
          "id": "03466622-6226-4bcc-b440-4b63b4dd3577",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9b4546a4-4ddb-4ad9-b056-75d80778a14e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219e72a2-74c8-4652-a16b-e829cf62ce0d",
        "cursor": {
          "ref": "505c7b71-6bda-4ffe-b26f-9c86d47d0a2b",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a1588075-511c-46f0-8ca4-8770aa6c7d14"
        },
        "item": {
          "id": "219e72a2-74c8-4652-a16b-e829cf62ce0d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2dc787ee-d9c4-4a85-a76a-167a840b3eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb7a265-8a4a-48f4-baf8-15d5b0fe55f9",
        "cursor": {
          "ref": "82a7ea78-a9c9-4658-8fe5-4a13b5fbccc9",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "905d61bd-8eb6-4758-b496-65aa913c5d9c"
        },
        "item": {
          "id": "8bb7a265-8a4a-48f4-baf8-15d5b0fe55f9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e46406ef-6f40-4385-b981-41d061f617ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5fa7cc-e78e-479f-ba3a-c051e8eb3880",
        "cursor": {
          "ref": "83b80d4f-45d4-4aba-a829-a6e6495aacdb",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d5a6045c-aea4-4fd2-892a-064d1513dc3a"
        },
        "item": {
          "id": "8c5fa7cc-e78e-479f-ba3a-c051e8eb3880",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fc5dbff4-7ab7-4e79-8453-54a7d6a09290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66a715a-1f67-4409-94ca-e91f96ca1dbe",
        "cursor": {
          "ref": "55277be2-f743-4765-9791-11338ea83e73",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d9b6f19d-8eaa-456a-8c09-5935ac17d976"
        },
        "item": {
          "id": "c66a715a-1f67-4409-94ca-e91f96ca1dbe",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "80d16a4c-d362-4f9d-9d3e-628e1e6402fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921e90ee-19dc-4c0d-8b8f-7bb932cda352",
        "cursor": {
          "ref": "69cf77e5-8853-4903-9ed6-8cb8d3d5e05f",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a44e9950-2d2a-45f2-8a28-2a8c994e16a7"
        },
        "item": {
          "id": "921e90ee-19dc-4c0d-8b8f-7bb932cda352",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "72a43697-7601-4d89-a342-6575e34e2073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d174a4b5-dc18-4882-bfec-cfb14af6a525",
        "cursor": {
          "ref": "8e11bbb9-2bba-48a6-a42f-d3f6957661d9",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "405008a3-2bb8-48a9-9801-6d42ef583de3"
        },
        "item": {
          "id": "d174a4b5-dc18-4882-bfec-cfb14af6a525",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "484e9df7-e5ba-4f6a-9372-ab1318cde4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc8b5bb-0583-46a2-b882-5cd011c4407c",
        "cursor": {
          "ref": "d8e5197c-dcc4-47e6-a179-c1422d911e42",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2c9b168b-5765-49b8-8add-2ef42aef16bc"
        },
        "item": {
          "id": "7fc8b5bb-0583-46a2-b882-5cd011c4407c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d1292089-031f-4676-9224-4f0ec3f87439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694c2bdd-31e1-49e4-99c2-0dc35072fd8e",
        "cursor": {
          "ref": "ec8513a1-0d85-4257-b6a3-3cfa488db683",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "dd9a760f-2392-40d5-9614-3900ce4395f1"
        },
        "item": {
          "id": "694c2bdd-31e1-49e4-99c2-0dc35072fd8e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d4be302b-5cbc-4f81-9239-2f57e8c5a137",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b54acdf-cccb-4eb9-83ba-64a881607838",
        "cursor": {
          "ref": "7c8cb3cd-fbed-48eb-b315-dd907f9d42a5",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "bc49c469-c1bc-41e8-9a54-2e16a3c871fc"
        },
        "item": {
          "id": "2b54acdf-cccb-4eb9-83ba-64a881607838",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1e49009c-4c90-4e5a-a65f-cdc1b96d737e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "001c2598-02fd-494e-b0e8-1193b18947f7",
        "cursor": {
          "ref": "3756cfee-f4cc-45fb-911e-13e847cd2c83",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b50e9645-de6a-4071-bb17-2505a6dbb689"
        },
        "item": {
          "id": "001c2598-02fd-494e-b0e8-1193b18947f7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8fbc7b4a-1a7f-4e53-84ec-5e183ea3c3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "69178970-20d1-44d4-b580-c1143ba5560c",
        "cursor": {
          "ref": "890be41b-1029-4fcf-8d74-bacffeac2591",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "49c3cda7-59ca-4f95-9161-2ca2dce18491"
        },
        "item": {
          "id": "69178970-20d1-44d4-b580-c1143ba5560c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d205c1d8-f824-479f-84a2-826403a86b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "c87e790e-bc88-4d5e-adb5-553fd6560e05",
        "cursor": {
          "ref": "8774d632-f4ef-4fa5-b554-cc8911eeb9b4",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1fc4c768-8a30-40e3-92f2-1c297337ba40"
        },
        "item": {
          "id": "c87e790e-bc88-4d5e-adb5-553fd6560e05",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3805003f-69a3-46bf-bcea-4ccfa92577df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "b53fdd20-f442-4629-accc-b665e126bd0c",
        "cursor": {
          "ref": "c09a4082-b5cd-42f1-832d-427593016785",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "62fe111a-d67e-4d07-9a0a-716dd2fc13b8"
        },
        "item": {
          "id": "b53fdd20-f442-4629-accc-b665e126bd0c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c6ad63dc-5d63-42a7-9029-f1db2a021989",
          "status": "Created",
          "code": 201,
          "responseTime": 4670,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd8dde68-57c7-4f46-88fa-1f32a91c5207",
        "cursor": {
          "ref": "cf228af1-286d-4570-9b03-8768d40bdea6",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1f99bd96-5287-4cce-8069-573017cb2f1f"
        },
        "item": {
          "id": "cd8dde68-57c7-4f46-88fa-1f32a91c5207",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "112222f1-0713-4da9-9cfd-d0066f0dce56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "4d1d802e-406b-4393-8319-d39d6d2ba558",
        "cursor": {
          "ref": "2a7163f3-daa5-4eb1-a53b-172f2710e28e",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b64e9303-341d-4517-bb3a-6a1080b16a12"
        },
        "item": {
          "id": "4d1d802e-406b-4393-8319-d39d6d2ba558",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4a60548f-1261-40cf-becc-638c309c96ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "67424db2-efe9-4109-9be5-9f10d55fa675",
        "cursor": {
          "ref": "5a30072d-6b4c-481d-bd83-44391e979304",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ba67e777-5d7c-4b75-9fae-d59c6e7d9dc4"
        },
        "item": {
          "id": "67424db2-efe9-4109-9be5-9f10d55fa675",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ac72c82e-96b6-4d95-9439-32bb94e1d050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24cc483-458e-4366-80be-b2fe03d293b1",
        "cursor": {
          "ref": "6e706075-a224-4134-ba2b-d7c955d11102",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "afe3e385-c15d-4758-aff2-e6fbc1e138c8"
        },
        "item": {
          "id": "c24cc483-458e-4366-80be-b2fe03d293b1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8ae8afe3-c2ef-4c52-8dfd-d3dc708998ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e1a731-ac52-49de-a939-5e98900bea11",
        "cursor": {
          "ref": "8fbcb169-dda3-4789-95e1-dbbb42bc2c29",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "03eee212-c731-4f33-a5c5-bdcc668fe926"
        },
        "item": {
          "id": "f1e1a731-ac52-49de-a939-5e98900bea11",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d57dc872-d048-4c6f-a59a-af969820789c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6f91e8-da23-4c92-849c-468a4dc3f04d",
        "cursor": {
          "ref": "96ef2bcd-effd-445a-beb5-59cd9d23a621",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7d0d1c9d-5e4e-46c8-9915-f8c329d9472d"
        },
        "item": {
          "id": "bb6f91e8-da23-4c92-849c-468a4dc3f04d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "90cbba45-b9a9-4ca6-92e7-801b4e731eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727f847a-cea7-46ec-bbb4-bed7c138313d",
        "cursor": {
          "ref": "f4b07fe3-a198-44b3-9bff-61e61e6dd111",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5e90b1b0-c91e-494e-a3aa-091705c02647"
        },
        "item": {
          "id": "727f847a-cea7-46ec-bbb4-bed7c138313d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7929fb94-640f-440d-90b7-cd268859f0f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8a7911-7009-48aa-b895-196d5fd722b0",
        "cursor": {
          "ref": "839f06e3-2131-4094-8559-e6290091d8a5",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a608c5f5-7b80-4463-8aa3-ee71ea21e9b7"
        },
        "item": {
          "id": "2d8a7911-7009-48aa-b895-196d5fd722b0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1578b22a-afdb-47ad-8d61-41e90a987bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc34971b-a995-4628-827f-ca9c87bc9dd2",
        "cursor": {
          "ref": "6b02daef-1292-49cc-a6f0-2e068a60e8e3",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "88c93a97-41cd-4e90-a275-f8740bb33809"
        },
        "item": {
          "id": "fc34971b-a995-4628-827f-ca9c87bc9dd2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e96963fd-7446-4dde-87f2-99db208833ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64bd8490-6b3d-4bd7-a98e-a891b314adbd",
        "cursor": {
          "ref": "c765da63-472c-4a7a-bb5b-68e84f3fde63",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "62b98b88-d7bf-461f-b8a3-5a8290fddd8f"
        },
        "item": {
          "id": "64bd8490-6b3d-4bd7-a98e-a891b314adbd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "48c5fbd8-f04e-4667-aef8-0dec2091ba05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7699c70e-3405-4a97-a0d7-3e4d07954f21",
        "cursor": {
          "ref": "03b12986-2e4e-4eba-a145-c51ddff27327",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "093da30d-77de-4ad6-b615-fcc3e74129c3"
        },
        "item": {
          "id": "7699c70e-3405-4a97-a0d7-3e4d07954f21",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4489e735-f84f-4a89-884a-ef24a26bd178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2993cc9b-f13a-4ecb-9b05-9d262cd1e966",
        "cursor": {
          "ref": "d21c59c5-8c9e-4043-b0d0-83419ef66a77",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ef46b327-08b9-41ba-9717-8c79cc9593be"
        },
        "item": {
          "id": "2993cc9b-f13a-4ecb-9b05-9d262cd1e966",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "480b4a8e-70c2-4f5f-b193-0feb48126478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8433a65-85ce-499e-8741-e70738043f77",
        "cursor": {
          "ref": "21a8a76f-e962-4100-9d9f-9d5c0b9aeb84",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "da1ecb88-184b-48d3-9638-88357f7478c9"
        },
        "item": {
          "id": "f8433a65-85ce-499e-8741-e70738043f77",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0d584502-2eef-4431-b6aa-26a784191b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58b5d5c-364c-4e24-b0e5-f3236d9475de",
        "cursor": {
          "ref": "bffcd376-242a-4e92-9013-007f12c1f846",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "98925ad5-155d-451b-8134-ba68447b5c78"
        },
        "item": {
          "id": "a58b5d5c-364c-4e24-b0e5-f3236d9475de",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9a901c97-4ab7-4474-be82-8e2a53a7383c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae95edd-b0c3-4368-9cd8-db411131b675",
        "cursor": {
          "ref": "3829a075-e762-4748-ac91-7d1820852bfd",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "00b55a99-fef3-4bac-98dc-7474e86f7a47"
        },
        "item": {
          "id": "1ae95edd-b0c3-4368-9cd8-db411131b675",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "216f6376-f4a5-46b4-9347-fca938e44383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460682dd-694e-4d37-8b21-3241c0fd551b",
        "cursor": {
          "ref": "888cc45d-a1a4-45ca-9f5b-4a1d2ad7ebde",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "876111a8-1520-4d30-9cfd-1aca1e38cd07"
        },
        "item": {
          "id": "460682dd-694e-4d37-8b21-3241c0fd551b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "03ce025b-63d0-442c-8781-ed69ba975f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f89184d-1997-4cbc-8ba6-b87473371d6b",
        "cursor": {
          "ref": "70c88fee-bcfc-4a92-a1f3-7dd0cb1cd6aa",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ae5dc37f-f2a2-4c35-8e40-d33869eb6d4b"
        },
        "item": {
          "id": "6f89184d-1997-4cbc-8ba6-b87473371d6b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1e1b9862-b3e6-474a-84e1-7b04fb23b883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4be136-3ca0-43cc-8dd8-86ff5cac71b0",
        "cursor": {
          "ref": "82d74e18-6e06-46e2-b73a-13fcd666d84c",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9f0f116a-e4cb-4a6c-83be-31a1a60db499"
        },
        "item": {
          "id": "bd4be136-3ca0-43cc-8dd8-86ff5cac71b0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "07acc54b-30a9-4347-93fd-b49040cbe6cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1727468f-eab7-4e6e-8864-e91bd76dace5",
        "cursor": {
          "ref": "6bc9a652-8533-4717-9bc4-d037fa79cb5b",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1f09dacf-a349-4013-ae92-16a546e28fb5"
        },
        "item": {
          "id": "1727468f-eab7-4e6e-8864-e91bd76dace5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "821a7b50-cc07-43dc-8956-25d6a964fae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a719ade7-5026-4985-aa7e-1de90d157733",
        "cursor": {
          "ref": "b3963ef0-21f7-4d38-8aea-416104e65e59",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "745ddf6f-7987-459d-9644-d32fe81fe937"
        },
        "item": {
          "id": "a719ade7-5026-4985-aa7e-1de90d157733",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "788fefc8-e02b-4b22-8186-1826312d6ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81053e3-9e1a-49c4-a292-51325852f497",
        "cursor": {
          "ref": "1a9014cc-a59c-45f0-905a-94fa1aa08a80",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "12748e46-ac7c-48b0-898a-f35777e7b097"
        },
        "item": {
          "id": "f81053e3-9e1a-49c4-a292-51325852f497",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bddc5f2e-e941-45c5-ab49-e2a2c395f78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edf14b5-9162-4d8e-ba45-60ef854a28e0",
        "cursor": {
          "ref": "a02d03fa-831d-4a05-bf4b-76bdcc355d58",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0a3f58f6-e0af-4974-b98a-7d2967ef13f6"
        },
        "item": {
          "id": "1edf14b5-9162-4d8e-ba45-60ef854a28e0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4239c1be-a163-4a89-92ef-0eb03b8adf09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88839320-3832-4861-acb5-eed62aa44bed",
        "cursor": {
          "ref": "a2f49248-bb80-4bb2-bd41-0b07932ce658",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3ba77700-5e38-479a-ba85-517420b7888d"
        },
        "item": {
          "id": "88839320-3832-4861-acb5-eed62aa44bed",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ba60e5df-fbc4-46f3-b0cf-38cec2ce4d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6509a72-dcdd-423c-8159-b29ca6412b83",
        "cursor": {
          "ref": "f0ede3b1-d1a2-4416-bb8e-4f9caf7d5c26",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d1fad52d-ea0f-42b3-99b6-01fa97c4ed6c"
        },
        "item": {
          "id": "f6509a72-dcdd-423c-8159-b29ca6412b83",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b44a8a72-2f57-4d18-b968-2496dfe2db57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b702af7-2664-49cb-a738-b3642766c979",
        "cursor": {
          "ref": "0d0c937f-bd5e-4cea-99eb-352a2ea1a0e3",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b55110c8-a419-49f3-bc42-3d54277efb89"
        },
        "item": {
          "id": "0b702af7-2664-49cb-a738-b3642766c979",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2db96b34-ae79-4c7b-b59d-e5736f649577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a78e8cc-d63e-4870-a5e1-9f0e26cf9b91",
        "cursor": {
          "ref": "a47a90c7-a086-4661-912f-6ab8b1397cb8",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4b70edab-79e2-40f0-bef5-a320aebc0f80"
        },
        "item": {
          "id": "1a78e8cc-d63e-4870-a5e1-9f0e26cf9b91",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "be0e7888-3be2-4097-ad33-034fad4f0aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb497be9-996d-487f-94ec-b89d846954c4",
        "cursor": {
          "ref": "4011449b-55f4-48bc-aab9-69165fa69f4a",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2aaeefe2-5798-42f3-9f0a-360bbfe7acd3"
        },
        "item": {
          "id": "cb497be9-996d-487f-94ec-b89d846954c4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f9acb590-e201-4e85-b167-dcc2e4dfb2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627dd3b4-a956-4c45-a99b-4531701231ee",
        "cursor": {
          "ref": "f931ebae-8f99-4533-be6d-ab17a8892d44",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "87841a90-5b10-4a83-b374-cd35fd615f2e"
        },
        "item": {
          "id": "627dd3b4-a956-4c45-a99b-4531701231ee",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a3226761-ecb7-47a5-b25e-f7804d63f620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4cc3b4-31d5-4468-becf-3377b0efb415",
        "cursor": {
          "ref": "b98de133-f65f-465d-9bc6-27abade1fc3e",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d70d7b5a-b9bd-4507-a55d-98a6534bdc85"
        },
        "item": {
          "id": "2c4cc3b4-31d5-4468-becf-3377b0efb415",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f9dfa01e-cd50-4c1d-85a4-095429a97d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ed4891-9140-43d2-aa8a-bb13571bb576",
        "cursor": {
          "ref": "950bd0b0-55a9-43c1-9181-f8730f6ae963",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "98ead680-6b7f-4fef-81a5-6854c04ec70b"
        },
        "item": {
          "id": "14ed4891-9140-43d2-aa8a-bb13571bb576",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3beb49ef-29da-42c3-961b-58006833ad0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45df659b-7393-45c6-8352-cd0e1580aa2e",
        "cursor": {
          "ref": "63a6760f-3db4-4e75-be61-169d13d03e78",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "af6eeab1-9a69-4a04-bce8-fa6727289515"
        },
        "item": {
          "id": "45df659b-7393-45c6-8352-cd0e1580aa2e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "19390129-3405-4ca9-bbd0-f08aef80638a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b927a3e8-0bb8-4cdc-a01e-ea19405c6d92",
        "cursor": {
          "ref": "5f038f38-abe0-49a7-9918-f8eeadb47f46",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "eae10aea-fd7b-4bbe-a9c1-b47f39f058be"
        },
        "item": {
          "id": "b927a3e8-0bb8-4cdc-a01e-ea19405c6d92",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "370027f1-ccee-4dc4-a5a4-be6ffab6e3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fde3d6-7e4f-4f49-bf79-64ba766e7700",
        "cursor": {
          "ref": "17c49569-3449-4391-a15a-1e7218d76277",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "bb50a445-1080-4658-b697-975e9451bdfe"
        },
        "item": {
          "id": "a5fde3d6-7e4f-4f49-bf79-64ba766e7700",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "31fdac45-664f-4b6e-bf3a-ea8bf007bcab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff635b0-e29a-4398-92f1-b24097f59049",
        "cursor": {
          "ref": "21f14043-64ba-4788-82e0-8007be93c448",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1a4e48a3-8766-46d5-b09e-8a5def237818"
        },
        "item": {
          "id": "7ff635b0-e29a-4398-92f1-b24097f59049",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "31235bfb-1385-40d5-833e-2e0a69012ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0074b371-31f9-4413-82fe-39a61a5745f0",
        "cursor": {
          "ref": "1f900b3a-3da4-4ea1-b764-046e44a0ab60",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0504d75c-6b4c-4a50-b68a-2f581cea178e"
        },
        "item": {
          "id": "0074b371-31f9-4413-82fe-39a61a5745f0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f74cdcd7-e9d8-45b0-bd88-eff787bc91f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3174d20a-abbe-4718-8634-1af26f5f98a4",
        "cursor": {
          "ref": "a60e81da-3c6f-4688-bee6-6e322ce4684d",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b25c3978-8530-49d2-94be-1a988228a420"
        },
        "item": {
          "id": "3174d20a-abbe-4718-8634-1af26f5f98a4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "15d45824-e40d-4416-84a4-214b34395d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80298773-8a1a-47d9-bd7b-5f6dafd1c648",
        "cursor": {
          "ref": "78d8256f-f05c-46a9-a640-2017bdfd50e3",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "603886ac-8c02-4b89-b098-25587e254567"
        },
        "item": {
          "id": "80298773-8a1a-47d9-bd7b-5f6dafd1c648",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "988cb3bf-ad49-4e36-8b1b-881ab9c620e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb001719-09f0-4950-9c0e-c5bf2a5d9751",
        "cursor": {
          "ref": "0868d4b6-686c-42e5-a367-398aa43ad2d8",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "46beb4f2-77db-4d98-b4f9-fa48cbf83c7d"
        },
        "item": {
          "id": "bb001719-09f0-4950-9c0e-c5bf2a5d9751",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "84925ea4-72dd-4542-b714-bf83330e8519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb35f0e-1f5d-4b9a-96bb-c3cce2930919",
        "cursor": {
          "ref": "ead1d03d-8cfd-4280-a228-981d13226001",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e1d1b467-cb68-4e26-a12c-9b90fc2355e9"
        },
        "item": {
          "id": "abb35f0e-1f5d-4b9a-96bb-c3cce2930919",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6acb18da-b24f-4453-903d-2bad55090ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f62f257-e2bb-4e16-b188-1397d5c78025",
        "cursor": {
          "ref": "16585b16-1222-47b2-9eb6-ab9c843dc880",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4ada89cb-0b73-48cc-90b0-99ee0c0f8bf0"
        },
        "item": {
          "id": "4f62f257-e2bb-4e16-b188-1397d5c78025",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "509f8674-8345-4cbe-83b9-d44a7891359b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a92663-6dc1-47e4-8636-dac389f467d6",
        "cursor": {
          "ref": "dce7ee13-15b6-4848-9a0f-4c93a9a50501",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "aeeb1518-fed4-487b-ab2a-17c4ccbf388d"
        },
        "item": {
          "id": "19a92663-6dc1-47e4-8636-dac389f467d6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d25c099d-16ab-4aa5-bcb3-6a045be34978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2857aaf8-f316-40ad-b3eb-515c87d2660d",
        "cursor": {
          "ref": "b9c20e49-c570-49d9-8a7f-a32e2b825e1c",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "63d6300f-3fe1-49bd-8c20-c9a652cf4d00"
        },
        "item": {
          "id": "2857aaf8-f316-40ad-b3eb-515c87d2660d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5488607c-8e00-4aa2-816b-75c03ef13dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7671a3-70f1-40c6-bae4-2fed08f6090f",
        "cursor": {
          "ref": "941d58eb-b6de-4cd1-b301-7f15dab6efff",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9c94548c-8943-4255-bb11-f47fb5823e1e"
        },
        "item": {
          "id": "cb7671a3-70f1-40c6-bae4-2fed08f6090f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "dad23924-4661-42b4-bd61-3ac58ec3741f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa8d4e5-d6a9-47f0-8e18-f94a26456759",
        "cursor": {
          "ref": "7e411772-4ff9-4792-863c-1cd801198865",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "15b4638d-fd3d-4219-af37-bb66d91673ff"
        },
        "item": {
          "id": "7fa8d4e5-d6a9-47f0-8e18-f94a26456759",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d07a9429-4dee-463a-b44c-fce4d9bda8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25b84ff-18d6-4265-a9fc-3b4b14c90f9e",
        "cursor": {
          "ref": "605f557d-6b46-4ef1-8e18-0245d681e846",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "15cda89c-5398-4069-baaf-57cb8bb35b0b"
        },
        "item": {
          "id": "e25b84ff-18d6-4265-a9fc-3b4b14c90f9e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d175cfd4-e010-41ef-a53e-fc6a1abfc535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0cc6d1-82f0-4316-b0c7-bd0300e891da",
        "cursor": {
          "ref": "be662e7e-0a87-48cc-a0bb-e5d44f31ea11",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6779b405-8ee9-49eb-84c8-996bf0391509"
        },
        "item": {
          "id": "cf0cc6d1-82f0-4316-b0c7-bd0300e891da",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b7375948-5995-4c35-8c8a-5bc4f41cfb98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f572d4f2-f94e-4aff-ae62-46a2a50de208",
        "cursor": {
          "ref": "6e47697c-2e44-4385-9a0b-b8a5646dd2cc",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "11b8ed3e-a314-4369-9a80-6a5b52e3cac6"
        },
        "item": {
          "id": "f572d4f2-f94e-4aff-ae62-46a2a50de208",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4266c5ca-7c7a-47cc-bd11-165e53938117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d5f011-05ce-4e14-b5d9-5ad7ced55dcc",
        "cursor": {
          "ref": "f89e7a99-59bc-490d-a781-119126c6a574",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f00ae935-8c1a-48dc-b45b-d777fdbe8379"
        },
        "item": {
          "id": "34d5f011-05ce-4e14-b5d9-5ad7ced55dcc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7a8d1461-8231-4171-ad96-8a1086447073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9c8fb2-1030-4df3-b59f-e830612bdb78",
        "cursor": {
          "ref": "837af0e3-68c0-4f29-a555-4dc0fbc9b8d6",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c5846e2f-7600-4b41-8937-a793ab461c41"
        },
        "item": {
          "id": "3d9c8fb2-1030-4df3-b59f-e830612bdb78",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c49f55f3-e933-4f96-b2f8-8c73afd00adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dad4908-fd0f-4f57-89df-626cd330e1f9",
        "cursor": {
          "ref": "c8b2527b-6211-4dcf-a9f3-642a79dc3ba3",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "526cfa5e-1112-458f-92dd-f04a5d68a5af"
        },
        "item": {
          "id": "7dad4908-fd0f-4f57-89df-626cd330e1f9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e27742e9-c02c-4d14-8842-9dd4357c6dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa89dc0a-0ef8-4def-a06b-2ac3ccb2e77f",
        "cursor": {
          "ref": "95870234-13cf-41f2-a78e-78baaf65c2d2",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "17877921-65d4-4cec-bb96-031e36f551ec"
        },
        "item": {
          "id": "fa89dc0a-0ef8-4def-a06b-2ac3ccb2e77f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bdae227a-0d27-4542-b1f4-f6e14bb01c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82b5bd2-aa8d-44a9-850e-39dbc62b6c6e",
        "cursor": {
          "ref": "b156714b-af38-4a65-856e-5c777816ae6a",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e7dc9a8c-164c-4667-80a0-024964e8c4ea"
        },
        "item": {
          "id": "c82b5bd2-aa8d-44a9-850e-39dbc62b6c6e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "eba90729-e15b-4529-aae7-fc61bbb48cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797e0d93-b874-48ad-9a40-910da18c06a4",
        "cursor": {
          "ref": "4d45a3de-13ea-419c-b644-bc26a6ee91a8",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3ac7da0b-4fa0-48a3-9955-a20d2476f626"
        },
        "item": {
          "id": "797e0d93-b874-48ad-9a40-910da18c06a4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5e0368d3-4aa4-4d5b-a905-4d03a25f7e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3342323-6489-4ab6-a08a-bfa21cfd66f6",
        "cursor": {
          "ref": "b2a3a40c-97e5-4de5-bdef-c90bf1ee68e6",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "70d426ea-5488-48e1-8e18-483ea6632eee"
        },
        "item": {
          "id": "d3342323-6489-4ab6-a08a-bfa21cfd66f6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e3c2b36c-cf02-4fd8-9c81-eb5aeb101f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb894433-9465-42c6-9073-ca80c1fd6475",
        "cursor": {
          "ref": "ba2209ef-b7b4-43b4-bceb-f9e44cee2172",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b27bf5e4-eb7f-4ce8-a6f3-7476ab4d7c1e"
        },
        "item": {
          "id": "cb894433-9465-42c6-9073-ca80c1fd6475",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "38260e45-1190-43b2-bc57-9e2280b7330a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b382a931-ea2c-48ee-83ac-47a1cf3bf8db",
        "cursor": {
          "ref": "28f74f50-b396-49c7-a8b1-364e396c0f27",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f83aec1a-3dc3-4bce-a7e2-c9d33fd97d1b"
        },
        "item": {
          "id": "b382a931-ea2c-48ee-83ac-47a1cf3bf8db",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4cd03bd1-139f-4284-8250-efe650d03f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8680975e-56d7-4dfe-8a4a-8f2ed11c0fa6",
        "cursor": {
          "ref": "0be281d7-d582-4e9e-831e-ad46820b00db",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ab00273d-f2a9-40d7-825c-565cf4663a66"
        },
        "item": {
          "id": "8680975e-56d7-4dfe-8a4a-8f2ed11c0fa6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "572c6c6a-f48a-4ee7-a203-8a3a01b63af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1f89e0-ed14-4ede-a887-4036a2bec1ab",
        "cursor": {
          "ref": "009bfe60-7bc2-4306-9ec2-a70d14d84773",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e913e3ef-9073-431a-b89c-ebd56b6bdc1c"
        },
        "item": {
          "id": "9b1f89e0-ed14-4ede-a887-4036a2bec1ab",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5584d80a-5379-4fda-b7c7-338c8f3904bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce1e4be-e219-4280-b388-5f8269c1cd7d",
        "cursor": {
          "ref": "a5c62958-0f89-448b-9c6e-e1a5ea354fbf",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "fefeb643-49b4-4fbf-af80-4fb3505ff6ce"
        },
        "item": {
          "id": "cce1e4be-e219-4280-b388-5f8269c1cd7d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d1f9625f-c523-4e5f-b7a3-3e862d220ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2702c8e-d4a3-4994-803d-dda80385071b",
        "cursor": {
          "ref": "381affa4-f682-43f1-b5eb-55ae0364595e",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "240fd9e7-4b1c-4fab-adec-d4cc64d567d1"
        },
        "item": {
          "id": "d2702c8e-d4a3-4994-803d-dda80385071b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1d9c9872-20e8-47d8-ab34-5f244d86e585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193ffa57-2c28-4ddc-b7b2-3b8b9c0ce836",
        "cursor": {
          "ref": "9912ce9d-20f8-4f8d-8e98-0687ff241eab",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "41eeb286-60d8-4650-b5b7-cbfe48051889"
        },
        "item": {
          "id": "193ffa57-2c28-4ddc-b7b2-3b8b9c0ce836",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f9b0a146-eed2-4758-94b8-ca8fac930e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4353b91f-ec9e-4d13-8c15-b4fcb8dde048",
        "cursor": {
          "ref": "3bb406a6-4ed6-4824-8321-ab63efecc817",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a825a305-2e31-436e-a518-655081e95541"
        },
        "item": {
          "id": "4353b91f-ec9e-4d13-8c15-b4fcb8dde048",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cc598d22-3582-48c8-bc2f-8418e9d2d34f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb680003-3398-41c4-bc1c-dee5594ef6f0",
        "cursor": {
          "ref": "4c7c0e4b-331b-42a9-8084-04897aa97688",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "69010bba-40bf-42bf-9412-f982fc74ef13"
        },
        "item": {
          "id": "eb680003-3398-41c4-bc1c-dee5594ef6f0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7018158e-a222-46a0-9a9b-182f3a7ddeff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f690554e-a877-435b-af06-d4fb940ccc97",
        "cursor": {
          "ref": "2753d366-a0a0-42ac-b299-c6ece89572cb",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "afff52b6-10a7-401c-be9c-68cc8937632d"
        },
        "item": {
          "id": "f690554e-a877-435b-af06-d4fb940ccc97",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e0a54ea0-e26b-4b76-bcd8-aa61fca956ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083d4fb4-e152-4849-a764-b4d832c85e39",
        "cursor": {
          "ref": "e2b853a0-1a4f-4be8-ade0-7f270a54fd70",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c58e9978-0623-418e-9112-bc44eec05486"
        },
        "item": {
          "id": "083d4fb4-e152-4849-a764-b4d832c85e39",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6c883b5e-0f9d-4311-9771-fe1e4ba3f264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7299dba9-1fd3-4445-a482-b2568a0c5429",
        "cursor": {
          "ref": "9e0feea5-50bb-4a0c-8a2e-104b213a5ea6",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "982dad7f-6c08-47e5-8723-2efe3c480f3d"
        },
        "item": {
          "id": "7299dba9-1fd3-4445-a482-b2568a0c5429",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cef10fdf-409d-419e-970b-51ea1a341d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2412ca48-9eee-46f7-a1b4-1eb8402afa0c",
        "cursor": {
          "ref": "54b5a728-9e32-4783-a2b2-2e85c6666718",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "871b51f2-da38-411d-90df-9f123635aa4b"
        },
        "item": {
          "id": "2412ca48-9eee-46f7-a1b4-1eb8402afa0c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "a12dd826-7c37-48d0-9998-4547306a9ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0e67f1-396a-468e-84a2-30556e208ef1",
        "cursor": {
          "ref": "90f1d1ab-bacc-4d90-a105-2fa46b13edcb",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d8aefca3-ff0e-49f3-9b71-a9b4a50a9e44"
        },
        "item": {
          "id": "4d0e67f1-396a-468e-84a2-30556e208ef1",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f463d221-598f-4e99-8498-676aa888a158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0306dcaf-06d2-4bf0-b5f1-e8c621801126",
        "cursor": {
          "ref": "c13933aa-e46a-41b4-963e-1f06d95bd3b3",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "955d80b5-fbd1-4ab4-9ee4-8f4110751beb"
        },
        "item": {
          "id": "0306dcaf-06d2-4bf0-b5f1-e8c621801126",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "13b47409-ec6b-457a-a483-0f7b0056246f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356bf490-072f-43c3-bc20-849ceb8ea85b",
        "cursor": {
          "ref": "71c6a4c1-bffe-4c4d-bc87-778413816357",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "021bfcb1-52b9-43e1-b071-285f2d7480ef"
        },
        "item": {
          "id": "356bf490-072f-43c3-bc20-849ceb8ea85b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9ae95508-a37c-4ff7-a485-26858c4ddff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04bb3449-0cf1-4d3e-aa15-58fd61e4b0b8",
        "cursor": {
          "ref": "8ddb5a3e-bb35-4429-99b2-ad7eea2de873",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8e7415b2-33b7-4c6f-aa7f-ac9f008b7515"
        },
        "item": {
          "id": "04bb3449-0cf1-4d3e-aa15-58fd61e4b0b8",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "cfd1039f-c506-488c-b38a-91a07b59b035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8584f8ef-cfac-4787-95fa-5eadc7a5525e",
        "cursor": {
          "ref": "58d1298d-8fb3-4556-a524-adc1661c8a7c",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "934f9bde-a178-491f-84d4-483e09622e86"
        },
        "item": {
          "id": "8584f8ef-cfac-4787-95fa-5eadc7a5525e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "81bfeeae-f5f6-4d7c-9199-47362c9c8850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93130db-ffcc-47fa-9b25-ab62e10c8e57",
        "cursor": {
          "ref": "235ee806-d569-4788-a59c-b38660919dde",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "05cc8089-d867-4d52-bfdc-1eebd853bc2f"
        },
        "item": {
          "id": "b93130db-ffcc-47fa-9b25-ab62e10c8e57",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6b908480-012f-47e3-86d9-8157f470fbcc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8131c010-ef3a-4de4-9eaf-c1c62ad5e81c",
        "cursor": {
          "ref": "8713d372-0a8a-4ae7-9ffb-b1510cff0ddb",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4094b3ed-651d-41b8-a0b5-aea900b40296"
        },
        "item": {
          "id": "8131c010-ef3a-4de4-9eaf-c1c62ad5e81c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "70d8260d-bd2a-493b-bdf9-3a4b16d52597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d838894-b877-4853-bd72-7e8a0e22a668",
        "cursor": {
          "ref": "aed24e27-49e2-43fb-be2e-334eeaf55fd0",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b11d2182-3a2e-4ef0-96b9-801b4ac0f449"
        },
        "item": {
          "id": "8d838894-b877-4853-bd72-7e8a0e22a668",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "22a21cc5-6240-4832-8529-dbe92fa0552d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38cb9b49-5c74-4ee8-bf66-435e13d67520",
        "cursor": {
          "ref": "7d60a01d-ab97-4120-a624-fbe684d061b0",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8dfd8557-4d88-4ae6-ac5d-bb8814b44907"
        },
        "item": {
          "id": "38cb9b49-5c74-4ee8-bf66-435e13d67520",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "87b40076-56f2-4912-988b-0387ed480865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98344d6e-81bb-4223-8e2b-c793c013c080",
        "cursor": {
          "ref": "42c571e1-631d-46dc-9994-a5071afd3e9d",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ac1c4e10-337f-4f5a-8c26-38933ca7a143"
        },
        "item": {
          "id": "98344d6e-81bb-4223-8e2b-c793c013c080",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "59531b69-052a-47fb-ba88-15825360ed53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a224e21-cd41-4052-8203-87323429862f",
        "cursor": {
          "ref": "7be282c4-c0c7-4814-8813-5a6605a7b527",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c14ec87e-ec71-47ab-9eee-a578e60a585b"
        },
        "item": {
          "id": "4a224e21-cd41-4052-8203-87323429862f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "26a65efb-d314-4a55-bed0-3df4d12d2069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fd314b-c780-45f2-95ca-4ae1de2db2be",
        "cursor": {
          "ref": "4ad35a38-21b4-42cb-9181-c407c824fc71",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7d7ce030-a5a3-45e1-9940-ae91e3c8ade4"
        },
        "item": {
          "id": "97fd314b-c780-45f2-95ca-4ae1de2db2be",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d9ecf9d5-f407-45b1-a0de-b33887c15e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aaa6a46-709a-4c7a-b5a7-9a9eb3831bfe",
        "cursor": {
          "ref": "58e6f033-6709-4893-87fb-d895b619e176",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f5b81fc9-952f-4ced-a60f-bb44ead9711a"
        },
        "item": {
          "id": "8aaa6a46-709a-4c7a-b5a7-9a9eb3831bfe",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d8608fb0-7940-4c83-b6b8-b85f0581f8a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abcd0681-83f0-49c4-9e36-fc262397d42e",
        "cursor": {
          "ref": "41ffb95b-e0ab-4a2d-be72-82591508e482",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d5fb08bf-6580-4302-9232-d2643fd63810"
        },
        "item": {
          "id": "abcd0681-83f0-49c4-9e36-fc262397d42e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9523e3aa-4a3d-44c3-ab5b-1ffa13194336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93427d3-9157-4d9c-81a0-e51ae6561d0a",
        "cursor": {
          "ref": "7e7bd59d-1f74-4bdc-af51-cacba82d3617",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "70113d90-fe01-404a-a5f9-f6f99493fc2b"
        },
        "item": {
          "id": "f93427d3-9157-4d9c-81a0-e51ae6561d0a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "fb884968-9655-45da-9188-400b6e650277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb90b3b-e32f-43b1-8b60-b6f517e90f99",
        "cursor": {
          "ref": "d939abb5-a61e-48a2-b95d-2609c51cad45",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "519f9ef5-e539-4895-bdf0-1b41862e1887"
        },
        "item": {
          "id": "3eb90b3b-e32f-43b1-8b60-b6f517e90f99",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a6df1e68-8755-4db9-907a-124fd54f3b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242decb3-3ec1-4a17-8919-18d0e3aca88a",
        "cursor": {
          "ref": "657697fa-7f16-46d7-b8e7-1ce8e8e08474",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b58f9635-ab0c-4a8a-be6b-633baea952e1"
        },
        "item": {
          "id": "242decb3-3ec1-4a17-8919-18d0e3aca88a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9998782d-7754-466d-87ff-63cc97d2059d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd40b23-7ce8-4b3e-9163-bb99750c0f11",
        "cursor": {
          "ref": "ca4fda3c-1783-4188-b7d7-85824d3ba406",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5652d299-840c-460f-8705-1fb1a9ff72e6"
        },
        "item": {
          "id": "6fd40b23-7ce8-4b3e-9163-bb99750c0f11",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b22b8b6d-99fe-4214-bd86-2730674fc521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2408aece-4d85-4817-8859-6bd1b7d9919b",
        "cursor": {
          "ref": "d809ea4a-36b0-499e-8188-795b07f8ae06",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8ba73b3e-8096-4979-bb2f-2e1b23abfbd2"
        },
        "item": {
          "id": "2408aece-4d85-4817-8859-6bd1b7d9919b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0c9caa2b-1a5f-4df4-97f5-aa067ac33a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9412855-a632-44da-ab03-d9c37f90330f",
        "cursor": {
          "ref": "73d1f91d-a826-4bb1-879a-f88f13db4df1",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "446084cf-62aa-463d-a586-3b234bd7db2e"
        },
        "item": {
          "id": "b9412855-a632-44da-ab03-d9c37f90330f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "722b9f83-8399-451f-96a7-d71530e8cb36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873ac696-b4af-40ee-b6bb-723249ab9ca1",
        "cursor": {
          "ref": "b74f19ae-b6b3-4005-8772-321ff1fc02ab",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "302cf859-9431-452b-a851-410dae3a78ae"
        },
        "item": {
          "id": "873ac696-b4af-40ee-b6bb-723249ab9ca1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f71cfc65-6034-4a0f-9050-c4fe4cf67206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662ebfe9-6b59-4ff1-a114-0c1cf85b892b",
        "cursor": {
          "ref": "fd8d3765-0a23-4661-ac42-5e18b2a71d78",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7a9a0585-98fa-417e-842e-0a64d0fd0861"
        },
        "item": {
          "id": "662ebfe9-6b59-4ff1-a114-0c1cf85b892b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "be69f4db-8e52-4d55-a602-42f990214ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3f39f9-a85d-4646-bbde-ac7d8ac01aa8",
        "cursor": {
          "ref": "9aedda96-9e31-470f-bb89-d89c020b08f3",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0e44099c-1782-42c7-9e35-77c707cd112a"
        },
        "item": {
          "id": "8e3f39f9-a85d-4646-bbde-ac7d8ac01aa8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8e8cd150-677d-4683-9e54-bef838af6618",
          "status": "OK",
          "code": 200,
          "responseTime": 102,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "196f027c-ca58-4ae7-b5e7-93197523685a",
        "cursor": {
          "ref": "d6136dae-b4a9-40c9-b2a9-c3e94f12a7ce",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b3059e09-168c-4f2f-8534-d821020b6a0e"
        },
        "item": {
          "id": "196f027c-ca58-4ae7-b5e7-93197523685a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c6ba7677-e597-4aac-baab-1065f2a5b2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a947239-e266-4df1-8c94-b95f18ef07f8",
        "cursor": {
          "ref": "396bb658-104c-4354-90e1-bca0af7d35cc",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e875211e-72d6-4fdf-bfdb-848d89ec9325"
        },
        "item": {
          "id": "9a947239-e266-4df1-8c94-b95f18ef07f8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "52548c84-15c1-4f60-a2f3-adc895f61a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5788c535-5ee5-4d9d-af85-41bafbd67f26",
        "cursor": {
          "ref": "247c3c8c-f118-432f-8cb7-e28e62b14c41",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1ccaf3c5-ec84-4d4d-a6b7-2c5134743712"
        },
        "item": {
          "id": "5788c535-5ee5-4d9d-af85-41bafbd67f26",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e5f63e21-452b-4f70-8e8c-745611d21886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc7c28a-47a9-498f-ab22-b86583ddc9bd",
        "cursor": {
          "ref": "84229e90-ba6b-48b9-84d2-378b5f1416b3",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "33071ae2-d18b-4a9c-b1cc-f7b16841a13a"
        },
        "item": {
          "id": "abc7c28a-47a9-498f-ab22-b86583ddc9bd",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f2de816c-3dc8-40d9-93fa-287cb9a822d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6eef79d-8be2-4e47-bc78-bd9cd24af3ab",
        "cursor": {
          "ref": "5b54fb6b-906a-4503-a7b6-7b964a4115fb",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4fa79bbf-efca-4038-9397-53162419fbc7"
        },
        "item": {
          "id": "d6eef79d-8be2-4e47-bc78-bd9cd24af3ab",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "95d5dd3a-4318-4575-a642-b21db45f1175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2692246-4a31-446a-add2-1c6c5ed8a91a",
        "cursor": {
          "ref": "f1b94cdf-09fd-4864-87cc-a84651f5490e",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2e308d63-c4d4-4b00-b173-3ad7a0bba380"
        },
        "item": {
          "id": "a2692246-4a31-446a-add2-1c6c5ed8a91a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "444c1459-8d38-4327-8df3-3845ac454fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e098a4-6aa3-4151-bd5a-483b97fca167",
        "cursor": {
          "ref": "97f135cb-bfab-481c-81a1-ffa2475ae99c",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a67bcbf7-7b06-4f65-b65c-30441454b9f5"
        },
        "item": {
          "id": "05e098a4-6aa3-4151-bd5a-483b97fca167",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b59d1d1a-0a65-415f-9765-46c3b7fd4c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7274ce-3346-48cf-a7ba-97d8d3f74395",
        "cursor": {
          "ref": "eb51e174-d6aa-4622-9289-7649641e3584",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a8c7300c-432b-4c6f-992b-dac3fdffbcf3"
        },
        "item": {
          "id": "8e7274ce-3346-48cf-a7ba-97d8d3f74395",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "bee1beb3-4dde-4b6d-aa2a-f0b935c44b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b24e15f-198f-4f5b-8db8-c3c7742194f5",
        "cursor": {
          "ref": "0c829b81-3d0c-4958-b4de-57f651e93896",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "27cfc399-1f4a-4ac8-aab7-9baf467758d9"
        },
        "item": {
          "id": "2b24e15f-198f-4f5b-8db8-c3c7742194f5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "abbde34b-225f-4f24-b9b0-84d78d2017e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347509af-19da-4b83-9382-b1cc91f405ea",
        "cursor": {
          "ref": "da08670e-9cd9-42b0-a386-4cbf92915667",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b4e4c9ff-517d-4f85-9008-b8b6df30845f"
        },
        "item": {
          "id": "347509af-19da-4b83-9382-b1cc91f405ea",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4f57a609-3aa5-4441-b6b3-fbf5c22f822f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e87f600-8d8e-40ec-a6e8-0a3e9b644d88",
        "cursor": {
          "ref": "c58ff04a-23aa-4576-bee1-ef22f82b871c",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d601d412-6c83-4ac2-9e0c-bc09e3ca53ad"
        },
        "item": {
          "id": "0e87f600-8d8e-40ec-a6e8-0a3e9b644d88",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5c9bdb38-7459-424d-8243-646970f51eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f0fd26-bde4-4f86-aa5c-a9136e83d24e",
        "cursor": {
          "ref": "8a9ebba1-748a-4231-b273-3d8ad8332cb1",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ee77ac5c-9bcc-4808-9782-0b09acfca809"
        },
        "item": {
          "id": "f7f0fd26-bde4-4f86-aa5c-a9136e83d24e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f2c23212-ae28-4c36-8276-d7904ce20678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803fc95b-a9e6-4a18-a4d1-39d3c441acc2",
        "cursor": {
          "ref": "d9856c56-0d8f-4637-8715-b78b0d254418",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e3928b3c-6919-4672-a482-b6b344bbe41e"
        },
        "item": {
          "id": "803fc95b-a9e6-4a18-a4d1-39d3c441acc2",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a60943e9-a26c-4c71-b06e-14595f76a57f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc8aa29-a048-472f-b33d-744c3fd74370",
        "cursor": {
          "ref": "49a85909-e3c1-48ad-914e-7ff6df297713",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3178f2a2-4f3c-40ad-9af7-48563bd4463b"
        },
        "item": {
          "id": "8fc8aa29-a048-472f-b33d-744c3fd74370",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d9c1005e-b643-47f2-91af-abc54668b58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5951009d-28a5-4260-8bfb-84ad1ea37a01",
        "cursor": {
          "ref": "c8abaf69-1f8e-4351-bac6-cbce106ae914",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1c79bc04-ab93-45bc-a6cb-b5cc0a7cf3ac"
        },
        "item": {
          "id": "5951009d-28a5-4260-8bfb-84ad1ea37a01",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1c6be43d-fb85-47b4-9366-aec2fa919a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a67a92-7569-456d-8fe8-4edf2013c3d7",
        "cursor": {
          "ref": "de292e58-e734-407b-91ff-ed2fee8a5bdb",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "95cce269-8004-417f-8194-35896fe2207b"
        },
        "item": {
          "id": "25a67a92-7569-456d-8fe8-4edf2013c3d7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "535eff59-5435-4c1d-8315-ada9518da915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a673a5e2-44df-447d-b371-1b4b2dad5f7a",
        "cursor": {
          "ref": "731e61bb-053f-455e-8255-edf2fa1714f3",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c1b9ee1a-a322-4cdd-9550-bad7f3d1f667"
        },
        "item": {
          "id": "a673a5e2-44df-447d-b371-1b4b2dad5f7a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "71521687-38b3-4a1e-8abf-90034bc04080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a78a58-e41e-4b4d-85c8-8f29411e1048",
        "cursor": {
          "ref": "93eb0b6c-8341-4c19-b7cd-0f4b3b877533",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "cfe13450-392d-49d7-b013-7db224f01ea2"
        },
        "item": {
          "id": "95a78a58-e41e-4b4d-85c8-8f29411e1048",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a1fcaf9d-d5f9-473b-aaed-9e97516b1cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f180bf6a-af77-4d37-97b5-ca570812c02d",
        "cursor": {
          "ref": "4a8dccf2-d71e-49f6-907c-9ec3025818b4",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a6f97e0c-9499-4f72-855e-218003fe7ad0"
        },
        "item": {
          "id": "f180bf6a-af77-4d37-97b5-ca570812c02d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f8cb6436-116e-4742-aade-bf46578b752a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621eb528-b78f-424d-b65d-0ff51651dd5c",
        "cursor": {
          "ref": "7374cffc-f3f3-4c93-9cbd-cb272ff4ee51",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8728c466-892f-480f-b16f-8bfc0450764a"
        },
        "item": {
          "id": "621eb528-b78f-424d-b65d-0ff51651dd5c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d71cb726-436f-4f46-9f0b-7c16b1cc4596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ce018b-d133-4779-9584-483d232017f4",
        "cursor": {
          "ref": "3e457825-be98-469f-94f4-ea444993fdc5",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "51f5e527-d50e-4fba-b7c9-7e91eb52c02a"
        },
        "item": {
          "id": "87ce018b-d133-4779-9584-483d232017f4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8c5c1a62-0fbf-4985-ac15-e97b0851e411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7b24c3-7664-444d-acdd-ff98da9d5f01",
        "cursor": {
          "ref": "8425cb51-068e-4732-9102-8a180bf08180",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "002a5def-da21-49e2-b937-f5e9d74bf0cd"
        },
        "item": {
          "id": "cb7b24c3-7664-444d-acdd-ff98da9d5f01",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "83d20c76-1aea-45d0-9178-49eb899ee0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7533220-77d5-424b-bb2e-13341eea79ad",
        "cursor": {
          "ref": "dcdd7111-c940-4615-9363-0748047ac6df",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e7278f4e-8bd0-4254-a5d1-6821eb1042fd"
        },
        "item": {
          "id": "b7533220-77d5-424b-bb2e-13341eea79ad",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "13e4bee1-8e4a-4132-9da0-14801ec786da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3455f2f4-0970-4dd1-b7d4-d286c5b14305",
        "cursor": {
          "ref": "315b5922-252e-4882-a739-8b8ced9019b6",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "69d9cd85-03ad-4143-a9c6-783761705dba"
        },
        "item": {
          "id": "3455f2f4-0970-4dd1-b7d4-d286c5b14305",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3b2cee2c-b6c3-4d60-bdf9-a7e1847a3cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29340a2a-5dc0-4c36-bf76-3d96534eab7d",
        "cursor": {
          "ref": "b4d7c39c-c730-478a-ad01-325e2c0a748e",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3b54675d-7764-494d-b361-71a75fd7df5d"
        },
        "item": {
          "id": "29340a2a-5dc0-4c36-bf76-3d96534eab7d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0b5455f5-4136-4589-9620-806ff059e337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972890c4-4638-42d5-a42b-2a298c379527",
        "cursor": {
          "ref": "9a5e6f84-5638-44cf-9b92-aa41ed5eb6ae",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "484bcbe6-4f88-4542-a799-99980127bfcd"
        },
        "item": {
          "id": "972890c4-4638-42d5-a42b-2a298c379527",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d6e41340-f622-465e-94e2-ab59947b355a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ab005b-54db-4484-bc40-0dacdf07a7e2",
        "cursor": {
          "ref": "d7e22d6f-9b3c-46c8-941e-56ee2dcd3a22",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "dd46e984-33ce-4353-9c6c-ac2019c76dac"
        },
        "item": {
          "id": "84ab005b-54db-4484-bc40-0dacdf07a7e2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c0f32b25-fdc9-42a0-ac02-2b623ff0c466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399e8677-71d7-4645-8376-0316c68be82e",
        "cursor": {
          "ref": "4c0af565-8dcb-43ca-b43e-6f42dac0b9db",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "95a4dd8f-f84f-4707-a989-767985e6f7b6"
        },
        "item": {
          "id": "399e8677-71d7-4645-8376-0316c68be82e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5ff1d852-8062-48d2-b027-94b1763a7563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642bb0cd-c5b9-45eb-bca4-355de4b89045",
        "cursor": {
          "ref": "b26efc11-d0d0-4e85-8707-6c0a98249f39",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "204def56-33a0-49fa-8fcb-82a599fadf2e"
        },
        "item": {
          "id": "642bb0cd-c5b9-45eb-bca4-355de4b89045",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4cfe5a96-efbf-4946-90b8-9f9509801e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eaf450f-02dd-480d-8777-e7fa27f52bb5",
        "cursor": {
          "ref": "f256c056-4687-424c-9440-a8e76ac2a466",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "872b3d6a-eed9-45fd-beb9-62416118b4bd"
        },
        "item": {
          "id": "3eaf450f-02dd-480d-8777-e7fa27f52bb5",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "44b75ba3-6903-41fb-a7e7-9ddab41359d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 905,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b8f2269-24d8-43a1-bdc8-13e74bfe30c5",
        "cursor": {
          "ref": "6732f170-9cea-4f61-9236-eb773de35b65",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8dda0f75-eecd-4dfc-86d9-ec20507baf07"
        },
        "item": {
          "id": "0b8f2269-24d8-43a1-bdc8-13e74bfe30c5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "35e001fe-59a6-42ac-a22d-129813b0b9c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6743276b-7bc6-403d-926d-6dc6936f45ca",
        "cursor": {
          "ref": "9cdcd3f6-1f1d-41e2-9e5e-259f7c7b6d0a",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "43492b21-ecc8-4ebb-b748-55aae45fa282"
        },
        "item": {
          "id": "6743276b-7bc6-403d-926d-6dc6936f45ca",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "37fa5cc0-2e9a-41ca-a86d-6f6da2fedb53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ff2d86-ec5c-432f-b088-62b2ae293c96",
        "cursor": {
          "ref": "a6c1ee0f-dd15-4f11-bba9-a74b46382799",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "5f93a710-c8a5-4796-9f02-89bd13c1e3d1"
        },
        "item": {
          "id": "85ff2d86-ec5c-432f-b088-62b2ae293c96",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1d9aba62-b385-47df-a727-886c90535c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5835bf3b-0b8b-4e98-af51-08024e3e1bfb",
        "cursor": {
          "ref": "e4eb6607-b6e4-4a75-ac89-077ffdd0b48d",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "26f47666-56ca-4447-bb66-4762f9cd8873"
        },
        "item": {
          "id": "5835bf3b-0b8b-4e98-af51-08024e3e1bfb",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0986a198-96a7-4bca-9f8e-2c668d1346c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2629c1e-e540-4704-9103-7ecb748c6f66",
        "cursor": {
          "ref": "0a3525f6-5b94-4d29-9b0e-0721c2def257",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "db1d480c-102c-4b45-8467-2f4ca56b294b"
        },
        "item": {
          "id": "c2629c1e-e540-4704-9103-7ecb748c6f66",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "459c2ecb-d358-4149-ab20-b98dce508e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1733b0-50a5-43ae-a61c-fc7aa8ad2141",
        "cursor": {
          "ref": "577b065a-7951-43e4-b730-55365e2cfb90",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1b818433-2b1f-4e90-8985-ab66730288ca"
        },
        "item": {
          "id": "1c1733b0-50a5-43ae-a61c-fc7aa8ad2141",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f0a6f712-00e3-4b73-9681-d545632c9c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436702ef-ca55-487e-8a6a-a2c0125d8069",
        "cursor": {
          "ref": "34f7edbd-3763-4028-a948-732074cce4a5",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e1ea5666-5c39-41ca-8677-924b2542a38c"
        },
        "item": {
          "id": "436702ef-ca55-487e-8a6a-a2c0125d8069",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "497b7d59-4daa-4854-a9c5-6cd309b7b9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ce6d73-9f75-411c-8236-6f01c074d665",
        "cursor": {
          "ref": "04cb114e-d3d5-40c0-ac42-9def60023f77",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "987d56b1-f387-4486-b2e6-50c117cb35b4"
        },
        "item": {
          "id": "90ce6d73-9f75-411c-8236-6f01c074d665",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ab76358e-d029-4cd2-a4de-69bed44fd1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52fdc57-1261-428a-989f-52f23f5139d7",
        "cursor": {
          "ref": "d8ce84c7-d157-441e-ac94-00768fecb9f4",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "648da0c1-e30d-430d-9cdd-1b3ffe7e90ee"
        },
        "item": {
          "id": "c52fdc57-1261-428a-989f-52f23f5139d7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "40f2ffb3-0ad1-4290-9b8b-cdab226e6239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f054400-627c-4200-961f-f43b89b6f7a1",
        "cursor": {
          "ref": "7911b0d2-10bf-437b-bf06-2b772fadb6b4",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4ab17fb5-a837-4020-bd36-0517508afd1c"
        },
        "item": {
          "id": "3f054400-627c-4200-961f-f43b89b6f7a1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5df4b75c-8f71-4961-83ca-6d4263bbd6e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e658b2e9-5de3-4434-9830-4ca02af6fc65",
        "cursor": {
          "ref": "83b440d1-411a-41f5-b971-6f59174fcb39",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1e5bfe7e-8b06-4920-b54d-7515fc02c294"
        },
        "item": {
          "id": "e658b2e9-5de3-4434-9830-4ca02af6fc65",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d5eccf22-93c6-4133-9067-d8e2d381e245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02095567-d010-4e1f-9a29-1499bd6f625b",
        "cursor": {
          "ref": "873603e8-e2d6-40c2-a650-cb0a23a9d1d0",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b8754239-5aba-44df-a690-37244d77b6ea"
        },
        "item": {
          "id": "02095567-d010-4e1f-9a29-1499bd6f625b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5fcd0b53-4a25-4813-b725-df79ee649bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92fa53ef-d7c5-4dcf-8d52-896e0caca70d",
        "cursor": {
          "ref": "19cbe3be-7517-4fac-9924-d1e24fb6ae68",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "bd752e8c-1458-4466-b3f1-4438e250d03a"
        },
        "item": {
          "id": "92fa53ef-d7c5-4dcf-8d52-896e0caca70d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2b545135-95d9-46ea-b82e-d648c6575516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479b811f-a82e-4f74-9072-c8e60f24ad4b",
        "cursor": {
          "ref": "f4c23f21-42ae-4671-87d9-ad98f1c689f8",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a14549b6-6442-4812-97fd-1544829715f6"
        },
        "item": {
          "id": "479b811f-a82e-4f74-9072-c8e60f24ad4b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e0842548-6fa7-4c2a-9a4b-113c773eecb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0bb815-dbf6-4bac-b4fb-e0250db0de95",
        "cursor": {
          "ref": "5be7817c-f482-46b1-8b99-4d42bd1fe4cd",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "92aa9760-cd06-4c46-bc05-589e634741d3"
        },
        "item": {
          "id": "da0bb815-dbf6-4bac-b4fb-e0250db0de95",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a6403f2b-19f4-40bc-818e-12c858b86d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe13591-6b46-4fae-8208-0d83fcae4a58",
        "cursor": {
          "ref": "3c507fd6-c68c-411e-ad9d-86c16e0c039c",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c064cbeb-50c0-4c6d-9fdb-9f69761431b8"
        },
        "item": {
          "id": "bfe13591-6b46-4fae-8208-0d83fcae4a58",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d6c9c021-80d8-4a52-ac1e-648f0f7fc960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ae6565-02b6-423d-ad36-56203b363547",
        "cursor": {
          "ref": "a573aef3-f680-4a6a-b246-d57b02c4c4e5",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1d2cb899-28bc-4bf3-8ee5-d5aeee225732"
        },
        "item": {
          "id": "b1ae6565-02b6-423d-ad36-56203b363547",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "eed24928-db94-4e8c-b658-ab5a262681ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc9ce10-cbf8-4972-bc97-afc1fb60cbff",
        "cursor": {
          "ref": "87136dc1-d926-4c86-82e1-dd96cba7c1a1",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d65da55d-f79d-4d2c-ac49-4b56d511162f"
        },
        "item": {
          "id": "1fc9ce10-cbf8-4972-bc97-afc1fb60cbff",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "cafca50d-09b4-4fdc-bf00-025ffd75062d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1027,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8e1137-2b41-40f6-a515-885f76bceced",
        "cursor": {
          "ref": "ecba150e-f482-47e2-aa79-2d39b6325112",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "961ed3a9-2682-4531-9519-be603547cf4d"
        },
        "item": {
          "id": "9b8e1137-2b41-40f6-a515-885f76bceced",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f48887ff-d5a1-49e8-8de0-76df77179a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467a524f-58ef-4ec6-b8e7-a43622e64952",
        "cursor": {
          "ref": "f79aca87-ee52-4be1-8582-baa3669557dd",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7f12f334-b87e-45d4-bc93-43e710facfd9"
        },
        "item": {
          "id": "467a524f-58ef-4ec6-b8e7-a43622e64952",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "028fa162-4eee-443a-b1df-8af468c64b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87021e8-9af8-4a00-b366-14eec8be0a5b",
        "cursor": {
          "ref": "595d2a71-7a9b-47fb-ad03-30a64600c5fa",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3bd78dfb-1238-47c2-ab19-788c4f9dcc54"
        },
        "item": {
          "id": "e87021e8-9af8-4a00-b366-14eec8be0a5b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ae378d41-7213-4a56-942b-efba7953a4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6bf761c-a789-4a7e-9f83-083f540104a4",
        "cursor": {
          "ref": "192a83a6-278f-482e-88ad-7d790c16123d",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1dc84b13-2f9e-400a-8af6-b54ff42c3c9e"
        },
        "item": {
          "id": "e6bf761c-a789-4a7e-9f83-083f540104a4",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "323d0053-d7e6-489a-92d6-4a083ed49926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ead9e6-c534-4996-a612-6aeb7911c955",
        "cursor": {
          "ref": "34eab051-a9db-41bd-bdac-f4e9040cbbf4",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6b3e7a4a-a099-4bb2-86b8-d0b89ea11f9e"
        },
        "item": {
          "id": "39ead9e6-c534-4996-a612-6aeb7911c955",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b3c320c3-37a4-4420-ab92-a179684f605e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef6e56e-5fc2-4f7b-baef-38ad0c1a32c8",
        "cursor": {
          "ref": "017263a5-8cb3-4668-893f-54b573ff514b",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8f8e490f-6083-4e34-be8a-1a40e2746130"
        },
        "item": {
          "id": "eef6e56e-5fc2-4f7b-baef-38ad0c1a32c8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "bf65816c-15be-4e2a-854b-914f310a2457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85536d0-56b9-458e-961f-70511e26c82a",
        "cursor": {
          "ref": "74e4a47c-e4da-4a92-bc20-086a44f72d61",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "147ce73d-3839-403f-bc23-d9cd3de25aff"
        },
        "item": {
          "id": "d85536d0-56b9-458e-961f-70511e26c82a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "cde68bdf-27bd-4052-b8bd-276ebc5f1ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2488ffef-07e9-4a6c-bc5f-10f17ec8828c",
        "cursor": {
          "ref": "4ee2613a-2f42-4fb5-b07f-757aaf3bd69e",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "98906a37-dfe4-4273-a63b-dde3ca05c31f"
        },
        "item": {
          "id": "2488ffef-07e9-4a6c-bc5f-10f17ec8828c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6436c656-1903-4f7f-b577-361bc8fff8e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 156,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d962776-9fdd-4ed4-ab1e-ff3710c6fcd4",
        "cursor": {
          "ref": "2b9891d0-2a75-4b7e-be4d-efae4e570973",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "a73d70c3-0c2f-4bad-8f5c-ad554192e65c"
        },
        "item": {
          "id": "0d962776-9fdd-4ed4-ab1e-ff3710c6fcd4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3b6cf555-d522-4d9a-bd24-fa72d21e35e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8f27a6-80d4-41c4-a988-27acc0e4f5a8",
        "cursor": {
          "ref": "0a96a450-0186-4933-85ab-8dfed00b88f5",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "fc941f13-2aef-4e08-910e-4edfb23c8686"
        },
        "item": {
          "id": "1f8f27a6-80d4-41c4-a988-27acc0e4f5a8",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8d7f1841-24a6-427b-a93a-cb606389dedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35494df9-4e52-4119-b748-e76f42ffcf23",
        "cursor": {
          "ref": "50c33674-e494-445f-ae35-21a5f54ecbf0",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "276d64cd-f15b-4df8-ba27-1e57c858dec2"
        },
        "item": {
          "id": "35494df9-4e52-4119-b748-e76f42ffcf23",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1dc66e46-60f8-4398-86b0-0d3b2fcc2525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5497b15d-3a66-4a3c-82cd-d4320f0e5dcc",
        "cursor": {
          "ref": "8d7cedce-3442-4a88-9874-568387186bc3",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "8ea25584-add3-4ccf-a54b-95b5abbf0e7a"
        },
        "item": {
          "id": "5497b15d-3a66-4a3c-82cd-d4320f0e5dcc",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "28900e89-e58f-41df-b15c-ddd9075e9d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "863fb149-3065-4bc0-81c1-0bdc748dd8c5",
        "cursor": {
          "ref": "b2bac73d-51b9-42e8-9ddd-8317ee99976c",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "f0f6a3ea-1fa8-4034-a85d-6886ae612342"
        },
        "item": {
          "id": "863fb149-3065-4bc0-81c1-0bdc748dd8c5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1d51ac6b-ae26-4945-9735-10062b1bbb6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f875fcb-598e-4d34-8323-ca1ed7180473",
        "cursor": {
          "ref": "9df38463-f423-4939-8bb7-b1c0e599e452",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "7c281d0b-542f-4122-9e77-8c24140c1d22"
        },
        "item": {
          "id": "1f875fcb-598e-4d34-8323-ca1ed7180473",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2e90e92d-5164-4964-a79f-ce0af3395f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261edea4-ba65-4149-93ce-1d64fe6118ec",
        "cursor": {
          "ref": "a338d7ad-5457-4bc7-bdb6-d3d70639c98f",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "896ea55f-40cc-4461-a344-2564565e2ab7"
        },
        "item": {
          "id": "261edea4-ba65-4149-93ce-1d64fe6118ec",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4ace8850-a4c6-476f-b149-d6fb37866147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9024fc03-a483-4102-a5b2-adc1c8776cdd",
        "cursor": {
          "ref": "1273ceb1-4c37-47d1-b7c4-12437da9ae38",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "97c22de7-be93-4166-a0ca-392df7701ff3"
        },
        "item": {
          "id": "9024fc03-a483-4102-a5b2-adc1c8776cdd",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a5503e63-9217-4e9e-a5dd-8591d0516091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749360ec-24fb-47b6-b251-1f2a039785c6",
        "cursor": {
          "ref": "7a32965d-12d9-454e-9bcb-82f3783b03de",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "6da158e7-f69a-4491-a76b-c3e3bf34444b"
        },
        "item": {
          "id": "749360ec-24fb-47b6-b251-1f2a039785c6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "87377aa9-5ba9-44ac-802e-d214f09575e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135eeb01-b0b8-4463-aba5-27e8c3dcbbe5",
        "cursor": {
          "ref": "63accd18-ac9d-411b-8251-ad0a56ae836f",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "4b23bdcb-bee4-4ec2-a03e-58203abf43da"
        },
        "item": {
          "id": "135eeb01-b0b8-4463-aba5-27e8c3dcbbe5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "cc6f43ba-d77a-4589-bbf5-e60b2cd9a3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963de18a-b9b2-4da1-a942-9c8f43ce1e32",
        "cursor": {
          "ref": "eb93b281-d534-4da6-9ca0-c1dd0df0e76b",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "29222af7-ff89-4854-adf2-13ac73bc3ed3"
        },
        "item": {
          "id": "963de18a-b9b2-4da1-a942-9c8f43ce1e32",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "34969506-cd83-45fa-a9bc-454f85de5e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0755ab2c-b3a3-4f12-84ed-3927f0583f0c",
        "cursor": {
          "ref": "237a5e9b-af21-4ddd-be63-6ba486fb63e6",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "47644457-68d8-4eca-ab37-c97100b1e151"
        },
        "item": {
          "id": "0755ab2c-b3a3-4f12-84ed-3927f0583f0c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3b55691b-42cb-474f-ac80-b3e31c4bb929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807b5e1f-e968-4b91-b007-e4dd0a2f2b34",
        "cursor": {
          "ref": "4b8fc88c-706b-4e58-8fd4-63594ce54b87",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "aa358528-29da-4bab-bef2-397af669b62e"
        },
        "item": {
          "id": "807b5e1f-e968-4b91-b007-e4dd0a2f2b34",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f9177758-3ab1-450b-9dff-9b5b3921df10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d315a2-13db-4610-bb35-95a3386a6961",
        "cursor": {
          "ref": "0c276057-16cb-46e2-b63a-569b8bde8ac9",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "b33e51c1-7261-4a0c-b5bc-311bea75720d"
        },
        "item": {
          "id": "a5d315a2-13db-4610-bb35-95a3386a6961",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e9b3d378-bb3a-4526-98f8-fda97b278eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f9726d-dfe7-48ab-b5ad-ef478748cd77",
        "cursor": {
          "ref": "5b7ac86d-e20b-46cd-8b01-aab0ec23c5b3",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "508fecb5-d6d7-4a31-a2e9-93af783ebb35"
        },
        "item": {
          "id": "22f9726d-dfe7-48ab-b5ad-ef478748cd77",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8bbfcd8f-7740-4e09-a25a-b3ae4172a14e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f640de1-1bfa-44df-9a99-1bca098e4137",
        "cursor": {
          "ref": "0570cbdc-69bf-4adb-ad8c-773cb8d9424b",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "6b637c23-1b33-4c14-b522-901a01074823"
        },
        "item": {
          "id": "5f640de1-1bfa-44df-9a99-1bca098e4137",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f1554ee9-2388-4342-b05c-c17fe48b6c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d796d4d-1d02-4d07-94e8-bdd855b95e3a",
        "cursor": {
          "ref": "ae30590d-f71f-4b50-ad68-73c9a715f44e",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "152df75c-e38d-4a53-a386-d559357028b0"
        },
        "item": {
          "id": "7d796d4d-1d02-4d07-94e8-bdd855b95e3a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2e5b7c1f-c63e-49bd-95e0-447f8033ce88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92358a8d-a36b-4aaa-a56f-39f5359c41d8",
        "cursor": {
          "ref": "9932a845-8f5b-42ce-8a76-9ab3665a5ca2",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "9e6e657b-6396-457d-a1a3-dea3403cf2c7"
        },
        "item": {
          "id": "92358a8d-a36b-4aaa-a56f-39f5359c41d8",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ee909283-28eb-4ba6-8b41-d879e9a35049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba9cc1b-aba4-4fca-a8ef-25741a7febea",
        "cursor": {
          "ref": "bb36f0c5-772f-4928-b9df-372977d8231b",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "884a4eef-e882-41ea-9158-45164bc2850f"
        },
        "item": {
          "id": "cba9cc1b-aba4-4fca-a8ef-25741a7febea",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ec5e3862-db6f-4fb0-ad11-31643519f532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0464dc53-5131-41ea-8a2a-3236bde8a13a",
        "cursor": {
          "ref": "de3ae938-656e-4811-9372-1b2cda50538c",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "61422efd-469b-4d45-828b-f13afc8416ea"
        },
        "item": {
          "id": "0464dc53-5131-41ea-8a2a-3236bde8a13a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4fd53104-4a2a-4c2d-ab4b-dc10ce7f5dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35efaa88-ee22-4ffb-86e1-355c7402a409",
        "cursor": {
          "ref": "7d2ef4b0-86d4-41c8-9370-1d875da057bd",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "81b4a54d-75fc-4e62-8e15-3b88bca18051"
        },
        "item": {
          "id": "35efaa88-ee22-4ffb-86e1-355c7402a409",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d9acfbd1-46f5-4b96-a8a0-fb85b8d3db42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68feb44-48e2-46b4-b92a-5e2a2fa4fcc1",
        "cursor": {
          "ref": "983865bc-867d-479f-a956-e0a6fe457c51",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "1e3cf67c-d15f-475c-944d-2affefbf08e5"
        },
        "item": {
          "id": "c68feb44-48e2-46b4-b92a-5e2a2fa4fcc1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5e3cfc68-b888-480b-bbf4-43250f57a311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb032f1-c5e8-4a82-9c1d-f643200149ce",
        "cursor": {
          "ref": "c063b0fb-0b4d-484e-b396-b4f4b8d6548f",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "b3b41284-79df-4469-845d-626fd2e1e965"
        },
        "item": {
          "id": "5bb032f1-c5e8-4a82-9c1d-f643200149ce",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "fbde04aa-b803-4d68-b072-4aac7ee66e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a0b341-5cae-4641-9329-a1e873508cb1",
        "cursor": {
          "ref": "8578f422-5383-49a5-8bb8-e1e55ac87e24",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "76c7d533-0cf4-45ca-b57e-b04bccf08030"
        },
        "item": {
          "id": "e3a0b341-5cae-4641-9329-a1e873508cb1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4640c2ce-393e-40fd-9297-b7fd8ec33ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285f663e-b09a-438c-95bb-b37c04fbaead",
        "cursor": {
          "ref": "d34baa21-23a0-4ccd-9dc8-020d3a5e2ac1",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c39bdd2e-449e-4ded-9d79-eb8f370e2f48"
        },
        "item": {
          "id": "285f663e-b09a-438c-95bb-b37c04fbaead",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ae87b567-2307-45ce-8fa6-3ccb873f1ff5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114021fd-a406-45c1-a068-9c1c27c96488",
        "cursor": {
          "ref": "c7379a09-d755-4317-9e90-6be3faaf996e",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "7e19ef80-0e14-4424-91fe-5bf694b458bd"
        },
        "item": {
          "id": "114021fd-a406-45c1-a068-9c1c27c96488",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ce0b5eaa-9c48-472e-b206-86ae938c76b0",
          "status": "OK",
          "code": 200,
          "responseTime": 84,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5b4550-a2d9-434c-9f45-8cda3f1755ef",
        "cursor": {
          "ref": "4f313920-084e-4c80-bc53-3ca58f083571",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "0ee36aa8-9fba-4239-aeda-9729954b4742"
        },
        "item": {
          "id": "7c5b4550-a2d9-434c-9f45-8cda3f1755ef",
          "name": "credentials_verify"
        },
        "response": {
          "id": "090b3357-b374-45ce-9f8b-2ba00c6ff259",
          "status": "OK",
          "code": 200,
          "responseTime": 2822,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4e595a-be60-48d9-979f-4e0883574745",
        "cursor": {
          "ref": "78d333a9-0943-44a2-b63b-605084e12e03",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1aa92854-e64b-44d1-96d6-f1cc5bbb80a0"
        },
        "item": {
          "id": "ba4e595a-be60-48d9-979f-4e0883574745",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1438a6da-6ca8-4aa7-a9bf-748bc3297923",
          "status": "OK",
          "code": 200,
          "responseTime": 6552,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "049dc6da-a7fb-4f3f-a909-cad41e19ceef",
        "cursor": {
          "ref": "7d9b2b86-f3e6-4735-955f-a634c4cf24c7",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "7fb35685-9b00-4b5b-a017-026f62fe590f"
        },
        "item": {
          "id": "049dc6da-a7fb-4f3f-a909-cad41e19ceef",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "21a3dc99-2c35-4c4f-af94-7facc2a0ced4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049dc6da-a7fb-4f3f-a909-cad41e19ceef",
        "cursor": {
          "ref": "7d9b2b86-f3e6-4735-955f-a634c4cf24c7",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "7fb35685-9b00-4b5b-a017-026f62fe590f"
        },
        "item": {
          "id": "049dc6da-a7fb-4f3f-a909-cad41e19ceef",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "21a3dc99-2c35-4c4f-af94-7facc2a0ced4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41abe63-7736-4432-a9f6-b0658abf371f",
        "cursor": {
          "ref": "9d308730-0b72-4514-a8fb-6123c3119305",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "6c9e3416-d131-4701-9380-d26c0d2753a2"
        },
        "item": {
          "id": "a41abe63-7736-4432-a9f6-b0658abf371f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "711a3b1f-3245-4e2b-83c6-9829f35d51cc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7e6dee-72c1-451a-8a59-0f0a63361e36",
        "cursor": {
          "ref": "745f80e7-07ae-48f1-b309-d89728c12581",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "6a8bbf1f-8673-4620-8e66-d4b5ae1734a5"
        },
        "item": {
          "id": "fd7e6dee-72c1-451a-8a59-0f0a63361e36",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fac4b939-87bd-4fc3-8c56-230e752d3286",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}